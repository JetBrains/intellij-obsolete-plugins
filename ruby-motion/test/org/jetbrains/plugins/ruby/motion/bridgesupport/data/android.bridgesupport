<?xml version='1.0'?>
<signatures version='1.0'>
<class name="android/accessibilityservice/AccessibilityService">
<method name="&lt;init&gt;" type="()V"/>
<method name="onAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)V"/>
<method name="onInterrupt" type="()V"/>
<method name="onServiceConnected" type="()V"/>
<method name="setServiceInfo" type="(Landroid/accessibilityservice/AccessibilityServiceInfo;)V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
</class>
<class name="android/accessibilityservice/AccessibilityServiceInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/accounts/AbstractAccountAuthenticator">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="getIBinder" type="()Landroid/os/IBinder;"/>
<method name="editProperties" type="(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;)Landroid/os/Bundle;"/>
<method name="addAccount" type="(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="confirmCredentials" type="(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="getAuthToken" type="(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="getAuthTokenLabel" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="updateCredentials" type="(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="hasFeatures" type="(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;[Ljava/lang/String;)Landroid/os/Bundle;"/>
<method name="getAccountRemovalAllowed" type="(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;)Landroid/os/Bundle;"/>
</class>
<class name="android/accounts/Account">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/accounts/AccountAuthenticatorActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="setAccountAuthenticatorResult" type="(Landroid/os/Bundle;)V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="finish" type="()V"/>
</class>
<class name="android/accounts/AccountAuthenticatorResponse">
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="onResult" type="(Landroid/os/Bundle;)V"/>
<method name="onRequestContinued" type="()V"/>
<method name="onError" type="(ILjava/lang/String;)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/accounts/AccountManager">
<method name="get" type="(Landroid/content/Context;)Landroid/accounts/AccountManager;" class_method="true"/>
<method name="getPassword" type="(Landroid/accounts/Account;)Ljava/lang/String;"/>
<method name="getUserData" type="(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getAuthenticatorTypes" type="()[Landroid/accounts/AuthenticatorDescription;"/>
<method name="getAccounts" type="()[Landroid/accounts/Account;"/>
<method name="getAccountsByType" type="(Ljava/lang/String;)[Landroid/accounts/Account;"/>
<method name="hasFeatures" type="(Landroid/accounts/Account;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="getAccountsByTypeAndFeatures" type="(Ljava/lang/String;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="addAccountExplicitly" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="removeAccount" type="(Landroid/accounts/Account;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="invalidateAuthToken" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="peekAuthToken" type="(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="setPassword" type="(Landroid/accounts/Account;Ljava/lang/String;)V"/>
<method name="clearPassword" type="(Landroid/accounts/Account;)V"/>
<method name="setUserData" type="(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setAuthToken" type="(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="blockingGetAuthToken" type="(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;"/>
<method name="getAuthToken" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="getAuthToken" type="(Landroid/accounts/Account;Ljava/lang/String;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="addAccount" type="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="confirmCredentials" type="(Landroid/accounts/Account;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="updateCredentials" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="editProperties" type="(Ljava/lang/String;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="getAuthTokenByFeatures" type="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"/>
<method name="addOnAccountsUpdatedListener" type="(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V"/>
<method name="removeOnAccountsUpdatedListener" type="(Landroid/accounts/OnAccountsUpdateListener;)V"/>
</class>
<class name="android/accounts/AccountsException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="android/accounts/AuthenticatorDescription">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;IIII)V"/>
<method name="newKey" type="(Ljava/lang/String;)Landroid/accounts/AuthenticatorDescription;" class_method="true"/>
<method name="describeContents" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/accounts/AuthenticatorException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="android/accounts/NetworkErrorException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="android/accounts/OperationCanceledException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="android/app/Activity">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstanceCount" type="()J" class_method="true"/>
<method name="getIntent" type="()Landroid/content/Intent;"/>
<method name="setIntent" type="(Landroid/content/Intent;)V"/>
<method name="getApplication" type="()Landroid/app/Application;"/>
<method name="isChild" type="()Z"/>
<method name="getParent" type="()Landroid/app/Activity;"/>
<method name="getWindowManager" type="()Landroid/view/WindowManager;"/>
<method name="getWindow" type="()Landroid/view/Window;"/>
<method name="getCurrentFocus" type="()Landroid/view/View;"/>
<method name="getWallpaperDesiredMinimumWidth" type="()I"/>
<method name="getWallpaperDesiredMinimumHeight" type="()I"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onPostCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onStart" type="()V"/>
<method name="onRestart" type="()V"/>
<method name="onResume" type="()V"/>
<method name="onPostResume" type="()V"/>
<method name="onNewIntent" type="(Landroid/content/Intent;)V"/>
<method name="onSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onPause" type="()V"/>
<method name="onUserLeaveHint" type="()V"/>
<method name="onCreateThumbnail" type="(Landroid/graphics/Bitmap;Landroid/graphics/Canvas;)Z"/>
<method name="onCreateDescription" type="()Ljava/lang/CharSequence;"/>
<method name="onStop" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getLastNonConfigurationInstance" type="()Ljava/lang/Object;"/>
<method name="onRetainNonConfigurationInstance" type="()Ljava/lang/Object;"/>
<method name="onLowMemory" type="()V"/>
<method name="managedQuery" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="startManagingCursor" type="(Landroid/database/Cursor;)V"/>
<method name="stopManagingCursor" type="(Landroid/database/Cursor;)V"/>
<method name="setPersistent" type="(Z)V"/>
<method name="findViewById" type="(I)Landroid/view/View;"/>
<method name="setContentView" type="(I)V"/>
<method name="setContentView" type="(Landroid/view/View;)V"/>
<method name="setContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="setDefaultKeyMode" type="(I)V"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyLongPress" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onBackPressed" type="()V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onUserInteraction" type="()V"/>
<method name="onWindowAttributesChanged" type="(Landroid/view/WindowManager$LayoutParams;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="hasWindowFocus" type="()Z"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="onCreatePanelView" type="(I)Landroid/view/View;"/>
<method name="onCreatePanelMenu" type="(ILandroid/view/Menu;)Z"/>
<method name="onPreparePanel" type="(ILandroid/view/View;Landroid/view/Menu;)Z"/>
<method name="onMenuOpened" type="(ILandroid/view/Menu;)Z"/>
<method name="onMenuItemSelected" type="(ILandroid/view/MenuItem;)Z"/>
<method name="onPanelClosed" type="(ILandroid/view/Menu;)V"/>
<method name="onCreateOptionsMenu" type="(Landroid/view/Menu;)Z"/>
<method name="onPrepareOptionsMenu" type="(Landroid/view/Menu;)Z"/>
<method name="onOptionsItemSelected" type="(Landroid/view/MenuItem;)Z"/>
<method name="onOptionsMenuClosed" type="(Landroid/view/Menu;)V"/>
<method name="openOptionsMenu" type="()V"/>
<method name="closeOptionsMenu" type="()V"/>
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V"/>
<method name="registerForContextMenu" type="(Landroid/view/View;)V"/>
<method name="unregisterForContextMenu" type="(Landroid/view/View;)V"/>
<method name="openContextMenu" type="(Landroid/view/View;)V"/>
<method name="closeContextMenu" type="()V"/>
<method name="onContextItemSelected" type="(Landroid/view/MenuItem;)Z"/>
<method name="onContextMenuClosed" type="(Landroid/view/Menu;)V"/>
<method name="onCreateDialog" type="(I)Landroid/app/Dialog;"/>
<method name="onCreateDialog" type="(ILandroid/os/Bundle;)Landroid/app/Dialog;"/>
<method name="onPrepareDialog" type="(ILandroid/app/Dialog;)V"/>
<method name="onPrepareDialog" type="(ILandroid/app/Dialog;Landroid/os/Bundle;)V"/>
<method name="showDialog" type="(I)V"/>
<method name="showDialog" type="(ILandroid/os/Bundle;)Z"/>
<method name="dismissDialog" type="(I)V"/>
<method name="removeDialog" type="(I)V"/>
<method name="onSearchRequested" type="()Z"/>
<method name="startSearch" type="(Ljava/lang/String;ZLandroid/os/Bundle;Z)V"/>
<method name="triggerSearch" type="(Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="takeKeyEvents" type="(Z)V"/>
<method name="requestWindowFeature" type="(I)Z"/>
<method name="setFeatureDrawableResource" type="(II)V"/>
<method name="setFeatureDrawableUri" type="(ILandroid/net/Uri;)V"/>
<method name="setFeatureDrawable" type="(ILandroid/graphics/drawable/Drawable;)V"/>
<method name="setFeatureDrawableAlpha" type="(II)V"/>
<method name="getLayoutInflater" type="()Landroid/view/LayoutInflater;"/>
<method name="getMenuInflater" type="()Landroid/view/MenuInflater;"/>
<method name="onApplyThemeResource" type="(Landroid/content/res/Resources$Theme;IZ)V"/>
<method name="startActivityForResult" type="(Landroid/content/Intent;I)V"/>
<method name="startIntentSenderForResult" type="(Landroid/content/IntentSender;ILandroid/content/Intent;III)V"/>
<method name="startActivity" type="(Landroid/content/Intent;)V"/>
<method name="startIntentSender" type="(Landroid/content/IntentSender;Landroid/content/Intent;III)V"/>
<method name="startActivityIfNeeded" type="(Landroid/content/Intent;I)Z"/>
<method name="startNextMatchingActivity" type="(Landroid/content/Intent;)Z"/>
<method name="startActivityFromChild" type="(Landroid/app/Activity;Landroid/content/Intent;I)V"/>
<method name="startIntentSenderFromChild" type="(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V"/>
<method name="overridePendingTransition" type="(II)V"/>
<method name="setResult" type="(I)V"/>
<method name="setResult" type="(ILandroid/content/Intent;)V"/>
<method name="getCallingPackage" type="()Ljava/lang/String;"/>
<method name="getCallingActivity" type="()Landroid/content/ComponentName;"/>
<method name="setVisible" type="(Z)V"/>
<method name="isFinishing" type="()Z"/>
<method name="finish" type="()V"/>
<method name="finishFromChild" type="(Landroid/app/Activity;)V"/>
<method name="finishActivity" type="(I)V"/>
<method name="finishActivityFromChild" type="(Landroid/app/Activity;I)V"/>
<method name="onActivityResult" type="(IILandroid/content/Intent;)V"/>
<method name="createPendingResult" type="(ILandroid/content/Intent;I)Landroid/app/PendingIntent;"/>
<method name="setRequestedOrientation" type="(I)V"/>
<method name="getRequestedOrientation" type="()I"/>
<method name="getTaskId" type="()I"/>
<method name="isTaskRoot" type="()Z"/>
<method name="moveTaskToBack" type="(Z)Z"/>
<method name="getLocalClassName" type="()Ljava/lang/String;"/>
<method name="getComponentName" type="()Landroid/content/ComponentName;"/>
<method name="getPreferences" type="(I)Landroid/content/SharedPreferences;"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setTitle" type="(I)V"/>
<method name="setTitleColor" type="(I)V"/>
<method name="getTitle" type="()Ljava/lang/CharSequence;"/>
<method name="getTitleColor" type="()I"/>
<method name="onTitleChanged" type="(Ljava/lang/CharSequence;I)V"/>
<method name="onChildTitleChanged" type="(Landroid/app/Activity;Ljava/lang/CharSequence;)V"/>
<method name="setProgressBarVisibility" type="(Z)V"/>
<method name="setProgressBarIndeterminateVisibility" type="(Z)V"/>
<method name="setProgressBarIndeterminate" type="(Z)V"/>
<method name="setProgress" type="(I)V"/>
<method name="setSecondaryProgress" type="(I)V"/>
<method name="setVolumeControlStream" type="(I)V"/>
<method name="getVolumeControlStream" type="()I"/>
<method name="runOnUiThread" type="(Ljava/lang/Runnable;)V"/>
<method name="onCreateView" type="(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;"/>
</class>
<class name="android/app/ActivityGroup">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onResume" type="()V"/>
<method name="onSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onPause" type="()V"/>
<method name="onStop" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="getCurrentActivity" type="()Landroid/app/Activity;"/>
<method name="getLocalActivityManager" type="()Landroid/app/LocalActivityManager;"/>
</class>
<class name="android/app/ActivityManager$MemoryInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager$ProcessErrorStateInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager$RecentTaskInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager$RunningAppProcessInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I[Ljava/lang/String;)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager$RunningServiceInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager$RunningTaskInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/app/ActivityManager">
<method name="getMemoryClass" type="()I"/>
<method name="getRecentTasks" type="(II)Ljava/util/List;"/>
<method name="getRunningTasks" type="(I)Ljava/util/List;"/>
<method name="getRunningServices" type="(I)Ljava/util/List;"/>
<method name="getRunningServiceControlPanel" type="(Landroid/content/ComponentName;)Landroid/app/PendingIntent;"/>
<method name="getMemoryInfo" type="(Landroid/app/ActivityManager$MemoryInfo;)V"/>
<method name="getProcessesInErrorState" type="()Ljava/util/List;"/>
<method name="getRunningAppProcesses" type="()Ljava/util/List;"/>
<method name="getProcessMemoryInfo" type="([I)[Landroid/os/Debug$MemoryInfo;"/>
<method name="restartPackage" type="(Ljava/lang/String;)V"/>
<method name="killBackgroundProcesses" type="(Ljava/lang/String;)V"/>
<method name="getDeviceConfigurationInfo" type="()Landroid/content/pm/ConfigurationInfo;"/>
<method name="isUserAMonkey" type="()Z" class_method="true"/>
</class>
<class name="android/app/admin/DeviceAdminInfo">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/content/pm/ResolveInfo;)V"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getReceiverName" type="()Ljava/lang/String;"/>
<method name="getActivityInfo" type="()Landroid/content/pm/ActivityInfo;"/>
<method name="getComponent" type="()Landroid/content/ComponentName;"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadDescription" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="isVisible" type="()Z"/>
<method name="usesPolicy" type="(I)Z"/>
<method name="getTagForPolicy" type="(I)Ljava/lang/String;"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/app/admin/DeviceAdminReceiver">
<method name="&lt;init&gt;" type="()V"/>
<method name="getManager" type="(Landroid/content/Context;)Landroid/app/admin/DevicePolicyManager;"/>
<method name="getWho" type="(Landroid/content/Context;)Landroid/content/ComponentName;"/>
<method name="onEnabled" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onDisableRequested" type="(Landroid/content/Context;Landroid/content/Intent;)Ljava/lang/CharSequence;"/>
<method name="onDisabled" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onPasswordChanged" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onPasswordFailed" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onPasswordSucceeded" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onReceive" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
</class>
<class name="android/app/admin/DevicePolicyManager">
<method name="isAdminActive" type="(Landroid/content/ComponentName;)Z"/>
<method name="getActiveAdmins" type="()Ljava/util/List;"/>
<method name="removeActiveAdmin" type="(Landroid/content/ComponentName;)V"/>
<method name="setPasswordQuality" type="(Landroid/content/ComponentName;I)V"/>
<method name="getPasswordQuality" type="(Landroid/content/ComponentName;)I"/>
<method name="setPasswordMinimumLength" type="(Landroid/content/ComponentName;I)V"/>
<method name="getPasswordMinimumLength" type="(Landroid/content/ComponentName;)I"/>
<method name="getPasswordMaximumLength" type="(I)I"/>
<method name="isActivePasswordSufficient" type="()Z"/>
<method name="getCurrentFailedPasswordAttempts" type="()I"/>
<method name="setMaximumFailedPasswordsForWipe" type="(Landroid/content/ComponentName;I)V"/>
<method name="getMaximumFailedPasswordsForWipe" type="(Landroid/content/ComponentName;)I"/>
<method name="resetPassword" type="(Ljava/lang/String;I)Z"/>
<method name="setMaximumTimeToLock" type="(Landroid/content/ComponentName;J)V"/>
<method name="getMaximumTimeToLock" type="(Landroid/content/ComponentName;)J"/>
<method name="lockNow" type="()V"/>
<method name="wipeData" type="(I)V"/>
</class>
<class name="android/app/AlarmManager">
<method name="set" type="(IJLandroid/app/PendingIntent;)V"/>
<method name="setRepeating" type="(IJJLandroid/app/PendingIntent;)V"/>
<method name="setInexactRepeating" type="(IJJLandroid/app/PendingIntent;)V"/>
<method name="cancel" type="(Landroid/app/PendingIntent;)V"/>
<method name="setTime" type="(J)V"/>
<method name="setTimeZone" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/app/AlertDialog$Builder">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setTitle" type="(I)Landroid/app/AlertDialog$Builder;"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;"/>
<method name="setCustomTitle" type="(Landroid/view/View;)Landroid/app/AlertDialog$Builder;"/>
<method name="setMessage" type="(I)Landroid/app/AlertDialog$Builder;"/>
<method name="setMessage" type="(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;"/>
<method name="setIcon" type="(I)Landroid/app/AlertDialog$Builder;"/>
<method name="setIcon" type="(Landroid/graphics/drawable/Drawable;)Landroid/app/AlertDialog$Builder;"/>
<method name="setPositiveButton" type="(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setPositiveButton" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setNegativeButton" type="(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setNegativeButton" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setNeutralButton" type="(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setNeutralButton" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setCancelable" type="(Z)Landroid/app/AlertDialog$Builder;"/>
<method name="setOnCancelListener" type="(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setOnKeyListener" type="(Landroid/content/DialogInterface$OnKeyListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setItems" type="(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setItems" type="([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setAdapter" type="(Landroid/widget/ListAdapter;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setCursor" type="(Landroid/database/Cursor;Landroid/content/DialogInterface$OnClickListener;Ljava/lang/String;)Landroid/app/AlertDialog$Builder;"/>
<method name="setMultiChoiceItems" type="(I[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setMultiChoiceItems" type="([Ljava/lang/CharSequence;[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setMultiChoiceItems" type="(Landroid/database/Cursor;Ljava/lang/String;Ljava/lang/String;Landroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setSingleChoiceItems" type="(IILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setSingleChoiceItems" type="(Landroid/database/Cursor;ILjava/lang/String;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setSingleChoiceItems" type="([Ljava/lang/CharSequence;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setSingleChoiceItems" type="(Landroid/widget/ListAdapter;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setOnItemSelectedListener" type="(Landroid/widget/AdapterView$OnItemSelectedListener;)Landroid/app/AlertDialog$Builder;"/>
<method name="setView" type="(Landroid/view/View;)Landroid/app/AlertDialog$Builder;"/>
<method name="setInverseBackgroundForced" type="(Z)Landroid/app/AlertDialog$Builder;"/>
<method name="create" type="()Landroid/app/AlertDialog;"/>
<method name="show" type="()Landroid/app/AlertDialog;"/>
</class>
<class name="android/app/AlertDialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V"/>
<method name="getButton" type="(I)Landroid/widget/Button;"/>
<method name="getListView" type="()Landroid/widget/ListView;"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setCustomTitle" type="(Landroid/view/View;)V"/>
<method name="setMessage" type="(Ljava/lang/CharSequence;)V"/>
<method name="setView" type="(Landroid/view/View;)V"/>
<method name="setView" type="(Landroid/view/View;IIII)V"/>
<method name="setButton" type="(ILjava/lang/CharSequence;Landroid/os/Message;)V"/>
<method name="setButton" type="(ILjava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)V"/>
<method name="setButton" type="(Ljava/lang/CharSequence;Landroid/os/Message;)V"/>
<method name="setButton2" type="(Ljava/lang/CharSequence;Landroid/os/Message;)V"/>
<method name="setButton3" type="(Ljava/lang/CharSequence;Landroid/os/Message;)V"/>
<method name="setButton" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)V"/>
<method name="setButton2" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)V"/>
<method name="setButton3" type="(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)V"/>
<method name="setIcon" type="(I)V"/>
<method name="setIcon" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setInverseBackgroundForced" type="(Z)V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
</class>
<class name="android/app/AliasActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/app/Application">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="()V"/>
<method name="onTerminate" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onLowMemory" type="()V"/>
</class>
<class name="android/app/backup/BackupAgent">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="onBackup" type="(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"/>
<method name="onRestore" type="(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V"/>
</class>
<class name="android/app/backup/BackupAgentHelper">
<method name="&lt;init&gt;" type="()V"/>
<method name="onBackup" type="(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"/>
<method name="onRestore" type="(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V"/>
<method name="addHelper" type="(Ljava/lang/String;Landroid/app/backup/BackupHelper;)V"/>
</class>
<class name="android/app/backup/BackupDataInput">
<method name="readNextHeader" type="()Z"/>
<method name="getKey" type="()Ljava/lang/String;"/>
<method name="getDataSize" type="()I"/>
<method name="readEntityData" type="([BII)I"/>
<method name="skipEntityData" type="()V"/>
</class>
<class name="android/app/backup/BackupDataInputStream">
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="getKey" type="()Ljava/lang/String;"/>
<method name="size" type="()I"/>
</class>
<class name="android/app/backup/BackupDataOutput">
<method name="writeEntityHeader" type="(Ljava/lang/String;I)I"/>
<method name="writeEntityData" type="([BI)I"/>
</class>
<class name="android/app/backup/BackupManager">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="dataChanged" type="()V"/>
<method name="dataChanged" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="requestRestore" type="(Landroid/app/backup/RestoreObserver;)I"/>
</class>
<class name="android/app/backup/FileBackupHelper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;[Ljava/lang/String;)V"/>
<method name="performBackup" type="(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"/>
<method name="restoreEntity" type="(Landroid/app/backup/BackupDataInputStream;)V"/>
<method name="writeNewStateDescription" type="(Landroid/os/ParcelFileDescriptor;)V"/>
</class>
<class name="android/app/backup/FileBackupHelperBase">
<method name="finalize" type="()V"/>
<method name="writeNewStateDescription" type="(Landroid/os/ParcelFileDescriptor;)V"/>
</class>
<class name="android/app/backup/RestoreObserver">
<method name="&lt;init&gt;" type="()V"/>
<method name="restoreStarting" type="(I)V"/>
<method name="onUpdate" type="(ILjava/lang/String;)V"/>
<method name="restoreFinished" type="(I)V"/>
</class>
<class name="android/app/backup/SharedPreferencesBackupHelper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;[Ljava/lang/String;)V"/>
<method name="performBackup" type="(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"/>
<method name="restoreEntity" type="(Landroid/app/backup/BackupDataInputStream;)V"/>
<method name="writeNewStateDescription" type="(Landroid/os/ParcelFileDescriptor;)V"/>
</class>
<class name="android/app/DatePickerDialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/app/DatePickerDialog$OnDateSetListener;III)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILandroid/app/DatePickerDialog$OnDateSetListener;III)V"/>
<method name="show" type="()V"/>
<method name="onClick" type="(Landroid/content/DialogInterface;I)V"/>
<method name="onDateChanged" type="(Landroid/widget/DatePicker;III)V"/>
<method name="updateDate" type="(III)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Bundle;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/app/Dialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="setOwnerActivity" type="(Landroid/app/Activity;)V"/>
<method name="getOwnerActivity" type="()Landroid/app/Activity;"/>
<method name="isShowing" type="()Z"/>
<method name="show" type="()V"/>
<method name="hide" type="()V"/>
<method name="dismiss" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onStart" type="()V"/>
<method name="onStop" type="()V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Bundle;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="getWindow" type="()Landroid/view/Window;"/>
<method name="getCurrentFocus" type="()Landroid/view/View;"/>
<method name="findViewById" type="(I)Landroid/view/View;"/>
<method name="setContentView" type="(I)V"/>
<method name="setContentView" type="(Landroid/view/View;)V"/>
<method name="setContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setTitle" type="(I)V"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyLongPress" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onBackPressed" type="()V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onWindowAttributesChanged" type="(Landroid/view/WindowManager$LayoutParams;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="onCreatePanelView" type="(I)Landroid/view/View;"/>
<method name="onCreatePanelMenu" type="(ILandroid/view/Menu;)Z"/>
<method name="onPreparePanel" type="(ILandroid/view/View;Landroid/view/Menu;)Z"/>
<method name="onMenuOpened" type="(ILandroid/view/Menu;)Z"/>
<method name="onMenuItemSelected" type="(ILandroid/view/MenuItem;)Z"/>
<method name="onPanelClosed" type="(ILandroid/view/Menu;)V"/>
<method name="onCreateOptionsMenu" type="(Landroid/view/Menu;)Z"/>
<method name="onPrepareOptionsMenu" type="(Landroid/view/Menu;)Z"/>
<method name="onOptionsItemSelected" type="(Landroid/view/MenuItem;)Z"/>
<method name="onOptionsMenuClosed" type="(Landroid/view/Menu;)V"/>
<method name="openOptionsMenu" type="()V"/>
<method name="closeOptionsMenu" type="()V"/>
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V"/>
<method name="registerForContextMenu" type="(Landroid/view/View;)V"/>
<method name="unregisterForContextMenu" type="(Landroid/view/View;)V"/>
<method name="openContextMenu" type="(Landroid/view/View;)V"/>
<method name="onContextItemSelected" type="(Landroid/view/MenuItem;)Z"/>
<method name="onContextMenuClosed" type="(Landroid/view/Menu;)V"/>
<method name="onSearchRequested" type="()Z"/>
<method name="takeKeyEvents" type="(Z)V"/>
<method name="requestWindowFeature" type="(I)Z"/>
<method name="setFeatureDrawableResource" type="(II)V"/>
<method name="setFeatureDrawableUri" type="(ILandroid/net/Uri;)V"/>
<method name="setFeatureDrawable" type="(ILandroid/graphics/drawable/Drawable;)V"/>
<method name="setFeatureDrawableAlpha" type="(II)V"/>
<method name="getLayoutInflater" type="()Landroid/view/LayoutInflater;"/>
<method name="setCancelable" type="(Z)V"/>
<method name="setCanceledOnTouchOutside" type="(Z)V"/>
<method name="cancel" type="()V"/>
<method name="setOnCancelListener" type="(Landroid/content/DialogInterface$OnCancelListener;)V"/>
<method name="setCancelMessage" type="(Landroid/os/Message;)V"/>
<method name="setOnDismissListener" type="(Landroid/content/DialogInterface$OnDismissListener;)V"/>
<method name="setOnShowListener" type="(Landroid/content/DialogInterface$OnShowListener;)V"/>
<method name="setDismissMessage" type="(Landroid/os/Message;)V"/>
<method name="setVolumeControlStream" type="(I)V"/>
<method name="getVolumeControlStream" type="()I"/>
<method name="setOnKeyListener" type="(Landroid/content/DialogInterface$OnKeyListener;)V"/>
</class>
<class name="android/app/DownloadManager$Query">
<method name="&lt;init&gt;" type="()V"/>
<method name="setFilterById" type="([J)Landroid/app/DownloadManager$Query;"/>
<method name="setFilterByStatus" type="(I)Landroid/app/DownloadManager$Query;"/>
</class>
<class name="android/app/DownloadManager$Request">
<method name="&lt;init&gt;" type="(Landroid/net/Uri;)V"/>
<method name="setDestinationUri" type="(Landroid/net/Uri;)Landroid/app/DownloadManager$Request;"/>
<method name="setDestinationInExternalFilesDir" type="(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;"/>
<method name="setDestinationInExternalPublicDir" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;"/>
<method name="addRequestHeader" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)Landroid/app/DownloadManager$Request;"/>
<method name="setDescription" type="(Ljava/lang/CharSequence;)Landroid/app/DownloadManager$Request;"/>
<method name="setMimeType" type="(Ljava/lang/String;)Landroid/app/DownloadManager$Request;"/>
<method name="setShowRunningNotification" type="(Z)Landroid/app/DownloadManager$Request;"/>
<method name="setAllowedNetworkTypes" type="(I)Landroid/app/DownloadManager$Request;"/>
<method name="setAllowedOverRoaming" type="(Z)Landroid/app/DownloadManager$Request;"/>
<method name="setVisibleInDownloadsUi" type="(Z)Landroid/app/DownloadManager$Request;"/>
</class>
<class name="android/app/DownloadManager">
<method name="enqueue" type="(Landroid/app/DownloadManager$Request;)J"/>
<method name="remove" type="([J)I"/>
<method name="query" type="(Landroid/app/DownloadManager$Query;)Landroid/database/Cursor;"/>
<method name="openDownloadedFile" type="(J)Landroid/os/ParcelFileDescriptor;"/>
</class>
<class name="android/app/ExpandableListActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V"/>
<method name="onChildClick" type="(Landroid/widget/ExpandableListView;Landroid/view/View;IIJ)Z"/>
<method name="onGroupCollapse" type="(I)V"/>
<method name="onGroupExpand" type="(I)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="setListAdapter" type="(Landroid/widget/ExpandableListAdapter;)V"/>
<method name="getExpandableListView" type="()Landroid/widget/ExpandableListView;"/>
<method name="getExpandableListAdapter" type="()Landroid/widget/ExpandableListAdapter;"/>
<method name="getSelectedId" type="()J"/>
<method name="getSelectedPosition" type="()J"/>
<method name="setSelectedChild" type="(IIZ)Z"/>
<method name="setSelectedGroup" type="(I)V"/>
</class>
<class name="android/app/Instrumentation$ActivityMonitor">
<method name="&lt;init&gt;" type="(Landroid/content/IntentFilter;Landroid/app/Instrumentation$ActivityResult;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Landroid/app/Instrumentation$ActivityResult;Z)V"/>
<method name="getFilter" type="()Landroid/content/IntentFilter;"/>
<method name="getResult" type="()Landroid/app/Instrumentation$ActivityResult;"/>
<method name="isBlocking" type="()Z"/>
<method name="getHits" type="()I"/>
<method name="getLastActivity" type="()Landroid/app/Activity;"/>
<method name="waitForActivity" type="()Landroid/app/Activity;"/>
<method name="waitForActivityWithTimeout" type="(J)Landroid/app/Activity;"/>
</class>
<class name="android/app/Instrumentation$ActivityResult">
<method name="&lt;init&gt;" type="(ILandroid/content/Intent;)V"/>
<method name="getResultCode" type="()I"/>
<method name="getResultData" type="()Landroid/content/Intent;"/>
</class>
<class name="android/app/Instrumentation">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="start" type="()V"/>
<method name="onStart" type="()V"/>
<method name="onException" type="(Ljava/lang/Object;Ljava/lang/Throwable;)Z"/>
<method name="sendStatus" type="(ILandroid/os/Bundle;)V"/>
<method name="finish" type="(ILandroid/os/Bundle;)V"/>
<method name="setAutomaticPerformanceSnapshots" type="()V"/>
<method name="startPerformanceSnapshot" type="()V"/>
<method name="endPerformanceSnapshot" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getComponentName" type="()Landroid/content/ComponentName;"/>
<method name="getTargetContext" type="()Landroid/content/Context;"/>
<method name="isProfiling" type="()Z"/>
<method name="startProfiling" type="()V"/>
<method name="stopProfiling" type="()V"/>
<method name="setInTouchMode" type="(Z)V"/>
<method name="waitForIdle" type="(Ljava/lang/Runnable;)V"/>
<method name="waitForIdleSync" type="()V"/>
<method name="runOnMainSync" type="(Ljava/lang/Runnable;)V"/>
<method name="startActivitySync" type="(Landroid/content/Intent;)Landroid/app/Activity;"/>
<method name="addMonitor" type="(Landroid/app/Instrumentation$ActivityMonitor;)V"/>
<method name="addMonitor" type="(Landroid/content/IntentFilter;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;"/>
<method name="addMonitor" type="(Ljava/lang/String;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;"/>
<method name="checkMonitorHit" type="(Landroid/app/Instrumentation$ActivityMonitor;I)Z"/>
<method name="waitForMonitor" type="(Landroid/app/Instrumentation$ActivityMonitor;)Landroid/app/Activity;"/>
<method name="waitForMonitorWithTimeout" type="(Landroid/app/Instrumentation$ActivityMonitor;J)Landroid/app/Activity;"/>
<method name="removeMonitor" type="(Landroid/app/Instrumentation$ActivityMonitor;)V"/>
<method name="invokeMenuActionSync" type="(Landroid/app/Activity;II)Z"/>
<method name="invokeContextMenuAction" type="(Landroid/app/Activity;II)Z"/>
<method name="sendStringSync" type="(Ljava/lang/String;)V"/>
<method name="sendKeySync" type="(Landroid/view/KeyEvent;)V"/>
<method name="sendKeyDownUpSync" type="(I)V"/>
<method name="sendCharacterSync" type="(I)V"/>
<method name="sendPointerSync" type="(Landroid/view/MotionEvent;)V"/>
<method name="sendTrackballEventSync" type="(Landroid/view/MotionEvent;)V"/>
<method name="newApplication" type="(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Context;)Landroid/app/Application;"/>
<method name="newApplication" type="(Ljava/lang/Class;Landroid/content/Context;)Landroid/app/Application;" class_method="true"/>
<method name="callApplicationOnCreate" type="(Landroid/app/Application;)V"/>
<method name="newActivity" type="(Ljava/lang/Class;Landroid/content/Context;Landroid/os/IBinder;Landroid/app/Application;Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/CharSequence;Landroid/app/Activity;Ljava/lang/String;Ljava/lang/Object;)Landroid/app/Activity;"/>
<method name="newActivity" type="(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;"/>
<method name="callActivityOnCreate" type="(Landroid/app/Activity;Landroid/os/Bundle;)V"/>
<method name="callActivityOnDestroy" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnRestoreInstanceState" type="(Landroid/app/Activity;Landroid/os/Bundle;)V"/>
<method name="callActivityOnPostCreate" type="(Landroid/app/Activity;Landroid/os/Bundle;)V"/>
<method name="callActivityOnNewIntent" type="(Landroid/app/Activity;Landroid/content/Intent;)V"/>
<method name="callActivityOnStart" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnRestart" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnResume" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnStop" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnSaveInstanceState" type="(Landroid/app/Activity;Landroid/os/Bundle;)V"/>
<method name="callActivityOnPause" type="(Landroid/app/Activity;)V"/>
<method name="callActivityOnUserLeaving" type="(Landroid/app/Activity;)V"/>
<method name="startAllocCounting" type="()V"/>
<method name="stopAllocCounting" type="()V"/>
<method name="getAllocCounts" type="()Landroid/os/Bundle;"/>
<method name="getBinderCounts" type="()Landroid/os/Bundle;"/>
</class>
<class name="android/app/IntentService">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="setIntentRedelivery" type="(Z)V"/>
<method name="onCreate" type="()V"/>
<method name="onStart" type="(Landroid/content/Intent;I)V"/>
<method name="onStartCommand" type="(Landroid/content/Intent;II)I"/>
<method name="onDestroy" type="()V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="onHandleIntent" type="(Landroid/content/Intent;)V"/>
</class>
<class name="android/app/KeyguardManager$KeyguardLock">
<method name="disableKeyguard" type="()V"/>
<method name="reenableKeyguard" type="()V"/>
</class>
<class name="android/app/KeyguardManager">
<method name="newKeyguardLock" type="(Ljava/lang/String;)Landroid/app/KeyguardManager$KeyguardLock;"/>
<method name="inKeyguardRestrictedInputMode" type="()Z"/>
<method name="exitKeyguardSecurely" type="(Landroid/app/KeyguardManager$OnKeyguardExitResult;)V"/>
</class>
<class name="android/app/LauncherActivity$IconResizer">
<method name="&lt;init&gt;" type="(Landroid/app/LauncherActivity;)V"/>
<method name="createIconThumbnail" type="(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/app/LauncherActivity$ListItem">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/app/LauncherActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onSetContentView" type="()V"/>
<method name="onListItemClick" type="(Landroid/widget/ListView;Landroid/view/View;IJ)V"/>
<method name="intentForPosition" type="(I)Landroid/content/Intent;"/>
<method name="itemForPosition" type="(I)Landroid/app/LauncherActivity$ListItem;"/>
<method name="getTargetIntent" type="()Landroid/content/Intent;"/>
<method name="onQueryPackageManager" type="(Landroid/content/Intent;)Ljava/util/List;"/>
<method name="makeListItems" type="()Ljava/util/List;"/>
</class>
<class name="android/app/ListActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onListItemClick" type="(Landroid/widget/ListView;Landroid/view/View;IJ)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onDestroy" type="()V"/>
<method name="onContentChanged" type="()V"/>
<method name="setListAdapter" type="(Landroid/widget/ListAdapter;)V"/>
<method name="setSelection" type="(I)V"/>
<method name="getSelectedItemPosition" type="()I"/>
<method name="getSelectedItemId" type="()J"/>
<method name="getListView" type="()Landroid/widget/ListView;"/>
<method name="getListAdapter" type="()Landroid/widget/ListAdapter;"/>
</class>
<class name="android/app/LocalActivityManager">
<method name="&lt;init&gt;" type="(Landroid/app/Activity;Z)V"/>
<method name="startActivity" type="(Ljava/lang/String;Landroid/content/Intent;)Landroid/view/Window;"/>
<method name="destroyActivity" type="(Ljava/lang/String;Z)Landroid/view/Window;"/>
<method name="getCurrentActivity" type="()Landroid/app/Activity;"/>
<method name="getCurrentId" type="()Ljava/lang/String;"/>
<method name="getActivity" type="(Ljava/lang/String;)Landroid/app/Activity;"/>
<method name="dispatchCreate" type="(Landroid/os/Bundle;)V"/>
<method name="saveInstanceState" type="()Landroid/os/Bundle;"/>
<method name="dispatchResume" type="()V"/>
<method name="dispatchPause" type="(Z)V"/>
<method name="dispatchStop" type="()V"/>
<method name="removeAllActivities" type="()V"/>
<method name="dispatchDestroy" type="(Z)V"/>
</class>
<class name="android/app/NativeActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onDestroy" type="()V"/>
<method name="onPause" type="()V"/>
<method name="onResume" type="()V"/>
<method name="onSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onStart" type="()V"/>
<method name="onStop" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onLowMemory" type="()V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="surfaceCreated" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="surfaceChanged" type="(Landroid/view/SurfaceHolder;III)V"/>
<method name="surfaceRedrawNeeded" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="surfaceDestroyed" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="onInputQueueCreated" type="(Landroid/view/InputQueue;)V"/>
<method name="onInputQueueDestroyed" type="(Landroid/view/InputQueue;)V"/>
<method name="onGlobalLayout" type="()V"/>
</class>
<class name="android/app/Notification">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/CharSequence;J)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="clone" type="()Landroid/app/Notification;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="setLatestEventInfo" type="(Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/app/PendingIntent;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/app/NotificationManager">
<method name="notify" type="(ILandroid/app/Notification;)V"/>
<method name="notify" type="(Ljava/lang/String;ILandroid/app/Notification;)V"/>
<method name="cancel" type="(I)V"/>
<method name="cancel" type="(Ljava/lang/String;I)V"/>
<method name="cancelAll" type="()V"/>
</class>
<class name="android/app/PendingIntent$CanceledException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="android/app/PendingIntent">
<method name="getActivity" type="(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;" class_method="true"/>
<method name="getBroadcast" type="(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;" class_method="true"/>
<method name="getService" type="(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;" class_method="true"/>
<method name="getIntentSender" type="()Landroid/content/IntentSender;"/>
<method name="cancel" type="()V"/>
<method name="send" type="()V"/>
<method name="send" type="(I)V"/>
<method name="send" type="(Landroid/content/Context;ILandroid/content/Intent;)V"/>
<method name="send" type="(ILandroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V"/>
<method name="send" type="(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V"/>
<method name="getTargetPackage" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="writePendingIntentOrNullToParcel" type="(Landroid/app/PendingIntent;Landroid/os/Parcel;)V" class_method="true"/>
<method name="readPendingIntentOrNullFromParcel" type="(Landroid/os/Parcel;)Landroid/app/PendingIntent;" class_method="true"/>
</class>
<class name="android/app/ProgressDialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="show" type="(Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Landroid/app/ProgressDialog;" class_method="true"/>
<method name="show" type="(Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Landroid/app/ProgressDialog;" class_method="true"/>
<method name="show" type="(Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZZ)Landroid/app/ProgressDialog;" class_method="true"/>
<method name="show" type="(Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZZLandroid/content/DialogInterface$OnCancelListener;)Landroid/app/ProgressDialog;" class_method="true"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onStart" type="()V"/>
<method name="onStop" type="()V"/>
<method name="setProgress" type="(I)V"/>
<method name="setSecondaryProgress" type="(I)V"/>
<method name="getProgress" type="()I"/>
<method name="getSecondaryProgress" type="()I"/>
<method name="getMax" type="()I"/>
<method name="setMax" type="(I)V"/>
<method name="incrementProgressBy" type="(I)V"/>
<method name="incrementSecondaryProgressBy" type="(I)V"/>
<method name="setProgressDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setIndeterminateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setIndeterminate" type="(Z)V"/>
<method name="isIndeterminate" type="()Z"/>
<method name="setMessage" type="(Ljava/lang/CharSequence;)V"/>
<method name="setProgressStyle" type="(I)V"/>
</class>
<class name="android/app/SearchableInfo">
<method name="getSuggestAuthority" type="()Ljava/lang/String;"/>
<method name="getSuggestPackage" type="()Ljava/lang/String;"/>
<method name="getSearchActivity" type="()Landroid/content/ComponentName;"/>
<method name="shouldRewriteQueryFromData" type="()Z"/>
<method name="shouldRewriteQueryFromText" type="()Z"/>
<method name="getSettingsDescriptionId" type="()I"/>
<method name="getSuggestPath" type="()Ljava/lang/String;"/>
<method name="getSuggestSelection" type="()Ljava/lang/String;"/>
<method name="getSuggestIntentAction" type="()Ljava/lang/String;"/>
<method name="getSuggestIntentData" type="()Ljava/lang/String;"/>
<method name="getSuggestThreshold" type="()I"/>
<method name="getHintId" type="()I"/>
<method name="getVoiceSearchEnabled" type="()Z"/>
<method name="getVoiceSearchLaunchWebSearch" type="()Z"/>
<method name="getVoiceSearchLaunchRecognizer" type="()Z"/>
<method name="getVoiceLanguageModeId" type="()I"/>
<method name="getVoicePromptTextId" type="()I"/>
<method name="getVoiceLanguageId" type="()I"/>
<method name="getVoiceMaxResults" type="()I"/>
<method name="getInputType" type="()I"/>
<method name="getImeOptions" type="()I"/>
<method name="shouldIncludeInGlobalSearch" type="()Z"/>
<method name="queryAfterZeroResults" type="()Z"/>
<method name="autoUrlDetect" type="()Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/app/SearchManager">
<method name="startSearch" type="(Ljava/lang/String;ZLandroid/content/ComponentName;Landroid/os/Bundle;Z)V"/>
<method name="triggerSearch" type="(Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/Bundle;)V"/>
<method name="stopSearch" type="()V"/>
<method name="setOnDismissListener" type="(Landroid/app/SearchManager$OnDismissListener;)V"/>
<method name="setOnCancelListener" type="(Landroid/app/SearchManager$OnCancelListener;)V"/>
<method name="onCancel" type="(Landroid/content/DialogInterface;)V"/>
<method name="onDismiss" type="(Landroid/content/DialogInterface;)V"/>
<method name="getSearchableInfo" type="(Landroid/content/ComponentName;)Landroid/app/SearchableInfo;"/>
<method name="getSearchablesInGlobalSearch" type="()Ljava/util/List;"/>
</class>
<class name="android/app/Service">
<method name="&lt;init&gt;" type="()V"/>
<method name="getApplication" type="()Landroid/app/Application;"/>
<method name="onCreate" type="()V"/>
<method name="onStart" type="(Landroid/content/Intent;I)V"/>
<method name="onStartCommand" type="(Landroid/content/Intent;II)I"/>
<method name="onDestroy" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onLowMemory" type="()V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="onUnbind" type="(Landroid/content/Intent;)Z"/>
<method name="onRebind" type="(Landroid/content/Intent;)V"/>
<method name="stopSelf" type="()V"/>
<method name="stopSelf" type="(I)V"/>
<method name="stopSelfResult" type="(I)Z"/>
<method name="setForeground" type="(Z)V"/>
<method name="startForeground" type="(ILandroid/app/Notification;)V"/>
<method name="stopForeground" type="(Z)V"/>
<method name="dump" type="(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/app/TabActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="setDefaultTab" type="(Ljava/lang/String;)V"/>
<method name="setDefaultTab" type="(I)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onPostCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="onChildTitleChanged" type="(Landroid/app/Activity;Ljava/lang/CharSequence;)V"/>
<method name="getTabHost" type="()Landroid/widget/TabHost;"/>
<method name="getTabWidget" type="()Landroid/widget/TabWidget;"/>
</class>
<class name="android/app/TimePickerDialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/app/TimePickerDialog$OnTimeSetListener;IIZ)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILandroid/app/TimePickerDialog$OnTimeSetListener;IIZ)V"/>
<method name="onClick" type="(Landroid/content/DialogInterface;I)V"/>
<method name="onTimeChanged" type="(Landroid/widget/TimePicker;II)V"/>
<method name="updateTime" type="(II)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Bundle;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/app/UiModeManager">
<method name="enableCarMode" type="(I)V"/>
<method name="disableCarMode" type="(I)V"/>
<method name="getCurrentModeType" type="()I"/>
<method name="setNightMode" type="(I)V"/>
<method name="getNightMode" type="()I"/>
</class>
<class name="android/app/WallpaperInfo">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/content/pm/ResolveInfo;)V"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getServiceName" type="()Ljava/lang/String;"/>
<method name="getServiceInfo" type="()Landroid/content/pm/ServiceInfo;"/>
<method name="getComponent" type="()Landroid/content/ComponentName;"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="loadThumbnail" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="loadAuthor" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadDescription" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="getSettingsActivity" type="()Ljava/lang/String;"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/app/WallpaperManager">
<method name="getInstance" type="(Landroid/content/Context;)Landroid/app/WallpaperManager;" class_method="true"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="peekDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getFastDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="peekFastDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getWallpaperInfo" type="()Landroid/app/WallpaperInfo;"/>
<method name="setResource" type="(I)V"/>
<method name="setBitmap" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setStream" type="(Ljava/io/InputStream;)V"/>
<method name="getDesiredMinimumWidth" type="()I"/>
<method name="getDesiredMinimumHeight" type="()I"/>
<method name="suggestDesiredDimensions" type="(II)V"/>
<method name="setWallpaperOffsets" type="(Landroid/os/IBinder;FF)V"/>
<method name="setWallpaperOffsetSteps" type="(FF)V"/>
<method name="sendWallpaperCommand" type="(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)V"/>
<method name="clearWallpaperOffsets" type="(Landroid/os/IBinder;)V"/>
<method name="clear" type="()V"/>
</class>
<class name="android/appwidget/AppWidgetHost">
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="startListening" type="()V"/>
<method name="stopListening" type="()V"/>
<method name="allocateAppWidgetId" type="()I"/>
<method name="deleteAppWidgetId" type="(I)V"/>
<method name="deleteHost" type="()V"/>
<method name="deleteAllHosts" type="()V" class_method="true"/>
<method name="createView" type="(Landroid/content/Context;ILandroid/appwidget/AppWidgetProviderInfo;)Landroid/appwidget/AppWidgetHostView;"/>
<method name="onCreateView" type="(Landroid/content/Context;ILandroid/appwidget/AppWidgetProviderInfo;)Landroid/appwidget/AppWidgetHostView;"/>
<method name="onProviderChanged" type="(ILandroid/appwidget/AppWidgetProviderInfo;)V"/>
</class>
<class name="android/appwidget/AppWidgetHostView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II)V"/>
<method name="setAppWidget" type="(ILandroid/appwidget/AppWidgetProviderInfo;)V"/>
<method name="getAppWidgetId" type="()I"/>
<method name="getAppWidgetInfo" type="()Landroid/appwidget/AppWidgetProviderInfo;"/>
<method name="dispatchSaveInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/FrameLayout$LayoutParams;"/>
<method name="updateAppWidget" type="(Landroid/widget/RemoteViews;)V"/>
<method name="drawChild" type="(Landroid/graphics/Canvas;Landroid/view/View;J)Z"/>
<method name="prepareView" type="(Landroid/view/View;)V"/>
<method name="getDefaultView" type="()Landroid/view/View;"/>
<method name="getErrorView" type="()Landroid/view/View;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/appwidget/AppWidgetManager">
<method name="getInstance" type="(Landroid/content/Context;)Landroid/appwidget/AppWidgetManager;" class_method="true"/>
<method name="updateAppWidget" type="([ILandroid/widget/RemoteViews;)V"/>
<method name="updateAppWidget" type="(ILandroid/widget/RemoteViews;)V"/>
<method name="updateAppWidget" type="(Landroid/content/ComponentName;Landroid/widget/RemoteViews;)V"/>
<method name="getInstalledProviders" type="()Ljava/util/List;"/>
<method name="getAppWidgetInfo" type="(I)Landroid/appwidget/AppWidgetProviderInfo;"/>
<method name="bindAppWidgetId" type="(ILandroid/content/ComponentName;)V"/>
<method name="getAppWidgetIds" type="(Landroid/content/ComponentName;)[I"/>
</class>
<class name="android/appwidget/AppWidgetProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="onReceive" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="onUpdate" type="(Landroid/content/Context;Landroid/appwidget/AppWidgetManager;[I)V"/>
<method name="onDeleted" type="(Landroid/content/Context;[I)V"/>
<method name="onEnabled" type="(Landroid/content/Context;)V"/>
<method name="onDisabled" type="(Landroid/content/Context;)V"/>
</class>
<class name="android/appwidget/AppWidgetProviderInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/bluetooth/BluetoothAdapter">
<method name="getDefaultAdapter" type="()Landroid/bluetooth/BluetoothAdapter;" class_method="true"/>
<method name="getRemoteDevice" type="(Ljava/lang/String;)Landroid/bluetooth/BluetoothDevice;"/>
<method name="isEnabled" type="()Z"/>
<method name="getState" type="()I"/>
<method name="enable" type="()Z"/>
<method name="disable" type="()Z"/>
<method name="getAddress" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="setName" type="(Ljava/lang/String;)Z"/>
<method name="getScanMode" type="()I"/>
<method name="startDiscovery" type="()Z"/>
<method name="cancelDiscovery" type="()Z"/>
<method name="isDiscovering" type="()Z"/>
<method name="getBondedDevices" type="()Ljava/util/Set;"/>
<method name="listenUsingRfcommWithServiceRecord" type="(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;"/>
<method name="checkBluetoothAddress" type="(Ljava/lang/String;)Z" class_method="true"/>
</class>
<class name="android/bluetooth/BluetoothClass$Device$Major">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/bluetooth/BluetoothClass$Device">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/bluetooth/BluetoothClass$Service">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/bluetooth/BluetoothClass">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="hasService" type="(I)Z"/>
<method name="getMajorDeviceClass" type="()I"/>
<method name="getDeviceClass" type="()I"/>
</class>
<class name="android/bluetooth/BluetoothDevice">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getAddress" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getBondState" type="()I"/>
<method name="getBluetoothClass" type="()Landroid/bluetooth/BluetoothClass;"/>
<method name="createRfcommSocketToServiceRecord" type="(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;"/>
</class>
<class name="android/bluetooth/BluetoothServerSocket">
<method name="accept" type="()Landroid/bluetooth/BluetoothSocket;"/>
<method name="accept" type="(I)Landroid/bluetooth/BluetoothSocket;"/>
<method name="close" type="()V"/>
</class>
<class name="android/bluetooth/BluetoothSocket">
<method name="connect" type="()V"/>
<method name="close" type="()V"/>
<method name="getRemoteDevice" type="()Landroid/bluetooth/BluetoothDevice;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
</class>
<class name="android/content/AbstractThreadedSyncAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Z)V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getSyncAdapterBinder" type="()Landroid/os/IBinder;"/>
<method name="onPerformSync" type="(Landroid/accounts/Account;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/ContentProviderClient;Landroid/content/SyncResult;)V"/>
<method name="onSyncCanceled" type="()V"/>
</class>
<class name="android/content/ActivityNotFoundException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/content/AsyncQueryHandler$WorkerArgs">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/content/AsyncQueryHandler$WorkerHandler">
<method name="&lt;init&gt;" type="(Landroid/content/AsyncQueryHandler;Landroid/os/Looper;)V"/>
<method name="handleMessage" type="(Landroid/os/Message;)V"/>
</class>
<class name="android/content/AsyncQueryHandler">
<method name="&lt;init&gt;" type="(Landroid/content/ContentResolver;)V"/>
<method name="createHandler" type="(Landroid/os/Looper;)Landroid/os/Handler;"/>
<method name="startQuery" type="(ILjava/lang/Object;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="cancelOperation" type="(I)V"/>
<method name="startInsert" type="(ILjava/lang/Object;Landroid/net/Uri;Landroid/content/ContentValues;)V"/>
<method name="startUpdate" type="(ILjava/lang/Object;Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="startDelete" type="(ILjava/lang/Object;Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="onQueryComplete" type="(ILjava/lang/Object;Landroid/database/Cursor;)V"/>
<method name="onInsertComplete" type="(ILjava/lang/Object;Landroid/net/Uri;)V"/>
<method name="onUpdateComplete" type="(ILjava/lang/Object;I)V"/>
<method name="onDeleteComplete" type="(ILjava/lang/Object;I)V"/>
<method name="handleMessage" type="(Landroid/os/Message;)V"/>
</class>
<class name="android/content/BroadcastReceiver">
<method name="&lt;init&gt;" type="()V"/>
<method name="onReceive" type="(Landroid/content/Context;Landroid/content/Intent;)V"/>
<method name="peekService" type="(Landroid/content/Context;Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="setResultCode" type="(I)V"/>
<method name="getResultCode" type="()I"/>
<method name="setResultData" type="(Ljava/lang/String;)V"/>
<method name="getResultData" type="()Ljava/lang/String;"/>
<method name="setResultExtras" type="(Landroid/os/Bundle;)V"/>
<method name="getResultExtras" type="(Z)Landroid/os/Bundle;"/>
<method name="setResult" type="(ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="getAbortBroadcast" type="()Z"/>
<method name="abortBroadcast" type="()V"/>
<method name="clearAbortBroadcast" type="()V"/>
<method name="isOrderedBroadcast" type="()Z"/>
<method name="isInitialStickyBroadcast" type="()Z"/>
<method name="setOrderedHint" type="(Z)V"/>
<method name="setDebugUnregister" type="(Z)V"/>
<method name="getDebugUnregister" type="()Z"/>
</class>
<class name="android/content/ComponentName">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="clone" type="()Landroid/content/ComponentName;"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getClassName" type="()Ljava/lang/String;"/>
<method name="getShortClassName" type="()Ljava/lang/String;"/>
<method name="flattenToString" type="()Ljava/lang/String;"/>
<method name="flattenToShortString" type="()Ljava/lang/String;"/>
<method name="unflattenFromString" type="(Ljava/lang/String;)Landroid/content/ComponentName;" class_method="true"/>
<method name="toShortString" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="compareTo" type="(Landroid/content/ComponentName;)I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="writeToParcel" type="(Landroid/content/ComponentName;Landroid/os/Parcel;)V" class_method="true"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)Landroid/content/ComponentName;" class_method="true"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/content/ContentProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="setReadPermission" type="(Ljava/lang/String;)V"/>
<method name="getReadPermission" type="()Ljava/lang/String;"/>
<method name="setWritePermission" type="(Ljava/lang/String;)V"/>
<method name="getWritePermission" type="()Ljava/lang/String;"/>
<method name="setPathPermissions" type="([Landroid/content/pm/PathPermission;)V"/>
<method name="getPathPermissions" type="()[Landroid/content/pm/PathPermission;"/>
<method name="onCreate" type="()Z"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onLowMemory" type="()V"/>
<method name="query" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="getType" type="(Landroid/net/Uri;)Ljava/lang/String;"/>
<method name="insert" type="(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;"/>
<method name="bulkInsert" type="(Landroid/net/Uri;[Landroid/content/ContentValues;)I"/>
<method name="delete" type="(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="update" type="(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="openFile" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;"/>
<method name="openAssetFile" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="openFileHelper" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;"/>
<method name="isTemporary" type="()Z"/>
<method name="attachInfo" type="(Landroid/content/Context;Landroid/content/pm/ProviderInfo;)V"/>
<method name="applyBatch" type="(Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;"/>
</class>
<class name="android/content/ContentProviderClient">
<method name="query" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="getType" type="(Landroid/net/Uri;)Ljava/lang/String;"/>
<method name="insert" type="(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;"/>
<method name="bulkInsert" type="(Landroid/net/Uri;[Landroid/content/ContentValues;)I"/>
<method name="delete" type="(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="update" type="(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="openFile" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;"/>
<method name="openAssetFile" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="applyBatch" type="(Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;"/>
<method name="release" type="()Z"/>
<method name="getLocalContentProvider" type="()Landroid/content/ContentProvider;"/>
</class>
<class name="android/content/ContentProviderOperation$Builder">
<method name="build" type="()Landroid/content/ContentProviderOperation;"/>
<method name="withValueBackReferences" type="(Landroid/content/ContentValues;)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withValueBackReference" type="(Ljava/lang/String;I)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withSelectionBackReference" type="(II)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withValues" type="(Landroid/content/ContentValues;)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withValue" type="(Ljava/lang/String;Ljava/lang/Object;)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withSelection" type="(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withExpectedCount" type="(I)Landroid/content/ContentProviderOperation$Builder;"/>
<method name="withYieldAllowed" type="(Z)Landroid/content/ContentProviderOperation$Builder;"/>
</class>
<class name="android/content/ContentProviderOperation">
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="newInsert" type="(Landroid/net/Uri;)Landroid/content/ContentProviderOperation$Builder;" class_method="true"/>
<method name="newUpdate" type="(Landroid/net/Uri;)Landroid/content/ContentProviderOperation$Builder;" class_method="true"/>
<method name="newDelete" type="(Landroid/net/Uri;)Landroid/content/ContentProviderOperation$Builder;" class_method="true"/>
<method name="newAssertQuery" type="(Landroid/net/Uri;)Landroid/content/ContentProviderOperation$Builder;" class_method="true"/>
<method name="getUri" type="()Landroid/net/Uri;"/>
<method name="isYieldAllowed" type="()Z"/>
<method name="isWriteOperation" type="()Z"/>
<method name="isReadOperation" type="()Z"/>
<method name="apply" type="(Landroid/content/ContentProvider;[Landroid/content/ContentProviderResult;I)Landroid/content/ContentProviderResult;"/>
<method name="resolveValueBackReferences" type="([Landroid/content/ContentProviderResult;I)Landroid/content/ContentValues;"/>
<method name="resolveSelectionArgsBackReferences" type="([Landroid/content/ContentProviderResult;I)[Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/content/ContentProviderResult">
<method name="&lt;init&gt;" type="(Landroid/net/Uri;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/ContentQueryMap">
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;Ljava/lang/String;ZLandroid/os/Handler;)V"/>
<method name="setKeepUpdated" type="(Z)V"/>
<method name="getValues" type="(Ljava/lang/String;)Landroid/content/ContentValues;"/>
<method name="requery" type="()V"/>
<method name="getRows" type="()Ljava/util/Map;"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/content/ContentResolver">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="getType" type="(Landroid/net/Uri;)Ljava/lang/String;"/>
<method name="query" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="openInputStream" type="(Landroid/net/Uri;)Ljava/io/InputStream;"/>
<method name="openOutputStream" type="(Landroid/net/Uri;)Ljava/io/OutputStream;"/>
<method name="openOutputStream" type="(Landroid/net/Uri;Ljava/lang/String;)Ljava/io/OutputStream;"/>
<method name="openFileDescriptor" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;"/>
<method name="openAssetFileDescriptor" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="insert" type="(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;"/>
<method name="applyBatch" type="(Ljava/lang/String;Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;"/>
<method name="bulkInsert" type="(Landroid/net/Uri;[Landroid/content/ContentValues;)I"/>
<method name="delete" type="(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="update" type="(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="acquireContentProviderClient" type="(Landroid/net/Uri;)Landroid/content/ContentProviderClient;"/>
<method name="acquireContentProviderClient" type="(Ljava/lang/String;)Landroid/content/ContentProviderClient;"/>
<method name="registerContentObserver" type="(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="notifyChange" type="(Landroid/net/Uri;Landroid/database/ContentObserver;)V"/>
<method name="notifyChange" type="(Landroid/net/Uri;Landroid/database/ContentObserver;Z)V"/>
<method name="startSync" type="(Landroid/net/Uri;Landroid/os/Bundle;)V"/>
<method name="requestSync" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V" class_method="true"/>
<method name="validateSyncExtrasBundle" type="(Landroid/os/Bundle;)V" class_method="true"/>
<method name="cancelSync" type="(Landroid/net/Uri;)V"/>
<method name="cancelSync" type="(Landroid/accounts/Account;Ljava/lang/String;)V" class_method="true"/>
<method name="getSyncAdapterTypes" type="()[Landroid/content/SyncAdapterType;" class_method="true"/>
<method name="getSyncAutomatically" type="(Landroid/accounts/Account;Ljava/lang/String;)Z" class_method="true"/>
<method name="setSyncAutomatically" type="(Landroid/accounts/Account;Ljava/lang/String;Z)V" class_method="true"/>
<method name="addPeriodicSync" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V" class_method="true"/>
<method name="removePeriodicSync" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V" class_method="true"/>
<method name="getPeriodicSyncs" type="(Landroid/accounts/Account;Ljava/lang/String;)Ljava/util/List;" class_method="true"/>
<method name="getIsSyncable" type="(Landroid/accounts/Account;Ljava/lang/String;)I" class_method="true"/>
<method name="setIsSyncable" type="(Landroid/accounts/Account;Ljava/lang/String;I)V" class_method="true"/>
<method name="getMasterSyncAutomatically" type="()Z" class_method="true"/>
<method name="setMasterSyncAutomatically" type="(Z)V" class_method="true"/>
<method name="isSyncActive" type="(Landroid/accounts/Account;Ljava/lang/String;)Z" class_method="true"/>
<method name="getCurrentSync" type="()Landroid/content/SyncInfo;" class_method="true"/>
<method name="isSyncPending" type="(Landroid/accounts/Account;Ljava/lang/String;)Z" class_method="true"/>
<method name="addStatusChangeListener" type="(ILandroid/content/SyncStatusObserver;)Ljava/lang/Object;" class_method="true"/>
<method name="removeStatusChangeListener" type="(Ljava/lang/Object;)V" class_method="true"/>
</class>
<class name="android/content/ContentUris">
<method name="&lt;init&gt;" type="()V"/>
<method name="parseId" type="(Landroid/net/Uri;)J" class_method="true"/>
<method name="appendId" type="(Landroid/net/Uri$Builder;J)Landroid/net/Uri$Builder;" class_method="true"/>
<method name="withAppendedId" type="(Landroid/net/Uri;J)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/content/ContentValues">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/ContentValues;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="putAll" type="(Landroid/content/ContentValues;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Byte;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Short;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Integer;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Long;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Float;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Double;)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Boolean;)V"/>
<method name="put" type="(Ljava/lang/String;[B)V"/>
<method name="putNull" type="(Ljava/lang/String;)V"/>
<method name="size" type="()I"/>
<method name="remove" type="(Ljava/lang/String;)V"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/String;)Z"/>
<method name="get" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getAsString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getAsLong" type="(Ljava/lang/String;)Ljava/lang/Long;"/>
<method name="getAsInteger" type="(Ljava/lang/String;)Ljava/lang/Integer;"/>
<method name="getAsShort" type="(Ljava/lang/String;)Ljava/lang/Short;"/>
<method name="getAsByte" type="(Ljava/lang/String;)Ljava/lang/Byte;"/>
<method name="getAsDouble" type="(Ljava/lang/String;)Ljava/lang/Double;"/>
<method name="getAsFloat" type="(Ljava/lang/String;)Ljava/lang/Float;"/>
<method name="getAsBoolean" type="(Ljava/lang/String;)Ljava/lang/Boolean;"/>
<method name="getAsByteArray" type="(Ljava/lang/String;)[B"/>
<method name="valueSet" type="()Ljava/util/Set;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/Context">
<method name="&lt;init&gt;" type="()V"/>
<method name="getAssets" type="()Landroid/content/res/AssetManager;"/>
<method name="getResources" type="()Landroid/content/res/Resources;"/>
<method name="getPackageManager" type="()Landroid/content/pm/PackageManager;"/>
<method name="getContentResolver" type="()Landroid/content/ContentResolver;"/>
<method name="getMainLooper" type="()Landroid/os/Looper;"/>
<method name="getApplicationContext" type="()Landroid/content/Context;"/>
<method name="getText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getString" type="(I[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="setTheme" type="(I)V"/>
<method name="getTheme" type="()Landroid/content/res/Resources$Theme;"/>
<method name="obtainStyledAttributes" type="([I)Landroid/content/res/TypedArray;"/>
<method name="obtainStyledAttributes" type="(I[I)Landroid/content/res/TypedArray;"/>
<method name="obtainStyledAttributes" type="(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;"/>
<method name="obtainStyledAttributes" type="(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;"/>
<method name="getClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getApplicationInfo" type="()Landroid/content/pm/ApplicationInfo;"/>
<method name="getPackageResourcePath" type="()Ljava/lang/String;"/>
<method name="getPackageCodePath" type="()Ljava/lang/String;"/>
<method name="getSharedPreferences" type="(Ljava/lang/String;I)Landroid/content/SharedPreferences;"/>
<method name="openFileInput" type="(Ljava/lang/String;)Ljava/io/FileInputStream;"/>
<method name="openFileOutput" type="(Ljava/lang/String;I)Ljava/io/FileOutputStream;"/>
<method name="deleteFile" type="(Ljava/lang/String;)Z"/>
<method name="getFileStreamPath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="getFilesDir" type="()Ljava/io/File;"/>
<method name="getExternalFilesDir" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="getCacheDir" type="()Ljava/io/File;"/>
<method name="getExternalCacheDir" type="()Ljava/io/File;"/>
<method name="fileList" type="()[Ljava/lang/String;"/>
<method name="getDir" type="(Ljava/lang/String;I)Ljava/io/File;"/>
<method name="openOrCreateDatabase" type="(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="deleteDatabase" type="(Ljava/lang/String;)Z"/>
<method name="getDatabasePath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="databaseList" type="()[Ljava/lang/String;"/>
<method name="getWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="peekWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getWallpaperDesiredMinimumWidth" type="()I"/>
<method name="getWallpaperDesiredMinimumHeight" type="()I"/>
<method name="setWallpaper" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setWallpaper" type="(Ljava/io/InputStream;)V"/>
<method name="clearWallpaper" type="()V"/>
<method name="startActivity" type="(Landroid/content/Intent;)V"/>
<method name="startIntentSender" type="(Landroid/content/IntentSender;Landroid/content/Intent;III)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="sendStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendStickyOrderedBroadcast" type="(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="removeStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;"/>
<method name="unregisterReceiver" type="(Landroid/content/BroadcastReceiver;)V"/>
<method name="startService" type="(Landroid/content/Intent;)Landroid/content/ComponentName;"/>
<method name="stopService" type="(Landroid/content/Intent;)Z"/>
<method name="bindService" type="(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z"/>
<method name="unbindService" type="(Landroid/content/ServiceConnection;)V"/>
<method name="startInstrumentation" type="(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="checkPermission" type="(Ljava/lang/String;II)I"/>
<method name="checkCallingPermission" type="(Ljava/lang/String;)I"/>
<method name="checkCallingOrSelfPermission" type="(Ljava/lang/String;)I"/>
<method name="enforcePermission" type="(Ljava/lang/String;IILjava/lang/String;)V"/>
<method name="enforceCallingPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="enforceCallingOrSelfPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="grantUriPermission" type="(Ljava/lang/String;Landroid/net/Uri;I)V"/>
<method name="revokeUriPermission" type="(Landroid/net/Uri;I)V"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;III)I"/>
<method name="checkCallingUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkCallingOrSelfUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;IIILjava/lang/String;)V"/>
<method name="enforceCallingUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceCallingOrSelfUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V"/>
<method name="createPackageContext" type="(Ljava/lang/String;I)Landroid/content/Context;"/>
<method name="isRestricted" type="()Z"/>
</class>
<class name="android/content/ContextWrapper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="attachBaseContext" type="(Landroid/content/Context;)V"/>
<method name="getBaseContext" type="()Landroid/content/Context;"/>
<method name="getAssets" type="()Landroid/content/res/AssetManager;"/>
<method name="getResources" type="()Landroid/content/res/Resources;"/>
<method name="getPackageManager" type="()Landroid/content/pm/PackageManager;"/>
<method name="getContentResolver" type="()Landroid/content/ContentResolver;"/>
<method name="getMainLooper" type="()Landroid/os/Looper;"/>
<method name="getApplicationContext" type="()Landroid/content/Context;"/>
<method name="setTheme" type="(I)V"/>
<method name="getTheme" type="()Landroid/content/res/Resources$Theme;"/>
<method name="getClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getApplicationInfo" type="()Landroid/content/pm/ApplicationInfo;"/>
<method name="getPackageResourcePath" type="()Ljava/lang/String;"/>
<method name="getPackageCodePath" type="()Ljava/lang/String;"/>
<method name="getSharedPreferences" type="(Ljava/lang/String;I)Landroid/content/SharedPreferences;"/>
<method name="openFileInput" type="(Ljava/lang/String;)Ljava/io/FileInputStream;"/>
<method name="openFileOutput" type="(Ljava/lang/String;I)Ljava/io/FileOutputStream;"/>
<method name="deleteFile" type="(Ljava/lang/String;)Z"/>
<method name="getFileStreamPath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="fileList" type="()[Ljava/lang/String;"/>
<method name="getFilesDir" type="()Ljava/io/File;"/>
<method name="getExternalFilesDir" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="getCacheDir" type="()Ljava/io/File;"/>
<method name="getExternalCacheDir" type="()Ljava/io/File;"/>
<method name="getDir" type="(Ljava/lang/String;I)Ljava/io/File;"/>
<method name="openOrCreateDatabase" type="(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="deleteDatabase" type="(Ljava/lang/String;)Z"/>
<method name="getDatabasePath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="databaseList" type="()[Ljava/lang/String;"/>
<method name="getWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="peekWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getWallpaperDesiredMinimumWidth" type="()I"/>
<method name="getWallpaperDesiredMinimumHeight" type="()I"/>
<method name="setWallpaper" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setWallpaper" type="(Ljava/io/InputStream;)V"/>
<method name="clearWallpaper" type="()V"/>
<method name="startActivity" type="(Landroid/content/Intent;)V"/>
<method name="startIntentSender" type="(Landroid/content/IntentSender;Landroid/content/Intent;III)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="sendStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendStickyOrderedBroadcast" type="(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="removeStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;"/>
<method name="unregisterReceiver" type="(Landroid/content/BroadcastReceiver;)V"/>
<method name="startService" type="(Landroid/content/Intent;)Landroid/content/ComponentName;"/>
<method name="stopService" type="(Landroid/content/Intent;)Z"/>
<method name="bindService" type="(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z"/>
<method name="unbindService" type="(Landroid/content/ServiceConnection;)V"/>
<method name="startInstrumentation" type="(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="checkPermission" type="(Ljava/lang/String;II)I"/>
<method name="checkCallingPermission" type="(Ljava/lang/String;)I"/>
<method name="checkCallingOrSelfPermission" type="(Ljava/lang/String;)I"/>
<method name="enforcePermission" type="(Ljava/lang/String;IILjava/lang/String;)V"/>
<method name="enforceCallingPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="enforceCallingOrSelfPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="grantUriPermission" type="(Ljava/lang/String;Landroid/net/Uri;I)V"/>
<method name="revokeUriPermission" type="(Landroid/net/Uri;I)V"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;III)I"/>
<method name="checkCallingUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkCallingOrSelfUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;IIILjava/lang/String;)V"/>
<method name="enforceCallingUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceCallingOrSelfUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V"/>
<method name="createPackageContext" type="(Ljava/lang/String;I)Landroid/content/Context;"/>
<method name="isRestricted" type="()Z"/>
</class>
<class name="android/content/Entity$NamedContentValues">
<method name="&lt;init&gt;" type="(Landroid/net/Uri;Landroid/content/ContentValues;)V"/>
</class>
<class name="android/content/Entity">
<method name="&lt;init&gt;" type="(Landroid/content/ContentValues;)V"/>
<method name="getEntityValues" type="()Landroid/content/ContentValues;"/>
<method name="getSubValues" type="()Ljava/util/ArrayList;"/>
<method name="addSubValue" type="(Landroid/net/Uri;Landroid/content/ContentValues;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/Intent$FilterComparison">
<method name="&lt;init&gt;" type="(Landroid/content/Intent;)V"/>
<method name="getIntent" type="()Landroid/content/Intent;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="android/content/Intent$ShortcutIconResource">
<method name="&lt;init&gt;" type="()V"/>
<method name="fromContext" type="(Landroid/content/Context;I)Landroid/content/Intent$ShortcutIconResource;" class_method="true"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/Intent">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Intent;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Landroid/net/Uri;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Landroid/net/Uri;Landroid/content/Context;Ljava/lang/Class;)V"/>
<method name="createChooser" type="(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;" class_method="true"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="cloneFilter" type="()Landroid/content/Intent;"/>
<method name="getIntent" type="(Ljava/lang/String;)Landroid/content/Intent;" class_method="true"/>
<method name="parseUri" type="(Ljava/lang/String;I)Landroid/content/Intent;" class_method="true"/>
<method name="getIntentOld" type="(Ljava/lang/String;)Landroid/content/Intent;" class_method="true"/>
<method name="getAction" type="()Ljava/lang/String;"/>
<method name="getData" type="()Landroid/net/Uri;"/>
<method name="getDataString" type="()Ljava/lang/String;"/>
<method name="getScheme" type="()Ljava/lang/String;"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="resolveType" type="(Landroid/content/Context;)Ljava/lang/String;"/>
<method name="resolveType" type="(Landroid/content/ContentResolver;)Ljava/lang/String;"/>
<method name="resolveTypeIfNeeded" type="(Landroid/content/ContentResolver;)Ljava/lang/String;"/>
<method name="hasCategory" type="(Ljava/lang/String;)Z"/>
<method name="getCategories" type="()Ljava/util/Set;"/>
<method name="setExtrasClassLoader" type="(Ljava/lang/ClassLoader;)V"/>
<method name="hasExtra" type="(Ljava/lang/String;)Z"/>
<method name="hasFileDescriptors" type="()Z"/>
<method name="getBooleanExtra" type="(Ljava/lang/String;Z)Z"/>
<method name="getByteExtra" type="(Ljava/lang/String;B)B"/>
<method name="getShortExtra" type="(Ljava/lang/String;S)S"/>
<method name="getCharExtra" type="(Ljava/lang/String;C)C"/>
<method name="getIntExtra" type="(Ljava/lang/String;I)I"/>
<method name="getLongExtra" type="(Ljava/lang/String;J)J"/>
<method name="getFloatExtra" type="(Ljava/lang/String;F)F"/>
<method name="getDoubleExtra" type="(Ljava/lang/String;D)D"/>
<method name="getStringExtra" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getCharSequenceExtra" type="(Ljava/lang/String;)Ljava/lang/CharSequence;"/>
<method name="getParcelableExtra" type="(Ljava/lang/String;)Landroid/os/Parcelable;"/>
<method name="getParcelableArrayExtra" type="(Ljava/lang/String;)[Landroid/os/Parcelable;"/>
<method name="getParcelableArrayListExtra" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getSerializableExtra" type="(Ljava/lang/String;)Ljava/io/Serializable;"/>
<method name="getIntegerArrayListExtra" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getStringArrayListExtra" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getCharSequenceArrayListExtra" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getBooleanArrayExtra" type="(Ljava/lang/String;)[Z"/>
<method name="getByteArrayExtra" type="(Ljava/lang/String;)[B"/>
<method name="getShortArrayExtra" type="(Ljava/lang/String;)[S"/>
<method name="getCharArrayExtra" type="(Ljava/lang/String;)[C"/>
<method name="getIntArrayExtra" type="(Ljava/lang/String;)[I"/>
<method name="getLongArrayExtra" type="(Ljava/lang/String;)[J"/>
<method name="getFloatArrayExtra" type="(Ljava/lang/String;)[F"/>
<method name="getDoubleArrayExtra" type="(Ljava/lang/String;)[D"/>
<method name="getStringArrayExtra" type="(Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="getCharSequenceArrayExtra" type="(Ljava/lang/String;)[Ljava/lang/CharSequence;"/>
<method name="getBundleExtra" type="(Ljava/lang/String;)Landroid/os/Bundle;"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="getFlags" type="()I"/>
<method name="getPackage" type="()Ljava/lang/String;"/>
<method name="getComponent" type="()Landroid/content/ComponentName;"/>
<method name="getSourceBounds" type="()Landroid/graphics/Rect;"/>
<method name="resolveActivity" type="(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;"/>
<method name="resolveActivityInfo" type="(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;"/>
<method name="setAction" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="setData" type="(Landroid/net/Uri;)Landroid/content/Intent;"/>
<method name="setType" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="setDataAndType" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="addCategory" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="removeCategory" type="(Ljava/lang/String;)V"/>
<method name="putExtra" type="(Ljava/lang/String;Z)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;B)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;C)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;S)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;I)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;J)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;F)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;D)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;"/>
<method name="putParcelableArrayListExtra" type="(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"/>
<method name="putIntegerArrayListExtra" type="(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"/>
<method name="putStringArrayListExtra" type="(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"/>
<method name="putCharSequenceArrayListExtra" type="(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[Z)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[B)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[S)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[C)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[I)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[J)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[F)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[D)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;"/>
<method name="putExtra" type="(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;"/>
<method name="putExtras" type="(Landroid/content/Intent;)Landroid/content/Intent;"/>
<method name="putExtras" type="(Landroid/os/Bundle;)Landroid/content/Intent;"/>
<method name="replaceExtras" type="(Landroid/content/Intent;)Landroid/content/Intent;"/>
<method name="replaceExtras" type="(Landroid/os/Bundle;)Landroid/content/Intent;"/>
<method name="removeExtra" type="(Ljava/lang/String;)V"/>
<method name="setFlags" type="(I)Landroid/content/Intent;"/>
<method name="addFlags" type="(I)Landroid/content/Intent;"/>
<method name="setPackage" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="setComponent" type="(Landroid/content/ComponentName;)Landroid/content/Intent;"/>
<method name="setClassName" type="(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="setClassName" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="setClass" type="(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;"/>
<method name="setSourceBounds" type="(Landroid/graphics/Rect;)V"/>
<method name="fillIn" type="(Landroid/content/Intent;I)I"/>
<method name="filterEquals" type="(Landroid/content/Intent;)Z"/>
<method name="filterHashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toURI" type="()Ljava/lang/String;"/>
<method name="toUri" type="(I)Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
<method name="parseIntent" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/content/Intent;" class_method="true"/>
</class>
<class name="android/content/IntentFilter$AuthorityEntry">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="match" type="(Landroid/net/Uri;)I"/>
</class>
<class name="android/content/IntentFilter$MalformedMimeTypeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/content/IntentFilter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/IntentFilter;)V"/>
<method name="create" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/content/IntentFilter;" class_method="true"/>
<method name="setPriority" type="(I)V"/>
<method name="getPriority" type="()I"/>
<method name="addAction" type="(Ljava/lang/String;)V"/>
<method name="countActions" type="()I"/>
<method name="getAction" type="(I)Ljava/lang/String;"/>
<method name="hasAction" type="(Ljava/lang/String;)Z"/>
<method name="matchAction" type="(Ljava/lang/String;)Z"/>
<method name="actionsIterator" type="()Ljava/util/Iterator;"/>
<method name="addDataType" type="(Ljava/lang/String;)V"/>
<method name="hasDataType" type="(Ljava/lang/String;)Z"/>
<method name="countDataTypes" type="()I"/>
<method name="getDataType" type="(I)Ljava/lang/String;"/>
<method name="typesIterator" type="()Ljava/util/Iterator;"/>
<method name="addDataScheme" type="(Ljava/lang/String;)V"/>
<method name="countDataSchemes" type="()I"/>
<method name="getDataScheme" type="(I)Ljava/lang/String;"/>
<method name="hasDataScheme" type="(Ljava/lang/String;)Z"/>
<method name="schemesIterator" type="()Ljava/util/Iterator;"/>
<method name="addDataAuthority" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="countDataAuthorities" type="()I"/>
<method name="getDataAuthority" type="(I)Landroid/content/IntentFilter$AuthorityEntry;"/>
<method name="hasDataAuthority" type="(Landroid/net/Uri;)Z"/>
<method name="authoritiesIterator" type="()Ljava/util/Iterator;"/>
<method name="addDataPath" type="(Ljava/lang/String;I)V"/>
<method name="countDataPaths" type="()I"/>
<method name="getDataPath" type="(I)Landroid/os/PatternMatcher;"/>
<method name="hasDataPath" type="(Ljava/lang/String;)Z"/>
<method name="pathsIterator" type="()Ljava/util/Iterator;"/>
<method name="matchDataAuthority" type="(Landroid/net/Uri;)I"/>
<method name="matchData" type="(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)I"/>
<method name="addCategory" type="(Ljava/lang/String;)V"/>
<method name="countCategories" type="()I"/>
<method name="getCategory" type="(I)Ljava/lang/String;"/>
<method name="hasCategory" type="(Ljava/lang/String;)Z"/>
<method name="categoriesIterator" type="()Ljava/util/Iterator;"/>
<method name="matchCategories" type="(Ljava/util/Set;)Ljava/lang/String;"/>
<method name="match" type="(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I"/>
<method name="match" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;Ljava/util/Set;Ljava/lang/String;)I"/>
<method name="writeToXml" type="(Lorg/xmlpull/v1/XmlSerializer;)V"/>
<method name="readFromXml" type="(Lorg/xmlpull/v1/XmlPullParser;)V"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/IntentSender$SendIntentException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="android/content/IntentSender">
<method name="sendIntent" type="(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;)V"/>
<method name="getTargetPackage" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="writeIntentSenderOrNullToParcel" type="(Landroid/content/IntentSender;Landroid/os/Parcel;)V" class_method="true"/>
<method name="readIntentSenderOrNullFromParcel" type="(Landroid/os/Parcel;)Landroid/content/IntentSender;" class_method="true"/>
</class>
<class name="android/content/MutableContextWrapper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setBaseContext" type="(Landroid/content/Context;)V"/>
</class>
<class name="android/content/OperationApplicationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="getNumSuccessfulYieldPoints" type="()I"/>
</class>
<class name="android/content/PeriodicSync">
<method name="&lt;init&gt;" type="(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="android/content/pm/ActivityInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ActivityInfo;)V"/>
<method name="getThemeResource" type="()I"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/ApplicationInfo$DisplayNameComparator">
<method name="&lt;init&gt;" type="(Landroid/content/pm/PackageManager;)V"/>
<method name="compare" type="(Landroid/content/pm/ApplicationInfo;Landroid/content/pm/ApplicationInfo;)I"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
</class>
<class name="android/content/pm/ApplicationInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ApplicationInfo;)V"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="loadDescription" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
</class>
<class name="android/content/pm/ComponentInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ComponentInfo;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="getIconResource" type="()I"/>
<method name="dumpFront" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="dumpBack" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/ConfigurationInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ConfigurationInfo;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getGlEsVersion" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/pm/FeatureInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/FeatureInfo;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getGlEsVersion" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/pm/InstrumentationInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/InstrumentationInfo;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/LabeledIntent">
<method name="&lt;init&gt;" type="(Landroid/content/Intent;Ljava/lang/String;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/CharSequence;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;II)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/CharSequence;I)V"/>
<method name="getSourcePackage" type="()Ljava/lang/String;"/>
<method name="getLabelResource" type="()I"/>
<method name="getNonLocalizedLabel" type="()Ljava/lang/CharSequence;"/>
<method name="getIconResource" type="()I"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/content/pm/PackageInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/PackageItemInfo$DisplayNameComparator">
<method name="&lt;init&gt;" type="(Landroid/content/pm/PackageManager;)V"/>
<method name="compare" type="(Landroid/content/pm/PackageItemInfo;Landroid/content/pm/PackageItemInfo;)I"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
</class>
<class name="android/content/pm/PackageItemInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/PackageItemInfo;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="loadLogo" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="loadXmlMetaData" type="(Landroid/content/pm/PackageManager;Ljava/lang/String;)Landroid/content/res/XmlResourceParser;"/>
<method name="dumpFront" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="dumpBack" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/PackageManager$NameNotFoundException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/content/pm/PackageManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="getPackageInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;"/>
<method name="currentToCanonicalPackageNames" type="([Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="canonicalToCurrentPackageNames" type="([Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="getLaunchIntentForPackage" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="getPackageGids" type="(Ljava/lang/String;)[I"/>
<method name="getPermissionInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;"/>
<method name="queryPermissionsByGroup" type="(Ljava/lang/String;I)Ljava/util/List;"/>
<method name="getPermissionGroupInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;"/>
<method name="getAllPermissionGroups" type="(I)Ljava/util/List;"/>
<method name="getApplicationInfo" type="(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;"/>
<method name="getActivityInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;"/>
<method name="getReceiverInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;"/>
<method name="getServiceInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;"/>
<method name="getProviderInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;"/>
<method name="getInstalledPackages" type="(I)Ljava/util/List;"/>
<method name="checkPermission" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="addPermission" type="(Landroid/content/pm/PermissionInfo;)Z"/>
<method name="addPermissionAsync" type="(Landroid/content/pm/PermissionInfo;)Z"/>
<method name="removePermission" type="(Ljava/lang/String;)V"/>
<method name="checkSignatures" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="checkSignatures" type="(II)I"/>
<method name="getPackagesForUid" type="(I)[Ljava/lang/String;"/>
<method name="getNameForUid" type="(I)Ljava/lang/String;"/>
<method name="getInstalledApplications" type="(I)Ljava/util/List;"/>
<method name="getSystemSharedLibraryNames" type="()[Ljava/lang/String;"/>
<method name="getSystemAvailableFeatures" type="()[Landroid/content/pm/FeatureInfo;"/>
<method name="hasSystemFeature" type="(Ljava/lang/String;)Z"/>
<method name="resolveActivity" type="(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;"/>
<method name="queryIntentActivities" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="queryIntentActivityOptions" type="(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="queryBroadcastReceivers" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="resolveService" type="(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;"/>
<method name="queryIntentServices" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="resolveContentProvider" type="(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;"/>
<method name="queryContentProviders" type="(Ljava/lang/String;II)Ljava/util/List;"/>
<method name="getInstrumentationInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;"/>
<method name="queryInstrumentation" type="(Ljava/lang/String;I)Ljava/util/List;"/>
<method name="getDrawable" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityIcon" type="(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityIcon" type="(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;"/>
<method name="getDefaultActivityIcon" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationIcon" type="(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationIcon" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityLogo" type="(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityLogo" type="(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationLogo" type="(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationLogo" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;"/>
<method name="getText" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;"/>
<method name="getXml" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;"/>
<method name="getApplicationLabel" type="(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;"/>
<method name="getResourcesForActivity" type="(Landroid/content/ComponentName;)Landroid/content/res/Resources;"/>
<method name="getResourcesForApplication" type="(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;"/>
<method name="getResourcesForApplication" type="(Ljava/lang/String;)Landroid/content/res/Resources;"/>
<method name="getPackageArchiveInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;"/>
<method name="getInstallerPackageName" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="addPackageToPreferred" type="(Ljava/lang/String;)V"/>
<method name="removePackageFromPreferred" type="(Ljava/lang/String;)V"/>
<method name="getPreferredPackages" type="(I)Ljava/util/List;"/>
<method name="addPreferredActivity" type="(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V"/>
<method name="clearPackagePreferredActivities" type="(Ljava/lang/String;)V"/>
<method name="getPreferredActivities" type="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I"/>
<method name="setComponentEnabledSetting" type="(Landroid/content/ComponentName;II)V"/>
<method name="getComponentEnabledSetting" type="(Landroid/content/ComponentName;)I"/>
<method name="setApplicationEnabledSetting" type="(Ljava/lang/String;II)V"/>
<method name="getApplicationEnabledSetting" type="(Ljava/lang/String;)I"/>
<method name="isSafeMode" type="()Z"/>
</class>
<class name="android/content/pm/PackageStats">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/PackageStats;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/PathPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getReadPermission" type="()Ljava/lang/String;"/>
<method name="getWritePermission" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/PermissionGroupInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/PermissionGroupInfo;)V"/>
<method name="loadDescription" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/PermissionInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/PermissionInfo;)V"/>
<method name="loadDescription" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/ProviderInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ProviderInfo;)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/pm/ResolveInfo$DisplayNameComparator">
<method name="&lt;init&gt;" type="(Landroid/content/pm/PackageManager;)V"/>
<method name="compare" type="(Landroid/content/pm/ResolveInfo;Landroid/content/pm/ResolveInfo;)I"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
</class>
<class name="android/content/pm/ResolveInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="getIconResource" type="()I"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/ServiceInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/pm/ServiceInfo;)V"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/pm/Signature">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toChars" type="()[C"/>
<method name="toChars" type="([C[I)[C"/>
<method name="toCharsString" type="()Ljava/lang/String;"/>
<method name="toByteArray" type="()[B"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/ReceiverCallNotAllowedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/content/res/AssetFileDescriptor$AutoCloseInputStream">
<method name="&lt;init&gt;" type="(Landroid/content/res/AssetFileDescriptor;)V"/>
<method name="available" type="()I"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="skip" type="(J)J"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="reset" type="()V"/>
</class>
<class name="android/content/res/AssetFileDescriptor$AutoCloseOutputStream">
<method name="&lt;init&gt;" type="(Landroid/content/res/AssetFileDescriptor;)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="android/content/res/AssetFileDescriptor">
<method name="&lt;init&gt;" type="(Landroid/os/ParcelFileDescriptor;JJ)V"/>
<method name="getParcelFileDescriptor" type="()Landroid/os/ParcelFileDescriptor;"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
<method name="getStartOffset" type="()J"/>
<method name="getLength" type="()J"/>
<method name="getDeclaredLength" type="()J"/>
<method name="close" type="()V"/>
<method name="createInputStream" type="()Ljava/io/FileInputStream;"/>
<method name="createOutputStream" type="()Ljava/io/FileOutputStream;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/res/AssetManager$AssetInputStream">
<method name="getAssetInt" type="()I"/>
<method name="read" type="()I"/>
<method name="markSupported" type="()Z"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="reset" type="()V"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/content/res/AssetManager">
<method name="close" type="()V"/>
<method name="open" type="(Ljava/lang/String;)Ljava/io/InputStream;"/>
<method name="open" type="(Ljava/lang/String;I)Ljava/io/InputStream;"/>
<method name="openFd" type="(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="list" type="(Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="openNonAssetFd" type="(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="openNonAssetFd" type="(ILjava/lang/String;)Landroid/content/res/AssetFileDescriptor;"/>
<method name="openXmlResourceParser" type="(Ljava/lang/String;)Landroid/content/res/XmlResourceParser;"/>
<method name="openXmlResourceParser" type="(ILjava/lang/String;)Landroid/content/res/XmlResourceParser;"/>
<method name="finalize" type="()V"/>
<method name="getLocales" type="()[Ljava/lang/String;"/>
</class>
<class name="android/content/res/ColorStateList">
<method name="&lt;init&gt;" type="([[I[I)V"/>
<method name="valueOf" type="(I)Landroid/content/res/ColorStateList;" class_method="true"/>
<method name="createFromXml" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/content/res/ColorStateList;" class_method="true"/>
<method name="withAlpha" type="(I)Landroid/content/res/ColorStateList;"/>
<method name="isStateful" type="()Z"/>
<method name="getColorForState" type="([II)I"/>
<method name="getDefaultColor" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/res/Configuration">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Configuration;)V"/>
<method name="setTo" type="(Landroid/content/res/Configuration;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="setToDefaults" type="()V"/>
<method name="updateFrom" type="(Landroid/content/res/Configuration;)I"/>
<method name="diff" type="(Landroid/content/res/Configuration;)I"/>
<method name="needNewResources" type="(II)Z" class_method="true"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
<method name="compareTo" type="(Landroid/content/res/Configuration;)I"/>
<method name="equals" type="(Landroid/content/res/Configuration;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/content/res/ObbInfo">
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/res/ObbScanner">
<method name="getObbInfo" type="(Ljava/lang/String;)Landroid/content/res/ObbInfo;" class_method="true"/>
</class>
<class name="android/content/res/Resources$NotFoundException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/content/res/Resources$Theme">
<method name="applyStyle" type="(IZ)V"/>
<method name="setTo" type="(Landroid/content/res/Resources$Theme;)V"/>
<method name="obtainStyledAttributes" type="([I)Landroid/content/res/TypedArray;"/>
<method name="obtainStyledAttributes" type="(I[I)Landroid/content/res/TypedArray;"/>
<method name="obtainStyledAttributes" type="(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;"/>
<method name="resolveAttribute" type="(ILandroid/util/TypedValue;Z)Z"/>
<method name="dump" type="(ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/content/res/Resources">
<method name="&lt;init&gt;" type="(Landroid/content/res/AssetManager;Landroid/util/DisplayMetrics;Landroid/content/res/Configuration;)V"/>
<method name="getSystem" type="()Landroid/content/res/Resources;" class_method="true"/>
<method name="getText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getQuantityText" type="(II)Ljava/lang/CharSequence;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getString" type="(I[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="getQuantityString" type="(II[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="getQuantityString" type="(II)Ljava/lang/String;"/>
<method name="getText" type="(ILjava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
<method name="getTextArray" type="(I)[Ljava/lang/CharSequence;"/>
<method name="getStringArray" type="(I)[Ljava/lang/String;"/>
<method name="getIntArray" type="(I)[I"/>
<method name="obtainTypedArray" type="(I)Landroid/content/res/TypedArray;"/>
<method name="getDimension" type="(I)F"/>
<method name="getDimensionPixelOffset" type="(I)I"/>
<method name="getDimensionPixelSize" type="(I)I"/>
<method name="getFraction" type="(III)F"/>
<method name="getDrawable" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="getMovie" type="(I)Landroid/graphics/Movie;"/>
<method name="getColor" type="(I)I"/>
<method name="getColorStateList" type="(I)Landroid/content/res/ColorStateList;"/>
<method name="getBoolean" type="(I)Z"/>
<method name="getInteger" type="(I)I"/>
<method name="getLayout" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="getAnimation" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="getXml" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="openRawResource" type="(I)Ljava/io/InputStream;"/>
<method name="openRawResource" type="(ILandroid/util/TypedValue;)Ljava/io/InputStream;"/>
<method name="openRawResourceFd" type="(I)Landroid/content/res/AssetFileDescriptor;"/>
<method name="getValue" type="(ILandroid/util/TypedValue;Z)V"/>
<method name="getValue" type="(Ljava/lang/String;Landroid/util/TypedValue;Z)V"/>
<method name="newTheme" type="()Landroid/content/res/Resources$Theme;"/>
<method name="obtainAttributes" type="(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;"/>
<method name="updateConfiguration" type="(Landroid/content/res/Configuration;Landroid/util/DisplayMetrics;)V"/>
<method name="getDisplayMetrics" type="()Landroid/util/DisplayMetrics;"/>
<method name="getConfiguration" type="()Landroid/content/res/Configuration;"/>
<method name="getIdentifier" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getResourceName" type="(I)Ljava/lang/String;"/>
<method name="getResourcePackageName" type="(I)Ljava/lang/String;"/>
<method name="getResourceTypeName" type="(I)Ljava/lang/String;"/>
<method name="getResourceEntryName" type="(I)Ljava/lang/String;"/>
<method name="parseBundleExtras" type="(Landroid/content/res/XmlResourceParser;Landroid/os/Bundle;)V"/>
<method name="parseBundleExtra" type="(Ljava/lang/String;Landroid/util/AttributeSet;Landroid/os/Bundle;)V"/>
<method name="getAssets" type="()Landroid/content/res/AssetManager;"/>
<method name="flushLayoutCache" type="()V"/>
<method name="finishPreloading" type="()V"/>
</class>
<class name="android/content/res/TypedArray">
<method name="length" type="()I"/>
<method name="getIndexCount" type="()I"/>
<method name="getIndex" type="(I)I"/>
<method name="getResources" type="()Landroid/content/res/Resources;"/>
<method name="getText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getNonResourceString" type="(I)Ljava/lang/String;"/>
<method name="getBoolean" type="(IZ)Z"/>
<method name="getInt" type="(II)I"/>
<method name="getFloat" type="(IF)F"/>
<method name="getColor" type="(II)I"/>
<method name="getColorStateList" type="(I)Landroid/content/res/ColorStateList;"/>
<method name="getInteger" type="(II)I"/>
<method name="getDimension" type="(IF)F"/>
<method name="getDimensionPixelOffset" type="(II)I"/>
<method name="getDimensionPixelSize" type="(II)I"/>
<method name="getLayoutDimension" type="(ILjava/lang/String;)I"/>
<method name="getLayoutDimension" type="(II)I"/>
<method name="getFraction" type="(IIIF)F"/>
<method name="getResourceId" type="(II)I"/>
<method name="getDrawable" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="getTextArray" type="(I)[Ljava/lang/CharSequence;"/>
<method name="getValue" type="(ILandroid/util/TypedValue;)Z"/>
<method name="hasValue" type="(I)Z"/>
<method name="peekValue" type="(I)Landroid/util/TypedValue;"/>
<method name="getPositionDescription" type="()Ljava/lang/String;"/>
<method name="recycle" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/SearchRecentSuggestionsProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="setupSuggestions" type="(Ljava/lang/String;I)V"/>
<method name="delete" type="(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="getType" type="(Landroid/net/Uri;)Ljava/lang/String;"/>
<method name="insert" type="(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;"/>
<method name="onCreate" type="()Z"/>
<method name="query" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="update" type="(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
</class>
<class name="android/content/SyncAdapterType">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ZZ)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="supportsUploading" type="()Z"/>
<method name="isUserVisible" type="()Z"/>
<method name="newKey" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SyncAdapterType;" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/SyncContext">
<method name="onFinished" type="(Landroid/content/SyncResult;)V"/>
<method name="getSyncContextBinder" type="()Landroid/os/IBinder;"/>
</class>
<class name="android/content/SyncInfo">
</class>
<class name="android/content/SyncResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="hasHardError" type="()Z"/>
<method name="hasSoftError" type="()Z"/>
<method name="hasError" type="()Z"/>
<method name="madeSomeProgress" type="()Z"/>
<method name="clear" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toDebugString" type="()Ljava/lang/String;"/>
</class>
<class name="android/content/SyncStats">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/content/UriMatcher">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="addURI" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="match" type="(Landroid/net/Uri;)I"/>
</class>
<class name="android/database/AbstractCursor$SelfContentObserver">
<method name="&lt;init&gt;" type="(Landroid/database/AbstractCursor;)V"/>
<method name="deliverSelfNotifications" type="()Z"/>
<method name="onChange" type="(Z)V"/>
</class>
<class name="android/database/AbstractCursor">
<method name="&lt;init&gt;" type="()V"/>
<method name="getCount" type="()I"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getShort" type="(I)S"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="isNull" type="(I)Z"/>
<method name="getBlob" type="(I)[B"/>
<method name="getWindow" type="()Landroid/database/CursorWindow;"/>
<method name="getColumnCount" type="()I"/>
<method name="deactivate" type="()V"/>
<method name="requery" type="()Z"/>
<method name="isClosed" type="()Z"/>
<method name="close" type="()V"/>
<method name="onMove" type="(II)Z"/>
<method name="copyStringToBuffer" type="(ILandroid/database/CharArrayBuffer;)V"/>
<method name="getPosition" type="()I"/>
<method name="moveToPosition" type="(I)Z"/>
<method name="fillWindow" type="(ILandroid/database/CursorWindow;)V"/>
<method name="move" type="(I)Z"/>
<method name="moveToFirst" type="()Z"/>
<method name="moveToLast" type="()Z"/>
<method name="moveToNext" type="()Z"/>
<method name="moveToPrevious" type="()Z"/>
<method name="isFirst" type="()Z"/>
<method name="isLast" type="()Z"/>
<method name="isBeforeFirst" type="()Z"/>
<method name="isAfterLast" type="()Z"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="getColumnIndexOrThrow" type="(Ljava/lang/String;)I"/>
<method name="getColumnName" type="(I)Ljava/lang/String;"/>
<method name="registerContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="onChange" type="(Z)V"/>
<method name="setNotificationUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)V"/>
<method name="getWantsAllOnMoveCalls" type="()Z"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="respond" type="(Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="isFieldUpdated" type="(I)Z"/>
<method name="getUpdatedField" type="(I)Ljava/lang/Object;"/>
<method name="checkPosition" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/database/AbstractWindowedCursor">
<method name="&lt;init&gt;" type="()V"/>
<method name="getBlob" type="(I)[B"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="copyStringToBuffer" type="(ILandroid/database/CharArrayBuffer;)V"/>
<method name="getShort" type="(I)S"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="isNull" type="(I)Z"/>
<method name="isBlob" type="(I)Z"/>
<method name="isString" type="(I)Z"/>
<method name="isLong" type="(I)Z"/>
<method name="isFloat" type="(I)Z"/>
<method name="checkPosition" type="()V"/>
<method name="getWindow" type="()Landroid/database/CursorWindow;"/>
<method name="setWindow" type="(Landroid/database/CursorWindow;)V"/>
<method name="hasWindow" type="()Z"/>
</class>
<class name="android/database/CharArrayBuffer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="([C)V"/>
</class>
<class name="android/database/ContentObservable">
<method name="&lt;init&gt;" type="()V"/>
<method name="registerObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="dispatchChange" type="(Z)V"/>
<method name="notifyChange" type="(Z)V"/>
<method name="registerObserver" type="(Ljava/lang/Object;)V"/>
</class>
<class name="android/database/ContentObserver">
<method name="&lt;init&gt;" type="(Landroid/os/Handler;)V"/>
<method name="deliverSelfNotifications" type="()Z"/>
<method name="onChange" type="(Z)V"/>
<method name="dispatchChange" type="(Z)V"/>
</class>
<class name="android/database/CursorIndexOutOfBoundsException">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/CursorJoiner$Result">
<method name="values" type="()[Landroid/database/CursorJoiner$Result;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/database/CursorJoiner$Result;" class_method="true"/>
</class>
<class name="android/database/CursorJoiner">
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;[Ljava/lang/String;Landroid/database/Cursor;[Ljava/lang/String;)V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="hasNext" type="()Z"/>
<method name="next" type="()Landroid/database/CursorJoiner$Result;"/>
<method name="remove" type="()V"/>
<method name="next" type="()Ljava/lang/Object;"/>
</class>
<class name="android/database/CursorWindow">
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="getStartPosition" type="()I"/>
<method name="setStartPosition" type="(I)V"/>
<method name="getNumRows" type="()I"/>
<method name="setNumColumns" type="(I)Z"/>
<method name="allocRow" type="()Z"/>
<method name="freeLastRow" type="()V"/>
<method name="putBlob" type="([BII)Z"/>
<method name="putString" type="(Ljava/lang/String;II)Z"/>
<method name="putLong" type="(JII)Z"/>
<method name="putDouble" type="(DII)Z"/>
<method name="putNull" type="(II)Z"/>
<method name="isNull" type="(II)Z"/>
<method name="getBlob" type="(II)[B"/>
<method name="isBlob" type="(II)Z"/>
<method name="isLong" type="(II)Z"/>
<method name="isFloat" type="(II)Z"/>
<method name="isString" type="(II)Z"/>
<method name="getString" type="(II)Ljava/lang/String;"/>
<method name="copyStringToBuffer" type="(IILandroid/database/CharArrayBuffer;)V"/>
<method name="getLong" type="(II)J"/>
<method name="getDouble" type="(II)D"/>
<method name="getShort" type="(II)S"/>
<method name="getInt" type="(II)I"/>
<method name="getFloat" type="(II)F"/>
<method name="clear" type="()V"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
<method name="newFromParcel" type="(Landroid/os/Parcel;)Landroid/database/CursorWindow;" class_method="true"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="onAllReferencesReleased" type="()V"/>
</class>
<class name="android/database/CursorWrapper">
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;)V"/>
<method name="close" type="()V"/>
<method name="isClosed" type="()Z"/>
<method name="getCount" type="()I"/>
<method name="deactivate" type="()V"/>
<method name="moveToFirst" type="()Z"/>
<method name="getColumnCount" type="()I"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="getColumnIndexOrThrow" type="(Ljava/lang/String;)I"/>
<method name="getColumnName" type="(I)Ljava/lang/String;"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="getDouble" type="(I)D"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="getFloat" type="(I)F"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getShort" type="(I)S"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="copyStringToBuffer" type="(ILandroid/database/CharArrayBuffer;)V"/>
<method name="getBlob" type="(I)[B"/>
<method name="getWantsAllOnMoveCalls" type="()Z"/>
<method name="isAfterLast" type="()Z"/>
<method name="isBeforeFirst" type="()Z"/>
<method name="isFirst" type="()Z"/>
<method name="isLast" type="()Z"/>
<method name="isNull" type="(I)Z"/>
<method name="moveToLast" type="()Z"/>
<method name="move" type="(I)Z"/>
<method name="moveToPosition" type="(I)Z"/>
<method name="moveToNext" type="()Z"/>
<method name="getPosition" type="()I"/>
<method name="moveToPrevious" type="()Z"/>
<method name="registerContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="requery" type="()Z"/>
<method name="respond" type="(Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="setNotificationUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)V"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
</class>
<class name="android/database/DatabaseUtils$InsertHelper">
<method name="&lt;init&gt;" type="(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="bind" type="(ID)V"/>
<method name="bind" type="(IF)V"/>
<method name="bind" type="(IJ)V"/>
<method name="bind" type="(II)V"/>
<method name="bind" type="(IZ)V"/>
<method name="bindNull" type="(I)V"/>
<method name="bind" type="(I[B)V"/>
<method name="bind" type="(ILjava/lang/String;)V"/>
<method name="insert" type="(Landroid/content/ContentValues;)J"/>
<method name="execute" type="()J"/>
<method name="prepareForInsert" type="()V"/>
<method name="prepareForReplace" type="()V"/>
<method name="replace" type="(Landroid/content/ContentValues;)J"/>
<method name="close" type="()V"/>
</class>
<class name="android/database/DatabaseUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="writeExceptionToParcel" type="(Landroid/os/Parcel;Ljava/lang/Exception;)V" class_method="true"/>
<method name="readExceptionFromParcel" type="(Landroid/os/Parcel;)V" class_method="true"/>
<method name="readExceptionWithFileNotFoundExceptionFromParcel" type="(Landroid/os/Parcel;)V" class_method="true"/>
<method name="readExceptionWithOperationApplicationExceptionFromParcel" type="(Landroid/os/Parcel;)V" class_method="true"/>
<method name="bindObjectToProgram" type="(Landroid/database/sqlite/SQLiteProgram;ILjava/lang/Object;)V" class_method="true"/>
<method name="appendEscapedSQLString" type="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" class_method="true"/>
<method name="sqlEscapeString" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="appendValueToSql" type="(Ljava/lang/StringBuilder;Ljava/lang/Object;)V" class_method="true"/>
<method name="getCollationKey" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getHexCollationKey" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="dumpCursor" type="(Landroid/database/Cursor;)V" class_method="true"/>
<method name="dumpCursor" type="(Landroid/database/Cursor;Ljava/io/PrintStream;)V" class_method="true"/>
<method name="dumpCursor" type="(Landroid/database/Cursor;Ljava/lang/StringBuilder;)V" class_method="true"/>
<method name="dumpCursorToString" type="(Landroid/database/Cursor;)Ljava/lang/String;" class_method="true"/>
<method name="dumpCurrentRow" type="(Landroid/database/Cursor;)V" class_method="true"/>
<method name="dumpCurrentRow" type="(Landroid/database/Cursor;Ljava/io/PrintStream;)V" class_method="true"/>
<method name="dumpCurrentRow" type="(Landroid/database/Cursor;Ljava/lang/StringBuilder;)V" class_method="true"/>
<method name="dumpCurrentRowToString" type="(Landroid/database/Cursor;)Ljava/lang/String;" class_method="true"/>
<method name="cursorStringToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V" class_method="true"/>
<method name="cursorStringToInsertHelper" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/database/DatabaseUtils$InsertHelper;I)V" class_method="true"/>
<method name="cursorStringToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorIntToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V" class_method="true"/>
<method name="cursorIntToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorLongToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V" class_method="true"/>
<method name="cursorLongToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorDoubleToCursorValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V" class_method="true"/>
<method name="cursorDoubleToContentValues" type="(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorRowToContentValues" type="(Landroid/database/Cursor;Landroid/content/ContentValues;)V" class_method="true"/>
<method name="queryNumEntries" type="(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)J" class_method="true"/>
<method name="longForQuery" type="(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)J" class_method="true"/>
<method name="longForQuery" type="(Landroid/database/sqlite/SQLiteStatement;[Ljava/lang/String;)J" class_method="true"/>
<method name="stringForQuery" type="(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="stringForQuery" type="(Landroid/database/sqlite/SQLiteStatement;[Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="cursorStringToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorLongToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorShortToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorIntToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorFloatToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="cursorDoubleToContentValuesIfPresent" type="(Landroid/database/Cursor;Landroid/content/ContentValues;Ljava/lang/String;)V" class_method="true"/>
<method name="createDbFromSqlStatements" type="(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)V" class_method="true"/>
</class>
<class name="android/database/DataSetObservable">
<method name="&lt;init&gt;" type="()V"/>
<method name="notifyChanged" type="()V"/>
<method name="notifyInvalidated" type="()V"/>
</class>
<class name="android/database/DataSetObserver">
<method name="&lt;init&gt;" type="()V"/>
<method name="onChanged" type="()V"/>
<method name="onInvalidated" type="()V"/>
</class>
<class name="android/database/MatrixCursor$RowBuilder">
<method name="add" type="(Ljava/lang/Object;)Landroid/database/MatrixCursor$RowBuilder;"/>
</class>
<class name="android/database/MatrixCursor">
<method name="&lt;init&gt;" type="([Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="newRow" type="()Landroid/database/MatrixCursor$RowBuilder;"/>
<method name="addRow" type="([Ljava/lang/Object;)V"/>
<method name="addRow" type="(Ljava/lang/Iterable;)V"/>
<method name="getCount" type="()I"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getShort" type="(I)S"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="isNull" type="(I)Z"/>
</class>
<class name="android/database/MergeCursor">
<method name="&lt;init&gt;" type="([Landroid/database/Cursor;)V"/>
<method name="getCount" type="()I"/>
<method name="onMove" type="(II)Z"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getShort" type="(I)S"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="isNull" type="(I)Z"/>
<method name="getBlob" type="(I)[B"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="deactivate" type="()V"/>
<method name="close" type="()V"/>
<method name="registerContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="requery" type="()Z"/>
</class>
<class name="android/database/Observable">
<method name="&lt;init&gt;" type="()V"/>
<method name="registerObserver" type="(Ljava/lang/Object;)V"/>
<method name="unregisterObserver" type="(Ljava/lang/Object;)V"/>
<method name="unregisterAll" type="()V"/>
</class>
<class name="android/database/SQLException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteAbortException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteClosable">
<method name="&lt;init&gt;" type="()V"/>
<method name="onAllReferencesReleased" type="()V"/>
<method name="onAllReferencesReleasedFromContainer" type="()V"/>
<method name="acquireReference" type="()V"/>
<method name="releaseReference" type="()V"/>
<method name="releaseReferenceFromContainer" type="()V"/>
</class>
<class name="android/database/sqlite/SQLiteConstraintException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteCursor">
<method name="&lt;init&gt;" type="(Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="getDatabase" type="()Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="onMove" type="(II)Z"/>
<method name="getCount" type="()I"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="deactivate" type="()V"/>
<method name="close" type="()V"/>
<method name="requery" type="()Z"/>
<method name="setWindow" type="(Landroid/database/CursorWindow;)V"/>
<method name="setSelectionArguments" type="([Ljava/lang/String;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/database/sqlite/SQLiteDatabase">
<method name="onAllReferencesReleased" type="()V"/>
<method name="releaseMemory" type="()I" class_method="true"/>
<method name="setLockingEnabled" type="(Z)V"/>
<method name="beginTransaction" type="()V"/>
<method name="beginTransactionWithListener" type="(Landroid/database/sqlite/SQLiteTransactionListener;)V"/>
<method name="endTransaction" type="()V"/>
<method name="setTransactionSuccessful" type="()V"/>
<method name="inTransaction" type="()Z"/>
<method name="isDbLockedByCurrentThread" type="()Z"/>
<method name="isDbLockedByOtherThreads" type="()Z"/>
<method name="yieldIfContended" type="()Z"/>
<method name="yieldIfContendedSafely" type="()Z"/>
<method name="yieldIfContendedSafely" type="(J)Z"/>
<method name="getSyncedTables" type="()Ljava/util/Map;"/>
<method name="openDatabase" type="(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;" class_method="true"/>
<method name="openOrCreateDatabase" type="(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;" class_method="true"/>
<method name="openOrCreateDatabase" type="(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;" class_method="true"/>
<method name="create" type="(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;" class_method="true"/>
<method name="close" type="()V"/>
<method name="getVersion" type="()I"/>
<method name="setVersion" type="(I)V"/>
<method name="getMaximumSize" type="()J"/>
<method name="setMaximumSize" type="(J)J"/>
<method name="getPageSize" type="()J"/>
<method name="setPageSize" type="(J)V"/>
<method name="markTableSyncable" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="markTableSyncable" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="findEditTable" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="compileStatement" type="(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;"/>
<method name="query" type="(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="queryWithFactory" type="(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="query" type="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="query" type="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="rawQuery" type="(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="rawQueryWithFactory" type="(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="insert" type="(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J"/>
<method name="insertOrThrow" type="(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J"/>
<method name="replace" type="(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J"/>
<method name="replaceOrThrow" type="(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J"/>
<method name="insertWithOnConflict" type="(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;I)J"/>
<method name="delete" type="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="update" type="(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="updateWithOnConflict" type="(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;I)I"/>
<method name="execSQL" type="(Ljava/lang/String;)V"/>
<method name="execSQL" type="(Ljava/lang/String;[Ljava/lang/Object;)V"/>
<method name="finalize" type="()V"/>
<method name="isReadOnly" type="()Z"/>
<method name="isOpen" type="()Z"/>
<method name="needUpgrade" type="(I)Z"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="setLocale" type="(Ljava/util/Locale;)V"/>
</class>
<class name="android/database/sqlite/SQLiteDatabaseCorruptException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteDiskIOException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteDoneException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteFullException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteMisuseException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteOpenHelper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V"/>
<method name="getWritableDatabase" type="()Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="getReadableDatabase" type="()Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="close" type="()V"/>
<method name="onCreate" type="(Landroid/database/sqlite/SQLiteDatabase;)V"/>
<method name="onUpgrade" type="(Landroid/database/sqlite/SQLiteDatabase;II)V"/>
<method name="onOpen" type="(Landroid/database/sqlite/SQLiteDatabase;)V"/>
</class>
<class name="android/database/sqlite/SQLiteProgram">
<method name="onAllReferencesReleased" type="()V"/>
<method name="onAllReferencesReleasedFromContainer" type="()V"/>
<method name="getUniqueId" type="()I"/>
<method name="compile" type="(Ljava/lang/String;Z)V"/>
<method name="bindNull" type="(I)V"/>
<method name="bindLong" type="(IJ)V"/>
<method name="bindDouble" type="(ID)V"/>
<method name="bindString" type="(ILjava/lang/String;)V"/>
<method name="bindBlob" type="(I[B)V"/>
<method name="clearBindings" type="()V"/>
<method name="close" type="()V"/>
<method name="native_compile" type="(Ljava/lang/String;)V"/>
<method name="native_finalize" type="()V"/>
<method name="native_bind_null" type="(I)V"/>
<method name="native_bind_long" type="(IJ)V"/>
<method name="native_bind_double" type="(ID)V"/>
<method name="native_bind_string" type="(ILjava/lang/String;)V"/>
<method name="native_bind_blob" type="(I[B)V"/>
</class>
<class name="android/database/sqlite/SQLiteQuery">
<method name="toString" type="()Ljava/lang/String;"/>
<method name="close" type="()V"/>
<method name="bindNull" type="(I)V"/>
<method name="bindLong" type="(IJ)V"/>
<method name="bindDouble" type="(ID)V"/>
<method name="bindString" type="(ILjava/lang/String;)V"/>
</class>
<class name="android/database/sqlite/SQLiteQueryBuilder">
<method name="&lt;init&gt;" type="()V"/>
<method name="setDistinct" type="(Z)V"/>
<method name="getTables" type="()Ljava/lang/String;"/>
<method name="setTables" type="(Ljava/lang/String;)V"/>
<method name="appendWhere" type="(Ljava/lang/CharSequence;)V"/>
<method name="appendWhereEscapeString" type="(Ljava/lang/String;)V"/>
<method name="setProjectionMap" type="(Ljava/util/Map;)V"/>
<method name="setCursorFactory" type="(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)V"/>
<method name="buildQueryString" type="(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="appendColumns" type="(Ljava/lang/StringBuilder;[Ljava/lang/String;)V" class_method="true"/>
<method name="query" type="(Landroid/database/sqlite/SQLiteDatabase;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="query" type="(Landroid/database/sqlite/SQLiteDatabase;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="buildQuery" type="([Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="buildUnionSubQuery" type="(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="buildUnionQuery" type="([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="android/database/sqlite/SQLiteStatement">
<method name="execute" type="()V"/>
<method name="executeInsert" type="()J"/>
<method name="simpleQueryForLong" type="()J"/>
<method name="simpleQueryForString" type="()Ljava/lang/String;"/>
</class>
<class name="android/database/StaleDataException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/gesture/Gesture">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getStrokes" type="()Ljava/util/ArrayList;"/>
<method name="getStrokesCount" type="()I"/>
<method name="addStroke" type="(Landroid/gesture/GestureStroke;)V"/>
<method name="getLength" type="()F"/>
<method name="getBoundingBox" type="()Landroid/graphics/RectF;"/>
<method name="toPath" type="()Landroid/graphics/Path;"/>
<method name="toPath" type="(Landroid/graphics/Path;)Landroid/graphics/Path;"/>
<method name="toPath" type="(IIII)Landroid/graphics/Path;"/>
<method name="toPath" type="(Landroid/graphics/Path;IIII)Landroid/graphics/Path;"/>
<method name="getID" type="()J"/>
<method name="toBitmap" type="(IIIII)Landroid/graphics/Bitmap;"/>
<method name="toBitmap" type="(IIII)Landroid/graphics/Bitmap;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/gesture/GestureLibraries">
<method name="fromFile" type="(Ljava/lang/String;)Landroid/gesture/GestureLibrary;" class_method="true"/>
<method name="fromFile" type="(Ljava/io/File;)Landroid/gesture/GestureLibrary;" class_method="true"/>
<method name="fromPrivateFile" type="(Landroid/content/Context;Ljava/lang/String;)Landroid/gesture/GestureLibrary;" class_method="true"/>
<method name="fromRawResource" type="(Landroid/content/Context;I)Landroid/gesture/GestureLibrary;" class_method="true"/>
</class>
<class name="android/gesture/GestureLibrary">
<method name="&lt;init&gt;" type="()V"/>
<method name="save" type="()Z"/>
<method name="load" type="()Z"/>
<method name="isReadOnly" type="()Z"/>
<method name="setOrientationStyle" type="(I)V"/>
<method name="getOrientationStyle" type="()I"/>
<method name="setSequenceType" type="(I)V"/>
<method name="getSequenceType" type="()I"/>
<method name="getGestureEntries" type="()Ljava/util/Set;"/>
<method name="recognize" type="(Landroid/gesture/Gesture;)Ljava/util/ArrayList;"/>
<method name="addGesture" type="(Ljava/lang/String;Landroid/gesture/Gesture;)V"/>
<method name="removeGesture" type="(Ljava/lang/String;Landroid/gesture/Gesture;)V"/>
<method name="removeEntry" type="(Ljava/lang/String;)V"/>
<method name="getGestures" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
</class>
<class name="android/gesture/GestureOverlayView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getCurrentStroke" type="()Ljava/util/ArrayList;"/>
<method name="getOrientation" type="()I"/>
<method name="setOrientation" type="(I)V"/>
<method name="setGestureColor" type="(I)V"/>
<method name="setUncertainGestureColor" type="(I)V"/>
<method name="getUncertainGestureColor" type="()I"/>
<method name="getGestureColor" type="()I"/>
<method name="getGestureStrokeWidth" type="()F"/>
<method name="setGestureStrokeWidth" type="(F)V"/>
<method name="getGestureStrokeType" type="()I"/>
<method name="setGestureStrokeType" type="(I)V"/>
<method name="getGestureStrokeLengthThreshold" type="()F"/>
<method name="setGestureStrokeLengthThreshold" type="(F)V"/>
<method name="getGestureStrokeSquarenessTreshold" type="()F"/>
<method name="setGestureStrokeSquarenessTreshold" type="(F)V"/>
<method name="getGestureStrokeAngleThreshold" type="()F"/>
<method name="setGestureStrokeAngleThreshold" type="(F)V"/>
<method name="isEventsInterceptionEnabled" type="()Z"/>
<method name="setEventsInterceptionEnabled" type="(Z)V"/>
<method name="isFadeEnabled" type="()Z"/>
<method name="setFadeEnabled" type="(Z)V"/>
<method name="getGesture" type="()Landroid/gesture/Gesture;"/>
<method name="setGesture" type="(Landroid/gesture/Gesture;)V"/>
<method name="getGesturePath" type="()Landroid/graphics/Path;"/>
<method name="getGesturePath" type="(Landroid/graphics/Path;)Landroid/graphics/Path;"/>
<method name="isGestureVisible" type="()Z"/>
<method name="setGestureVisible" type="(Z)V"/>
<method name="getFadeOffset" type="()J"/>
<method name="setFadeOffset" type="(J)V"/>
<method name="addOnGestureListener" type="(Landroid/gesture/GestureOverlayView$OnGestureListener;)V"/>
<method name="removeOnGestureListener" type="(Landroid/gesture/GestureOverlayView$OnGestureListener;)V"/>
<method name="removeAllOnGestureListeners" type="()V"/>
<method name="addOnGesturePerformedListener" type="(Landroid/gesture/GestureOverlayView$OnGesturePerformedListener;)V"/>
<method name="removeOnGesturePerformedListener" type="(Landroid/gesture/GestureOverlayView$OnGesturePerformedListener;)V"/>
<method name="removeAllOnGesturePerformedListeners" type="()V"/>
<method name="addOnGesturingListener" type="(Landroid/gesture/GestureOverlayView$OnGesturingListener;)V"/>
<method name="removeOnGesturingListener" type="(Landroid/gesture/GestureOverlayView$OnGesturingListener;)V"/>
<method name="removeAllOnGesturingListeners" type="()V"/>
<method name="isGesturing" type="()Z"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="clear" type="(Z)V"/>
<method name="cancelClearAnimation" type="()V"/>
<method name="cancelGesture" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/gesture/GesturePoint">
<method name="&lt;init&gt;" type="(FFJ)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/gesture/GestureStore">
<method name="&lt;init&gt;" type="()V"/>
<method name="setOrientationStyle" type="(I)V"/>
<method name="getOrientationStyle" type="()I"/>
<method name="setSequenceType" type="(I)V"/>
<method name="getSequenceType" type="()I"/>
<method name="getGestureEntries" type="()Ljava/util/Set;"/>
<method name="recognize" type="(Landroid/gesture/Gesture;)Ljava/util/ArrayList;"/>
<method name="addGesture" type="(Ljava/lang/String;Landroid/gesture/Gesture;)V"/>
<method name="removeGesture" type="(Ljava/lang/String;Landroid/gesture/Gesture;)V"/>
<method name="removeEntry" type="(Ljava/lang/String;)V"/>
<method name="getGestures" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="hasChanged" type="()Z"/>
<method name="save" type="(Ljava/io/OutputStream;)V"/>
<method name="save" type="(Ljava/io/OutputStream;Z)V"/>
<method name="load" type="(Ljava/io/InputStream;)V"/>
<method name="load" type="(Ljava/io/InputStream;Z)V"/>
</class>
<class name="android/gesture/GestureStroke">
<method name="&lt;init&gt;" type="(Ljava/util/ArrayList;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getPath" type="()Landroid/graphics/Path;"/>
<method name="toPath" type="(FFI)Landroid/graphics/Path;"/>
<method name="clearPath" type="()V"/>
<method name="computeOrientedBoundingBox" type="()Landroid/gesture/OrientedBoundingBox;"/>
</class>
<class name="android/gesture/GestureUtils">
<method name="spatialSampling" type="(Landroid/gesture/Gesture;I)[F" class_method="true"/>
<method name="spatialSampling" type="(Landroid/gesture/Gesture;IZ)[F" class_method="true"/>
<method name="temporalSampling" type="(Landroid/gesture/GestureStroke;I)[F" class_method="true"/>
<method name="computeOrientedBoundingBox" type="(Ljava/util/ArrayList;)Landroid/gesture/OrientedBoundingBox;" class_method="true"/>
<method name="computeOrientedBoundingBox" type="([F)Landroid/gesture/OrientedBoundingBox;" class_method="true"/>
</class>
<class name="android/gesture/OrientedBoundingBox">
</class>
<class name="android/gesture/Prediction">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/graphics/AvoidXfermode$Mode">
<method name="values" type="()[Landroid/graphics/AvoidXfermode$Mode;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/AvoidXfermode$Mode;" class_method="true"/>
</class>
<class name="android/graphics/AvoidXfermode">
<method name="&lt;init&gt;" type="(IILandroid/graphics/AvoidXfermode$Mode;)V"/>
</class>
<class name="android/graphics/Bitmap$CompressFormat">
<method name="values" type="()[Landroid/graphics/Bitmap$CompressFormat;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Bitmap$CompressFormat;" class_method="true"/>
</class>
<class name="android/graphics/Bitmap$Config">
<method name="values" type="()[Landroid/graphics/Bitmap$Config;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;" class_method="true"/>
</class>
<class name="android/graphics/Bitmap">
<method name="getDensity" type="()I"/>
<method name="setDensity" type="(I)V"/>
<method name="recycle" type="()V"/>
<method name="isRecycled" type="()Z"/>
<method name="copyPixelsToBuffer" type="(Ljava/nio/Buffer;)V"/>
<method name="copyPixelsFromBuffer" type="(Ljava/nio/Buffer;)V"/>
<method name="copy" type="(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;"/>
<method name="createScaledBitmap" type="(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="createBitmap" type="([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="getNinePatchChunk" type="()[B"/>
<method name="compress" type="(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z"/>
<method name="isMutable" type="()Z"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="getScaledWidth" type="(Landroid/graphics/Canvas;)I"/>
<method name="getScaledHeight" type="(Landroid/graphics/Canvas;)I"/>
<method name="getScaledWidth" type="(Landroid/util/DisplayMetrics;)I"/>
<method name="getScaledHeight" type="(Landroid/util/DisplayMetrics;)I"/>
<method name="getScaledWidth" type="(I)I"/>
<method name="getScaledHeight" type="(I)I"/>
<method name="getRowBytes" type="()I"/>
<method name="getConfig" type="()Landroid/graphics/Bitmap$Config;"/>
<method name="hasAlpha" type="()Z"/>
<method name="eraseColor" type="(I)V"/>
<method name="getPixel" type="(II)I"/>
<method name="getPixels" type="([IIIIIII)V"/>
<method name="setPixel" type="(III)V"/>
<method name="setPixels" type="([IIIIIII)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="extractAlpha" type="()Landroid/graphics/Bitmap;"/>
<method name="extractAlpha" type="(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;"/>
<method name="prepareToDraw" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/BitmapFactory$Options">
<method name="&lt;init&gt;" type="()V"/>
<method name="requestCancelDecode" type="()V"/>
</class>
<class name="android/graphics/BitmapFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="decodeFile" type="(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeFile" type="(Ljava/lang/String;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeResourceStream" type="(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeResource" type="(Landroid/content/res/Resources;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeResource" type="(Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeByteArray" type="([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeByteArray" type="([BII)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeStream" type="(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeStream" type="(Ljava/io/InputStream;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeFileDescriptor" type="(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="decodeFileDescriptor" type="(Ljava/io/FileDescriptor;)Landroid/graphics/Bitmap;" class_method="true"/>
</class>
<class name="android/graphics/BitmapShader">
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;Landroid/graphics/Shader$TileMode;Landroid/graphics/Shader$TileMode;)V"/>
</class>
<class name="android/graphics/BlurMaskFilter$Blur">
<method name="values" type="()[Landroid/graphics/BlurMaskFilter$Blur;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/BlurMaskFilter$Blur;" class_method="true"/>
</class>
<class name="android/graphics/BlurMaskFilter">
<method name="&lt;init&gt;" type="(FLandroid/graphics/BlurMaskFilter$Blur;)V"/>
</class>
<class name="android/graphics/Camera">
<method name="&lt;init&gt;" type="()V"/>
<method name="save" type="()V"/>
<method name="restore" type="()V"/>
<method name="translate" type="(FFF)V"/>
<method name="rotateX" type="(F)V"/>
<method name="rotateY" type="(F)V"/>
<method name="rotateZ" type="(F)V"/>
<method name="getMatrix" type="(Landroid/graphics/Matrix;)V"/>
<method name="applyToCanvas" type="(Landroid/graphics/Canvas;)V"/>
<method name="dotWithNormal" type="(FFF)F"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Canvas$EdgeType">
<method name="values" type="()[Landroid/graphics/Canvas$EdgeType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Canvas$EdgeType;" class_method="true"/>
</class>
<class name="android/graphics/Canvas$VertexMode">
<method name="values" type="()[Landroid/graphics/Canvas$VertexMode;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Canvas$VertexMode;" class_method="true"/>
</class>
<class name="android/graphics/Canvas">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Ljavax/microedition/khronos/opengles/GL;)V"/>
<method name="getGL" type="()Ljavax/microedition/khronos/opengles/GL;"/>
<method name="freeGlCaches" type="()V" class_method="true"/>
<method name="setBitmap" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setViewport" type="(II)V"/>
<method name="isOpaque" type="()Z"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="getDensity" type="()I"/>
<method name="setDensity" type="(I)V"/>
<method name="save" type="()I"/>
<method name="save" type="(I)I"/>
<method name="saveLayer" type="(Landroid/graphics/RectF;Landroid/graphics/Paint;I)I"/>
<method name="saveLayer" type="(FFFFLandroid/graphics/Paint;I)I"/>
<method name="saveLayerAlpha" type="(Landroid/graphics/RectF;II)I"/>
<method name="saveLayerAlpha" type="(FFFFII)I"/>
<method name="restore" type="()V"/>
<method name="getSaveCount" type="()I"/>
<method name="restoreToCount" type="(I)V"/>
<method name="translate" type="(FF)V"/>
<method name="scale" type="(FF)V"/>
<method name="scale" type="(FFFF)V"/>
<method name="rotate" type="(F)V"/>
<method name="rotate" type="(FFF)V"/>
<method name="skew" type="(FF)V"/>
<method name="concat" type="(Landroid/graphics/Matrix;)V"/>
<method name="setMatrix" type="(Landroid/graphics/Matrix;)V"/>
<method name="getMatrix" type="(Landroid/graphics/Matrix;)V"/>
<method name="getMatrix" type="()Landroid/graphics/Matrix;"/>
<method name="clipRect" type="(Landroid/graphics/RectF;Landroid/graphics/Region$Op;)Z"/>
<method name="clipRect" type="(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z"/>
<method name="clipRect" type="(Landroid/graphics/RectF;)Z"/>
<method name="clipRect" type="(Landroid/graphics/Rect;)Z"/>
<method name="clipRect" type="(FFFFLandroid/graphics/Region$Op;)Z"/>
<method name="clipRect" type="(FFFF)Z"/>
<method name="clipRect" type="(IIII)Z"/>
<method name="clipPath" type="(Landroid/graphics/Path;Landroid/graphics/Region$Op;)Z"/>
<method name="clipPath" type="(Landroid/graphics/Path;)Z"/>
<method name="clipRegion" type="(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z"/>
<method name="clipRegion" type="(Landroid/graphics/Region;)Z"/>
<method name="getDrawFilter" type="()Landroid/graphics/DrawFilter;"/>
<method name="setDrawFilter" type="(Landroid/graphics/DrawFilter;)V"/>
<method name="quickReject" type="(Landroid/graphics/RectF;Landroid/graphics/Canvas$EdgeType;)Z"/>
<method name="quickReject" type="(Landroid/graphics/Path;Landroid/graphics/Canvas$EdgeType;)Z"/>
<method name="quickReject" type="(FFFFLandroid/graphics/Canvas$EdgeType;)Z"/>
<method name="getClipBounds" type="(Landroid/graphics/Rect;)Z"/>
<method name="getClipBounds" type="()Landroid/graphics/Rect;"/>
<method name="drawRGB" type="(III)V"/>
<method name="drawARGB" type="(IIII)V"/>
<method name="drawColor" type="(I)V"/>
<method name="drawColor" type="(ILandroid/graphics/PorterDuff$Mode;)V"/>
<method name="drawPaint" type="(Landroid/graphics/Paint;)V"/>
<method name="drawPoints" type="([FIILandroid/graphics/Paint;)V"/>
<method name="drawPoints" type="([FLandroid/graphics/Paint;)V"/>
<method name="drawPoint" type="(FFLandroid/graphics/Paint;)V"/>
<method name="drawLine" type="(FFFFLandroid/graphics/Paint;)V"/>
<method name="drawLines" type="([FIILandroid/graphics/Paint;)V"/>
<method name="drawLines" type="([FLandroid/graphics/Paint;)V"/>
<method name="drawRect" type="(Landroid/graphics/RectF;Landroid/graphics/Paint;)V"/>
<method name="drawRect" type="(Landroid/graphics/Rect;Landroid/graphics/Paint;)V"/>
<method name="drawRect" type="(FFFFLandroid/graphics/Paint;)V"/>
<method name="drawOval" type="(Landroid/graphics/RectF;Landroid/graphics/Paint;)V"/>
<method name="drawCircle" type="(FFFLandroid/graphics/Paint;)V"/>
<method name="drawArc" type="(Landroid/graphics/RectF;FFZLandroid/graphics/Paint;)V"/>
<method name="drawRoundRect" type="(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V"/>
<method name="drawPath" type="(Landroid/graphics/Path;Landroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/RectF;Landroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="([IIIFFIIZLandroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="([IIIIIIIZLandroid/graphics/Paint;)V"/>
<method name="drawBitmap" type="(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V"/>
<method name="drawBitmapMesh" type="(Landroid/graphics/Bitmap;II[FI[IILandroid/graphics/Paint;)V"/>
<method name="drawVertices" type="(Landroid/graphics/Canvas$VertexMode;I[FI[FI[II[SIILandroid/graphics/Paint;)V"/>
<method name="drawText" type="([CIIFFLandroid/graphics/Paint;)V"/>
<method name="drawText" type="(Ljava/lang/String;FFLandroid/graphics/Paint;)V"/>
<method name="drawText" type="(Ljava/lang/String;IIFFLandroid/graphics/Paint;)V"/>
<method name="drawText" type="(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V"/>
<method name="drawPosText" type="([CII[FLandroid/graphics/Paint;)V"/>
<method name="drawPosText" type="(Ljava/lang/String;[FLandroid/graphics/Paint;)V"/>
<method name="drawTextOnPath" type="([CIILandroid/graphics/Path;FFLandroid/graphics/Paint;)V"/>
<method name="drawTextOnPath" type="(Ljava/lang/String;Landroid/graphics/Path;FFLandroid/graphics/Paint;)V"/>
<method name="drawPicture" type="(Landroid/graphics/Picture;)V"/>
<method name="drawPicture" type="(Landroid/graphics/Picture;Landroid/graphics/RectF;)V"/>
<method name="drawPicture" type="(Landroid/graphics/Picture;Landroid/graphics/Rect;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Color">
<method name="&lt;init&gt;" type="()V"/>
<method name="alpha" type="(I)I" class_method="true"/>
<method name="red" type="(I)I" class_method="true"/>
<method name="green" type="(I)I" class_method="true"/>
<method name="blue" type="(I)I" class_method="true"/>
<method name="rgb" type="(III)I" class_method="true"/>
<method name="argb" type="(IIII)I" class_method="true"/>
<method name="parseColor" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="RGBToHSV" type="(III[F)V" class_method="true"/>
<method name="colorToHSV" type="(I[F)V" class_method="true"/>
<method name="HSVToColor" type="([F)I" class_method="true"/>
<method name="HSVToColor" type="(I[F)I" class_method="true"/>
</class>
<class name="android/graphics/ColorFilter">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/ColorMatrix">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="([F)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/ColorMatrix;)V"/>
<method name="getArray" type="()[F"/>
<method name="reset" type="()V"/>
<method name="set" type="(Landroid/graphics/ColorMatrix;)V"/>
<method name="set" type="([F)V"/>
<method name="setScale" type="(FFFF)V"/>
<method name="setRotate" type="(IF)V"/>
<method name="setConcat" type="(Landroid/graphics/ColorMatrix;Landroid/graphics/ColorMatrix;)V"/>
<method name="preConcat" type="(Landroid/graphics/ColorMatrix;)V"/>
<method name="postConcat" type="(Landroid/graphics/ColorMatrix;)V"/>
<method name="setSaturation" type="(F)V"/>
<method name="setRGB2YUV" type="()V"/>
<method name="setYUV2RGB" type="()V"/>
</class>
<class name="android/graphics/ColorMatrixColorFilter">
<method name="&lt;init&gt;" type="(Landroid/graphics/ColorMatrix;)V"/>
<method name="&lt;init&gt;" type="([F)V"/>
</class>
<class name="android/graphics/ComposePathEffect">
<method name="&lt;init&gt;" type="(Landroid/graphics/PathEffect;Landroid/graphics/PathEffect;)V"/>
</class>
<class name="android/graphics/ComposeShader">
<method name="&lt;init&gt;" type="(Landroid/graphics/Shader;Landroid/graphics/Shader;Landroid/graphics/Xfermode;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Shader;Landroid/graphics/Shader;Landroid/graphics/PorterDuff$Mode;)V"/>
</class>
<class name="android/graphics/CornerPathEffect">
<method name="&lt;init&gt;" type="(F)V"/>
</class>
<class name="android/graphics/DashPathEffect">
<method name="&lt;init&gt;" type="([FF)V"/>
</class>
<class name="android/graphics/DiscretePathEffect">
<method name="&lt;init&gt;" type="(FF)V"/>
</class>
<class name="android/graphics/drawable/AnimationDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="isRunning" type="()Z"/>
<method name="run" type="()V"/>
<method name="unscheduleSelf" type="(Ljava/lang/Runnable;)V"/>
<method name="getNumberOfFrames" type="()I"/>
<method name="getFrame" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="getDuration" type="(I)I"/>
<method name="isOneShot" type="()Z"/>
<method name="setOneShot" type="(Z)V"/>
<method name="addFrame" type="(Landroid/graphics/drawable/Drawable;I)V"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/BitmapDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Ljava/io/InputStream;)V"/>
<method name="getPaint" type="()Landroid/graphics/Paint;"/>
<method name="getBitmap" type="()Landroid/graphics/Bitmap;"/>
<method name="setTargetDensity" type="(Landroid/graphics/Canvas;)V"/>
<method name="setTargetDensity" type="(Landroid/util/DisplayMetrics;)V"/>
<method name="setTargetDensity" type="(I)V"/>
<method name="getGravity" type="()I"/>
<method name="setGravity" type="(I)V"/>
<method name="setAntiAlias" type="(Z)V"/>
<method name="setFilterBitmap" type="(Z)V"/>
<method name="setDither" type="(Z)V"/>
<method name="getTileModeX" type="()Landroid/graphics/Shader$TileMode;"/>
<method name="getTileModeY" type="()Landroid/graphics/Shader$TileMode;"/>
<method name="setTileModeX" type="(Landroid/graphics/Shader$TileMode;)V"/>
<method name="setTileModeY" type="(Landroid/graphics/Shader$TileMode;)V"/>
<method name="setTileModeXY" type="(Landroid/graphics/Shader$TileMode;Landroid/graphics/Shader$TileMode;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getOpacity" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
</class>
<class name="android/graphics/drawable/ClipDrawable">
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;II)V"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
</class>
<class name="android/graphics/drawable/ColorDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getAlpha" type="()I"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
</class>
<class name="android/graphics/drawable/Drawable$ConstantState">
<method name="&lt;init&gt;" type="()V"/>
<method name="newDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="newDrawable" type="(Landroid/content/res/Resources;)Landroid/graphics/drawable/Drawable;"/>
<method name="getChangingConfigurations" type="()I"/>
</class>
<class name="android/graphics/drawable/Drawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setBounds" type="(IIII)V"/>
<method name="setBounds" type="(Landroid/graphics/Rect;)V"/>
<method name="copyBounds" type="(Landroid/graphics/Rect;)V"/>
<method name="copyBounds" type="()Landroid/graphics/Rect;"/>
<method name="getBounds" type="()Landroid/graphics/Rect;"/>
<method name="setChangingConfigurations" type="(I)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="setDither" type="(Z)V"/>
<method name="setFilterBitmap" type="(Z)V"/>
<method name="setCallback" type="(Landroid/graphics/drawable/Drawable$Callback;)V"/>
<method name="invalidateSelf" type="()V"/>
<method name="scheduleSelf" type="(Ljava/lang/Runnable;J)V"/>
<method name="unscheduleSelf" type="(Ljava/lang/Runnable;)V"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="setColorFilter" type="(ILandroid/graphics/PorterDuff$Mode;)V"/>
<method name="clearColorFilter" type="()V"/>
<method name="isStateful" type="()Z"/>
<method name="setState" type="([I)Z"/>
<method name="getState" type="()[I"/>
<method name="getCurrent" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setLevel" type="(I)Z"/>
<method name="getLevel" type="()I"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="isVisible" type="()Z"/>
<method name="getOpacity" type="()I"/>
<method name="resolveOpacity" type="(II)I" class_method="true"/>
<method name="getTransparentRegion" type="()Landroid/graphics/Region;"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getMinimumWidth" type="()I"/>
<method name="getMinimumHeight" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="createFromStream" type="(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="createFromResourceStream" type="(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="createFromResourceStream" type="(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="createFromXml" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="createFromXmlInner" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="createFromPath" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" class_method="true"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
</class>
<class name="android/graphics/drawable/DrawableContainer$DrawableContainerState">
<method name="getChangingConfigurations" type="()I"/>
<method name="addChild" type="(Landroid/graphics/drawable/Drawable;)I"/>
<method name="getChildCount" type="()I"/>
<method name="getChildren" type="()[Landroid/graphics/drawable/Drawable;"/>
<method name="setVariablePadding" type="(Z)V"/>
<method name="getConstantPadding" type="()Landroid/graphics/Rect;"/>
<method name="setConstantSize" type="(Z)V"/>
<method name="isConstantSize" type="()Z"/>
<method name="getConstantWidth" type="()I"/>
<method name="getConstantHeight" type="()I"/>
<method name="getConstantMinimumWidth" type="()I"/>
<method name="getConstantMinimumHeight" type="()I"/>
<method name="getOpacity" type="()I"/>
<method name="isStateful" type="()Z"/>
<method name="growArray" type="(II)V"/>
<method name="canConstantState" type="()Z"/>
</class>
<class name="android/graphics/drawable/DrawableContainer">
<method name="&lt;init&gt;" type="()V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setAlpha" type="(I)V"/>
<method name="setDither" type="(Z)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getMinimumWidth" type="()I"/>
<method name="getMinimumHeight" type="()I"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="getOpacity" type="()I"/>
<method name="selectDrawable" type="(I)Z"/>
<method name="getCurrent" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setConstantState" type="(Landroid/graphics/drawable/DrawableContainer$DrawableContainerState;)V"/>
</class>
<class name="android/graphics/drawable/GradientDrawable$Orientation">
<method name="values" type="()[Landroid/graphics/drawable/GradientDrawable$Orientation;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/drawable/GradientDrawable$Orientation;" class_method="true"/>
</class>
<class name="android/graphics/drawable/GradientDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/GradientDrawable$Orientation;[I)V"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setCornerRadii" type="([F)V"/>
<method name="setCornerRadius" type="(F)V"/>
<method name="setStroke" type="(II)V"/>
<method name="setStroke" type="(IIFF)V"/>
<method name="setSize" type="(II)V"/>
<method name="setShape" type="(I)V"/>
<method name="setGradientType" type="(I)V"/>
<method name="setGradientCenter" type="(FF)V"/>
<method name="setGradientRadius" type="(F)V"/>
<method name="setUseLevel" type="(Z)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setColor" type="(I)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="setAlpha" type="(I)V"/>
<method name="setDither" type="(Z)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/InsetDrawable">
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;IIII)V"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/LayerDrawable">
<method name="&lt;init&gt;" type="([Landroid/graphics/drawable/Drawable;)V"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="findDrawableByLayerId" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="setId" type="(II)V"/>
<method name="getNumberOfLayers" type="()I"/>
<method name="getDrawable" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="getId" type="(I)I"/>
<method name="setDrawableByLayerId" type="(ILandroid/graphics/drawable/Drawable;)Z"/>
<method name="setLayerInset" type="(IIIII)V"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="setDither" type="(Z)V"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/LevelListDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="addLevel" type="(IILandroid/graphics/drawable/Drawable;)V"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/NinePatchDrawable">
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;[BLandroid/graphics/Rect;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Landroid/graphics/Bitmap;[BLandroid/graphics/Rect;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/NinePatch;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Landroid/graphics/NinePatch;)V"/>
<method name="setTargetDensity" type="(Landroid/graphics/Canvas;)V"/>
<method name="setTargetDensity" type="(Landroid/util/DisplayMetrics;)V"/>
<method name="setTargetDensity" type="(I)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="setDither" type="(Z)V"/>
<method name="setFilterBitmap" type="(Z)V"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getPaint" type="()Landroid/graphics/Paint;"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getMinimumWidth" type="()I"/>
<method name="getMinimumHeight" type="()I"/>
<method name="getOpacity" type="()I"/>
<method name="getTransparentRegion" type="()Landroid/graphics/Region;"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/PaintDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="setCornerRadius" type="(F)V"/>
<method name="setCornerRadii" type="([F)V"/>
<method name="inflateTag" type="(Ljava/lang/String;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Z"/>
</class>
<class name="android/graphics/drawable/PictureDrawable">
<method name="&lt;init&gt;" type="(Landroid/graphics/Picture;)V"/>
<method name="getPicture" type="()Landroid/graphics/Picture;"/>
<method name="setPicture" type="(Landroid/graphics/Picture;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getOpacity" type="()I"/>
<method name="setFilterBitmap" type="(Z)V"/>
<method name="setDither" type="(Z)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="setAlpha" type="(I)V"/>
</class>
<class name="android/graphics/drawable/RotateDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/ScaleDrawable">
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;IFF)V"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="setVisible" type="(ZZ)Z"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="onLevelChange" type="(I)Z"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/ShapeDrawable$ShaderFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="resize" type="(II)Landroid/graphics/Shader;"/>
</class>
<class name="android/graphics/drawable/ShapeDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/shapes/Shape;)V"/>
<method name="getShape" type="()Landroid/graphics/drawable/shapes/Shape;"/>
<method name="setShape" type="(Landroid/graphics/drawable/shapes/Shape;)V"/>
<method name="setShaderFactory" type="(Landroid/graphics/drawable/ShapeDrawable$ShaderFactory;)V"/>
<method name="getShaderFactory" type="()Landroid/graphics/drawable/ShapeDrawable$ShaderFactory;"/>
<method name="getPaint" type="()Landroid/graphics/Paint;"/>
<method name="setPadding" type="(IIII)V"/>
<method name="setPadding" type="(Landroid/graphics/Rect;)V"/>
<method name="setIntrinsicWidth" type="(I)V"/>
<method name="setIntrinsicHeight" type="(I)V"/>
<method name="getIntrinsicWidth" type="()I"/>
<method name="getIntrinsicHeight" type="()I"/>
<method name="getPadding" type="(Landroid/graphics/Rect;)Z"/>
<method name="onDraw" type="(Landroid/graphics/drawable/shapes/Shape;Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChangingConfigurations" type="()I"/>
<method name="setAlpha" type="(I)V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="getOpacity" type="()I"/>
<method name="setDither" type="(Z)V"/>
<method name="onBoundsChange" type="(Landroid/graphics/Rect;)V"/>
<method name="inflateTag" type="(Ljava/lang/String;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Z"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="getConstantState" type="()Landroid/graphics/drawable/Drawable$ConstantState;"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/shapes/ArcShape">
<method name="&lt;init&gt;" type="(FF)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
</class>
<class name="android/graphics/drawable/shapes/OvalShape">
<method name="&lt;init&gt;" type="()V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
</class>
<class name="android/graphics/drawable/shapes/PathShape">
<method name="&lt;init&gt;" type="(Landroid/graphics/Path;FF)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
<method name="onResize" type="(FF)V"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/PathShape;"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/Shape;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/graphics/drawable/shapes/RectShape">
<method name="&lt;init&gt;" type="()V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
<method name="onResize" type="(FF)V"/>
<method name="rect" type="()Landroid/graphics/RectF;"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/RectShape;"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/Shape;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/graphics/drawable/shapes/RoundRectShape">
<method name="&lt;init&gt;" type="([FLandroid/graphics/RectF;[F)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
<method name="onResize" type="(FF)V"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/RoundRectShape;"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/RectShape;"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/Shape;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/graphics/drawable/shapes/Shape">
<method name="&lt;init&gt;" type="()V"/>
<method name="getWidth" type="()F"/>
<method name="getHeight" type="()F"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V"/>
<method name="resize" type="(FF)V"/>
<method name="hasAlpha" type="()Z"/>
<method name="onResize" type="(FF)V"/>
<method name="clone" type="()Landroid/graphics/drawable/shapes/Shape;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/graphics/drawable/StateListDrawable">
<method name="&lt;init&gt;" type="()V"/>
<method name="addState" type="([ILandroid/graphics/drawable/Drawable;)V"/>
<method name="isStateful" type="()Z"/>
<method name="onStateChange" type="([I)Z"/>
<method name="inflate" type="(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V"/>
<method name="mutate" type="()Landroid/graphics/drawable/Drawable;"/>
</class>
<class name="android/graphics/drawable/TransitionDrawable">
<method name="&lt;init&gt;" type="([Landroid/graphics/drawable/Drawable;)V"/>
<method name="startTransition" type="(I)V"/>
<method name="resetTransition" type="()V"/>
<method name="reverseTransition" type="(I)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setCrossFadeEnabled" type="(Z)V"/>
<method name="isCrossFadeEnabled" type="()Z"/>
</class>
<class name="android/graphics/DrawFilter">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/EmbossMaskFilter">
<method name="&lt;init&gt;" type="([FFFF)V"/>
</class>
<class name="android/graphics/ImageFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="getBitsPerPixel" type="(I)I" class_method="true"/>
</class>
<class name="android/graphics/Interpolator$Result">
<method name="values" type="()[Landroid/graphics/Interpolator$Result;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Interpolator$Result;" class_method="true"/>
</class>
<class name="android/graphics/Interpolator">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="reset" type="(I)V"/>
<method name="reset" type="(II)V"/>
<method name="getKeyFrameCount" type="()I"/>
<method name="getValueCount" type="()I"/>
<method name="setKeyFrame" type="(II[F)V"/>
<method name="setKeyFrame" type="(II[F[F)V"/>
<method name="setRepeatMirror" type="(FZ)V"/>
<method name="timeToValues" type="([F)Landroid/graphics/Interpolator$Result;"/>
<method name="timeToValues" type="(I[F)Landroid/graphics/Interpolator$Result;"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/LayerRasterizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="addLayer" type="(Landroid/graphics/Paint;FF)V"/>
<method name="addLayer" type="(Landroid/graphics/Paint;)V"/>
</class>
<class name="android/graphics/LightingColorFilter">
<method name="&lt;init&gt;" type="(II)V"/>
</class>
<class name="android/graphics/LinearGradient">
<method name="&lt;init&gt;" type="(FFFF[I[FLandroid/graphics/Shader$TileMode;)V"/>
<method name="&lt;init&gt;" type="(FFFFIILandroid/graphics/Shader$TileMode;)V"/>
</class>
<class name="android/graphics/MaskFilter">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Matrix$ScaleToFit">
<method name="values" type="()[Landroid/graphics/Matrix$ScaleToFit;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Matrix$ScaleToFit;" class_method="true"/>
</class>
<class name="android/graphics/Matrix">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Matrix;)V"/>
<method name="isIdentity" type="()Z"/>
<method name="rectStaysRect" type="()Z"/>
<method name="set" type="(Landroid/graphics/Matrix;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="reset" type="()V"/>
<method name="setTranslate" type="(FF)V"/>
<method name="setScale" type="(FFFF)V"/>
<method name="setScale" type="(FF)V"/>
<method name="setRotate" type="(FFF)V"/>
<method name="setRotate" type="(F)V"/>
<method name="setSinCos" type="(FFFF)V"/>
<method name="setSinCos" type="(FF)V"/>
<method name="setSkew" type="(FFFF)V"/>
<method name="setSkew" type="(FF)V"/>
<method name="setConcat" type="(Landroid/graphics/Matrix;Landroid/graphics/Matrix;)Z"/>
<method name="preTranslate" type="(FF)Z"/>
<method name="preScale" type="(FFFF)Z"/>
<method name="preScale" type="(FF)Z"/>
<method name="preRotate" type="(FFF)Z"/>
<method name="preRotate" type="(F)Z"/>
<method name="preSkew" type="(FFFF)Z"/>
<method name="preSkew" type="(FF)Z"/>
<method name="preConcat" type="(Landroid/graphics/Matrix;)Z"/>
<method name="postTranslate" type="(FF)Z"/>
<method name="postScale" type="(FFFF)Z"/>
<method name="postScale" type="(FF)Z"/>
<method name="postRotate" type="(FFF)Z"/>
<method name="postRotate" type="(F)Z"/>
<method name="postSkew" type="(FFFF)Z"/>
<method name="postSkew" type="(FF)Z"/>
<method name="postConcat" type="(Landroid/graphics/Matrix;)Z"/>
<method name="setRectToRect" type="(Landroid/graphics/RectF;Landroid/graphics/RectF;Landroid/graphics/Matrix$ScaleToFit;)Z"/>
<method name="setPolyToPoly" type="([FI[FII)Z"/>
<method name="invert" type="(Landroid/graphics/Matrix;)Z"/>
<method name="mapPoints" type="([FI[FII)V"/>
<method name="mapVectors" type="([FI[FII)V"/>
<method name="mapPoints" type="([F[F)V"/>
<method name="mapVectors" type="([F[F)V"/>
<method name="mapPoints" type="([F)V"/>
<method name="mapVectors" type="([F)V"/>
<method name="mapRect" type="(Landroid/graphics/RectF;Landroid/graphics/RectF;)Z"/>
<method name="mapRect" type="(Landroid/graphics/RectF;)Z"/>
<method name="mapRadius" type="(F)F"/>
<method name="getValues" type="([F)V"/>
<method name="setValues" type="([F)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toShortString" type="()Ljava/lang/String;"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Movie">
<method name="width" type="()I"/>
<method name="height" type="()I"/>
<method name="isOpaque" type="()Z"/>
<method name="duration" type="()I"/>
<method name="setTime" type="(I)Z"/>
<method name="draw" type="(Landroid/graphics/Canvas;FFLandroid/graphics/Paint;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;FF)V"/>
<method name="decodeStream" type="(Ljava/io/InputStream;)Landroid/graphics/Movie;" class_method="true"/>
<method name="decodeByteArray" type="([BII)Landroid/graphics/Movie;" class_method="true"/>
<method name="decodeFile" type="(Ljava/lang/String;)Landroid/graphics/Movie;" class_method="true"/>
</class>
<class name="android/graphics/NinePatch">
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;[BLjava/lang/String;)V"/>
<method name="setPaint" type="(Landroid/graphics/Paint;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/RectF;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Rect;Landroid/graphics/Paint;)V"/>
<method name="getDensity" type="()I"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="hasAlpha" type="()Z"/>
<method name="getTransparentRegion" type="(Landroid/graphics/Rect;)Landroid/graphics/Region;"/>
<method name="isNinePatchChunk" type="([B)Z" class_method="true"/>
</class>
<class name="android/graphics/Paint$Align">
<method name="values" type="()[Landroid/graphics/Paint$Align;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Paint$Align;" class_method="true"/>
</class>
<class name="android/graphics/Paint$Cap">
<method name="values" type="()[Landroid/graphics/Paint$Cap;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Paint$Cap;" class_method="true"/>
</class>
<class name="android/graphics/Paint$FontMetrics">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/graphics/Paint$FontMetricsInt">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/graphics/Paint$Join">
<method name="values" type="()[Landroid/graphics/Paint$Join;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Paint$Join;" class_method="true"/>
</class>
<class name="android/graphics/Paint$Style">
<method name="values" type="()[Landroid/graphics/Paint$Style;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Paint$Style;" class_method="true"/>
</class>
<class name="android/graphics/Paint">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Paint;)V"/>
<method name="reset" type="()V"/>
<method name="set" type="(Landroid/graphics/Paint;)V"/>
<method name="getFlags" type="()I"/>
<method name="setFlags" type="(I)V"/>
<method name="isAntiAlias" type="()Z"/>
<method name="setAntiAlias" type="(Z)V"/>
<method name="isDither" type="()Z"/>
<method name="setDither" type="(Z)V"/>
<method name="isLinearText" type="()Z"/>
<method name="setLinearText" type="(Z)V"/>
<method name="isSubpixelText" type="()Z"/>
<method name="setSubpixelText" type="(Z)V"/>
<method name="isUnderlineText" type="()Z"/>
<method name="setUnderlineText" type="(Z)V"/>
<method name="isStrikeThruText" type="()Z"/>
<method name="setStrikeThruText" type="(Z)V"/>
<method name="isFakeBoldText" type="()Z"/>
<method name="setFakeBoldText" type="(Z)V"/>
<method name="isFilterBitmap" type="()Z"/>
<method name="setFilterBitmap" type="(Z)V"/>
<method name="getStyle" type="()Landroid/graphics/Paint$Style;"/>
<method name="setStyle" type="(Landroid/graphics/Paint$Style;)V"/>
<method name="getColor" type="()I"/>
<method name="setColor" type="(I)V"/>
<method name="getAlpha" type="()I"/>
<method name="setAlpha" type="(I)V"/>
<method name="setARGB" type="(IIII)V"/>
<method name="getStrokeWidth" type="()F"/>
<method name="setStrokeWidth" type="(F)V"/>
<method name="getStrokeMiter" type="()F"/>
<method name="setStrokeMiter" type="(F)V"/>
<method name="getStrokeCap" type="()Landroid/graphics/Paint$Cap;"/>
<method name="setStrokeCap" type="(Landroid/graphics/Paint$Cap;)V"/>
<method name="getStrokeJoin" type="()Landroid/graphics/Paint$Join;"/>
<method name="setStrokeJoin" type="(Landroid/graphics/Paint$Join;)V"/>
<method name="getFillPath" type="(Landroid/graphics/Path;Landroid/graphics/Path;)Z"/>
<method name="getShader" type="()Landroid/graphics/Shader;"/>
<method name="setShader" type="(Landroid/graphics/Shader;)Landroid/graphics/Shader;"/>
<method name="getColorFilter" type="()Landroid/graphics/ColorFilter;"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;"/>
<method name="getXfermode" type="()Landroid/graphics/Xfermode;"/>
<method name="setXfermode" type="(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;"/>
<method name="getPathEffect" type="()Landroid/graphics/PathEffect;"/>
<method name="setPathEffect" type="(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;"/>
<method name="getMaskFilter" type="()Landroid/graphics/MaskFilter;"/>
<method name="setMaskFilter" type="(Landroid/graphics/MaskFilter;)Landroid/graphics/MaskFilter;"/>
<method name="getTypeface" type="()Landroid/graphics/Typeface;"/>
<method name="setTypeface" type="(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;"/>
<method name="getRasterizer" type="()Landroid/graphics/Rasterizer;"/>
<method name="setRasterizer" type="(Landroid/graphics/Rasterizer;)Landroid/graphics/Rasterizer;"/>
<method name="setShadowLayer" type="(FFFI)V"/>
<method name="clearShadowLayer" type="()V"/>
<method name="getTextAlign" type="()Landroid/graphics/Paint$Align;"/>
<method name="setTextAlign" type="(Landroid/graphics/Paint$Align;)V"/>
<method name="getTextSize" type="()F"/>
<method name="setTextSize" type="(F)V"/>
<method name="getTextScaleX" type="()F"/>
<method name="setTextScaleX" type="(F)V"/>
<method name="getTextSkewX" type="()F"/>
<method name="setTextSkewX" type="(F)V"/>
<method name="ascent" type="()F"/>
<method name="descent" type="()F"/>
<method name="getFontMetrics" type="(Landroid/graphics/Paint$FontMetrics;)F"/>
<method name="getFontMetrics" type="()Landroid/graphics/Paint$FontMetrics;"/>
<method name="getFontMetricsInt" type="(Landroid/graphics/Paint$FontMetricsInt;)I"/>
<method name="getFontMetricsInt" type="()Landroid/graphics/Paint$FontMetricsInt;"/>
<method name="getFontSpacing" type="()F"/>
<method name="measureText" type="([CII)F"/>
<method name="measureText" type="(Ljava/lang/String;II)F"/>
<method name="measureText" type="(Ljava/lang/String;)F"/>
<method name="measureText" type="(Ljava/lang/CharSequence;II)F"/>
<method name="breakText" type="([CIIF[F)I"/>
<method name="breakText" type="(Ljava/lang/CharSequence;IIZF[F)I"/>
<method name="breakText" type="(Ljava/lang/String;ZF[F)I"/>
<method name="getTextWidths" type="([CII[F)I"/>
<method name="getTextWidths" type="(Ljava/lang/CharSequence;II[F)I"/>
<method name="getTextWidths" type="(Ljava/lang/String;II[F)I"/>
<method name="getTextWidths" type="(Ljava/lang/String;[F)I"/>
<method name="getTextPath" type="([CIIFFLandroid/graphics/Path;)V"/>
<method name="getTextPath" type="(Ljava/lang/String;IIFFLandroid/graphics/Path;)V"/>
<method name="getTextBounds" type="(Ljava/lang/String;IILandroid/graphics/Rect;)V"/>
<method name="getTextBounds" type="([CIILandroid/graphics/Rect;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/PaintFlagsDrawFilter">
<method name="&lt;init&gt;" type="(II)V"/>
</class>
<class name="android/graphics/Path$Direction">
<method name="values" type="()[Landroid/graphics/Path$Direction;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Path$Direction;" class_method="true"/>
</class>
<class name="android/graphics/Path$FillType">
<method name="values" type="()[Landroid/graphics/Path$FillType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Path$FillType;" class_method="true"/>
</class>
<class name="android/graphics/Path">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Path;)V"/>
<method name="reset" type="()V"/>
<method name="rewind" type="()V"/>
<method name="set" type="(Landroid/graphics/Path;)V"/>
<method name="getFillType" type="()Landroid/graphics/Path$FillType;"/>
<method name="setFillType" type="(Landroid/graphics/Path$FillType;)V"/>
<method name="isInverseFillType" type="()Z"/>
<method name="toggleInverseFillType" type="()V"/>
<method name="isEmpty" type="()Z"/>
<method name="isRect" type="(Landroid/graphics/RectF;)Z"/>
<method name="computeBounds" type="(Landroid/graphics/RectF;Z)V"/>
<method name="incReserve" type="(I)V"/>
<method name="moveTo" type="(FF)V"/>
<method name="rMoveTo" type="(FF)V"/>
<method name="lineTo" type="(FF)V"/>
<method name="rLineTo" type="(FF)V"/>
<method name="quadTo" type="(FFFF)V"/>
<method name="rQuadTo" type="(FFFF)V"/>
<method name="cubicTo" type="(FFFFFF)V"/>
<method name="rCubicTo" type="(FFFFFF)V"/>
<method name="arcTo" type="(Landroid/graphics/RectF;FFZ)V"/>
<method name="arcTo" type="(Landroid/graphics/RectF;FF)V"/>
<method name="close" type="()V"/>
<method name="addRect" type="(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V"/>
<method name="addRect" type="(FFFFLandroid/graphics/Path$Direction;)V"/>
<method name="addOval" type="(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V"/>
<method name="addCircle" type="(FFFLandroid/graphics/Path$Direction;)V"/>
<method name="addArc" type="(Landroid/graphics/RectF;FF)V"/>
<method name="addRoundRect" type="(Landroid/graphics/RectF;FFLandroid/graphics/Path$Direction;)V"/>
<method name="addRoundRect" type="(Landroid/graphics/RectF;[FLandroid/graphics/Path$Direction;)V"/>
<method name="addPath" type="(Landroid/graphics/Path;FF)V"/>
<method name="addPath" type="(Landroid/graphics/Path;)V"/>
<method name="addPath" type="(Landroid/graphics/Path;Landroid/graphics/Matrix;)V"/>
<method name="offset" type="(FFLandroid/graphics/Path;)V"/>
<method name="offset" type="(FF)V"/>
<method name="setLastPoint" type="(FF)V"/>
<method name="transform" type="(Landroid/graphics/Matrix;Landroid/graphics/Path;)V"/>
<method name="transform" type="(Landroid/graphics/Matrix;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/PathDashPathEffect$Style">
<method name="values" type="()[Landroid/graphics/PathDashPathEffect$Style;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/PathDashPathEffect$Style;" class_method="true"/>
</class>
<class name="android/graphics/PathDashPathEffect">
<method name="&lt;init&gt;" type="(Landroid/graphics/Path;FFLandroid/graphics/PathDashPathEffect$Style;)V"/>
</class>
<class name="android/graphics/PathEffect">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/PathMeasure">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Path;Z)V"/>
<method name="setPath" type="(Landroid/graphics/Path;Z)V"/>
<method name="getLength" type="()F"/>
<method name="getPosTan" type="(F[F[F)Z"/>
<method name="getMatrix" type="(FLandroid/graphics/Matrix;I)Z"/>
<method name="getSegment" type="(FFLandroid/graphics/Path;Z)Z"/>
<method name="isClosed" type="()Z"/>
<method name="nextContour" type="()Z"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Picture">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Picture;)V"/>
<method name="beginRecording" type="(II)Landroid/graphics/Canvas;"/>
<method name="endRecording" type="()V"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="createFromStream" type="(Ljava/io/InputStream;)Landroid/graphics/Picture;" class_method="true"/>
<method name="writeToStream" type="(Ljava/io/OutputStream;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/PixelFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="getPixelFormatInfo" type="(ILandroid/graphics/PixelFormat;)V" class_method="true"/>
<method name="formatHasAlpha" type="(I)Z" class_method="true"/>
</class>
<class name="android/graphics/PixelXorXfermode">
<method name="&lt;init&gt;" type="(I)V"/>
</class>
<class name="android/graphics/Point">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Point;)V"/>
<method name="set" type="(II)V"/>
<method name="negate" type="()V"/>
<method name="offset" type="(II)V"/>
<method name="equals" type="(II)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/graphics/PointF">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(FF)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Point;)V"/>
<method name="set" type="(FF)V"/>
<method name="set" type="(Landroid/graphics/PointF;)V"/>
<method name="negate" type="()V"/>
<method name="offset" type="(FF)V"/>
<method name="equals" type="(FF)Z"/>
<method name="length" type="()F"/>
<method name="length" type="(FF)F" class_method="true"/>
</class>
<class name="android/graphics/PorterDuff$Mode">
<method name="values" type="()[Landroid/graphics/PorterDuff$Mode;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/PorterDuff$Mode;" class_method="true"/>
</class>
<class name="android/graphics/PorterDuff">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/graphics/PorterDuffColorFilter">
<method name="&lt;init&gt;" type="(ILandroid/graphics/PorterDuff$Mode;)V"/>
</class>
<class name="android/graphics/PorterDuffXfermode">
<method name="&lt;init&gt;" type="(Landroid/graphics/PorterDuff$Mode;)V"/>
</class>
<class name="android/graphics/RadialGradient">
<method name="&lt;init&gt;" type="(FFF[I[FLandroid/graphics/Shader$TileMode;)V"/>
<method name="&lt;init&gt;" type="(FFFIILandroid/graphics/Shader$TileMode;)V"/>
</class>
<class name="android/graphics/Rasterizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Rect">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(IIII)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Rect;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toShortString" type="()Ljava/lang/String;"/>
<method name="flattenToString" type="()Ljava/lang/String;"/>
<method name="unflattenFromString" type="(Ljava/lang/String;)Landroid/graphics/Rect;" class_method="true"/>
<method name="isEmpty" type="()Z"/>
<method name="width" type="()I"/>
<method name="height" type="()I"/>
<method name="centerX" type="()I"/>
<method name="centerY" type="()I"/>
<method name="exactCenterX" type="()F"/>
<method name="exactCenterY" type="()F"/>
<method name="setEmpty" type="()V"/>
<method name="set" type="(IIII)V"/>
<method name="set" type="(Landroid/graphics/Rect;)V"/>
<method name="offset" type="(II)V"/>
<method name="offsetTo" type="(II)V"/>
<method name="inset" type="(II)V"/>
<method name="contains" type="(II)Z"/>
<method name="contains" type="(IIII)Z"/>
<method name="contains" type="(Landroid/graphics/Rect;)Z"/>
<method name="intersect" type="(IIII)Z"/>
<method name="intersect" type="(Landroid/graphics/Rect;)Z"/>
<method name="setIntersect" type="(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z"/>
<method name="intersects" type="(IIII)Z"/>
<method name="intersects" type="(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z" class_method="true"/>
<method name="union" type="(IIII)V"/>
<method name="union" type="(Landroid/graphics/Rect;)V"/>
<method name="union" type="(II)V"/>
<method name="sort" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/graphics/RectF">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(FFFF)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/RectF;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Rect;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isEmpty" type="()Z"/>
<method name="width" type="()F"/>
<method name="height" type="()F"/>
<method name="centerX" type="()F"/>
<method name="centerY" type="()F"/>
<method name="setEmpty" type="()V"/>
<method name="set" type="(FFFF)V"/>
<method name="set" type="(Landroid/graphics/RectF;)V"/>
<method name="set" type="(Landroid/graphics/Rect;)V"/>
<method name="offset" type="(FF)V"/>
<method name="offsetTo" type="(FF)V"/>
<method name="inset" type="(FF)V"/>
<method name="contains" type="(FF)Z"/>
<method name="contains" type="(FFFF)Z"/>
<method name="contains" type="(Landroid/graphics/RectF;)Z"/>
<method name="intersect" type="(FFFF)Z"/>
<method name="intersect" type="(Landroid/graphics/RectF;)Z"/>
<method name="setIntersect" type="(Landroid/graphics/RectF;Landroid/graphics/RectF;)Z"/>
<method name="intersects" type="(FFFF)Z"/>
<method name="intersects" type="(Landroid/graphics/RectF;Landroid/graphics/RectF;)Z" class_method="true"/>
<method name="round" type="(Landroid/graphics/Rect;)V"/>
<method name="roundOut" type="(Landroid/graphics/Rect;)V"/>
<method name="union" type="(FFFF)V"/>
<method name="union" type="(Landroid/graphics/RectF;)V"/>
<method name="union" type="(FF)V"/>
<method name="sort" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/graphics/Region$Op">
<method name="values" type="()[Landroid/graphics/Region$Op;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Region$Op;" class_method="true"/>
</class>
<class name="android/graphics/Region">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Region;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Rect;)V"/>
<method name="&lt;init&gt;" type="(IIII)V"/>
<method name="setEmpty" type="()V"/>
<method name="set" type="(Landroid/graphics/Region;)Z"/>
<method name="set" type="(Landroid/graphics/Rect;)Z"/>
<method name="set" type="(IIII)Z"/>
<method name="setPath" type="(Landroid/graphics/Path;Landroid/graphics/Region;)Z"/>
<method name="isEmpty" type="()Z"/>
<method name="isRect" type="()Z"/>
<method name="isComplex" type="()Z"/>
<method name="getBounds" type="()Landroid/graphics/Rect;"/>
<method name="getBounds" type="(Landroid/graphics/Rect;)Z"/>
<method name="getBoundaryPath" type="()Landroid/graphics/Path;"/>
<method name="getBoundaryPath" type="(Landroid/graphics/Path;)Z"/>
<method name="contains" type="(II)Z"/>
<method name="quickContains" type="(Landroid/graphics/Rect;)Z"/>
<method name="quickContains" type="(IIII)Z"/>
<method name="quickReject" type="(Landroid/graphics/Rect;)Z"/>
<method name="quickReject" type="(IIII)Z"/>
<method name="quickReject" type="(Landroid/graphics/Region;)Z"/>
<method name="translate" type="(II)V"/>
<method name="translate" type="(IILandroid/graphics/Region;)V"/>
<method name="union" type="(Landroid/graphics/Rect;)Z"/>
<method name="op" type="(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z"/>
<method name="op" type="(IIIILandroid/graphics/Region$Op;)Z"/>
<method name="op" type="(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z"/>
<method name="op" type="(Landroid/graphics/Rect;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z"/>
<method name="op" type="(Landroid/graphics/Region;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/RegionIterator">
<method name="&lt;init&gt;" type="(Landroid/graphics/Region;)V"/>
<method name="next" type="(Landroid/graphics/Rect;)Z"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Shader$TileMode">
<method name="values" type="()[Landroid/graphics/Shader$TileMode;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/graphics/Shader$TileMode;" class_method="true"/>
</class>
<class name="android/graphics/Shader">
<method name="&lt;init&gt;" type="()V"/>
<method name="getLocalMatrix" type="(Landroid/graphics/Matrix;)Z"/>
<method name="setLocalMatrix" type="(Landroid/graphics/Matrix;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/SumPathEffect">
<method name="&lt;init&gt;" type="(Landroid/graphics/PathEffect;Landroid/graphics/PathEffect;)V"/>
</class>
<class name="android/graphics/SweepGradient">
<method name="&lt;init&gt;" type="(FF[I[F)V"/>
<method name="&lt;init&gt;" type="(FFII)V"/>
</class>
<class name="android/graphics/Typeface">
<method name="getStyle" type="()I"/>
<method name="isBold" type="()Z"/>
<method name="isItalic" type="()Z"/>
<method name="create" type="(Ljava/lang/String;I)Landroid/graphics/Typeface;" class_method="true"/>
<method name="create" type="(Landroid/graphics/Typeface;I)Landroid/graphics/Typeface;" class_method="true"/>
<method name="defaultFromStyle" type="(I)Landroid/graphics/Typeface;" class_method="true"/>
<method name="createFromAsset" type="(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/Typeface;" class_method="true"/>
<method name="createFromFile" type="(Ljava/io/File;)Landroid/graphics/Typeface;" class_method="true"/>
<method name="createFromFile" type="(Ljava/lang/String;)Landroid/graphics/Typeface;" class_method="true"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/Xfermode">
<method name="&lt;init&gt;" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/graphics/YuvImage">
<method name="&lt;init&gt;" type="([BIII[I)V"/>
<method name="compressToJpeg" type="(Landroid/graphics/Rect;ILjava/io/OutputStream;)Z"/>
<method name="getYuvData" type="()[B"/>
<method name="getYuvFormat" type="()I"/>
<method name="getStrides" type="()[I"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
</class>
<class name="android/hardware/Camera$CameraInfo">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/hardware/Camera$Parameters">
<method name="flatten" type="()Ljava/lang/String;"/>
<method name="unflatten" type="(Ljava/lang/String;)V"/>
<method name="remove" type="(Ljava/lang/String;)V"/>
<method name="set" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="set" type="(Ljava/lang/String;I)V"/>
<method name="get" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getInt" type="(Ljava/lang/String;)I"/>
<method name="setPreviewSize" type="(II)V"/>
<method name="getPreviewSize" type="()Landroid/hardware/Camera$Size;"/>
<method name="getSupportedPreviewSizes" type="()Ljava/util/List;"/>
<method name="setJpegThumbnailSize" type="(II)V"/>
<method name="getJpegThumbnailSize" type="()Landroid/hardware/Camera$Size;"/>
<method name="getSupportedJpegThumbnailSizes" type="()Ljava/util/List;"/>
<method name="setJpegThumbnailQuality" type="(I)V"/>
<method name="getJpegThumbnailQuality" type="()I"/>
<method name="setJpegQuality" type="(I)V"/>
<method name="getJpegQuality" type="()I"/>
<method name="setPreviewFrameRate" type="(I)V"/>
<method name="getPreviewFrameRate" type="()I"/>
<method name="getSupportedPreviewFrameRates" type="()Ljava/util/List;"/>
<method name="setPreviewFpsRange" type="(II)V"/>
<method name="getPreviewFpsRange" type="([I)V"/>
<method name="getSupportedPreviewFpsRange" type="()Ljava/util/List;"/>
<method name="setPreviewFormat" type="(I)V"/>
<method name="getPreviewFormat" type="()I"/>
<method name="getSupportedPreviewFormats" type="()Ljava/util/List;"/>
<method name="setPictureSize" type="(II)V"/>
<method name="getPictureSize" type="()Landroid/hardware/Camera$Size;"/>
<method name="getSupportedPictureSizes" type="()Ljava/util/List;"/>
<method name="setPictureFormat" type="(I)V"/>
<method name="getPictureFormat" type="()I"/>
<method name="getSupportedPictureFormats" type="()Ljava/util/List;"/>
<method name="setRotation" type="(I)V"/>
<method name="setGpsLatitude" type="(D)V"/>
<method name="setGpsLongitude" type="(D)V"/>
<method name="setGpsAltitude" type="(D)V"/>
<method name="setGpsTimestamp" type="(J)V"/>
<method name="setGpsProcessingMethod" type="(Ljava/lang/String;)V"/>
<method name="removeGpsData" type="()V"/>
<method name="getWhiteBalance" type="()Ljava/lang/String;"/>
<method name="setWhiteBalance" type="(Ljava/lang/String;)V"/>
<method name="getSupportedWhiteBalance" type="()Ljava/util/List;"/>
<method name="getColorEffect" type="()Ljava/lang/String;"/>
<method name="setColorEffect" type="(Ljava/lang/String;)V"/>
<method name="getSupportedColorEffects" type="()Ljava/util/List;"/>
<method name="getAntibanding" type="()Ljava/lang/String;"/>
<method name="setAntibanding" type="(Ljava/lang/String;)V"/>
<method name="getSupportedAntibanding" type="()Ljava/util/List;"/>
<method name="getSceneMode" type="()Ljava/lang/String;"/>
<method name="setSceneMode" type="(Ljava/lang/String;)V"/>
<method name="getSupportedSceneModes" type="()Ljava/util/List;"/>
<method name="getFlashMode" type="()Ljava/lang/String;"/>
<method name="setFlashMode" type="(Ljava/lang/String;)V"/>
<method name="getSupportedFlashModes" type="()Ljava/util/List;"/>
<method name="getFocusMode" type="()Ljava/lang/String;"/>
<method name="setFocusMode" type="(Ljava/lang/String;)V"/>
<method name="getSupportedFocusModes" type="()Ljava/util/List;"/>
<method name="getFocalLength" type="()F"/>
<method name="getHorizontalViewAngle" type="()F"/>
<method name="getVerticalViewAngle" type="()F"/>
<method name="getExposureCompensation" type="()I"/>
<method name="setExposureCompensation" type="(I)V"/>
<method name="getMaxExposureCompensation" type="()I"/>
<method name="getMinExposureCompensation" type="()I"/>
<method name="getExposureCompensationStep" type="()F"/>
<method name="getZoom" type="()I"/>
<method name="setZoom" type="(I)V"/>
<method name="isZoomSupported" type="()Z"/>
<method name="getMaxZoom" type="()I"/>
<method name="getZoomRatios" type="()Ljava/util/List;"/>
<method name="isSmoothZoomSupported" type="()Z"/>
<method name="getFocusDistances" type="([F)V"/>
</class>
<class name="android/hardware/Camera$Size">
<method name="&lt;init&gt;" type="(Landroid/hardware/Camera;II)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="android/hardware/Camera">
<method name="getNumberOfCameras" type="()I" class_method="true"/>
<method name="getCameraInfo" type="(ILandroid/hardware/Camera$CameraInfo;)V" class_method="true"/>
<method name="open" type="(I)Landroid/hardware/Camera;" class_method="true"/>
<method name="open" type="()Landroid/hardware/Camera;" class_method="true"/>
<method name="finalize" type="()V"/>
<method name="release" type="()V"/>
<method name="unlock" type="()V"/>
<method name="lock" type="()V"/>
<method name="reconnect" type="()V"/>
<method name="setPreviewDisplay" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="startPreview" type="()V"/>
<method name="stopPreview" type="()V"/>
<method name="setPreviewCallback" type="(Landroid/hardware/Camera$PreviewCallback;)V"/>
<method name="setOneShotPreviewCallback" type="(Landroid/hardware/Camera$PreviewCallback;)V"/>
<method name="setPreviewCallbackWithBuffer" type="(Landroid/hardware/Camera$PreviewCallback;)V"/>
<method name="addCallbackBuffer" type="([B)V"/>
<method name="autoFocus" type="(Landroid/hardware/Camera$AutoFocusCallback;)V"/>
<method name="cancelAutoFocus" type="()V"/>
<method name="takePicture" type="(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V"/>
<method name="takePicture" type="(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V"/>
<method name="startSmoothZoom" type="(I)V"/>
<method name="stopSmoothZoom" type="()V"/>
<method name="setDisplayOrientation" type="(I)V"/>
<method name="setZoomChangeListener" type="(Landroid/hardware/Camera$OnZoomChangeListener;)V"/>
<method name="setErrorCallback" type="(Landroid/hardware/Camera$ErrorCallback;)V"/>
<method name="setParameters" type="(Landroid/hardware/Camera$Parameters;)V"/>
<method name="getParameters" type="()Landroid/hardware/Camera$Parameters;"/>
</class>
<class name="android/hardware/GeomagneticField">
<method name="&lt;init&gt;" type="(FFFJ)V"/>
<method name="getX" type="()F"/>
<method name="getY" type="()F"/>
<method name="getZ" type="()F"/>
<method name="getDeclination" type="()F"/>
<method name="getInclination" type="()F"/>
<method name="getHorizontalStrength" type="()F"/>
<method name="getFieldStrength" type="()F"/>
</class>
<class name="android/hardware/Sensor">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getVendor" type="()Ljava/lang/String;"/>
<method name="getType" type="()I"/>
<method name="getVersion" type="()I"/>
<method name="getMaximumRange" type="()F"/>
<method name="getResolution" type="()F"/>
<method name="getPower" type="()F"/>
<method name="getMinDelay" type="()I"/>
</class>
<class name="android/hardware/SensorEvent">
</class>
<class name="android/hardware/SensorManager">
<method name="getSensors" type="()I"/>
<method name="getSensorList" type="(I)Ljava/util/List;"/>
<method name="getDefaultSensor" type="(I)Landroid/hardware/Sensor;"/>
<method name="registerListener" type="(Landroid/hardware/SensorListener;I)Z"/>
<method name="registerListener" type="(Landroid/hardware/SensorListener;II)Z"/>
<method name="unregisterListener" type="(Landroid/hardware/SensorListener;I)V"/>
<method name="unregisterListener" type="(Landroid/hardware/SensorListener;)V"/>
<method name="unregisterListener" type="(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;)V"/>
<method name="unregisterListener" type="(Landroid/hardware/SensorEventListener;)V"/>
<method name="registerListener" type="(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;I)Z"/>
<method name="registerListener" type="(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;ILandroid/os/Handler;)Z"/>
<method name="getRotationMatrix" type="([F[F[F[F)Z" class_method="true"/>
<method name="getInclination" type="([F)F" class_method="true"/>
<method name="remapCoordinateSystem" type="([FII[F)Z" class_method="true"/>
<method name="getOrientation" type="([F[F)[F" class_method="true"/>
<method name="getAltitude" type="(FF)F" class_method="true"/>
<method name="getAngleChange" type="([F[F[F)V" class_method="true"/>
<method name="getRotationMatrixFromVector" type="([F[F)V" class_method="true"/>
<method name="getQuaternionFromVector" type="([F[F)V" class_method="true"/>
</class>
<class name="android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/AbstractInputMethodService;)V"/>
<method name="createSession" type="(Landroid/view/inputmethod/InputMethod$SessionCallback;)V"/>
<method name="setSessionEnabled" type="(Landroid/view/inputmethod/InputMethodSession;Z)V"/>
<method name="revokeSession" type="(Landroid/view/inputmethod/InputMethodSession;)V"/>
</class>
<class name="android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/AbstractInputMethodService;)V"/>
<method name="isEnabled" type="()Z"/>
<method name="isRevoked" type="()Z"/>
<method name="setEnabled" type="(Z)V"/>
<method name="revokeSelf" type="()V"/>
<method name="dispatchKeyEvent" type="(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"/>
<method name="dispatchTrackballEvent" type="(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"/>
</class>
<class name="android/inputmethodservice/AbstractInputMethodService">
<method name="&lt;init&gt;" type="()V"/>
<method name="getKeyDispatcherState" type="()Landroid/view/KeyEvent$DispatcherState;"/>
<method name="onCreateInputMethodInterface" type="()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl;"/>
<method name="onCreateInputMethodSessionInterface" type="()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl;"/>
<method name="dump" type="(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/inputmethodservice/ExtractEditText">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="startInternalChanges" type="()V"/>
<method name="finishInternalChanges" type="()V"/>
<method name="setExtractedText" type="(Landroid/view/inputmethod/ExtractedText;)V"/>
<method name="onSelectionChanged" type="(II)V"/>
<method name="performClick" type="()Z"/>
<method name="onTextContextMenuItem" type="(I)Z"/>
<method name="isInputMethodTarget" type="()Z"/>
<method name="hasVerticalScrollBar" type="()Z"/>
<method name="hasWindowFocus" type="()Z"/>
<method name="isFocused" type="()Z"/>
<method name="hasFocus" type="()Z"/>
</class>
<class name="android/inputmethodservice/InputMethodService$InputMethodImpl">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/InputMethodService;)V"/>
<method name="attachToken" type="(Landroid/os/IBinder;)V"/>
<method name="bindInput" type="(Landroid/view/inputmethod/InputBinding;)V"/>
<method name="unbindInput" type="()V"/>
<method name="startInput" type="(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="restartInput" type="(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="hideSoftInput" type="(ILandroid/os/ResultReceiver;)V"/>
<method name="showSoftInput" type="(ILandroid/os/ResultReceiver;)V"/>
</class>
<class name="android/inputmethodservice/InputMethodService$InputMethodSessionImpl">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/InputMethodService;)V"/>
<method name="finishInput" type="()V"/>
<method name="displayCompletions" type="([Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="updateExtractedText" type="(ILandroid/view/inputmethod/ExtractedText;)V"/>
<method name="updateSelection" type="(IIIIII)V"/>
<method name="updateCursor" type="(Landroid/graphics/Rect;)V"/>
<method name="appPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="toggleSoftInput" type="(II)V"/>
</class>
<class name="android/inputmethodservice/InputMethodService$Insets">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/inputmethodservice/InputMethodService">
<method name="&lt;init&gt;" type="()V"/>
<method name="setTheme" type="(I)V"/>
<method name="onCreate" type="()V"/>
<method name="onInitializeInterface" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onCreateInputMethodInterface" type="()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl;"/>
<method name="onCreateInputMethodSessionInterface" type="()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl;"/>
<method name="getLayoutInflater" type="()Landroid/view/LayoutInflater;"/>
<method name="getWindow" type="()Landroid/app/Dialog;"/>
<method name="getMaxWidth" type="()I"/>
<method name="getCurrentInputBinding" type="()Landroid/view/inputmethod/InputBinding;"/>
<method name="getCurrentInputConnection" type="()Landroid/view/inputmethod/InputConnection;"/>
<method name="getCurrentInputStarted" type="()Z"/>
<method name="getCurrentInputEditorInfo" type="()Landroid/view/inputmethod/EditorInfo;"/>
<method name="updateFullscreenMode" type="()V"/>
<method name="onConfigureWindow" type="(Landroid/view/Window;ZZ)V"/>
<method name="isFullscreenMode" type="()Z"/>
<method name="onEvaluateFullscreenMode" type="()Z"/>
<method name="setExtractViewShown" type="(Z)V"/>
<method name="isExtractViewShown" type="()Z"/>
<method name="onComputeInsets" type="(Landroid/inputmethodservice/InputMethodService$Insets;)V"/>
<method name="updateInputViewShown" type="()V"/>
<method name="isShowInputRequested" type="()Z"/>
<method name="isInputViewShown" type="()Z"/>
<method name="onEvaluateInputViewShown" type="()Z"/>
<method name="setCandidatesViewShown" type="(Z)V"/>
<method name="getCandidatesHiddenVisibility" type="()I"/>
<method name="showStatusIcon" type="(I)V"/>
<method name="hideStatusIcon" type="()V"/>
<method name="switchInputMethod" type="(Ljava/lang/String;)V"/>
<method name="setExtractView" type="(Landroid/view/View;)V"/>
<method name="setCandidatesView" type="(Landroid/view/View;)V"/>
<method name="setInputView" type="(Landroid/view/View;)V"/>
<method name="onCreateExtractTextView" type="()Landroid/view/View;"/>
<method name="onCreateCandidatesView" type="()Landroid/view/View;"/>
<method name="onCreateInputView" type="()Landroid/view/View;"/>
<method name="onStartInputView" type="(Landroid/view/inputmethod/EditorInfo;Z)V"/>
<method name="onFinishInputView" type="(Z)V"/>
<method name="onStartCandidatesView" type="(Landroid/view/inputmethod/EditorInfo;Z)V"/>
<method name="onFinishCandidatesView" type="(Z)V"/>
<method name="onShowInputRequested" type="(IZ)Z"/>
<method name="showWindow" type="(Z)V"/>
<method name="hideWindow" type="()V"/>
<method name="onWindowShown" type="()V"/>
<method name="onWindowHidden" type="()V"/>
<method name="onBindInput" type="()V"/>
<method name="onUnbindInput" type="()V"/>
<method name="onStartInput" type="(Landroid/view/inputmethod/EditorInfo;Z)V"/>
<method name="onFinishInput" type="()V"/>
<method name="onDisplayCompletions" type="([Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="onUpdateExtractedText" type="(ILandroid/view/inputmethod/ExtractedText;)V"/>
<method name="onUpdateSelection" type="(IIIIII)V"/>
<method name="onUpdateCursor" type="(Landroid/graphics/Rect;)V"/>
<method name="requestHideSelf" type="(I)V"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyLongPress" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onAppPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="sendDownUpKeyEvents" type="(I)V"/>
<method name="sendDefaultEditorAction" type="(Z)Z"/>
<method name="sendKeyChar" type="(C)V"/>
<method name="onExtractedSelectionChanged" type="(II)V"/>
<method name="onExtractedTextClicked" type="()V"/>
<method name="onExtractedCursorMovement" type="(II)V"/>
<method name="onExtractTextContextMenuItem" type="(I)Z"/>
<method name="getTextForImeAction" type="(I)Ljava/lang/CharSequence;"/>
<method name="onUpdateExtractingVisibility" type="(Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="onUpdateExtractingViews" type="(Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="onExtractingInputChanged" type="(Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="dump" type="(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V"/>
</class>
<class name="android/inputmethodservice/Keyboard$Key">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/Keyboard$Row;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Landroid/inputmethodservice/Keyboard$Row;IILandroid/content/res/XmlResourceParser;)V"/>
<method name="onPressed" type="()V"/>
<method name="onReleased" type="(Z)V"/>
<method name="isInside" type="(II)Z"/>
<method name="squaredDistanceFrom" type="(II)I"/>
<method name="getCurrentDrawableState" type="()[I"/>
</class>
<class name="android/inputmethodservice/Keyboard$Row">
<method name="&lt;init&gt;" type="(Landroid/inputmethodservice/Keyboard;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/res/Resources;Landroid/inputmethodservice/Keyboard;Landroid/content/res/XmlResourceParser;)V"/>
</class>
<class name="android/inputmethodservice/Keyboard">
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILjava/lang/CharSequence;II)V"/>
<method name="getKeys" type="()Ljava/util/List;"/>
<method name="getModifierKeys" type="()Ljava/util/List;"/>
<method name="getHorizontalGap" type="()I"/>
<method name="setHorizontalGap" type="(I)V"/>
<method name="getVerticalGap" type="()I"/>
<method name="setVerticalGap" type="(I)V"/>
<method name="getKeyHeight" type="()I"/>
<method name="setKeyHeight" type="(I)V"/>
<method name="getKeyWidth" type="()I"/>
<method name="setKeyWidth" type="(I)V"/>
<method name="getHeight" type="()I"/>
<method name="getMinWidth" type="()I"/>
<method name="setShifted" type="(Z)Z"/>
<method name="isShifted" type="()Z"/>
<method name="getShiftKeyIndex" type="()I"/>
<method name="getNearestKeys" type="(II)[I"/>
<method name="createRowFromXml" type="(Landroid/content/res/Resources;Landroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Row;"/>
<method name="createKeyFromXml" type="(Landroid/content/res/Resources;Landroid/inputmethodservice/Keyboard$Row;IILandroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Key;"/>
</class>
<class name="android/inputmethodservice/KeyboardView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOnKeyboardActionListener" type="(Landroid/inputmethodservice/KeyboardView$OnKeyboardActionListener;)V"/>
<method name="getOnKeyboardActionListener" type="()Landroid/inputmethodservice/KeyboardView$OnKeyboardActionListener;"/>
<method name="setKeyboard" type="(Landroid/inputmethodservice/Keyboard;)V"/>
<method name="getKeyboard" type="()Landroid/inputmethodservice/Keyboard;"/>
<method name="setShifted" type="(Z)Z"/>
<method name="isShifted" type="()Z"/>
<method name="setPreviewEnabled" type="(Z)V"/>
<method name="isPreviewEnabled" type="()Z"/>
<method name="setVerticalCorrection" type="(I)V"/>
<method name="setPopupParent" type="(Landroid/view/View;)V"/>
<method name="setPopupOffset" type="(II)V"/>
<method name="setProximityCorrectionEnabled" type="(Z)V"/>
<method name="isProximityCorrectionEnabled" type="()Z"/>
<method name="onMeasure" type="(II)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="invalidateAllKeys" type="()V"/>
<method name="invalidateKey" type="(I)V"/>
<method name="onLongPress" type="(Landroid/inputmethodservice/Keyboard$Key;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="swipeRight" type="()V"/>
<method name="swipeLeft" type="()V"/>
<method name="swipeUp" type="()V"/>
<method name="swipeDown" type="()V"/>
<method name="closing" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="handleBack" type="()Z"/>
<method name="onClick" type="(Landroid/view/View;)V"/>
</class>
<class name="android/location/Address">
<method name="&lt;init&gt;" type="(Ljava/util/Locale;)V"/>
<method name="getLocale" type="()Ljava/util/Locale;"/>
<method name="getMaxAddressLineIndex" type="()I"/>
<method name="getAddressLine" type="(I)Ljava/lang/String;"/>
<method name="setAddressLine" type="(ILjava/lang/String;)V"/>
<method name="getFeatureName" type="()Ljava/lang/String;"/>
<method name="setFeatureName" type="(Ljava/lang/String;)V"/>
<method name="getAdminArea" type="()Ljava/lang/String;"/>
<method name="setAdminArea" type="(Ljava/lang/String;)V"/>
<method name="getSubAdminArea" type="()Ljava/lang/String;"/>
<method name="setSubAdminArea" type="(Ljava/lang/String;)V"/>
<method name="getLocality" type="()Ljava/lang/String;"/>
<method name="setLocality" type="(Ljava/lang/String;)V"/>
<method name="getSubLocality" type="()Ljava/lang/String;"/>
<method name="setSubLocality" type="(Ljava/lang/String;)V"/>
<method name="getThoroughfare" type="()Ljava/lang/String;"/>
<method name="setThoroughfare" type="(Ljava/lang/String;)V"/>
<method name="getSubThoroughfare" type="()Ljava/lang/String;"/>
<method name="setSubThoroughfare" type="(Ljava/lang/String;)V"/>
<method name="getPremises" type="()Ljava/lang/String;"/>
<method name="setPremises" type="(Ljava/lang/String;)V"/>
<method name="getPostalCode" type="()Ljava/lang/String;"/>
<method name="setPostalCode" type="(Ljava/lang/String;)V"/>
<method name="getCountryCode" type="()Ljava/lang/String;"/>
<method name="setCountryCode" type="(Ljava/lang/String;)V"/>
<method name="getCountryName" type="()Ljava/lang/String;"/>
<method name="setCountryName" type="(Ljava/lang/String;)V"/>
<method name="hasLatitude" type="()Z"/>
<method name="getLatitude" type="()D"/>
<method name="setLatitude" type="(D)V"/>
<method name="clearLatitude" type="()V"/>
<method name="hasLongitude" type="()Z"/>
<method name="getLongitude" type="()D"/>
<method name="setLongitude" type="(D)V"/>
<method name="clearLongitude" type="()V"/>
<method name="getPhone" type="()Ljava/lang/String;"/>
<method name="setPhone" type="(Ljava/lang/String;)V"/>
<method name="getUrl" type="()Ljava/lang/String;"/>
<method name="setUrl" type="(Ljava/lang/String;)V"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="setExtras" type="(Landroid/os/Bundle;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/location/Criteria">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/location/Criteria;)V"/>
<method name="setHorizontalAccuracy" type="(I)V"/>
<method name="getHorizontalAccuracy" type="()I"/>
<method name="setVerticalAccuracy" type="(I)V"/>
<method name="getVerticalAccuracy" type="()I"/>
<method name="setSpeedAccuracy" type="(I)V"/>
<method name="getSpeedAccuracy" type="()I"/>
<method name="setBearingAccuracy" type="(I)V"/>
<method name="getBearingAccuracy" type="()I"/>
<method name="setAccuracy" type="(I)V"/>
<method name="getAccuracy" type="()I"/>
<method name="setPowerRequirement" type="(I)V"/>
<method name="getPowerRequirement" type="()I"/>
<method name="setCostAllowed" type="(Z)V"/>
<method name="isCostAllowed" type="()Z"/>
<method name="setAltitudeRequired" type="(Z)V"/>
<method name="isAltitudeRequired" type="()Z"/>
<method name="setSpeedRequired" type="(Z)V"/>
<method name="isSpeedRequired" type="()Z"/>
<method name="setBearingRequired" type="(Z)V"/>
<method name="isBearingRequired" type="()Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/location/Geocoder">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="isPresent" type="()Z" class_method="true"/>
<method name="getFromLocation" type="(DDI)Ljava/util/List;"/>
<method name="getFromLocationName" type="(Ljava/lang/String;I)Ljava/util/List;"/>
<method name="getFromLocationName" type="(Ljava/lang/String;IDDDD)Ljava/util/List;"/>
</class>
<class name="android/location/GpsSatellite">
<method name="getPrn" type="()I"/>
<method name="getSnr" type="()F"/>
<method name="getElevation" type="()F"/>
<method name="getAzimuth" type="()F"/>
<method name="hasEphemeris" type="()Z"/>
<method name="hasAlmanac" type="()Z"/>
<method name="usedInFix" type="()Z"/>
</class>
<class name="android/location/GpsStatus">
<method name="getTimeToFirstFix" type="()I"/>
<method name="getSatellites" type="()Ljava/lang/Iterable;"/>
<method name="getMaxSatellites" type="()I"/>
</class>
<class name="android/location/Location">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/location/Location;)V"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="set" type="(Landroid/location/Location;)V"/>
<method name="reset" type="()V"/>
<method name="convert" type="(DI)Ljava/lang/String;" class_method="true"/>
<method name="convert" type="(Ljava/lang/String;)D" class_method="true"/>
<method name="distanceBetween" type="(DDDD[F)V" class_method="true"/>
<method name="distanceTo" type="(Landroid/location/Location;)F"/>
<method name="bearingTo" type="(Landroid/location/Location;)F"/>
<method name="getProvider" type="()Ljava/lang/String;"/>
<method name="setProvider" type="(Ljava/lang/String;)V"/>
<method name="getTime" type="()J"/>
<method name="setTime" type="(J)V"/>
<method name="getLatitude" type="()D"/>
<method name="setLatitude" type="(D)V"/>
<method name="getLongitude" type="()D"/>
<method name="setLongitude" type="(D)V"/>
<method name="hasAltitude" type="()Z"/>
<method name="getAltitude" type="()D"/>
<method name="setAltitude" type="(D)V"/>
<method name="removeAltitude" type="()V"/>
<method name="hasSpeed" type="()Z"/>
<method name="getSpeed" type="()F"/>
<method name="setSpeed" type="(F)V"/>
<method name="removeSpeed" type="()V"/>
<method name="hasBearing" type="()Z"/>
<method name="getBearing" type="()F"/>
<method name="setBearing" type="(F)V"/>
<method name="removeBearing" type="()V"/>
<method name="hasAccuracy" type="()Z"/>
<method name="getAccuracy" type="()F"/>
<method name="setAccuracy" type="(F)V"/>
<method name="removeAccuracy" type="()V"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="setExtras" type="(Landroid/os/Bundle;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/location/LocationManager">
<method name="getAllProviders" type="()Ljava/util/List;"/>
<method name="getProviders" type="(Z)Ljava/util/List;"/>
<method name="getProvider" type="(Ljava/lang/String;)Landroid/location/LocationProvider;"/>
<method name="getProviders" type="(Landroid/location/Criteria;Z)Ljava/util/List;"/>
<method name="getBestProvider" type="(Landroid/location/Criteria;Z)Ljava/lang/String;"/>
<method name="requestLocationUpdates" type="(Ljava/lang/String;JFLandroid/location/LocationListener;)V"/>
<method name="requestLocationUpdates" type="(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V"/>
<method name="requestLocationUpdates" type="(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"/>
<method name="requestLocationUpdates" type="(Ljava/lang/String;JFLandroid/app/PendingIntent;)V"/>
<method name="requestLocationUpdates" type="(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V"/>
<method name="requestSingleUpdate" type="(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V"/>
<method name="requestSingleUpdate" type="(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"/>
<method name="requestSingleUpdate" type="(Ljava/lang/String;Landroid/app/PendingIntent;)V"/>
<method name="requestSingleUpdate" type="(Landroid/location/Criteria;Landroid/app/PendingIntent;)V"/>
<method name="removeUpdates" type="(Landroid/location/LocationListener;)V"/>
<method name="removeUpdates" type="(Landroid/app/PendingIntent;)V"/>
<method name="addProximityAlert" type="(DDFJLandroid/app/PendingIntent;)V"/>
<method name="removeProximityAlert" type="(Landroid/app/PendingIntent;)V"/>
<method name="isProviderEnabled" type="(Ljava/lang/String;)Z"/>
<method name="getLastKnownLocation" type="(Ljava/lang/String;)Landroid/location/Location;"/>
<method name="addTestProvider" type="(Ljava/lang/String;ZZZZZZZII)V"/>
<method name="removeTestProvider" type="(Ljava/lang/String;)V"/>
<method name="setTestProviderLocation" type="(Ljava/lang/String;Landroid/location/Location;)V"/>
<method name="clearTestProviderLocation" type="(Ljava/lang/String;)V"/>
<method name="setTestProviderEnabled" type="(Ljava/lang/String;Z)V"/>
<method name="clearTestProviderEnabled" type="(Ljava/lang/String;)V"/>
<method name="setTestProviderStatus" type="(Ljava/lang/String;ILandroid/os/Bundle;J)V"/>
<method name="clearTestProviderStatus" type="(Ljava/lang/String;)V"/>
<method name="addGpsStatusListener" type="(Landroid/location/GpsStatus$Listener;)Z"/>
<method name="removeGpsStatusListener" type="(Landroid/location/GpsStatus$Listener;)V"/>
<method name="addNmeaListener" type="(Landroid/location/GpsStatus$NmeaListener;)Z"/>
<method name="removeNmeaListener" type="(Landroid/location/GpsStatus$NmeaListener;)V"/>
<method name="getGpsStatus" type="(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;"/>
<method name="sendExtraCommand" type="(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z"/>
</class>
<class name="android/location/LocationProvider">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="meetsCriteria" type="(Landroid/location/Criteria;)Z"/>
<method name="requiresNetwork" type="()Z"/>
<method name="requiresSatellite" type="()Z"/>
<method name="requiresCell" type="()Z"/>
<method name="hasMonetaryCost" type="()Z"/>
<method name="supportsAltitude" type="()Z"/>
<method name="supportsSpeed" type="()Z"/>
<method name="supportsBearing" type="()Z"/>
<method name="getPowerRequirement" type="()I"/>
<method name="getAccuracy" type="()I"/>
</class>
<class name="android/Manifest$permission">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/Manifest$permission_group">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/Manifest">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/media/AsyncPlayer">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="play" type="(Landroid/content/Context;Landroid/net/Uri;ZI)V"/>
<method name="stop" type="()V"/>
</class>
<class name="android/media/AudioFormat">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/media/audiofx/AudioEffect$Descriptor">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="android/media/audiofx/AudioEffect">
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getDescriptor" type="()Landroid/media/audiofx/AudioEffect$Descriptor;"/>
<method name="queryEffects" type="()[Landroid/media/audiofx/AudioEffect$Descriptor;" class_method="true"/>
<method name="setEnabled" type="(Z)I"/>
<method name="getId" type="()I"/>
<method name="getEnabled" type="()Z"/>
<method name="hasControl" type="()Z"/>
<method name="setEnableStatusListener" type="(Landroid/media/audiofx/AudioEffect$OnEnableStatusChangeListener;)V"/>
<method name="setControlStatusListener" type="(Landroid/media/audiofx/AudioEffect$OnControlStatusChangeListener;)V"/>
</class>
<class name="android/media/audiofx/BassBoost$Settings">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/media/audiofx/BassBoost">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getStrengthSupported" type="()Z"/>
<method name="setStrength" type="(S)V"/>
<method name="getRoundedStrength" type="()S"/>
<method name="setParameterListener" type="(Landroid/media/audiofx/BassBoost$OnParameterChangeListener;)V"/>
<method name="getProperties" type="()Landroid/media/audiofx/BassBoost$Settings;"/>
<method name="setProperties" type="(Landroid/media/audiofx/BassBoost$Settings;)V"/>
</class>
<class name="android/media/audiofx/EnvironmentalReverb$Settings">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/media/audiofx/EnvironmentalReverb">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="setRoomLevel" type="(S)V"/>
<method name="getRoomLevel" type="()S"/>
<method name="setRoomHFLevel" type="(S)V"/>
<method name="getRoomHFLevel" type="()S"/>
<method name="setDecayTime" type="(I)V"/>
<method name="getDecayTime" type="()I"/>
<method name="setDecayHFRatio" type="(S)V"/>
<method name="getDecayHFRatio" type="()S"/>
<method name="setReflectionsLevel" type="(S)V"/>
<method name="getReflectionsLevel" type="()S"/>
<method name="setReflectionsDelay" type="(I)V"/>
<method name="getReflectionsDelay" type="()I"/>
<method name="setReverbLevel" type="(S)V"/>
<method name="getReverbLevel" type="()S"/>
<method name="setReverbDelay" type="(I)V"/>
<method name="getReverbDelay" type="()I"/>
<method name="setDiffusion" type="(S)V"/>
<method name="getDiffusion" type="()S"/>
<method name="setDensity" type="(S)V"/>
<method name="getDensity" type="()S"/>
<method name="setParameterListener" type="(Landroid/media/audiofx/EnvironmentalReverb$OnParameterChangeListener;)V"/>
<method name="getProperties" type="()Landroid/media/audiofx/EnvironmentalReverb$Settings;"/>
<method name="setProperties" type="(Landroid/media/audiofx/EnvironmentalReverb$Settings;)V"/>
</class>
<class name="android/media/audiofx/Equalizer$Settings">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/media/audiofx/Equalizer">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getNumberOfBands" type="()S"/>
<method name="getBandLevelRange" type="()[S"/>
<method name="setBandLevel" type="(SS)V"/>
<method name="getBandLevel" type="(S)S"/>
<method name="getCenterFreq" type="(S)I"/>
<method name="getBandFreqRange" type="(S)[I"/>
<method name="getBand" type="(I)S"/>
<method name="getCurrentPreset" type="()S"/>
<method name="usePreset" type="(S)V"/>
<method name="getNumberOfPresets" type="()S"/>
<method name="getPresetName" type="(S)Ljava/lang/String;"/>
<method name="setParameterListener" type="(Landroid/media/audiofx/Equalizer$OnParameterChangeListener;)V"/>
<method name="getProperties" type="()Landroid/media/audiofx/Equalizer$Settings;"/>
<method name="setProperties" type="(Landroid/media/audiofx/Equalizer$Settings;)V"/>
</class>
<class name="android/media/audiofx/PresetReverb$Settings">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/media/audiofx/PresetReverb">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="setPreset" type="(S)V"/>
<method name="getPreset" type="()S"/>
<method name="setParameterListener" type="(Landroid/media/audiofx/PresetReverb$OnParameterChangeListener;)V"/>
<method name="getProperties" type="()Landroid/media/audiofx/PresetReverb$Settings;"/>
<method name="setProperties" type="(Landroid/media/audiofx/PresetReverb$Settings;)V"/>
</class>
<class name="android/media/audiofx/Virtualizer$Settings">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/media/audiofx/Virtualizer">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getStrengthSupported" type="()Z"/>
<method name="setStrength" type="(S)V"/>
<method name="getRoundedStrength" type="()S"/>
<method name="setParameterListener" type="(Landroid/media/audiofx/Virtualizer$OnParameterChangeListener;)V"/>
<method name="getProperties" type="()Landroid/media/audiofx/Virtualizer$Settings;"/>
<method name="setProperties" type="(Landroid/media/audiofx/Virtualizer$Settings;)V"/>
</class>
<class name="android/media/audiofx/Visualizer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
<method name="setEnabled" type="(Z)I"/>
<method name="getEnabled" type="()Z"/>
<method name="getCaptureSizeRange" type="()[I" class_method="true"/>
<method name="getMaxCaptureRate" type="()I" class_method="true"/>
<method name="setCaptureSize" type="(I)I"/>
<method name="getCaptureSize" type="()I"/>
<method name="getSamplingRate" type="()I"/>
<method name="getWaveForm" type="([B)I"/>
<method name="getFft" type="([B)I"/>
<method name="setDataCaptureListener" type="(Landroid/media/audiofx/Visualizer$OnDataCaptureListener;IZZ)I"/>
</class>
<class name="android/media/AudioManager">
<method name="adjustStreamVolume" type="(III)V"/>
<method name="adjustVolume" type="(II)V"/>
<method name="adjustSuggestedStreamVolume" type="(III)V"/>
<method name="getRingerMode" type="()I"/>
<method name="getStreamMaxVolume" type="(I)I"/>
<method name="getStreamVolume" type="(I)I"/>
<method name="setRingerMode" type="(I)V"/>
<method name="setStreamVolume" type="(III)V"/>
<method name="setStreamSolo" type="(IZ)V"/>
<method name="setStreamMute" type="(IZ)V"/>
<method name="shouldVibrate" type="(I)Z"/>
<method name="getVibrateSetting" type="(I)I"/>
<method name="setVibrateSetting" type="(II)V"/>
<method name="setSpeakerphoneOn" type="(Z)V"/>
<method name="isSpeakerphoneOn" type="()Z"/>
<method name="isBluetoothScoAvailableOffCall" type="()Z"/>
<method name="startBluetoothSco" type="()V"/>
<method name="stopBluetoothSco" type="()V"/>
<method name="setBluetoothScoOn" type="(Z)V"/>
<method name="isBluetoothScoOn" type="()Z"/>
<method name="setBluetoothA2dpOn" type="(Z)V"/>
<method name="isBluetoothA2dpOn" type="()Z"/>
<method name="setWiredHeadsetOn" type="(Z)V"/>
<method name="isWiredHeadsetOn" type="()Z"/>
<method name="setMicrophoneMute" type="(Z)V"/>
<method name="isMicrophoneMute" type="()Z"/>
<method name="setMode" type="(I)V"/>
<method name="getMode" type="()I"/>
<method name="setRouting" type="(III)V"/>
<method name="getRouting" type="(I)I"/>
<method name="isMusicActive" type="()Z"/>
<method name="setParameters" type="(Ljava/lang/String;)V"/>
<method name="getParameters" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="playSoundEffect" type="(I)V"/>
<method name="playSoundEffect" type="(IF)V"/>
<method name="loadSoundEffects" type="()V"/>
<method name="unloadSoundEffects" type="()V"/>
<method name="requestAudioFocus" type="(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I"/>
<method name="abandonAudioFocus" type="(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I"/>
<method name="registerMediaButtonEventReceiver" type="(Landroid/content/ComponentName;)V"/>
<method name="unregisterMediaButtonEventReceiver" type="(Landroid/content/ComponentName;)V"/>
</class>
<class name="android/media/AudioRecord">
<method name="&lt;init&gt;" type="(IIIII)V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getSampleRate" type="()I"/>
<method name="getAudioSource" type="()I"/>
<method name="getAudioFormat" type="()I"/>
<method name="getChannelConfiguration" type="()I"/>
<method name="getChannelCount" type="()I"/>
<method name="getState" type="()I"/>
<method name="getRecordingState" type="()I"/>
<method name="getNotificationMarkerPosition" type="()I"/>
<method name="getPositionNotificationPeriod" type="()I"/>
<method name="getMinBufferSize" type="(III)I" class_method="true"/>
<method name="startRecording" type="()V"/>
<method name="stop" type="()V"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([SII)I"/>
<method name="read" type="(Ljava/nio/ByteBuffer;I)I"/>
<method name="setRecordPositionUpdateListener" type="(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;)V"/>
<method name="setRecordPositionUpdateListener" type="(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;Landroid/os/Handler;)V"/>
<method name="setNotificationMarkerPosition" type="(I)I"/>
<method name="setPositionNotificationPeriod" type="(I)I"/>
</class>
<class name="android/media/AudioTrack">
<method name="&lt;init&gt;" type="(IIIIII)V"/>
<method name="&lt;init&gt;" type="(IIIIIII)V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getMinVolume" type="()F" class_method="true"/>
<method name="getMaxVolume" type="()F" class_method="true"/>
<method name="getSampleRate" type="()I"/>
<method name="getPlaybackRate" type="()I"/>
<method name="getAudioFormat" type="()I"/>
<method name="getStreamType" type="()I"/>
<method name="getChannelConfiguration" type="()I"/>
<method name="getChannelCount" type="()I"/>
<method name="getState" type="()I"/>
<method name="getPlayState" type="()I"/>
<method name="getNativeFrameCount" type="()I"/>
<method name="getNotificationMarkerPosition" type="()I"/>
<method name="getPositionNotificationPeriod" type="()I"/>
<method name="getPlaybackHeadPosition" type="()I"/>
<method name="getNativeOutputSampleRate" type="(I)I" class_method="true"/>
<method name="getMinBufferSize" type="(III)I" class_method="true"/>
<method name="getAudioSessionId" type="()I"/>
<method name="setPlaybackPositionUpdateListener" type="(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;)V"/>
<method name="setPlaybackPositionUpdateListener" type="(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;Landroid/os/Handler;)V"/>
<method name="setStereoVolume" type="(FF)I"/>
<method name="setPlaybackRate" type="(I)I"/>
<method name="setNotificationMarkerPosition" type="(I)I"/>
<method name="setPositionNotificationPeriod" type="(I)I"/>
<method name="setPlaybackHeadPosition" type="(I)I"/>
<method name="setLoopPoints" type="(III)I"/>
<method name="setState" type="(I)V"/>
<method name="play" type="()V"/>
<method name="stop" type="()V"/>
<method name="pause" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)I"/>
<method name="write" type="([SII)I"/>
<method name="reloadStaticData" type="()I"/>
<method name="attachAuxEffect" type="(I)I"/>
<method name="setAuxEffectSendLevel" type="(F)I"/>
</class>
<class name="android/media/CamcorderProfile">
<method name="get" type="(I)Landroid/media/CamcorderProfile;" class_method="true"/>
<method name="get" type="(II)Landroid/media/CamcorderProfile;" class_method="true"/>
</class>
<class name="android/media/CameraProfile">
<method name="&lt;init&gt;" type="()V"/>
<method name="getJpegEncodingQualityParameter" type="(I)I" class_method="true"/>
<method name="getJpegEncodingQualityParameter" type="(II)I" class_method="true"/>
</class>
<class name="android/media/ExifInterface">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getAttributeInt" type="(Ljava/lang/String;I)I"/>
<method name="getAttributeDouble" type="(Ljava/lang/String;D)D"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="saveAttributes" type="()V"/>
<method name="hasThumbnail" type="()Z"/>
<method name="getThumbnail" type="()[B"/>
<method name="getLatLong" type="([F)Z"/>
<method name="getAltitude" type="(D)D"/>
</class>
<class name="android/media/FaceDetector$Face">
<method name="confidence" type="()F"/>
<method name="getMidPoint" type="(Landroid/graphics/PointF;)V"/>
<method name="eyesDistance" type="()F"/>
<method name="pose" type="(I)F"/>
</class>
<class name="android/media/FaceDetector">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="findFaces" type="(Landroid/graphics/Bitmap;[Landroid/media/FaceDetector$Face;)I"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/media/JetPlayer">
<method name="getJetPlayer" type="()Landroid/media/JetPlayer;" class_method="true"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="finalize" type="()V"/>
<method name="release" type="()V"/>
<method name="getMaxTracks" type="()I" class_method="true"/>
<method name="loadJetFile" type="(Ljava/lang/String;)Z"/>
<method name="loadJetFile" type="(Landroid/content/res/AssetFileDescriptor;)Z"/>
<method name="closeJetFile" type="()Z"/>
<method name="play" type="()Z"/>
<method name="pause" type="()Z"/>
<method name="queueJetSegment" type="(IIIIIB)Z"/>
<method name="queueJetSegmentMuteArray" type="(IIII[ZB)Z"/>
<method name="setMuteFlags" type="(IZ)Z"/>
<method name="setMuteArray" type="([ZZ)Z"/>
<method name="setMuteFlag" type="(IZZ)Z"/>
<method name="triggerClip" type="(I)Z"/>
<method name="clearQueue" type="()Z"/>
<method name="setEventListener" type="(Landroid/media/JetPlayer$OnJetEventListener;)V"/>
<method name="setEventListener" type="(Landroid/media/JetPlayer$OnJetEventListener;Landroid/os/Handler;)V"/>
</class>
<class name="android/media/MediaPlayer">
<method name="&lt;init&gt;" type="()V"/>
<method name="setDisplay" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="create" type="(Landroid/content/Context;Landroid/net/Uri;)Landroid/media/MediaPlayer;" class_method="true"/>
<method name="create" type="(Landroid/content/Context;Landroid/net/Uri;Landroid/view/SurfaceHolder;)Landroid/media/MediaPlayer;" class_method="true"/>
<method name="create" type="(Landroid/content/Context;I)Landroid/media/MediaPlayer;" class_method="true"/>
<method name="setDataSource" type="(Landroid/content/Context;Landroid/net/Uri;)V"/>
<method name="setDataSource" type="(Ljava/lang/String;)V"/>
<method name="setDataSource" type="(Ljava/io/FileDescriptor;)V"/>
<method name="setDataSource" type="(Ljava/io/FileDescriptor;JJ)V"/>
<method name="prepare" type="()V"/>
<method name="prepareAsync" type="()V"/>
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="pause" type="()V"/>
<method name="setWakeMode" type="(Landroid/content/Context;I)V"/>
<method name="setScreenOnWhilePlaying" type="(Z)V"/>
<method name="getVideoWidth" type="()I"/>
<method name="getVideoHeight" type="()I"/>
<method name="isPlaying" type="()Z"/>
<method name="seekTo" type="(I)V"/>
<method name="getCurrentPosition" type="()I"/>
<method name="getDuration" type="()I"/>
<method name="release" type="()V"/>
<method name="reset" type="()V"/>
<method name="setAudioStreamType" type="(I)V"/>
<method name="setLooping" type="(Z)V"/>
<method name="isLooping" type="()Z"/>
<method name="setVolume" type="(FF)V"/>
<method name="setAudioSessionId" type="(I)V"/>
<method name="getAudioSessionId" type="()I"/>
<method name="attachAuxEffect" type="(I)V"/>
<method name="setAuxEffectSendLevel" type="(F)V"/>
<method name="finalize" type="()V"/>
<method name="setOnPreparedListener" type="(Landroid/media/MediaPlayer$OnPreparedListener;)V"/>
<method name="setOnCompletionListener" type="(Landroid/media/MediaPlayer$OnCompletionListener;)V"/>
<method name="setOnBufferingUpdateListener" type="(Landroid/media/MediaPlayer$OnBufferingUpdateListener;)V"/>
<method name="setOnSeekCompleteListener" type="(Landroid/media/MediaPlayer$OnSeekCompleteListener;)V"/>
<method name="setOnVideoSizeChangedListener" type="(Landroid/media/MediaPlayer$OnVideoSizeChangedListener;)V"/>
<method name="setOnErrorListener" type="(Landroid/media/MediaPlayer$OnErrorListener;)V"/>
<method name="setOnInfoListener" type="(Landroid/media/MediaPlayer$OnInfoListener;)V"/>
</class>
<class name="android/media/MediaRecorder$AudioEncoder">
</class>
<class name="android/media/MediaRecorder$AudioSource">
</class>
<class name="android/media/MediaRecorder$OutputFormat">
</class>
<class name="android/media/MediaRecorder$VideoEncoder">
</class>
<class name="android/media/MediaRecorder$VideoSource">
</class>
<class name="android/media/MediaRecorder">
<method name="&lt;init&gt;" type="()V"/>
<method name="setCamera" type="(Landroid/hardware/Camera;)V"/>
<method name="setPreviewDisplay" type="(Landroid/view/Surface;)V"/>
<method name="setAudioSource" type="(I)V"/>
<method name="getAudioSourceMax" type="()I" class_method="true"/>
<method name="setVideoSource" type="(I)V"/>
<method name="setProfile" type="(Landroid/media/CamcorderProfile;)V"/>
<method name="setOrientationHint" type="(I)V"/>
<method name="setOutputFormat" type="(I)V"/>
<method name="setVideoSize" type="(II)V"/>
<method name="setVideoFrameRate" type="(I)V"/>
<method name="setMaxDuration" type="(I)V"/>
<method name="setMaxFileSize" type="(J)V"/>
<method name="setAudioEncoder" type="(I)V"/>
<method name="setVideoEncoder" type="(I)V"/>
<method name="setAudioSamplingRate" type="(I)V"/>
<method name="setAudioChannels" type="(I)V"/>
<method name="setAudioEncodingBitRate" type="(I)V"/>
<method name="setVideoEncodingBitRate" type="(I)V"/>
<method name="setOutputFile" type="(Ljava/io/FileDescriptor;)V"/>
<method name="setOutputFile" type="(Ljava/lang/String;)V"/>
<method name="prepare" type="()V"/>
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="reset" type="()V"/>
<method name="getMaxAmplitude" type="()I"/>
<method name="setOnErrorListener" type="(Landroid/media/MediaRecorder$OnErrorListener;)V"/>
<method name="setOnInfoListener" type="(Landroid/media/MediaRecorder$OnInfoListener;)V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/media/MediaScannerConnection">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/media/MediaScannerConnection$MediaScannerConnectionClient;)V"/>
<method name="connect" type="()V"/>
<method name="disconnect" type="()V"/>
<method name="isConnected" type="()Z"/>
<method name="scanFile" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="scanFile" type="(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V" class_method="true"/>
<method name="onServiceConnected" type="(Landroid/content/ComponentName;Landroid/os/IBinder;)V"/>
<method name="onServiceDisconnected" type="(Landroid/content/ComponentName;)V"/>
</class>
<class name="android/media/Ringtone">
<method name="setStreamType" type="(I)V"/>
<method name="getStreamType" type="()I"/>
<method name="getTitle" type="(Landroid/content/Context;)Ljava/lang/String;"/>
<method name="play" type="()V"/>
<method name="stop" type="()V"/>
<method name="isPlaying" type="()Z"/>
</class>
<class name="android/media/RingtoneManager">
<method name="&lt;init&gt;" type="(Landroid/app/Activity;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setType" type="(I)V"/>
<method name="inferStreamType" type="()I"/>
<method name="setStopPreviousRingtone" type="(Z)V"/>
<method name="getStopPreviousRingtone" type="()Z"/>
<method name="stopPreviousRingtone" type="()V"/>
<method name="getIncludeDrm" type="()Z"/>
<method name="setIncludeDrm" type="(Z)V"/>
<method name="getCursor" type="()Landroid/database/Cursor;"/>
<method name="getRingtone" type="(I)Landroid/media/Ringtone;"/>
<method name="getRingtoneUri" type="(I)Landroid/net/Uri;"/>
<method name="getRingtonePosition" type="(Landroid/net/Uri;)I"/>
<method name="getValidRingtoneUri" type="(Landroid/content/Context;)Landroid/net/Uri;" class_method="true"/>
<method name="getRingtone" type="(Landroid/content/Context;Landroid/net/Uri;)Landroid/media/Ringtone;" class_method="true"/>
<method name="getActualDefaultRingtoneUri" type="(Landroid/content/Context;I)Landroid/net/Uri;" class_method="true"/>
<method name="setActualDefaultRingtoneUri" type="(Landroid/content/Context;ILandroid/net/Uri;)V" class_method="true"/>
<method name="isDefault" type="(Landroid/net/Uri;)Z" class_method="true"/>
<method name="getDefaultType" type="(Landroid/net/Uri;)I" class_method="true"/>
<method name="getDefaultUri" type="(I)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/media/SoundPool">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="load" type="(Ljava/lang/String;I)I"/>
<method name="load" type="(Landroid/content/Context;II)I"/>
<method name="load" type="(Landroid/content/res/AssetFileDescriptor;I)I"/>
<method name="load" type="(Ljava/io/FileDescriptor;JJI)I"/>
<method name="unload" type="(I)Z"/>
<method name="play" type="(IFFIIF)I"/>
<method name="pause" type="(I)V"/>
<method name="resume" type="(I)V"/>
<method name="autoPause" type="()V"/>
<method name="autoResume" type="()V"/>
<method name="stop" type="(I)V"/>
<method name="setVolume" type="(IFF)V"/>
<method name="setPriority" type="(II)V"/>
<method name="setLoop" type="(II)V"/>
<method name="setRate" type="(IF)V"/>
<method name="setOnLoadCompleteListener" type="(Landroid/media/SoundPool$OnLoadCompleteListener;)V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/media/ThumbnailUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="createVideoThumbnail" type="(Ljava/lang/String;I)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="extractThumbnail" type="(Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="extractThumbnail" type="(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;" class_method="true"/>
</class>
<class name="android/media/ToneGenerator">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="startTone" type="(I)Z"/>
<method name="startTone" type="(II)Z"/>
<method name="stopTone" type="()V"/>
<method name="release" type="()V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/net/ConnectivityManager">
<method name="isNetworkTypeValid" type="(I)Z" class_method="true"/>
<method name="setNetworkPreference" type="(I)V"/>
<method name="getNetworkPreference" type="()I"/>
<method name="getActiveNetworkInfo" type="()Landroid/net/NetworkInfo;"/>
<method name="getNetworkInfo" type="(I)Landroid/net/NetworkInfo;"/>
<method name="getAllNetworkInfo" type="()[Landroid/net/NetworkInfo;"/>
<method name="startUsingNetworkFeature" type="(ILjava/lang/String;)I"/>
<method name="stopUsingNetworkFeature" type="(ILjava/lang/String;)I"/>
<method name="requestRouteToHost" type="(II)Z"/>
<method name="getBackgroundDataSetting" type="()Z"/>
</class>
<class name="android/net/Credentials">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="getPid" type="()I"/>
<method name="getUid" type="()I"/>
<method name="getGid" type="()I"/>
</class>
<class name="android/net/DhcpInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/http/AndroidHttpClient">
<method name="newInstance" type="(Ljava/lang/String;Landroid/content/Context;)Landroid/net/http/AndroidHttpClient;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;)Landroid/net/http/AndroidHttpClient;" class_method="true"/>
<method name="finalize" type="()V"/>
<method name="modifyRequestToAcceptGzipResponse" type="(Lorg/apache/http/HttpRequest;)V" class_method="true"/>
<method name="getUngzippedContent" type="(Lorg/apache/http/HttpEntity;)Ljava/io/InputStream;" class_method="true"/>
<method name="close" type="()V"/>
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getConnectionManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
<method name="getCompressedEntity" type="([BLandroid/content/ContentResolver;)Lorg/apache/http/entity/AbstractHttpEntity;" class_method="true"/>
<method name="getMinGzipSize" type="(Landroid/content/ContentResolver;)J" class_method="true"/>
<method name="enableCurlLogging" type="(Ljava/lang/String;I)V"/>
<method name="disableCurlLogging" type="()V"/>
<method name="parseDate" type="(Ljava/lang/String;)J" class_method="true"/>
</class>
<class name="android/net/http/SslCertificate$DName">
<method name="&lt;init&gt;" type="(Landroid/net/http/SslCertificate;Ljava/lang/String;)V"/>
<method name="getDName" type="()Ljava/lang/String;"/>
<method name="getCName" type="()Ljava/lang/String;"/>
<method name="getOName" type="()Ljava/lang/String;"/>
<method name="getUName" type="()Ljava/lang/String;"/>
</class>
<class name="android/net/http/SslCertificate">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/cert/X509Certificate;)V"/>
<method name="saveState" type="(Landroid/net/http/SslCertificate;)Landroid/os/Bundle;" class_method="true"/>
<method name="restoreState" type="(Landroid/os/Bundle;)Landroid/net/http/SslCertificate;" class_method="true"/>
<method name="getValidNotBeforeDate" type="()Ljava/util/Date;"/>
<method name="getValidNotBefore" type="()Ljava/lang/String;"/>
<method name="getValidNotAfterDate" type="()Ljava/util/Date;"/>
<method name="getValidNotAfter" type="()Ljava/lang/String;"/>
<method name="getIssuedTo" type="()Landroid/net/http/SslCertificate$DName;"/>
<method name="getIssuedBy" type="()Landroid/net/http/SslCertificate$DName;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/net/http/SslError">
<method name="&lt;init&gt;" type="(ILandroid/net/http/SslCertificate;)V"/>
<method name="&lt;init&gt;" type="(ILjava/security/cert/X509Certificate;)V"/>
<method name="getCertificate" type="()Landroid/net/http/SslCertificate;"/>
<method name="addError" type="(I)Z"/>
<method name="hasError" type="(I)Z"/>
<method name="getPrimaryError" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/net/LocalServerSocket">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/FileDescriptor;)V"/>
<method name="getLocalSocketAddress" type="()Landroid/net/LocalSocketAddress;"/>
<method name="accept" type="()Landroid/net/LocalSocket;"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
<method name="close" type="()V"/>
</class>
<class name="android/net/LocalSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="connect" type="(Landroid/net/LocalSocketAddress;)V"/>
<method name="bind" type="(Landroid/net/LocalSocketAddress;)V"/>
<method name="getLocalSocketAddress" type="()Landroid/net/LocalSocketAddress;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="close" type="()V"/>
<method name="shutdownInput" type="()V"/>
<method name="shutdownOutput" type="()V"/>
<method name="setReceiveBufferSize" type="(I)V"/>
<method name="getReceiveBufferSize" type="()I"/>
<method name="setSoTimeout" type="(I)V"/>
<method name="getSoTimeout" type="()I"/>
<method name="setSendBufferSize" type="(I)V"/>
<method name="getSendBufferSize" type="()I"/>
<method name="getRemoteSocketAddress" type="()Landroid/net/LocalSocketAddress;"/>
<method name="isConnected" type="()Z"/>
<method name="isClosed" type="()Z"/>
<method name="isBound" type="()Z"/>
<method name="isOutputShutdown" type="()Z"/>
<method name="isInputShutdown" type="()Z"/>
<method name="connect" type="(Landroid/net/LocalSocketAddress;I)V"/>
<method name="setFileDescriptorsForSend" type="([Ljava/io/FileDescriptor;)V"/>
<method name="getAncillaryFileDescriptors" type="()[Ljava/io/FileDescriptor;"/>
<method name="getPeerCredentials" type="()Landroid/net/Credentials;"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
</class>
<class name="android/net/LocalSocketAddress$Namespace">
<method name="values" type="()[Landroid/net/LocalSocketAddress$Namespace;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/net/LocalSocketAddress$Namespace;" class_method="true"/>
</class>
<class name="android/net/LocalSocketAddress">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Landroid/net/LocalSocketAddress$Namespace;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getNamespace" type="()Landroid/net/LocalSocketAddress$Namespace;"/>
</class>
<class name="android/net/MailTo">
<method name="isMailTo" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="parse" type="(Ljava/lang/String;)Landroid/net/MailTo;" class_method="true"/>
<method name="getTo" type="()Ljava/lang/String;"/>
<method name="getCc" type="()Ljava/lang/String;"/>
<method name="getSubject" type="()Ljava/lang/String;"/>
<method name="getBody" type="()Ljava/lang/String;"/>
<method name="getHeaders" type="()Ljava/util/Map;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/net/NetworkInfo$DetailedState">
<method name="values" type="()[Landroid/net/NetworkInfo$DetailedState;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/net/NetworkInfo$DetailedState;" class_method="true"/>
</class>
<class name="android/net/NetworkInfo$State">
<method name="values" type="()[Landroid/net/NetworkInfo$State;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/net/NetworkInfo$State;" class_method="true"/>
</class>
<class name="android/net/NetworkInfo">
<method name="getType" type="()I"/>
<method name="getSubtype" type="()I"/>
<method name="getTypeName" type="()Ljava/lang/String;"/>
<method name="getSubtypeName" type="()Ljava/lang/String;"/>
<method name="isConnectedOrConnecting" type="()Z"/>
<method name="isConnected" type="()Z"/>
<method name="isAvailable" type="()Z"/>
<method name="isFailover" type="()Z"/>
<method name="isRoaming" type="()Z"/>
<method name="getState" type="()Landroid/net/NetworkInfo$State;"/>
<method name="getDetailedState" type="()Landroid/net/NetworkInfo$DetailedState;"/>
<method name="getReason" type="()Ljava/lang/String;"/>
<method name="getExtraInfo" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/ParseException">
</class>
<class name="android/net/Proxy">
<method name="&lt;init&gt;" type="()V"/>
<method name="getHost" type="(Landroid/content/Context;)Ljava/lang/String;" class_method="true"/>
<method name="getPort" type="(Landroid/content/Context;)I" class_method="true"/>
<method name="getDefaultHost" type="()Ljava/lang/String;" class_method="true"/>
<method name="getDefaultPort" type="()I" class_method="true"/>
</class>
<class name="android/net/sip/SipAudioCall$Listener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onReadyToCall" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onCalling" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onRinging" type="(Landroid/net/sip/SipAudioCall;Landroid/net/sip/SipProfile;)V"/>
<method name="onRingingBack" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onCallEstablished" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onCallEnded" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onCallBusy" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onCallHeld" type="(Landroid/net/sip/SipAudioCall;)V"/>
<method name="onError" type="(Landroid/net/sip/SipAudioCall;ILjava/lang/String;)V"/>
<method name="onChanged" type="(Landroid/net/sip/SipAudioCall;)V"/>
</class>
<class name="android/net/sip/SipAudioCall">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/net/sip/SipProfile;)V"/>
<method name="setListener" type="(Landroid/net/sip/SipAudioCall$Listener;)V"/>
<method name="setListener" type="(Landroid/net/sip/SipAudioCall$Listener;Z)V"/>
<method name="isInCall" type="()Z"/>
<method name="isOnHold" type="()Z"/>
<method name="close" type="()V"/>
<method name="getLocalProfile" type="()Landroid/net/sip/SipProfile;"/>
<method name="getPeerProfile" type="()Landroid/net/sip/SipProfile;"/>
<method name="getState" type="()I"/>
<method name="attachCall" type="(Landroid/net/sip/SipSession;Ljava/lang/String;)V"/>
<method name="makeCall" type="(Landroid/net/sip/SipProfile;Landroid/net/sip/SipSession;I)V"/>
<method name="endCall" type="()V"/>
<method name="holdCall" type="(I)V"/>
<method name="answerCall" type="(I)V"/>
<method name="continueCall" type="(I)V"/>
<method name="toggleMute" type="()V"/>
<method name="isMuted" type="()Z"/>
<method name="setSpeakerMode" type="(Z)V"/>
<method name="sendDtmf" type="(I)V"/>
<method name="sendDtmf" type="(ILandroid/os/Message;)V"/>
<method name="startAudio" type="()V"/>
</class>
<class name="android/net/sip/SipErrorCode">
<method name="toString" type="(I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/net/sip/SipException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="android/net/sip/SipManager">
<method name="newInstance" type="(Landroid/content/Context;)Landroid/net/sip/SipManager;" class_method="true"/>
<method name="isApiSupported" type="(Landroid/content/Context;)Z" class_method="true"/>
<method name="isVoipSupported" type="(Landroid/content/Context;)Z" class_method="true"/>
<method name="isSipWifiOnly" type="(Landroid/content/Context;)Z" class_method="true"/>
<method name="open" type="(Landroid/net/sip/SipProfile;)V"/>
<method name="open" type="(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/SipRegistrationListener;)V"/>
<method name="setRegistrationListener" type="(Ljava/lang/String;Landroid/net/sip/SipRegistrationListener;)V"/>
<method name="close" type="(Ljava/lang/String;)V"/>
<method name="isOpened" type="(Ljava/lang/String;)Z"/>
<method name="isRegistered" type="(Ljava/lang/String;)Z"/>
<method name="makeAudioCall" type="(Landroid/net/sip/SipProfile;Landroid/net/sip/SipProfile;Landroid/net/sip/SipAudioCall$Listener;I)Landroid/net/sip/SipAudioCall;"/>
<method name="makeAudioCall" type="(Ljava/lang/String;Ljava/lang/String;Landroid/net/sip/SipAudioCall$Listener;I)Landroid/net/sip/SipAudioCall;"/>
<method name="takeAudioCall" type="(Landroid/content/Intent;Landroid/net/sip/SipAudioCall$Listener;)Landroid/net/sip/SipAudioCall;"/>
<method name="isIncomingCallIntent" type="(Landroid/content/Intent;)Z" class_method="true"/>
<method name="getCallId" type="(Landroid/content/Intent;)Ljava/lang/String;" class_method="true"/>
<method name="getOfferSessionDescription" type="(Landroid/content/Intent;)Ljava/lang/String;" class_method="true"/>
<method name="register" type="(Landroid/net/sip/SipProfile;ILandroid/net/sip/SipRegistrationListener;)V"/>
<method name="unregister" type="(Landroid/net/sip/SipProfile;Landroid/net/sip/SipRegistrationListener;)V"/>
<method name="getSessionFor" type="(Landroid/content/Intent;)Landroid/net/sip/SipSession;"/>
<method name="createSipSession" type="(Landroid/net/sip/SipProfile;Landroid/net/sip/SipSession$Listener;)Landroid/net/sip/SipSession;"/>
</class>
<class name="android/net/sip/SipProfile$Builder">
<method name="&lt;init&gt;" type="(Landroid/net/sip/SipProfile;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setProfileName" type="(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setPassword" type="(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setPort" type="(I)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setProtocol" type="(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setOutboundProxy" type="(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setDisplayName" type="(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setSendKeepAlive" type="(Z)Landroid/net/sip/SipProfile$Builder;"/>
<method name="setAutoRegistration" type="(Z)Landroid/net/sip/SipProfile$Builder;"/>
<method name="build" type="()Landroid/net/sip/SipProfile;"/>
</class>
<class name="android/net/sip/SipProfile">
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="getUriString" type="()Ljava/lang/String;"/>
<method name="getDisplayName" type="()Ljava/lang/String;"/>
<method name="getUserName" type="()Ljava/lang/String;"/>
<method name="getPassword" type="()Ljava/lang/String;"/>
<method name="getSipDomain" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getProtocol" type="()Ljava/lang/String;"/>
<method name="getProxyAddress" type="()Ljava/lang/String;"/>
<method name="getProfileName" type="()Ljava/lang/String;"/>
<method name="getSendKeepAlive" type="()Z"/>
<method name="getAutoRegistration" type="()Z"/>
</class>
<class name="android/net/sip/SipSession$Listener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCalling" type="(Landroid/net/sip/SipSession;)V"/>
<method name="onRinging" type="(Landroid/net/sip/SipSession;Landroid/net/sip/SipProfile;Ljava/lang/String;)V"/>
<method name="onRingingBack" type="(Landroid/net/sip/SipSession;)V"/>
<method name="onCallEstablished" type="(Landroid/net/sip/SipSession;Ljava/lang/String;)V"/>
<method name="onCallEnded" type="(Landroid/net/sip/SipSession;)V"/>
<method name="onCallBusy" type="(Landroid/net/sip/SipSession;)V"/>
<method name="onError" type="(Landroid/net/sip/SipSession;ILjava/lang/String;)V"/>
<method name="onCallChangeFailed" type="(Landroid/net/sip/SipSession;ILjava/lang/String;)V"/>
<method name="onRegistering" type="(Landroid/net/sip/SipSession;)V"/>
<method name="onRegistrationDone" type="(Landroid/net/sip/SipSession;I)V"/>
<method name="onRegistrationFailed" type="(Landroid/net/sip/SipSession;ILjava/lang/String;)V"/>
<method name="onRegistrationTimeout" type="(Landroid/net/sip/SipSession;)V"/>
</class>
<class name="android/net/sip/SipSession$State">
<method name="toString" type="(I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/net/sip/SipSession">
<method name="getLocalIp" type="()Ljava/lang/String;"/>
<method name="getLocalProfile" type="()Landroid/net/sip/SipProfile;"/>
<method name="getPeerProfile" type="()Landroid/net/sip/SipProfile;"/>
<method name="getState" type="()I"/>
<method name="isInCall" type="()Z"/>
<method name="getCallId" type="()Ljava/lang/String;"/>
<method name="setListener" type="(Landroid/net/sip/SipSession$Listener;)V"/>
<method name="register" type="(I)V"/>
<method name="unregister" type="()V"/>
<method name="makeCall" type="(Landroid/net/sip/SipProfile;Ljava/lang/String;I)V"/>
<method name="answerCall" type="(Ljava/lang/String;I)V"/>
<method name="endCall" type="()V"/>
<method name="changeCall" type="(Ljava/lang/String;I)V"/>
</class>
<class name="android/net/SSLCertificateSocketFactory">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getDefault" type="(I)Ljavax/net/SocketFactory;" class_method="true"/>
<method name="getDefault" type="(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;" class_method="true"/>
<method name="getInsecure" type="(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;" class_method="true"/>
<method name="getHttpSocketFactory" type="(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;" class_method="true"/>
<method name="createSocket" type="(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;"/>
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/net/InetAddress;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/lang/String;I)Ljava/net/Socket;"/>
<method name="getDefaultCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
</class>
<class name="android/net/SSLSessionCache">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
</class>
<class name="android/net/TrafficStats">
<method name="&lt;init&gt;" type="()V"/>
<method name="getMobileTxPackets" type="()J" class_method="true"/>
<method name="getMobileRxPackets" type="()J" class_method="true"/>
<method name="getMobileTxBytes" type="()J" class_method="true"/>
<method name="getMobileRxBytes" type="()J" class_method="true"/>
<method name="getTotalTxPackets" type="()J" class_method="true"/>
<method name="getTotalRxPackets" type="()J" class_method="true"/>
<method name="getTotalTxBytes" type="()J" class_method="true"/>
<method name="getTotalRxBytes" type="()J" class_method="true"/>
<method name="getUidTxBytes" type="(I)J" class_method="true"/>
<method name="getUidRxBytes" type="(I)J" class_method="true"/>
</class>
<class name="android/net/Uri$Builder">
<method name="&lt;init&gt;" type="()V"/>
<method name="scheme" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="opaquePart" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="encodedOpaquePart" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="authority" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="encodedAuthority" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="path" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="encodedPath" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="appendPath" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="appendEncodedPath" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="query" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="encodedQuery" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="fragment" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="encodedFragment" type="(Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="appendQueryParameter" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$Builder;"/>
<method name="build" type="()Landroid/net/Uri;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/net/Uri">
<method name="isHierarchical" type="()Z"/>
<method name="isOpaque" type="()Z"/>
<method name="isRelative" type="()Z"/>
<method name="isAbsolute" type="()Z"/>
<method name="getScheme" type="()Ljava/lang/String;"/>
<method name="getSchemeSpecificPart" type="()Ljava/lang/String;"/>
<method name="getEncodedSchemeSpecificPart" type="()Ljava/lang/String;"/>
<method name="getAuthority" type="()Ljava/lang/String;"/>
<method name="getEncodedAuthority" type="()Ljava/lang/String;"/>
<method name="getUserInfo" type="()Ljava/lang/String;"/>
<method name="getEncodedUserInfo" type="()Ljava/lang/String;"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getEncodedPath" type="()Ljava/lang/String;"/>
<method name="getQuery" type="()Ljava/lang/String;"/>
<method name="getEncodedQuery" type="()Ljava/lang/String;"/>
<method name="getFragment" type="()Ljava/lang/String;"/>
<method name="getEncodedFragment" type="()Ljava/lang/String;"/>
<method name="getPathSegments" type="()Ljava/util/List;"/>
<method name="getLastPathSegment" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="compareTo" type="(Landroid/net/Uri;)I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="buildUpon" type="()Landroid/net/Uri$Builder;"/>
<method name="parse" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="fromFile" type="(Ljava/io/File;)Landroid/net/Uri;" class_method="true"/>
<method name="fromParts" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="getQueryParameters" type="(Ljava/lang/String;)Ljava/util/List;"/>
<method name="getQueryParameter" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;Landroid/net/Uri;)V" class_method="true"/>
<method name="encode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="encode" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="withAppendedPath" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/net/UrlQuerySanitizer$IllegalCharacterValueSanitizer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="sanitize" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="android/net/UrlQuerySanitizer$ParameterValuePair">
<method name="&lt;init&gt;" type="(Landroid/net/UrlQuerySanitizer;Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="android/net/UrlQuerySanitizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getUnregisteredParameterValueSanitizer" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;"/>
<method name="setUnregisteredParameterValueSanitizer" type="(Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V"/>
<method name="getAllIllegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getAllButNulLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getAllButWhitespaceLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getUrlLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getUrlAndSpaceLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getAmpLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getAmpAndSpaceLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getSpaceLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="getAllButNulAndAngleBracketsLegal" type="()Landroid/net/UrlQuerySanitizer$ValueSanitizer;" class_method="true"/>
<method name="parseUrl" type="(Ljava/lang/String;)V"/>
<method name="parseQuery" type="(Ljava/lang/String;)V"/>
<method name="getParameterSet" type="()Ljava/util/Set;"/>
<method name="getParameterList" type="()Ljava/util/List;"/>
<method name="hasParameter" type="(Ljava/lang/String;)Z"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="registerParameter" type="(Ljava/lang/String;Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V"/>
<method name="registerParameters" type="([Ljava/lang/String;Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V"/>
<method name="setAllowUnregisteredParamaters" type="(Z)V"/>
<method name="getAllowUnregisteredParamaters" type="()Z"/>
<method name="setPreferFirstRepeatedParameter" type="(Z)V"/>
<method name="getPreferFirstRepeatedParameter" type="()Z"/>
<method name="parseEntry" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="addSanitizedEntry" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getValueSanitizer" type="(Ljava/lang/String;)Landroid/net/UrlQuerySanitizer$ValueSanitizer;"/>
<method name="getEffectiveValueSanitizer" type="(Ljava/lang/String;)Landroid/net/UrlQuerySanitizer$ValueSanitizer;"/>
<method name="unescape" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="isHexDigit" type="(C)Z"/>
<method name="decodeHexDigit" type="(C)I"/>
<method name="clear" type="()V"/>
</class>
<class name="android/net/wifi/ScanResult">
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/wifi/SupplicantState">
<method name="values" type="()[Landroid/net/wifi/SupplicantState;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/net/wifi/SupplicantState;" class_method="true"/>
<method name="isValidState" type="(Landroid/net/wifi/SupplicantState;)Z" class_method="true"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/wifi/WifiConfiguration$AuthAlgorithm">
</class>
<class name="android/net/wifi/WifiConfiguration$GroupCipher">
</class>
<class name="android/net/wifi/WifiConfiguration$KeyMgmt">
</class>
<class name="android/net/wifi/WifiConfiguration$PairwiseCipher">
</class>
<class name="android/net/wifi/WifiConfiguration$Protocol">
</class>
<class name="android/net/wifi/WifiConfiguration$Status">
</class>
<class name="android/net/wifi/WifiConfiguration">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/wifi/WifiInfo">
<method name="getSSID" type="()Ljava/lang/String;"/>
<method name="getBSSID" type="()Ljava/lang/String;"/>
<method name="getRssi" type="()I"/>
<method name="getLinkSpeed" type="()I"/>
<method name="getMacAddress" type="()Ljava/lang/String;"/>
<method name="getNetworkId" type="()I"/>
<method name="getSupplicantState" type="()Landroid/net/wifi/SupplicantState;"/>
<method name="getIpAddress" type="()I"/>
<method name="getHiddenSSID" type="()Z"/>
<method name="getDetailedStateOf" type="(Landroid/net/wifi/SupplicantState;)Landroid/net/NetworkInfo$DetailedState;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/net/wifi/WifiManager$MulticastLock">
<method name="acquire" type="()V"/>
<method name="release" type="()V"/>
<method name="setReferenceCounted" type="(Z)V"/>
<method name="isHeld" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/net/wifi/WifiManager$WifiLock">
<method name="acquire" type="()V"/>
<method name="release" type="()V"/>
<method name="setReferenceCounted" type="(Z)V"/>
<method name="isHeld" type="()Z"/>
<method name="setWorkSource" type="(Landroid/os/WorkSource;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/net/wifi/WifiManager">
<method name="getConfiguredNetworks" type="()Ljava/util/List;"/>
<method name="addNetwork" type="(Landroid/net/wifi/WifiConfiguration;)I"/>
<method name="updateNetwork" type="(Landroid/net/wifi/WifiConfiguration;)I"/>
<method name="removeNetwork" type="(I)Z"/>
<method name="enableNetwork" type="(IZ)Z"/>
<method name="disableNetwork" type="(I)Z"/>
<method name="disconnect" type="()Z"/>
<method name="reconnect" type="()Z"/>
<method name="reassociate" type="()Z"/>
<method name="pingSupplicant" type="()Z"/>
<method name="startScan" type="()Z"/>
<method name="getConnectionInfo" type="()Landroid/net/wifi/WifiInfo;"/>
<method name="getScanResults" type="()Ljava/util/List;"/>
<method name="saveConfiguration" type="()Z"/>
<method name="getDhcpInfo" type="()Landroid/net/DhcpInfo;"/>
<method name="setWifiEnabled" type="(Z)Z"/>
<method name="getWifiState" type="()I"/>
<method name="isWifiEnabled" type="()Z"/>
<method name="calculateSignalLevel" type="(II)I" class_method="true"/>
<method name="compareSignalLevel" type="(II)I" class_method="true"/>
<method name="createWifiLock" type="(ILjava/lang/String;)Landroid/net/wifi/WifiManager$WifiLock;"/>
<method name="createWifiLock" type="(Ljava/lang/String;)Landroid/net/wifi/WifiManager$WifiLock;"/>
<method name="createMulticastLock" type="(Ljava/lang/String;)Landroid/net/wifi/WifiManager$MulticastLock;"/>
</class>
<class name="android/nfc/FormatException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/nfc/NdefMessage">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([Landroid/nfc/NdefRecord;)V"/>
<method name="getRecords" type="()[Landroid/nfc/NdefRecord;"/>
<method name="toByteArray" type="()[B"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/nfc/NdefRecord">
<method name="&lt;init&gt;" type="(S[B[B[B)V"/>
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getTnf" type="()S"/>
<method name="getType" type="()[B"/>
<method name="getId" type="()[B"/>
<method name="getPayload" type="()[B"/>
<method name="toByteArray" type="()[B"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/nfc/NfcAdapter">
<method name="getDefaultAdapter" type="()Landroid/nfc/NfcAdapter;" class_method="true"/>
<method name="isEnabled" type="()Z"/>
</class>
<class name="android/opengl/ETC1">
<method name="&lt;init&gt;" type="()V"/>
<method name="encodeBlock" type="(Ljava/nio/Buffer;ILjava/nio/Buffer;)V" class_method="true"/>
<method name="decodeBlock" type="(Ljava/nio/Buffer;Ljava/nio/Buffer;)V" class_method="true"/>
<method name="getEncodedDataSize" type="(II)I" class_method="true"/>
<method name="encodeImage" type="(Ljava/nio/Buffer;IIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="decodeImage" type="(Ljava/nio/Buffer;Ljava/nio/Buffer;IIII)V" class_method="true"/>
<method name="formatHeader" type="(Ljava/nio/Buffer;II)V" class_method="true"/>
<method name="isValid" type="(Ljava/nio/Buffer;)Z" class_method="true"/>
<method name="getWidth" type="(Ljava/nio/Buffer;)I" class_method="true"/>
<method name="getHeight" type="(Ljava/nio/Buffer;)I" class_method="true"/>
</class>
<class name="android/opengl/ETC1Util$ETC1Texture">
<method name="&lt;init&gt;" type="(IILjava/nio/ByteBuffer;)V"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="getData" type="()Ljava/nio/ByteBuffer;"/>
</class>
<class name="android/opengl/ETC1Util">
<method name="&lt;init&gt;" type="()V"/>
<method name="loadTexture" type="(IIIIILjava/io/InputStream;)V" class_method="true"/>
<method name="loadTexture" type="(IIIIILandroid/opengl/ETC1Util$ETC1Texture;)V" class_method="true"/>
<method name="isETC1Supported" type="()Z" class_method="true"/>
<method name="createTexture" type="(Ljava/io/InputStream;)Landroid/opengl/ETC1Util$ETC1Texture;" class_method="true"/>
<method name="compressTexture" type="(Ljava/nio/Buffer;IIII)Landroid/opengl/ETC1Util$ETC1Texture;" class_method="true"/>
<method name="writeTexture" type="(Landroid/opengl/ETC1Util$ETC1Texture;Ljava/io/OutputStream;)V" class_method="true"/>
</class>
<class name="android/opengl/GLDebugHelper">
<method name="&lt;init&gt;" type="()V"/>
<method name="wrap" type="(Ljavax/microedition/khronos/opengles/GL;ILjava/io/Writer;)Ljavax/microedition/khronos/opengles/GL;" class_method="true"/>
<method name="wrap" type="(Ljavax/microedition/khronos/egl/EGL;ILjava/io/Writer;)Ljavax/microedition/khronos/egl/EGL;" class_method="true"/>
</class>
<class name="android/opengl/GLES10">
<method name="&lt;init&gt;" type="()V"/>
<method name="glActiveTexture" type="(I)V" class_method="true"/>
<method name="glAlphaFunc" type="(IF)V" class_method="true"/>
<method name="glAlphaFuncx" type="(II)V" class_method="true"/>
<method name="glBindTexture" type="(II)V" class_method="true"/>
<method name="glBlendFunc" type="(II)V" class_method="true"/>
<method name="glClear" type="(I)V" class_method="true"/>
<method name="glClearColor" type="(FFFF)V" class_method="true"/>
<method name="glClearColorx" type="(IIII)V" class_method="true"/>
<method name="glClearDepthf" type="(F)V" class_method="true"/>
<method name="glClearDepthx" type="(I)V" class_method="true"/>
<method name="glClearStencil" type="(I)V" class_method="true"/>
<method name="glClientActiveTexture" type="(I)V" class_method="true"/>
<method name="glColor4f" type="(FFFF)V" class_method="true"/>
<method name="glColor4x" type="(IIII)V" class_method="true"/>
<method name="glColorMask" type="(ZZZZ)V" class_method="true"/>
<method name="glColorPointer" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCompressedTexImage2D" type="(IIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCompressedTexSubImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCopyTexImage2D" type="(IIIIIIII)V" class_method="true"/>
<method name="glCopyTexSubImage2D" type="(IIIIIIII)V" class_method="true"/>
<method name="glCullFace" type="(I)V" class_method="true"/>
<method name="glDeleteTextures" type="(I[II)V" class_method="true"/>
<method name="glDeleteTextures" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDepthFunc" type="(I)V" class_method="true"/>
<method name="glDepthMask" type="(Z)V" class_method="true"/>
<method name="glDepthRangef" type="(FF)V" class_method="true"/>
<method name="glDepthRangex" type="(II)V" class_method="true"/>
<method name="glDisable" type="(I)V" class_method="true"/>
<method name="glDisableClientState" type="(I)V" class_method="true"/>
<method name="glDrawArrays" type="(III)V" class_method="true"/>
<method name="glDrawElements" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glEnable" type="(I)V" class_method="true"/>
<method name="glEnableClientState" type="(I)V" class_method="true"/>
<method name="glFinish" type="()V" class_method="true"/>
<method name="glFlush" type="()V" class_method="true"/>
<method name="glFogf" type="(IF)V" class_method="true"/>
<method name="glFogfv" type="(I[FI)V" class_method="true"/>
<method name="glFogfv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glFogx" type="(II)V" class_method="true"/>
<method name="glFogxv" type="(I[II)V" class_method="true"/>
<method name="glFogxv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glFrontFace" type="(I)V" class_method="true"/>
<method name="glFrustumf" type="(FFFFFF)V" class_method="true"/>
<method name="glFrustumx" type="(IIIIII)V" class_method="true"/>
<method name="glGenTextures" type="(I[II)V" class_method="true"/>
<method name="glGenTextures" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetError" type="()I" class_method="true"/>
<method name="glGetIntegerv" type="(I[II)V" class_method="true"/>
<method name="glGetIntegerv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="glHint" type="(II)V" class_method="true"/>
<method name="glLightModelf" type="(IF)V" class_method="true"/>
<method name="glLightModelfv" type="(I[FI)V" class_method="true"/>
<method name="glLightModelfv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glLightModelx" type="(II)V" class_method="true"/>
<method name="glLightModelxv" type="(I[II)V" class_method="true"/>
<method name="glLightModelxv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLightf" type="(IIF)V" class_method="true"/>
<method name="glLightfv" type="(II[FI)V" class_method="true"/>
<method name="glLightfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glLightx" type="(III)V" class_method="true"/>
<method name="glLightxv" type="(II[II)V" class_method="true"/>
<method name="glLightxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLineWidth" type="(F)V" class_method="true"/>
<method name="glLineWidthx" type="(I)V" class_method="true"/>
<method name="glLoadIdentity" type="()V" class_method="true"/>
<method name="glLoadMatrixf" type="([FI)V" class_method="true"/>
<method name="glLoadMatrixf" type="(Ljava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glLoadMatrixx" type="([II)V" class_method="true"/>
<method name="glLoadMatrixx" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLogicOp" type="(I)V" class_method="true"/>
<method name="glMaterialf" type="(IIF)V" class_method="true"/>
<method name="glMaterialfv" type="(II[FI)V" class_method="true"/>
<method name="glMaterialfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glMaterialx" type="(III)V" class_method="true"/>
<method name="glMaterialxv" type="(II[II)V" class_method="true"/>
<method name="glMaterialxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glMatrixMode" type="(I)V" class_method="true"/>
<method name="glMultMatrixf" type="([FI)V" class_method="true"/>
<method name="glMultMatrixf" type="(Ljava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glMultMatrixx" type="([II)V" class_method="true"/>
<method name="glMultMatrixx" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glMultiTexCoord4f" type="(IFFFF)V" class_method="true"/>
<method name="glMultiTexCoord4x" type="(IIIII)V" class_method="true"/>
<method name="glNormal3f" type="(FFF)V" class_method="true"/>
<method name="glNormal3x" type="(III)V" class_method="true"/>
<method name="glNormalPointer" type="(IILjava/nio/Buffer;)V" class_method="true"/>
<method name="glOrthof" type="(FFFFFF)V" class_method="true"/>
<method name="glOrthox" type="(IIIIII)V" class_method="true"/>
<method name="glPixelStorei" type="(II)V" class_method="true"/>
<method name="glPointSize" type="(F)V" class_method="true"/>
<method name="glPointSizex" type="(I)V" class_method="true"/>
<method name="glPolygonOffset" type="(FF)V" class_method="true"/>
<method name="glPolygonOffsetx" type="(II)V" class_method="true"/>
<method name="glPopMatrix" type="()V" class_method="true"/>
<method name="glPushMatrix" type="()V" class_method="true"/>
<method name="glReadPixels" type="(IIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glRotatef" type="(FFFF)V" class_method="true"/>
<method name="glRotatex" type="(IIII)V" class_method="true"/>
<method name="glSampleCoverage" type="(FZ)V" class_method="true"/>
<method name="glSampleCoveragex" type="(IZ)V" class_method="true"/>
<method name="glScalef" type="(FFF)V" class_method="true"/>
<method name="glScalex" type="(III)V" class_method="true"/>
<method name="glScissor" type="(IIII)V" class_method="true"/>
<method name="glShadeModel" type="(I)V" class_method="true"/>
<method name="glStencilFunc" type="(III)V" class_method="true"/>
<method name="glStencilMask" type="(I)V" class_method="true"/>
<method name="glStencilOp" type="(III)V" class_method="true"/>
<method name="glTexCoordPointer" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glTexEnvf" type="(IIF)V" class_method="true"/>
<method name="glTexEnvfv" type="(II[FI)V" class_method="true"/>
<method name="glTexEnvfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glTexEnvx" type="(III)V" class_method="true"/>
<method name="glTexEnvxv" type="(II[II)V" class_method="true"/>
<method name="glTexEnvxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glTexParameterf" type="(IIF)V" class_method="true"/>
<method name="glTexParameterx" type="(III)V" class_method="true"/>
<method name="glTexSubImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glTranslatef" type="(FFF)V" class_method="true"/>
<method name="glTranslatex" type="(III)V" class_method="true"/>
<method name="glVertexPointer" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glViewport" type="(IIII)V" class_method="true"/>
</class>
<class name="android/opengl/GLES10Ext">
<method name="&lt;init&gt;" type="()V"/>
<method name="glQueryMatrixxOES" type="([II[II)I" class_method="true"/>
<method name="glQueryMatrixxOES" type="(Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)I" class_method="true"/>
</class>
<class name="android/opengl/GLES11">
<method name="&lt;init&gt;" type="()V"/>
<method name="glBindBuffer" type="(II)V" class_method="true"/>
<method name="glBufferData" type="(IILjava/nio/Buffer;I)V" class_method="true"/>
<method name="glBufferSubData" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glClipPlanef" type="(I[FI)V" class_method="true"/>
<method name="glClipPlanef" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glClipPlanex" type="(I[II)V" class_method="true"/>
<method name="glClipPlanex" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glColor4ub" type="(BBBB)V" class_method="true"/>
<method name="glColorPointer" type="(IIII)V" class_method="true"/>
<method name="glDeleteBuffers" type="(I[II)V" class_method="true"/>
<method name="glDeleteBuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDrawElements" type="(IIII)V" class_method="true"/>
<method name="glGenBuffers" type="(I[II)V" class_method="true"/>
<method name="glGenBuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetBooleanv" type="(I[ZI)V" class_method="true"/>
<method name="glGetBooleanv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetBufferParameteriv" type="(II[II)V" class_method="true"/>
<method name="glGetBufferParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetClipPlanef" type="(I[FI)V" class_method="true"/>
<method name="glGetClipPlanef" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetClipPlanex" type="(I[II)V" class_method="true"/>
<method name="glGetClipPlanex" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetFixedv" type="(I[II)V" class_method="true"/>
<method name="glGetFixedv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetFloatv" type="(I[FI)V" class_method="true"/>
<method name="glGetFloatv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetLightfv" type="(II[FI)V" class_method="true"/>
<method name="glGetLightfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetLightxv" type="(II[II)V" class_method="true"/>
<method name="glGetLightxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetMaterialfv" type="(II[FI)V" class_method="true"/>
<method name="glGetMaterialfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetMaterialxv" type="(II[II)V" class_method="true"/>
<method name="glGetMaterialxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexEnvfv" type="(II[FI)V" class_method="true"/>
<method name="glGetTexEnvfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetTexEnviv" type="(II[II)V" class_method="true"/>
<method name="glGetTexEnviv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexEnvxv" type="(II[II)V" class_method="true"/>
<method name="glGetTexEnvxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexParameterfv" type="(II[FI)V" class_method="true"/>
<method name="glGetTexParameterfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetTexParameteriv" type="(II[II)V" class_method="true"/>
<method name="glGetTexParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexParameterxv" type="(II[II)V" class_method="true"/>
<method name="glGetTexParameterxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glIsBuffer" type="(I)Z" class_method="true"/>
<method name="glIsEnabled" type="(I)Z" class_method="true"/>
<method name="glIsTexture" type="(I)Z" class_method="true"/>
<method name="glNormalPointer" type="(III)V" class_method="true"/>
<method name="glPointParameterf" type="(IF)V" class_method="true"/>
<method name="glPointParameterfv" type="(I[FI)V" class_method="true"/>
<method name="glPointParameterfv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glPointParameterx" type="(II)V" class_method="true"/>
<method name="glPointParameterxv" type="(I[II)V" class_method="true"/>
<method name="glPointParameterxv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glPointSizePointerOES" type="(IILjava/nio/Buffer;)V" class_method="true"/>
<method name="glTexCoordPointer" type="(IIII)V" class_method="true"/>
<method name="glTexEnvi" type="(III)V" class_method="true"/>
<method name="glTexEnviv" type="(II[II)V" class_method="true"/>
<method name="glTexEnviv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexParameterfv" type="(II[FI)V" class_method="true"/>
<method name="glTexParameterfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glTexParameteri" type="(III)V" class_method="true"/>
<method name="glTexParameteriv" type="(II[II)V" class_method="true"/>
<method name="glTexParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexParameterxv" type="(II[II)V" class_method="true"/>
<method name="glTexParameterxv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glVertexPointer" type="(IIII)V" class_method="true"/>
</class>
<class name="android/opengl/GLES11Ext">
<method name="&lt;init&gt;" type="()V"/>
<method name="glBlendEquationSeparateOES" type="(II)V" class_method="true"/>
<method name="glBlendFuncSeparateOES" type="(IIII)V" class_method="true"/>
<method name="glBlendEquationOES" type="(I)V" class_method="true"/>
<method name="glDrawTexsOES" type="(SSSSS)V" class_method="true"/>
<method name="glDrawTexiOES" type="(IIIII)V" class_method="true"/>
<method name="glDrawTexxOES" type="(IIIII)V" class_method="true"/>
<method name="glDrawTexsvOES" type="([SI)V" class_method="true"/>
<method name="glDrawTexsvOES" type="(Ljava/nio/ShortBuffer;)V" class_method="true"/>
<method name="glDrawTexivOES" type="([II)V" class_method="true"/>
<method name="glDrawTexivOES" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDrawTexxvOES" type="([II)V" class_method="true"/>
<method name="glDrawTexxvOES" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDrawTexfOES" type="(FFFFF)V" class_method="true"/>
<method name="glDrawTexfvOES" type="([FI)V" class_method="true"/>
<method name="glDrawTexfvOES" type="(Ljava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glEGLImageTargetTexture2DOES" type="(ILjava/nio/Buffer;)V" class_method="true"/>
<method name="glEGLImageTargetRenderbufferStorageOES" type="(ILjava/nio/Buffer;)V" class_method="true"/>
<method name="glAlphaFuncxOES" type="(II)V" class_method="true"/>
<method name="glClearColorxOES" type="(IIII)V" class_method="true"/>
<method name="glClearDepthxOES" type="(I)V" class_method="true"/>
<method name="glClipPlanexOES" type="(I[II)V" class_method="true"/>
<method name="glClipPlanexOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glColor4xOES" type="(IIII)V" class_method="true"/>
<method name="glDepthRangexOES" type="(II)V" class_method="true"/>
<method name="glFogxOES" type="(II)V" class_method="true"/>
<method name="glFogxvOES" type="(I[II)V" class_method="true"/>
<method name="glFogxvOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glFrustumxOES" type="(IIIIII)V" class_method="true"/>
<method name="glGetClipPlanexOES" type="(I[II)V" class_method="true"/>
<method name="glGetClipPlanexOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetFixedvOES" type="(I[II)V" class_method="true"/>
<method name="glGetFixedvOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetLightxvOES" type="(II[II)V" class_method="true"/>
<method name="glGetLightxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetMaterialxvOES" type="(II[II)V" class_method="true"/>
<method name="glGetMaterialxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexEnvxvOES" type="(II[II)V" class_method="true"/>
<method name="glGetTexEnvxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexParameterxvOES" type="(II[II)V" class_method="true"/>
<method name="glGetTexParameterxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLightModelxOES" type="(II)V" class_method="true"/>
<method name="glLightModelxvOES" type="(I[II)V" class_method="true"/>
<method name="glLightModelxvOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLightxOES" type="(III)V" class_method="true"/>
<method name="glLightxvOES" type="(II[II)V" class_method="true"/>
<method name="glLightxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glLineWidthxOES" type="(I)V" class_method="true"/>
<method name="glLoadMatrixxOES" type="([II)V" class_method="true"/>
<method name="glLoadMatrixxOES" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glMaterialxOES" type="(III)V" class_method="true"/>
<method name="glMaterialxvOES" type="(II[II)V" class_method="true"/>
<method name="glMaterialxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glMultMatrixxOES" type="([II)V" class_method="true"/>
<method name="glMultMatrixxOES" type="(Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glMultiTexCoord4xOES" type="(IIIII)V" class_method="true"/>
<method name="glNormal3xOES" type="(III)V" class_method="true"/>
<method name="glOrthoxOES" type="(IIIIII)V" class_method="true"/>
<method name="glPointParameterxOES" type="(II)V" class_method="true"/>
<method name="glPointParameterxvOES" type="(I[II)V" class_method="true"/>
<method name="glPointParameterxvOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glPointSizexOES" type="(I)V" class_method="true"/>
<method name="glPolygonOffsetxOES" type="(II)V" class_method="true"/>
<method name="glRotatexOES" type="(IIII)V" class_method="true"/>
<method name="glSampleCoveragexOES" type="(IZ)V" class_method="true"/>
<method name="glScalexOES" type="(III)V" class_method="true"/>
<method name="glTexEnvxOES" type="(III)V" class_method="true"/>
<method name="glTexEnvxvOES" type="(II[II)V" class_method="true"/>
<method name="glTexEnvxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexParameterxOES" type="(III)V" class_method="true"/>
<method name="glTexParameterxvOES" type="(II[II)V" class_method="true"/>
<method name="glTexParameterxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTranslatexOES" type="(III)V" class_method="true"/>
<method name="glIsRenderbufferOES" type="(I)Z" class_method="true"/>
<method name="glBindRenderbufferOES" type="(II)V" class_method="true"/>
<method name="glDeleteRenderbuffersOES" type="(I[II)V" class_method="true"/>
<method name="glDeleteRenderbuffersOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenRenderbuffersOES" type="(I[II)V" class_method="true"/>
<method name="glGenRenderbuffersOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glRenderbufferStorageOES" type="(IIII)V" class_method="true"/>
<method name="glGetRenderbufferParameterivOES" type="(II[II)V" class_method="true"/>
<method name="glGetRenderbufferParameterivOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glIsFramebufferOES" type="(I)Z" class_method="true"/>
<method name="glBindFramebufferOES" type="(II)V" class_method="true"/>
<method name="glDeleteFramebuffersOES" type="(I[II)V" class_method="true"/>
<method name="glDeleteFramebuffersOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenFramebuffersOES" type="(I[II)V" class_method="true"/>
<method name="glGenFramebuffersOES" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glCheckFramebufferStatusOES" type="(I)I" class_method="true"/>
<method name="glFramebufferRenderbufferOES" type="(IIII)V" class_method="true"/>
<method name="glFramebufferTexture2DOES" type="(IIIII)V" class_method="true"/>
<method name="glGetFramebufferAttachmentParameterivOES" type="(III[II)V" class_method="true"/>
<method name="glGetFramebufferAttachmentParameterivOES" type="(IIILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenerateMipmapOES" type="(I)V" class_method="true"/>
<method name="glCurrentPaletteMatrixOES" type="(I)V" class_method="true"/>
<method name="glLoadPaletteFromModelViewMatrixOES" type="()V" class_method="true"/>
<method name="glMatrixIndexPointerOES" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glWeightPointerOES" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glDepthRangefOES" type="(FF)V" class_method="true"/>
<method name="glFrustumfOES" type="(FFFFFF)V" class_method="true"/>
<method name="glOrthofOES" type="(FFFFFF)V" class_method="true"/>
<method name="glClipPlanefOES" type="(I[FI)V" class_method="true"/>
<method name="glClipPlanefOES" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetClipPlanefOES" type="(I[FI)V" class_method="true"/>
<method name="glGetClipPlanefOES" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glClearDepthfOES" type="(F)V" class_method="true"/>
<method name="glTexGenfOES" type="(IIF)V" class_method="true"/>
<method name="glTexGenfvOES" type="(II[FI)V" class_method="true"/>
<method name="glTexGenfvOES" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glTexGeniOES" type="(III)V" class_method="true"/>
<method name="glTexGenivOES" type="(II[II)V" class_method="true"/>
<method name="glTexGenivOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexGenxOES" type="(III)V" class_method="true"/>
<method name="glTexGenxvOES" type="(II[II)V" class_method="true"/>
<method name="glTexGenxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexGenfvOES" type="(II[FI)V" class_method="true"/>
<method name="glGetTexGenfvOES" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetTexGenivOES" type="(II[II)V" class_method="true"/>
<method name="glGetTexGenivOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetTexGenxvOES" type="(II[II)V" class_method="true"/>
<method name="glGetTexGenxvOES" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
</class>
<class name="android/opengl/GLES20">
<method name="&lt;init&gt;" type="()V"/>
<method name="glActiveTexture" type="(I)V" class_method="true"/>
<method name="glAttachShader" type="(II)V" class_method="true"/>
<method name="glBindAttribLocation" type="(IILjava/lang/String;)V" class_method="true"/>
<method name="glBindBuffer" type="(II)V" class_method="true"/>
<method name="glBindFramebuffer" type="(II)V" class_method="true"/>
<method name="glBindRenderbuffer" type="(II)V" class_method="true"/>
<method name="glBindTexture" type="(II)V" class_method="true"/>
<method name="glBlendColor" type="(FFFF)V" class_method="true"/>
<method name="glBlendEquation" type="(I)V" class_method="true"/>
<method name="glBlendEquationSeparate" type="(II)V" class_method="true"/>
<method name="glBlendFunc" type="(II)V" class_method="true"/>
<method name="glBlendFuncSeparate" type="(IIII)V" class_method="true"/>
<method name="glBufferData" type="(IILjava/nio/Buffer;I)V" class_method="true"/>
<method name="glBufferSubData" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCheckFramebufferStatus" type="(I)I" class_method="true"/>
<method name="glClear" type="(I)V" class_method="true"/>
<method name="glClearColor" type="(FFFF)V" class_method="true"/>
<method name="glClearDepthf" type="(F)V" class_method="true"/>
<method name="glClearStencil" type="(I)V" class_method="true"/>
<method name="glColorMask" type="(ZZZZ)V" class_method="true"/>
<method name="glCompileShader" type="(I)V" class_method="true"/>
<method name="glCompressedTexImage2D" type="(IIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCompressedTexSubImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glCopyTexImage2D" type="(IIIIIIII)V" class_method="true"/>
<method name="glCopyTexSubImage2D" type="(IIIIIIII)V" class_method="true"/>
<method name="glCreateProgram" type="()I" class_method="true"/>
<method name="glCreateShader" type="(I)I" class_method="true"/>
<method name="glCullFace" type="(I)V" class_method="true"/>
<method name="glDeleteBuffers" type="(I[II)V" class_method="true"/>
<method name="glDeleteBuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDeleteFramebuffers" type="(I[II)V" class_method="true"/>
<method name="glDeleteFramebuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDeleteProgram" type="(I)V" class_method="true"/>
<method name="glDeleteRenderbuffers" type="(I[II)V" class_method="true"/>
<method name="glDeleteRenderbuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDeleteShader" type="(I)V" class_method="true"/>
<method name="glDeleteTextures" type="(I[II)V" class_method="true"/>
<method name="glDeleteTextures" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glDepthFunc" type="(I)V" class_method="true"/>
<method name="glDepthMask" type="(Z)V" class_method="true"/>
<method name="glDepthRangef" type="(FF)V" class_method="true"/>
<method name="glDetachShader" type="(II)V" class_method="true"/>
<method name="glDisable" type="(I)V" class_method="true"/>
<method name="glDisableVertexAttribArray" type="(I)V" class_method="true"/>
<method name="glDrawArrays" type="(III)V" class_method="true"/>
<method name="glDrawElements" type="(IIII)V" class_method="true"/>
<method name="glDrawElements" type="(IIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glEnable" type="(I)V" class_method="true"/>
<method name="glEnableVertexAttribArray" type="(I)V" class_method="true"/>
<method name="glFinish" type="()V" class_method="true"/>
<method name="glFlush" type="()V" class_method="true"/>
<method name="glFramebufferRenderbuffer" type="(IIII)V" class_method="true"/>
<method name="glFramebufferTexture2D" type="(IIIII)V" class_method="true"/>
<method name="glFrontFace" type="(I)V" class_method="true"/>
<method name="glGenBuffers" type="(I[II)V" class_method="true"/>
<method name="glGenBuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenerateMipmap" type="(I)V" class_method="true"/>
<method name="glGenFramebuffers" type="(I[II)V" class_method="true"/>
<method name="glGenFramebuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenRenderbuffers" type="(I[II)V" class_method="true"/>
<method name="glGenRenderbuffers" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGenTextures" type="(I[II)V" class_method="true"/>
<method name="glGenTextures" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetActiveAttrib" type="(III[II[II[II[BI)V" class_method="true"/>
<method name="glGetActiveAttrib" type="(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;B)V" class_method="true"/>
<method name="glGetActiveUniform" type="(III[II[II[II[BI)V" class_method="true"/>
<method name="glGetActiveUniform" type="(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;B)V" class_method="true"/>
<method name="glGetAttachedShaders" type="(II[II[II)V" class_method="true"/>
<method name="glGetAttachedShaders" type="(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetAttribLocation" type="(ILjava/lang/String;)I" class_method="true"/>
<method name="glGetBooleanv" type="(I[ZI)V" class_method="true"/>
<method name="glGetBooleanv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetBufferParameteriv" type="(II[II)V" class_method="true"/>
<method name="glGetBufferParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetError" type="()I" class_method="true"/>
<method name="glGetFloatv" type="(I[FI)V" class_method="true"/>
<method name="glGetFloatv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetFramebufferAttachmentParameteriv" type="(III[II)V" class_method="true"/>
<method name="glGetFramebufferAttachmentParameteriv" type="(IIILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetIntegerv" type="(I[II)V" class_method="true"/>
<method name="glGetIntegerv" type="(ILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetProgramiv" type="(II[II)V" class_method="true"/>
<method name="glGetProgramiv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetProgramInfoLog" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="glGetRenderbufferParameteriv" type="(II[II)V" class_method="true"/>
<method name="glGetRenderbufferParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetShaderiv" type="(II[II)V" class_method="true"/>
<method name="glGetShaderiv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetShaderInfoLog" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="glGetShaderPrecisionFormat" type="(II[II[II)V" class_method="true"/>
<method name="glGetShaderPrecisionFormat" type="(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetShaderSource" type="(II[II[BI)V" class_method="true"/>
<method name="glGetShaderSource" type="(IILjava/nio/IntBuffer;B)V" class_method="true"/>
<method name="glGetString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="glGetTexParameterfv" type="(II[FI)V" class_method="true"/>
<method name="glGetTexParameterfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetTexParameteriv" type="(II[II)V" class_method="true"/>
<method name="glGetTexParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetUniformfv" type="(II[FI)V" class_method="true"/>
<method name="glGetUniformfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetUniformiv" type="(II[II)V" class_method="true"/>
<method name="glGetUniformiv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glGetUniformLocation" type="(ILjava/lang/String;)I" class_method="true"/>
<method name="glGetVertexAttribfv" type="(II[FI)V" class_method="true"/>
<method name="glGetVertexAttribfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glGetVertexAttribiv" type="(II[II)V" class_method="true"/>
<method name="glGetVertexAttribiv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glHint" type="(II)V" class_method="true"/>
<method name="glIsBuffer" type="(I)Z" class_method="true"/>
<method name="glIsEnabled" type="(I)Z" class_method="true"/>
<method name="glIsFramebuffer" type="(I)Z" class_method="true"/>
<method name="glIsProgram" type="(I)Z" class_method="true"/>
<method name="glIsRenderbuffer" type="(I)Z" class_method="true"/>
<method name="glIsShader" type="(I)Z" class_method="true"/>
<method name="glIsTexture" type="(I)Z" class_method="true"/>
<method name="glLineWidth" type="(F)V" class_method="true"/>
<method name="glLinkProgram" type="(I)V" class_method="true"/>
<method name="glPixelStorei" type="(II)V" class_method="true"/>
<method name="glPolygonOffset" type="(FF)V" class_method="true"/>
<method name="glReadPixels" type="(IIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glReleaseShaderCompiler" type="()V" class_method="true"/>
<method name="glRenderbufferStorage" type="(IIII)V" class_method="true"/>
<method name="glSampleCoverage" type="(FZ)V" class_method="true"/>
<method name="glScissor" type="(IIII)V" class_method="true"/>
<method name="glShaderBinary" type="(I[IIILjava/nio/Buffer;I)V" class_method="true"/>
<method name="glShaderBinary" type="(ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V" class_method="true"/>
<method name="glShaderSource" type="(ILjava/lang/String;)V" class_method="true"/>
<method name="glStencilFunc" type="(III)V" class_method="true"/>
<method name="glStencilFuncSeparate" type="(IIII)V" class_method="true"/>
<method name="glStencilMask" type="(I)V" class_method="true"/>
<method name="glStencilMaskSeparate" type="(II)V" class_method="true"/>
<method name="glStencilOp" type="(III)V" class_method="true"/>
<method name="glStencilOpSeparate" type="(IIII)V" class_method="true"/>
<method name="glTexImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glTexParameterf" type="(IIF)V" class_method="true"/>
<method name="glTexParameterfv" type="(II[FI)V" class_method="true"/>
<method name="glTexParameterfv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glTexParameteri" type="(III)V" class_method="true"/>
<method name="glTexParameteriv" type="(II[II)V" class_method="true"/>
<method name="glTexParameteriv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glTexSubImage2D" type="(IIIIIIIILjava/nio/Buffer;)V" class_method="true"/>
<method name="glUniform1f" type="(IF)V" class_method="true"/>
<method name="glUniform1fv" type="(II[FI)V" class_method="true"/>
<method name="glUniform1fv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniform1i" type="(II)V" class_method="true"/>
<method name="glUniform1iv" type="(II[II)V" class_method="true"/>
<method name="glUniform1iv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glUniform2f" type="(IFF)V" class_method="true"/>
<method name="glUniform2fv" type="(II[FI)V" class_method="true"/>
<method name="glUniform2fv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniform2i" type="(III)V" class_method="true"/>
<method name="glUniform2iv" type="(II[II)V" class_method="true"/>
<method name="glUniform2iv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glUniform3f" type="(IFFF)V" class_method="true"/>
<method name="glUniform3fv" type="(II[FI)V" class_method="true"/>
<method name="glUniform3fv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniform3i" type="(IIII)V" class_method="true"/>
<method name="glUniform3iv" type="(II[II)V" class_method="true"/>
<method name="glUniform3iv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glUniform4f" type="(IFFFF)V" class_method="true"/>
<method name="glUniform4fv" type="(II[FI)V" class_method="true"/>
<method name="glUniform4fv" type="(IILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniform4i" type="(IIIII)V" class_method="true"/>
<method name="glUniform4iv" type="(II[II)V" class_method="true"/>
<method name="glUniform4iv" type="(IILjava/nio/IntBuffer;)V" class_method="true"/>
<method name="glUniformMatrix2fv" type="(IIZ[FI)V" class_method="true"/>
<method name="glUniformMatrix2fv" type="(IIZLjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniformMatrix3fv" type="(IIZ[FI)V" class_method="true"/>
<method name="glUniformMatrix3fv" type="(IIZLjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUniformMatrix4fv" type="(IIZ[FI)V" class_method="true"/>
<method name="glUniformMatrix4fv" type="(IIZLjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glUseProgram" type="(I)V" class_method="true"/>
<method name="glValidateProgram" type="(I)V" class_method="true"/>
<method name="glVertexAttrib1f" type="(IF)V" class_method="true"/>
<method name="glVertexAttrib1fv" type="(I[FI)V" class_method="true"/>
<method name="glVertexAttrib1fv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glVertexAttrib2f" type="(IFF)V" class_method="true"/>
<method name="glVertexAttrib2fv" type="(I[FI)V" class_method="true"/>
<method name="glVertexAttrib2fv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glVertexAttrib3f" type="(IFFF)V" class_method="true"/>
<method name="glVertexAttrib3fv" type="(I[FI)V" class_method="true"/>
<method name="glVertexAttrib3fv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glVertexAttrib4f" type="(IFFFF)V" class_method="true"/>
<method name="glVertexAttrib4fv" type="(I[FI)V" class_method="true"/>
<method name="glVertexAttrib4fv" type="(ILjava/nio/FloatBuffer;)V" class_method="true"/>
<method name="glVertexAttribPointer" type="(IIIZII)V" class_method="true"/>
<method name="glVertexAttribPointer" type="(IIIZILjava/nio/Buffer;)V" class_method="true"/>
<method name="glViewport" type="(IIII)V" class_method="true"/>
</class>
<class name="android/opengl/GLException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/String;)V"/>
</class>
<class name="android/opengl/GLSurfaceView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setGLWrapper" type="(Landroid/opengl/GLSurfaceView$GLWrapper;)V"/>
<method name="setDebugFlags" type="(I)V"/>
<method name="getDebugFlags" type="()I"/>
<method name="setRenderer" type="(Landroid/opengl/GLSurfaceView$Renderer;)V"/>
<method name="setEGLContextFactory" type="(Landroid/opengl/GLSurfaceView$EGLContextFactory;)V"/>
<method name="setEGLWindowSurfaceFactory" type="(Landroid/opengl/GLSurfaceView$EGLWindowSurfaceFactory;)V"/>
<method name="setEGLConfigChooser" type="(Landroid/opengl/GLSurfaceView$EGLConfigChooser;)V"/>
<method name="setEGLConfigChooser" type="(Z)V"/>
<method name="setEGLConfigChooser" type="(IIIIII)V"/>
<method name="setEGLContextClientVersion" type="(I)V"/>
<method name="setRenderMode" type="(I)V"/>
<method name="getRenderMode" type="()I"/>
<method name="requestRender" type="()V"/>
<method name="surfaceCreated" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="surfaceDestroyed" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="surfaceChanged" type="(Landroid/view/SurfaceHolder;III)V"/>
<method name="onPause" type="()V"/>
<method name="onResume" type="()V"/>
<method name="queueEvent" type="(Ljava/lang/Runnable;)V"/>
<method name="onDetachedFromWindow" type="()V"/>
</class>
<class name="android/opengl/GLU">
<method name="&lt;init&gt;" type="()V"/>
<method name="gluErrorString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="gluLookAt" type="(Ljavax/microedition/khronos/opengles/GL10;FFFFFFFFF)V" class_method="true"/>
<method name="gluOrtho2D" type="(Ljavax/microedition/khronos/opengles/GL10;FFFF)V" class_method="true"/>
<method name="gluPerspective" type="(Ljavax/microedition/khronos/opengles/GL10;FFFF)V" class_method="true"/>
<method name="gluProject" type="(FFF[FI[FI[II[FI)I" class_method="true"/>
<method name="gluUnProject" type="(FFF[FI[FI[II[FI)I" class_method="true"/>
</class>
<class name="android/opengl/GLUtils">
<method name="getInternalFormat" type="(Landroid/graphics/Bitmap;)I" class_method="true"/>
<method name="getType" type="(Landroid/graphics/Bitmap;)I" class_method="true"/>
<method name="texImage2D" type="(IIILandroid/graphics/Bitmap;I)V" class_method="true"/>
<method name="texImage2D" type="(IIILandroid/graphics/Bitmap;II)V" class_method="true"/>
<method name="texImage2D" type="(IILandroid/graphics/Bitmap;I)V" class_method="true"/>
<method name="texSubImage2D" type="(IIIILandroid/graphics/Bitmap;)V" class_method="true"/>
<method name="texSubImage2D" type="(IIIILandroid/graphics/Bitmap;II)V" class_method="true"/>
</class>
<class name="android/opengl/Matrix">
<method name="&lt;init&gt;" type="()V"/>
<method name="multiplyMM" type="([FI[FI[FI)V" class_method="true"/>
<method name="multiplyMV" type="([FI[FI[FI)V" class_method="true"/>
<method name="transposeM" type="([FI[FI)V" class_method="true"/>
<method name="invertM" type="([FI[FI)Z" class_method="true"/>
<method name="orthoM" type="([FIFFFFFF)V" class_method="true"/>
<method name="frustumM" type="([FIFFFFFF)V" class_method="true"/>
<method name="length" type="(FFF)F" class_method="true"/>
<method name="setIdentityM" type="([FI)V" class_method="true"/>
<method name="scaleM" type="([FI[FIFFF)V" class_method="true"/>
<method name="scaleM" type="([FIFFF)V" class_method="true"/>
<method name="translateM" type="([FI[FIFFF)V" class_method="true"/>
<method name="translateM" type="([FIFFF)V" class_method="true"/>
<method name="rotateM" type="([FI[FIFFFF)V" class_method="true"/>
<method name="rotateM" type="([FIFFFF)V" class_method="true"/>
<method name="setRotateM" type="([FIFFFF)V" class_method="true"/>
<method name="setRotateEulerM" type="([FIFFF)V" class_method="true"/>
<method name="setLookAtM" type="([FIFFFFFFFFF)V" class_method="true"/>
</class>
<class name="android/opengl/Visibility">
<method name="&lt;init&gt;" type="()V"/>
<method name="visibilityTest" type="([FI[FI[CII)I" class_method="true"/>
<method name="frustumCullSpheres" type="([FI[FII[III)I" class_method="true"/>
<method name="computeBoundingSphere" type="([FII[FI)V" class_method="true"/>
</class>
<class name="android/os/AsyncTask$Status">
<method name="values" type="()[Landroid/os/AsyncTask$Status;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/os/AsyncTask$Status;" class_method="true"/>
</class>
<class name="android/os/AsyncTask">
<method name="&lt;init&gt;" type="()V"/>
<method name="getStatus" type="()Landroid/os/AsyncTask$Status;"/>
<method name="doInBackground" type="([Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="onPreExecute" type="()V"/>
<method name="onPostExecute" type="(Ljava/lang/Object;)V"/>
<method name="onProgressUpdate" type="([Ljava/lang/Object;)V"/>
<method name="onCancelled" type="()V"/>
<method name="isCancelled" type="()Z"/>
<method name="cancel" type="(Z)Z"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="get" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="execute" type="([Ljava/lang/Object;)Landroid/os/AsyncTask;"/>
<method name="publishProgress" type="([Ljava/lang/Object;)V"/>
</class>
<class name="android/os/BadParcelableException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="android/os/BatteryManager">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/Binder">
<method name="&lt;init&gt;" type="()V"/>
<method name="getCallingPid" type="()I" class_method="true"/>
<method name="getCallingUid" type="()I" class_method="true"/>
<method name="clearCallingIdentity" type="()J" class_method="true"/>
<method name="restoreCallingIdentity" type="(J)V" class_method="true"/>
<method name="flushPendingCommands" type="()V" class_method="true"/>
<method name="joinThreadPool" type="()V" class_method="true"/>
<method name="attachInterface" type="(Landroid/os/IInterface;Ljava/lang/String;)V"/>
<method name="getInterfaceDescriptor" type="()Ljava/lang/String;"/>
<method name="pingBinder" type="()Z"/>
<method name="isBinderAlive" type="()Z"/>
<method name="queryLocalInterface" type="(Ljava/lang/String;)Landroid/os/IInterface;"/>
<method name="onTransact" type="(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z"/>
<method name="dump" type="(Ljava/io/FileDescriptor;[Ljava/lang/String;)V"/>
<method name="dump" type="(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V"/>
<method name="transact" type="(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z"/>
<method name="linkToDeath" type="(Landroid/os/IBinder$DeathRecipient;I)V"/>
<method name="unlinkToDeath" type="(Landroid/os/IBinder$DeathRecipient;I)Z"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/os/Build$VERSION">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/Build$VERSION_CODES">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/Build">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/Bundle">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ClassLoader;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Bundle;)V"/>
<method name="setClassLoader" type="(Ljava/lang/ClassLoader;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/String;)Z"/>
<method name="get" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/String;)V"/>
<method name="putAll" type="(Landroid/os/Bundle;)V"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="hasFileDescriptors" type="()Z"/>
<method name="putBoolean" type="(Ljava/lang/String;Z)V"/>
<method name="putByte" type="(Ljava/lang/String;B)V"/>
<method name="putChar" type="(Ljava/lang/String;C)V"/>
<method name="putShort" type="(Ljava/lang/String;S)V"/>
<method name="putInt" type="(Ljava/lang/String;I)V"/>
<method name="putLong" type="(Ljava/lang/String;J)V"/>
<method name="putFloat" type="(Ljava/lang/String;F)V"/>
<method name="putDouble" type="(Ljava/lang/String;D)V"/>
<method name="putString" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="putCharSequence" type="(Ljava/lang/String;Ljava/lang/CharSequence;)V"/>
<method name="putParcelable" type="(Ljava/lang/String;Landroid/os/Parcelable;)V"/>
<method name="putParcelableArray" type="(Ljava/lang/String;[Landroid/os/Parcelable;)V"/>
<method name="putParcelableArrayList" type="(Ljava/lang/String;Ljava/util/ArrayList;)V"/>
<method name="putSparseParcelableArray" type="(Ljava/lang/String;Landroid/util/SparseArray;)V"/>
<method name="putIntegerArrayList" type="(Ljava/lang/String;Ljava/util/ArrayList;)V"/>
<method name="putStringArrayList" type="(Ljava/lang/String;Ljava/util/ArrayList;)V"/>
<method name="putCharSequenceArrayList" type="(Ljava/lang/String;Ljava/util/ArrayList;)V"/>
<method name="putSerializable" type="(Ljava/lang/String;Ljava/io/Serializable;)V"/>
<method name="putBooleanArray" type="(Ljava/lang/String;[Z)V"/>
<method name="putByteArray" type="(Ljava/lang/String;[B)V"/>
<method name="putShortArray" type="(Ljava/lang/String;[S)V"/>
<method name="putCharArray" type="(Ljava/lang/String;[C)V"/>
<method name="putIntArray" type="(Ljava/lang/String;[I)V"/>
<method name="putLongArray" type="(Ljava/lang/String;[J)V"/>
<method name="putFloatArray" type="(Ljava/lang/String;[F)V"/>
<method name="putDoubleArray" type="(Ljava/lang/String;[D)V"/>
<method name="putStringArray" type="(Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="putCharSequenceArray" type="(Ljava/lang/String;[Ljava/lang/CharSequence;)V"/>
<method name="putBundle" type="(Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="getBoolean" type="(Ljava/lang/String;)Z"/>
<method name="getBoolean" type="(Ljava/lang/String;Z)Z"/>
<method name="getByte" type="(Ljava/lang/String;)B"/>
<method name="getByte" type="(Ljava/lang/String;B)Ljava/lang/Byte;"/>
<method name="getChar" type="(Ljava/lang/String;)C"/>
<method name="getChar" type="(Ljava/lang/String;C)C"/>
<method name="getShort" type="(Ljava/lang/String;)S"/>
<method name="getShort" type="(Ljava/lang/String;S)S"/>
<method name="getInt" type="(Ljava/lang/String;)I"/>
<method name="getInt" type="(Ljava/lang/String;I)I"/>
<method name="getLong" type="(Ljava/lang/String;)J"/>
<method name="getLong" type="(Ljava/lang/String;J)J"/>
<method name="getFloat" type="(Ljava/lang/String;)F"/>
<method name="getFloat" type="(Ljava/lang/String;F)F"/>
<method name="getDouble" type="(Ljava/lang/String;)D"/>
<method name="getDouble" type="(Ljava/lang/String;D)D"/>
<method name="getString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getCharSequence" type="(Ljava/lang/String;)Ljava/lang/CharSequence;"/>
<method name="getBundle" type="(Ljava/lang/String;)Landroid/os/Bundle;"/>
<method name="getParcelable" type="(Ljava/lang/String;)Landroid/os/Parcelable;"/>
<method name="getParcelableArray" type="(Ljava/lang/String;)[Landroid/os/Parcelable;"/>
<method name="getParcelableArrayList" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getSparseParcelableArray" type="(Ljava/lang/String;)Landroid/util/SparseArray;"/>
<method name="getSerializable" type="(Ljava/lang/String;)Ljava/io/Serializable;"/>
<method name="getIntegerArrayList" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getStringArrayList" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getCharSequenceArrayList" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="getBooleanArray" type="(Ljava/lang/String;)[Z"/>
<method name="getByteArray" type="(Ljava/lang/String;)[B"/>
<method name="getShortArray" type="(Ljava/lang/String;)[S"/>
<method name="getCharArray" type="(Ljava/lang/String;)[C"/>
<method name="getIntArray" type="(Ljava/lang/String;)[I"/>
<method name="getLongArray" type="(Ljava/lang/String;)[J"/>
<method name="getFloatArray" type="(Ljava/lang/String;)[F"/>
<method name="getDoubleArray" type="(Ljava/lang/String;)[D"/>
<method name="getStringArray" type="(Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="getCharSequenceArray" type="(Ljava/lang/String;)[Ljava/lang/CharSequence;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/os/ConditionVariable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="open" type="()V"/>
<method name="close" type="()V"/>
<method name="block" type="()V"/>
<method name="block" type="(J)Z"/>
</class>
<class name="android/os/CountDownTimer">
<method name="&lt;init&gt;" type="(JJ)V"/>
<method name="cancel" type="()V"/>
<method name="start" type="()Landroid/os/CountDownTimer;"/>
<method name="onTick" type="(J)V"/>
<method name="onFinish" type="()V"/>
</class>
<class name="android/os/DeadObjectException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/Debug$InstructionCount">
<method name="&lt;init&gt;" type="()V"/>
<method name="resetAndStart" type="()Z"/>
<method name="collect" type="()Z"/>
<method name="globalTotal" type="()I"/>
<method name="globalMethodInvocations" type="()I"/>
</class>
<class name="android/os/Debug$MemoryInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="getTotalPss" type="()I"/>
<method name="getTotalPrivateDirty" type="()I"/>
<method name="getTotalSharedDirty" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
</class>
<class name="android/os/Debug">
<method name="waitForDebugger" type="()V" class_method="true"/>
<method name="waitingForDebugger" type="()Z" class_method="true"/>
<method name="isDebuggerConnected" type="()Z" class_method="true"/>
<method name="changeDebugPort" type="(I)V" class_method="true"/>
<method name="startNativeTracing" type="()V" class_method="true"/>
<method name="stopNativeTracing" type="()V" class_method="true"/>
<method name="enableEmulatorTraceOutput" type="()V" class_method="true"/>
<method name="startMethodTracing" type="()V" class_method="true"/>
<method name="startMethodTracing" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="startMethodTracing" type="(Ljava/lang/String;I)V" class_method="true"/>
<method name="startMethodTracing" type="(Ljava/lang/String;II)V" class_method="true"/>
<method name="stopMethodTracing" type="()V" class_method="true"/>
<method name="threadCpuTimeNanos" type="()J" class_method="true"/>
<method name="startAllocCounting" type="()V" class_method="true"/>
<method name="stopAllocCounting" type="()V" class_method="true"/>
<method name="getGlobalAllocCount" type="()I" class_method="true"/>
<method name="getGlobalAllocSize" type="()I" class_method="true"/>
<method name="getGlobalFreedCount" type="()I" class_method="true"/>
<method name="getGlobalFreedSize" type="()I" class_method="true"/>
<method name="getGlobalClassInitCount" type="()I" class_method="true"/>
<method name="getGlobalClassInitTime" type="()I" class_method="true"/>
<method name="getGlobalExternalAllocCount" type="()I" class_method="true"/>
<method name="getGlobalExternalAllocSize" type="()I" class_method="true"/>
<method name="getGlobalExternalFreedCount" type="()I" class_method="true"/>
<method name="getGlobalExternalFreedSize" type="()I" class_method="true"/>
<method name="getGlobalGcInvocationCount" type="()I" class_method="true"/>
<method name="getThreadAllocCount" type="()I" class_method="true"/>
<method name="getThreadAllocSize" type="()I" class_method="true"/>
<method name="getThreadExternalAllocCount" type="()I" class_method="true"/>
<method name="getThreadExternalAllocSize" type="()I" class_method="true"/>
<method name="getThreadGcInvocationCount" type="()I" class_method="true"/>
<method name="resetGlobalAllocCount" type="()V" class_method="true"/>
<method name="resetGlobalAllocSize" type="()V" class_method="true"/>
<method name="resetGlobalFreedCount" type="()V" class_method="true"/>
<method name="resetGlobalFreedSize" type="()V" class_method="true"/>
<method name="resetGlobalClassInitCount" type="()V" class_method="true"/>
<method name="resetGlobalClassInitTime" type="()V" class_method="true"/>
<method name="resetGlobalExternalAllocCount" type="()V" class_method="true"/>
<method name="resetGlobalExternalAllocSize" type="()V" class_method="true"/>
<method name="resetGlobalExternalFreedCount" type="()V" class_method="true"/>
<method name="resetGlobalExternalFreedSize" type="()V" class_method="true"/>
<method name="resetGlobalGcInvocationCount" type="()V" class_method="true"/>
<method name="resetThreadAllocCount" type="()V" class_method="true"/>
<method name="resetThreadAllocSize" type="()V" class_method="true"/>
<method name="resetThreadExternalAllocCount" type="()V" class_method="true"/>
<method name="resetThreadExternalAllocSize" type="()V" class_method="true"/>
<method name="resetThreadGcInvocationCount" type="()V" class_method="true"/>
<method name="resetAllCounts" type="()V" class_method="true"/>
<method name="getNativeHeapSize" type="()J" class_method="true"/>
<method name="getNativeHeapAllocatedSize" type="()J" class_method="true"/>
<method name="getNativeHeapFreeSize" type="()J" class_method="true"/>
<method name="getMemoryInfo" type="(Landroid/os/Debug$MemoryInfo;)V" class_method="true"/>
<method name="setAllocationLimit" type="(I)I" class_method="true"/>
<method name="setGlobalAllocationLimit" type="(I)I" class_method="true"/>
<method name="printLoadedClasses" type="(I)V" class_method="true"/>
<method name="getLoadedClassCount" type="()I" class_method="true"/>
<method name="dumpHprofData" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="getBinderSentTransactions" type="()I" class_method="true"/>
<method name="getBinderReceivedTransactions" type="()I" class_method="true"/>
<method name="getBinderLocalObjectCount" type="()I" class_method="true"/>
<method name="getBinderProxyObjectCount" type="()I" class_method="true"/>
<method name="getBinderDeathObjectCount" type="()I" class_method="true"/>
<method name="dumpService" type="(Ljava/lang/String;Ljava/io/FileDescriptor;[Ljava/lang/String;)Z" class_method="true"/>
</class>
<class name="android/os/DropBoxManager$Entry">
<method name="&lt;init&gt;" type="(Ljava/lang/String;J)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;JLjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;J[BI)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;JLandroid/os/ParcelFileDescriptor;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;JLjava/io/File;I)V"/>
<method name="close" type="()V"/>
<method name="getTag" type="()Ljava/lang/String;"/>
<method name="getTimeMillis" type="()J"/>
<method name="getFlags" type="()I"/>
<method name="getText" type="(I)Ljava/lang/String;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/DropBoxManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="addText" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="addData" type="(Ljava/lang/String;[BI)V"/>
<method name="addFile" type="(Ljava/lang/String;Ljava/io/File;I)V"/>
<method name="isTagEnabled" type="(Ljava/lang/String;)Z"/>
<method name="getNextEntry" type="(Ljava/lang/String;J)Landroid/os/DropBoxManager$Entry;"/>
</class>
<class name="android/os/Environment">
<method name="&lt;init&gt;" type="()V"/>
<method name="getRootDirectory" type="()Ljava/io/File;" class_method="true"/>
<method name="getDataDirectory" type="()Ljava/io/File;" class_method="true"/>
<method name="getExternalStorageDirectory" type="()Ljava/io/File;" class_method="true"/>
<method name="getExternalStoragePublicDirectory" type="(Ljava/lang/String;)Ljava/io/File;" class_method="true"/>
<method name="getDownloadCacheDirectory" type="()Ljava/io/File;" class_method="true"/>
<method name="getExternalStorageState" type="()Ljava/lang/String;" class_method="true"/>
<method name="isExternalStorageRemovable" type="()Z" class_method="true"/>
</class>
<class name="android/os/FileObserver">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="finalize" type="()V"/>
<method name="startWatching" type="()V"/>
<method name="stopWatching" type="()V"/>
<method name="onEvent" type="(ILjava/lang/String;)V"/>
</class>
<class name="android/os/Handler">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Handler$Callback;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Looper;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Looper;Landroid/os/Handler$Callback;)V"/>
<method name="handleMessage" type="(Landroid/os/Message;)V"/>
<method name="dispatchMessage" type="(Landroid/os/Message;)V"/>
<method name="obtainMessage" type="()Landroid/os/Message;"/>
<method name="obtainMessage" type="(I)Landroid/os/Message;"/>
<method name="obtainMessage" type="(ILjava/lang/Object;)Landroid/os/Message;"/>
<method name="obtainMessage" type="(III)Landroid/os/Message;"/>
<method name="obtainMessage" type="(IIILjava/lang/Object;)Landroid/os/Message;"/>
<method name="post" type="(Ljava/lang/Runnable;)Z"/>
<method name="postAtTime" type="(Ljava/lang/Runnable;J)Z"/>
<method name="postAtTime" type="(Ljava/lang/Runnable;Ljava/lang/Object;J)Z"/>
<method name="postDelayed" type="(Ljava/lang/Runnable;J)Z"/>
<method name="postAtFrontOfQueue" type="(Ljava/lang/Runnable;)Z"/>
<method name="removeCallbacks" type="(Ljava/lang/Runnable;)V"/>
<method name="removeCallbacks" type="(Ljava/lang/Runnable;Ljava/lang/Object;)V"/>
<method name="sendMessage" type="(Landroid/os/Message;)Z"/>
<method name="sendEmptyMessage" type="(I)Z"/>
<method name="sendEmptyMessageDelayed" type="(IJ)Z"/>
<method name="sendEmptyMessageAtTime" type="(IJ)Z"/>
<method name="sendMessageDelayed" type="(Landroid/os/Message;J)Z"/>
<method name="sendMessageAtTime" type="(Landroid/os/Message;J)Z"/>
<method name="sendMessageAtFrontOfQueue" type="(Landroid/os/Message;)Z"/>
<method name="removeMessages" type="(I)V"/>
<method name="removeMessages" type="(ILjava/lang/Object;)V"/>
<method name="removeCallbacksAndMessages" type="(Ljava/lang/Object;)V"/>
<method name="hasMessages" type="(I)Z"/>
<method name="hasMessages" type="(ILjava/lang/Object;)Z"/>
<method name="getLooper" type="()Landroid/os/Looper;"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/os/HandlerThread">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="onLooperPrepared" type="()V"/>
<method name="run" type="()V"/>
<method name="getLooper" type="()Landroid/os/Looper;"/>
<method name="quit" type="()Z"/>
<method name="getThreadId" type="()I"/>
</class>
<class name="android/os/Looper">
<method name="prepare" type="()V" class_method="true"/>
<method name="prepareMainLooper" type="()V" class_method="true"/>
<method name="getMainLooper" type="()Landroid/os/Looper;" class_method="true"/>
<method name="loop" type="()V" class_method="true"/>
<method name="myLooper" type="()Landroid/os/Looper;" class_method="true"/>
<method name="setMessageLogging" type="(Landroid/util/Printer;)V"/>
<method name="myQueue" type="()Landroid/os/MessageQueue;" class_method="true"/>
<method name="quit" type="()V"/>
<method name="getThread" type="()Ljava/lang/Thread;"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/os/MemoryFile">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
<method name="length" type="()I"/>
<method name="isPurgingAllowed" type="()Z"/>
<method name="allowPurging" type="(Z)Z"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="readBytes" type="([BIII)I"/>
<method name="writeBytes" type="([BIII)V"/>
</class>
<class name="android/os/Message">
<method name="&lt;init&gt;" type="()V"/>
<method name="obtain" type="()Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Message;)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;Ljava/lang/Runnable;)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;I)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;ILjava/lang/Object;)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;III)Landroid/os/Message;" class_method="true"/>
<method name="obtain" type="(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;" class_method="true"/>
<method name="recycle" type="()V"/>
<method name="copyFrom" type="(Landroid/os/Message;)V"/>
<method name="getWhen" type="()J"/>
<method name="setTarget" type="(Landroid/os/Handler;)V"/>
<method name="getTarget" type="()Landroid/os/Handler;"/>
<method name="getCallback" type="()Ljava/lang/Runnable;"/>
<method name="getData" type="()Landroid/os/Bundle;"/>
<method name="peekData" type="()Landroid/os/Bundle;"/>
<method name="setData" type="(Landroid/os/Bundle;)V"/>
<method name="sendToTarget" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/MessageQueue">
<method name="addIdleHandler" type="(Landroid/os/MessageQueue$IdleHandler;)V"/>
<method name="removeIdleHandler" type="(Landroid/os/MessageQueue$IdleHandler;)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/os/Messenger">
<method name="&lt;init&gt;" type="(Landroid/os/Handler;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/IBinder;)V"/>
<method name="send" type="(Landroid/os/Message;)V"/>
<method name="getBinder" type="()Landroid/os/IBinder;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="writeMessengerOrNullToParcel" type="(Landroid/os/Messenger;Landroid/os/Parcel;)V" class_method="true"/>
<method name="readMessengerOrNullFromParcel" type="(Landroid/os/Parcel;)Landroid/os/Messenger;" class_method="true"/>
</class>
<class name="android/os/Parcel">
<method name="obtain" type="()Landroid/os/Parcel;" class_method="true"/>
<method name="recycle" type="()V"/>
<method name="dataSize" type="()I"/>
<method name="dataAvail" type="()I"/>
<method name="dataPosition" type="()I"/>
<method name="dataCapacity" type="()I"/>
<method name="setDataSize" type="(I)V"/>
<method name="setDataPosition" type="(I)V"/>
<method name="setDataCapacity" type="(I)V"/>
<method name="marshall" type="()[B"/>
<method name="unmarshall" type="([BII)V"/>
<method name="appendFrom" type="(Landroid/os/Parcel;II)V"/>
<method name="hasFileDescriptors" type="()Z"/>
<method name="writeInterfaceToken" type="(Ljava/lang/String;)V"/>
<method name="enforceInterface" type="(Ljava/lang/String;)V"/>
<method name="writeByteArray" type="([B)V"/>
<method name="writeByteArray" type="([BII)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeString" type="(Ljava/lang/String;)V"/>
<method name="writeStrongBinder" type="(Landroid/os/IBinder;)V"/>
<method name="writeStrongInterface" type="(Landroid/os/IInterface;)V"/>
<method name="writeFileDescriptor" type="(Ljava/io/FileDescriptor;)V"/>
<method name="writeByte" type="(B)V"/>
<method name="writeMap" type="(Ljava/util/Map;)V"/>
<method name="writeBundle" type="(Landroid/os/Bundle;)V"/>
<method name="writeList" type="(Ljava/util/List;)V"/>
<method name="writeArray" type="([Ljava/lang/Object;)V"/>
<method name="writeSparseArray" type="(Landroid/util/SparseArray;)V"/>
<method name="writeSparseBooleanArray" type="(Landroid/util/SparseBooleanArray;)V"/>
<method name="writeBooleanArray" type="([Z)V"/>
<method name="createBooleanArray" type="()[Z"/>
<method name="readBooleanArray" type="([Z)V"/>
<method name="writeCharArray" type="([C)V"/>
<method name="createCharArray" type="()[C"/>
<method name="readCharArray" type="([C)V"/>
<method name="writeIntArray" type="([I)V"/>
<method name="createIntArray" type="()[I"/>
<method name="readIntArray" type="([I)V"/>
<method name="writeLongArray" type="([J)V"/>
<method name="createLongArray" type="()[J"/>
<method name="readLongArray" type="([J)V"/>
<method name="writeFloatArray" type="([F)V"/>
<method name="createFloatArray" type="()[F"/>
<method name="readFloatArray" type="([F)V"/>
<method name="writeDoubleArray" type="([D)V"/>
<method name="createDoubleArray" type="()[D"/>
<method name="readDoubleArray" type="([D)V"/>
<method name="writeStringArray" type="([Ljava/lang/String;)V"/>
<method name="createStringArray" type="()[Ljava/lang/String;"/>
<method name="readStringArray" type="([Ljava/lang/String;)V"/>
<method name="writeBinderArray" type="([Landroid/os/IBinder;)V"/>
<method name="createBinderArray" type="()[Landroid/os/IBinder;"/>
<method name="readBinderArray" type="([Landroid/os/IBinder;)V"/>
<method name="writeTypedList" type="(Ljava/util/List;)V"/>
<method name="writeStringList" type="(Ljava/util/List;)V"/>
<method name="writeBinderList" type="(Ljava/util/List;)V"/>
<method name="writeTypedArray" type="([Landroid/os/Parcelable;I)V"/>
<method name="writeValue" type="(Ljava/lang/Object;)V"/>
<method name="writeParcelable" type="(Landroid/os/Parcelable;I)V"/>
<method name="writeSerializable" type="(Ljava/io/Serializable;)V"/>
<method name="writeException" type="(Ljava/lang/Exception;)V"/>
<method name="writeNoException" type="()V"/>
<method name="readException" type="()V"/>
<method name="readException" type="(ILjava/lang/String;)V"/>
<method name="readInt" type="()I"/>
<method name="readLong" type="()J"/>
<method name="readFloat" type="()F"/>
<method name="readDouble" type="()D"/>
<method name="readString" type="()Ljava/lang/String;"/>
<method name="readStrongBinder" type="()Landroid/os/IBinder;"/>
<method name="readFileDescriptor" type="()Landroid/os/ParcelFileDescriptor;"/>
<method name="readByte" type="()B"/>
<method name="readMap" type="(Ljava/util/Map;Ljava/lang/ClassLoader;)V"/>
<method name="readList" type="(Ljava/util/List;Ljava/lang/ClassLoader;)V"/>
<method name="readHashMap" type="(Ljava/lang/ClassLoader;)Ljava/util/HashMap;"/>
<method name="readBundle" type="()Landroid/os/Bundle;"/>
<method name="readBundle" type="(Ljava/lang/ClassLoader;)Landroid/os/Bundle;"/>
<method name="createByteArray" type="()[B"/>
<method name="readByteArray" type="([B)V"/>
<method name="readArrayList" type="(Ljava/lang/ClassLoader;)Ljava/util/ArrayList;"/>
<method name="readArray" type="(Ljava/lang/ClassLoader;)[Ljava/lang/Object;"/>
<method name="readSparseArray" type="(Ljava/lang/ClassLoader;)Landroid/util/SparseArray;"/>
<method name="readSparseBooleanArray" type="()Landroid/util/SparseBooleanArray;"/>
<method name="createTypedArrayList" type="(Landroid/os/Parcelable$Creator;)Ljava/util/ArrayList;"/>
<method name="readTypedList" type="(Ljava/util/List;Landroid/os/Parcelable$Creator;)V"/>
<method name="createStringArrayList" type="()Ljava/util/ArrayList;"/>
<method name="createBinderArrayList" type="()Ljava/util/ArrayList;"/>
<method name="readStringList" type="(Ljava/util/List;)V"/>
<method name="readBinderList" type="(Ljava/util/List;)V"/>
<method name="createTypedArray" type="(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;"/>
<method name="readTypedArray" type="([Ljava/lang/Object;Landroid/os/Parcelable$Creator;)V"/>
<method name="writeParcelableArray" type="([Landroid/os/Parcelable;I)V"/>
<method name="readValue" type="(Ljava/lang/ClassLoader;)Ljava/lang/Object;"/>
<method name="readParcelable" type="(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;"/>
<method name="readParcelableArray" type="(Ljava/lang/ClassLoader;)[Landroid/os/Parcelable;"/>
<method name="readSerializable" type="()Ljava/io/Serializable;"/>
<method name="obtain" type="(I)Landroid/os/Parcel;" class_method="true"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/os/ParcelFileDescriptor$AutoCloseInputStream">
<method name="&lt;init&gt;" type="(Landroid/os/ParcelFileDescriptor;)V"/>
<method name="close" type="()V"/>
</class>
<class name="android/os/ParcelFileDescriptor$AutoCloseOutputStream">
<method name="&lt;init&gt;" type="(Landroid/os/ParcelFileDescriptor;)V"/>
<method name="close" type="()V"/>
</class>
<class name="android/os/ParcelFileDescriptor">
<method name="&lt;init&gt;" type="(Landroid/os/ParcelFileDescriptor;)V"/>
<method name="open" type="(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor;" class_method="true"/>
<method name="fromSocket" type="(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;" class_method="true"/>
<method name="createPipe" type="()[Landroid/os/ParcelFileDescriptor;" class_method="true"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
<method name="getStatSize" type="()J"/>
<method name="close" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="finalize" type="()V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/ParcelFormatException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/os/ParcelUuid">
<method name="&lt;init&gt;" type="(Ljava/util/UUID;)V"/>
<method name="fromString" type="(Ljava/lang/String;)Landroid/os/ParcelUuid;" class_method="true"/>
<method name="getUuid" type="()Ljava/util/UUID;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/PatternMatcher">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getType" type="()I"/>
<method name="match" type="(Ljava/lang/String;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/PowerManager$WakeLock">
<method name="setReferenceCounted" type="(Z)V"/>
<method name="acquire" type="()V"/>
<method name="acquire" type="(J)V"/>
<method name="release" type="()V"/>
<method name="isHeld" type="()Z"/>
<method name="setWorkSource" type="(Landroid/os/WorkSource;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/os/PowerManager">
<method name="newWakeLock" type="(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;"/>
<method name="userActivity" type="(JZ)V"/>
<method name="goToSleep" type="(J)V"/>
<method name="isScreenOn" type="()Z"/>
<method name="reboot" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/os/Process">
<method name="&lt;init&gt;" type="()V"/>
<method name="getElapsedCpuTime" type="()J" class_method="true"/>
<method name="myPid" type="()I" class_method="true"/>
<method name="myTid" type="()I" class_method="true"/>
<method name="myUid" type="()I" class_method="true"/>
<method name="getUidForName" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="getGidForName" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="setThreadPriority" type="(II)V" class_method="true"/>
<method name="setThreadPriority" type="(I)V" class_method="true"/>
<method name="getThreadPriority" type="(I)I" class_method="true"/>
<method name="supportsProcesses" type="()Z" class_method="true"/>
<method name="killProcess" type="(I)V" class_method="true"/>
<method name="sendSignal" type="(II)V" class_method="true"/>
</class>
<class name="android/os/RecoverySystem">
<method name="&lt;init&gt;" type="()V"/>
<method name="verifyPackage" type="(Ljava/io/File;Landroid/os/RecoverySystem$ProgressListener;Ljava/io/File;)V" class_method="true"/>
<method name="installPackage" type="(Landroid/content/Context;Ljava/io/File;)V" class_method="true"/>
<method name="rebootWipeUserData" type="(Landroid/content/Context;)V" class_method="true"/>
</class>
<class name="android/os/RemoteCallbackList">
<method name="&lt;init&gt;" type="()V"/>
<method name="register" type="(Landroid/os/IInterface;)Z"/>
<method name="register" type="(Landroid/os/IInterface;Ljava/lang/Object;)Z"/>
<method name="unregister" type="(Landroid/os/IInterface;)Z"/>
<method name="kill" type="()V"/>
<method name="onCallbackDied" type="(Landroid/os/IInterface;)V"/>
<method name="onCallbackDied" type="(Landroid/os/IInterface;Ljava/lang/Object;)V"/>
<method name="beginBroadcast" type="()I"/>
<method name="getBroadcastItem" type="(I)Landroid/os/IInterface;"/>
<method name="getBroadcastCookie" type="(I)Ljava/lang/Object;"/>
<method name="finishBroadcast" type="()V"/>
</class>
<class name="android/os/RemoteException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/os/ResultReceiver">
<method name="&lt;init&gt;" type="(Landroid/os/Handler;)V"/>
<method name="send" type="(ILandroid/os/Bundle;)V"/>
<method name="onReceiveResult" type="(ILandroid/os/Bundle;)V"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/os/StatFs">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="restat" type="(Ljava/lang/String;)V"/>
<method name="finalize" type="()V"/>
<method name="getBlockSize" type="()I"/>
<method name="getBlockCount" type="()I"/>
<method name="getFreeBlocks" type="()I"/>
<method name="getAvailableBlocks" type="()I"/>
</class>
<class name="android/os/storage/OnObbStateChangeListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onObbStateChange" type="(Ljava/lang/String;I)V"/>
</class>
<class name="android/os/storage/StorageManager">
<method name="mountObb" type="(Ljava/lang/String;Ljava/lang/String;Landroid/os/storage/OnObbStateChangeListener;)Z"/>
<method name="unmountObb" type="(Ljava/lang/String;ZLandroid/os/storage/OnObbStateChangeListener;)Z"/>
<method name="isObbMounted" type="(Ljava/lang/String;)Z"/>
<method name="getMountedObbPath" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="android/os/StrictMode$ThreadPolicy$Builder">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/StrictMode$ThreadPolicy;)V"/>
<method name="detectAll" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="permitAll" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="detectNetwork" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="permitNetwork" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="detectDiskReads" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="permitDiskReads" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="detectDiskWrites" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="permitDiskWrites" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="penaltyDialog" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="penaltyDeath" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="penaltyLog" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="penaltyDropBox" type="()Landroid/os/StrictMode$ThreadPolicy$Builder;"/>
<method name="build" type="()Landroid/os/StrictMode$ThreadPolicy;"/>
</class>
<class name="android/os/StrictMode$ThreadPolicy">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/os/StrictMode$VmPolicy$Builder">
<method name="&lt;init&gt;" type="()V"/>
<method name="detectAll" type="()Landroid/os/StrictMode$VmPolicy$Builder;"/>
<method name="detectLeakedSqlLiteObjects" type="()Landroid/os/StrictMode$VmPolicy$Builder;"/>
<method name="penaltyDeath" type="()Landroid/os/StrictMode$VmPolicy$Builder;"/>
<method name="penaltyLog" type="()Landroid/os/StrictMode$VmPolicy$Builder;"/>
<method name="penaltyDropBox" type="()Landroid/os/StrictMode$VmPolicy$Builder;"/>
<method name="build" type="()Landroid/os/StrictMode$VmPolicy;"/>
</class>
<class name="android/os/StrictMode$VmPolicy">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/os/StrictMode">
<method name="setThreadPolicy" type="(Landroid/os/StrictMode$ThreadPolicy;)V" class_method="true"/>
<method name="getThreadPolicy" type="()Landroid/os/StrictMode$ThreadPolicy;" class_method="true"/>
<method name="allowThreadDiskWrites" type="()Landroid/os/StrictMode$ThreadPolicy;" class_method="true"/>
<method name="allowThreadDiskReads" type="()Landroid/os/StrictMode$ThreadPolicy;" class_method="true"/>
<method name="setVmPolicy" type="(Landroid/os/StrictMode$VmPolicy;)V" class_method="true"/>
<method name="getVmPolicy" type="()Landroid/os/StrictMode$VmPolicy;" class_method="true"/>
<method name="enableDefaults" type="()V" class_method="true"/>
</class>
<class name="android/os/SystemClock">
<method name="sleep" type="(J)V" class_method="true"/>
<method name="setCurrentTimeMillis" type="(J)Z" class_method="true"/>
<method name="uptimeMillis" type="()J" class_method="true"/>
<method name="elapsedRealtime" type="()J" class_method="true"/>
<method name="currentThreadTimeMillis" type="()J" class_method="true"/>
</class>
<class name="android/os/TokenWatcher">
<method name="&lt;init&gt;" type="(Landroid/os/Handler;Ljava/lang/String;)V"/>
<method name="acquired" type="()V"/>
<method name="released" type="()V"/>
<method name="acquire" type="(Landroid/os/IBinder;Ljava/lang/String;)V"/>
<method name="cleanup" type="(Landroid/os/IBinder;Z)V"/>
<method name="release" type="(Landroid/os/IBinder;)V"/>
<method name="isAcquired" type="()Z"/>
<method name="dump" type="()V"/>
</class>
<class name="android/os/Vibrator">
<method name="vibrate" type="(J)V"/>
<method name="vibrate" type="([JI)V"/>
<method name="cancel" type="()V"/>
</class>
<class name="android/os/WorkSource">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/WorkSource;)V"/>
<method name="clear" type="()V"/>
<method name="diff" type="(Landroid/os/WorkSource;)Z"/>
<method name="set" type="(Landroid/os/WorkSource;)V"/>
<method name="add" type="(Landroid/os/WorkSource;)Z"/>
<method name="remove" type="(Landroid/os/WorkSource;)Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/preference/CheckBoxPreference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="onBindView" type="(Landroid/view/View;)V"/>
<method name="onClick" type="()V"/>
<method name="setChecked" type="(Z)V"/>
<method name="isChecked" type="()Z"/>
<method name="shouldDisableDependents" type="()Z"/>
<method name="setSummaryOn" type="(Ljava/lang/CharSequence;)V"/>
<method name="setSummaryOn" type="(I)V"/>
<method name="getSummaryOn" type="()Ljava/lang/CharSequence;"/>
<method name="setSummaryOff" type="(Ljava/lang/CharSequence;)V"/>
<method name="setSummaryOff" type="(I)V"/>
<method name="getSummaryOff" type="()Ljava/lang/CharSequence;"/>
<method name="getDisableDependentsState" type="()Z"/>
<method name="setDisableDependentsState" type="(Z)V"/>
<method name="onGetDefaultValue" type="(Landroid/content/res/TypedArray;I)Ljava/lang/Object;"/>
<method name="onSetInitialValue" type="(ZLjava/lang/Object;)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/DialogPreference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setDialogTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setDialogTitle" type="(I)V"/>
<method name="getDialogTitle" type="()Ljava/lang/CharSequence;"/>
<method name="setDialogMessage" type="(Ljava/lang/CharSequence;)V"/>
<method name="setDialogMessage" type="(I)V"/>
<method name="getDialogMessage" type="()Ljava/lang/CharSequence;"/>
<method name="setDialogIcon" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setDialogIcon" type="(I)V"/>
<method name="getDialogIcon" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setPositiveButtonText" type="(Ljava/lang/CharSequence;)V"/>
<method name="setPositiveButtonText" type="(I)V"/>
<method name="getPositiveButtonText" type="()Ljava/lang/CharSequence;"/>
<method name="setNegativeButtonText" type="(Ljava/lang/CharSequence;)V"/>
<method name="setNegativeButtonText" type="(I)V"/>
<method name="getNegativeButtonText" type="()Ljava/lang/CharSequence;"/>
<method name="setDialogLayoutResource" type="(I)V"/>
<method name="getDialogLayoutResource" type="()I"/>
<method name="onPrepareDialogBuilder" type="(Landroid/app/AlertDialog$Builder;)V"/>
<method name="onClick" type="()V"/>
<method name="showDialog" type="(Landroid/os/Bundle;)V"/>
<method name="onCreateDialogView" type="()Landroid/view/View;"/>
<method name="onBindDialogView" type="(Landroid/view/View;)V"/>
<method name="onClick" type="(Landroid/content/DialogInterface;I)V"/>
<method name="onDismiss" type="(Landroid/content/DialogInterface;)V"/>
<method name="onDialogClosed" type="(Z)V"/>
<method name="getDialog" type="()Landroid/app/Dialog;"/>
<method name="onActivityDestroy" type="()V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/EditTextPreference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setText" type="(Ljava/lang/String;)V"/>
<method name="getText" type="()Ljava/lang/String;"/>
<method name="onBindDialogView" type="(Landroid/view/View;)V"/>
<method name="onAddEditTextToDialogView" type="(Landroid/view/View;Landroid/widget/EditText;)V"/>
<method name="onDialogClosed" type="(Z)V"/>
<method name="onGetDefaultValue" type="(Landroid/content/res/TypedArray;I)Ljava/lang/Object;"/>
<method name="onSetInitialValue" type="(ZLjava/lang/Object;)V"/>
<method name="shouldDisableDependents" type="()Z"/>
<method name="getEditText" type="()Landroid/widget/EditText;"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/ListPreference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setEntries" type="([Ljava/lang/CharSequence;)V"/>
<method name="setEntries" type="(I)V"/>
<method name="getEntries" type="()[Ljava/lang/CharSequence;"/>
<method name="setEntryValues" type="([Ljava/lang/CharSequence;)V"/>
<method name="setEntryValues" type="(I)V"/>
<method name="getEntryValues" type="()[Ljava/lang/CharSequence;"/>
<method name="setValue" type="(Ljava/lang/String;)V"/>
<method name="setValueIndex" type="(I)V"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getEntry" type="()Ljava/lang/CharSequence;"/>
<method name="findIndexOfValue" type="(Ljava/lang/String;)I"/>
<method name="onPrepareDialogBuilder" type="(Landroid/app/AlertDialog$Builder;)V"/>
<method name="onDialogClosed" type="(Z)V"/>
<method name="onGetDefaultValue" type="(Landroid/content/res/TypedArray;I)Ljava/lang/Object;"/>
<method name="onSetInitialValue" type="(ZLjava/lang/Object;)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/Preference$BaseSavedState">
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/Preference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="onGetDefaultValue" type="(Landroid/content/res/TypedArray;I)Ljava/lang/Object;"/>
<method name="setIntent" type="(Landroid/content/Intent;)V"/>
<method name="getIntent" type="()Landroid/content/Intent;"/>
<method name="setLayoutResource" type="(I)V"/>
<method name="getLayoutResource" type="()I"/>
<method name="setWidgetLayoutResource" type="(I)V"/>
<method name="getWidgetLayoutResource" type="()I"/>
<method name="getView" type="(Landroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="onCreateView" type="(Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="onBindView" type="(Landroid/view/View;)V"/>
<method name="setOrder" type="(I)V"/>
<method name="getOrder" type="()I"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setTitle" type="(I)V"/>
<method name="getTitle" type="()Ljava/lang/CharSequence;"/>
<method name="getSummary" type="()Ljava/lang/CharSequence;"/>
<method name="setSummary" type="(Ljava/lang/CharSequence;)V"/>
<method name="setSummary" type="(I)V"/>
<method name="setEnabled" type="(Z)V"/>
<method name="isEnabled" type="()Z"/>
<method name="setSelectable" type="(Z)V"/>
<method name="isSelectable" type="()Z"/>
<method name="setShouldDisableView" type="(Z)V"/>
<method name="getShouldDisableView" type="()Z"/>
<method name="onClick" type="()V"/>
<method name="setKey" type="(Ljava/lang/String;)V"/>
<method name="getKey" type="()Ljava/lang/String;"/>
<method name="hasKey" type="()Z"/>
<method name="isPersistent" type="()Z"/>
<method name="shouldPersist" type="()Z"/>
<method name="setPersistent" type="(Z)V"/>
<method name="callChangeListener" type="(Ljava/lang/Object;)Z"/>
<method name="setOnPreferenceChangeListener" type="(Landroid/preference/Preference$OnPreferenceChangeListener;)V"/>
<method name="getOnPreferenceChangeListener" type="()Landroid/preference/Preference$OnPreferenceChangeListener;"/>
<method name="setOnPreferenceClickListener" type="(Landroid/preference/Preference$OnPreferenceClickListener;)V"/>
<method name="getOnPreferenceClickListener" type="()Landroid/preference/Preference$OnPreferenceClickListener;"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getSharedPreferences" type="()Landroid/content/SharedPreferences;"/>
<method name="getEditor" type="()Landroid/content/SharedPreferences$Editor;"/>
<method name="shouldCommit" type="()Z"/>
<method name="compareTo" type="(Landroid/preference/Preference;)I"/>
<method name="notifyChanged" type="()V"/>
<method name="notifyHierarchyChanged" type="()V"/>
<method name="getPreferenceManager" type="()Landroid/preference/PreferenceManager;"/>
<method name="onAttachedToHierarchy" type="(Landroid/preference/PreferenceManager;)V"/>
<method name="onAttachedToActivity" type="()V"/>
<method name="findPreferenceInHierarchy" type="(Ljava/lang/String;)Landroid/preference/Preference;"/>
<method name="notifyDependencyChange" type="(Z)V"/>
<method name="onDependencyChanged" type="(Landroid/preference/Preference;Z)V"/>
<method name="shouldDisableDependents" type="()Z"/>
<method name="setDependency" type="(Ljava/lang/String;)V"/>
<method name="getDependency" type="()Ljava/lang/String;"/>
<method name="onPrepareForRemoval" type="()V"/>
<method name="setDefaultValue" type="(Ljava/lang/Object;)V"/>
<method name="onSetInitialValue" type="(ZLjava/lang/Object;)V"/>
<method name="persistString" type="(Ljava/lang/String;)Z"/>
<method name="getPersistedString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="persistInt" type="(I)Z"/>
<method name="getPersistedInt" type="(I)I"/>
<method name="persistFloat" type="(F)Z"/>
<method name="getPersistedFloat" type="(F)F"/>
<method name="persistLong" type="(J)Z"/>
<method name="getPersistedLong" type="(J)J"/>
<method name="persistBoolean" type="(Z)Z"/>
<method name="getPersistedBoolean" type="(Z)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="saveHierarchyState" type="(Landroid/os/Bundle;)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="restoreHierarchyState" type="(Landroid/os/Bundle;)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/preference/PreferenceActivity">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onStop" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="onSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="onActivityResult" type="(IILandroid/content/Intent;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="getPreferenceManager" type="()Landroid/preference/PreferenceManager;"/>
<method name="setPreferenceScreen" type="(Landroid/preference/PreferenceScreen;)V"/>
<method name="getPreferenceScreen" type="()Landroid/preference/PreferenceScreen;"/>
<method name="addPreferencesFromIntent" type="(Landroid/content/Intent;)V"/>
<method name="addPreferencesFromResource" type="(I)V"/>
<method name="onPreferenceTreeClick" type="(Landroid/preference/PreferenceScreen;Landroid/preference/Preference;)Z"/>
<method name="findPreference" type="(Ljava/lang/CharSequence;)Landroid/preference/Preference;"/>
<method name="onNewIntent" type="(Landroid/content/Intent;)V"/>
</class>
<class name="android/preference/PreferenceCategory">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="onPrepareAddPreference" type="(Landroid/preference/Preference;)Z"/>
<method name="isEnabled" type="()Z"/>
</class>
<class name="android/preference/PreferenceGroup">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setOrderingAsAdded" type="(Z)V"/>
<method name="isOrderingAsAdded" type="()Z"/>
<method name="addItemFromInflater" type="(Landroid/preference/Preference;)V"/>
<method name="getPreferenceCount" type="()I"/>
<method name="getPreference" type="(I)Landroid/preference/Preference;"/>
<method name="addPreference" type="(Landroid/preference/Preference;)Z"/>
<method name="removePreference" type="(Landroid/preference/Preference;)Z"/>
<method name="removeAll" type="()V"/>
<method name="onPrepareAddPreference" type="(Landroid/preference/Preference;)Z"/>
<method name="findPreference" type="(Ljava/lang/CharSequence;)Landroid/preference/Preference;"/>
<method name="isOnSameScreenAsChildren" type="()Z"/>
<method name="onAttachedToActivity" type="()V"/>
<method name="onPrepareForRemoval" type="()V"/>
<method name="setEnabled" type="(Z)V"/>
<method name="dispatchSaveInstanceState" type="(Landroid/os/Bundle;)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/preference/PreferenceManager">
<method name="createPreferenceScreen" type="(Landroid/content/Context;)Landroid/preference/PreferenceScreen;"/>
<method name="getSharedPreferencesName" type="()Ljava/lang/String;"/>
<method name="setSharedPreferencesName" type="(Ljava/lang/String;)V"/>
<method name="getSharedPreferencesMode" type="()I"/>
<method name="setSharedPreferencesMode" type="(I)V"/>
<method name="getSharedPreferences" type="()Landroid/content/SharedPreferences;"/>
<method name="getDefaultSharedPreferences" type="(Landroid/content/Context;)Landroid/content/SharedPreferences;" class_method="true"/>
<method name="findPreference" type="(Ljava/lang/CharSequence;)Landroid/preference/Preference;"/>
<method name="setDefaultValues" type="(Landroid/content/Context;IZ)V" class_method="true"/>
<method name="setDefaultValues" type="(Landroid/content/Context;Ljava/lang/String;IIZ)V" class_method="true"/>
</class>
<class name="android/preference/PreferenceScreen">
<method name="getRootAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="onCreateRootAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="bind" type="(Landroid/widget/ListView;)V"/>
<method name="onClick" type="()V"/>
<method name="onDismiss" type="(Landroid/content/DialogInterface;)V"/>
<method name="getDialog" type="()Landroid/app/Dialog;"/>
<method name="onItemClick" type="(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"/>
<method name="isOnSameScreenAsChildren" type="()Z"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/preference/RingtonePreference">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="getRingtoneType" type="()I"/>
<method name="setRingtoneType" type="(I)V"/>
<method name="getShowDefault" type="()Z"/>
<method name="setShowDefault" type="(Z)V"/>
<method name="getShowSilent" type="()Z"/>
<method name="setShowSilent" type="(Z)V"/>
<method name="onClick" type="()V"/>
<method name="onPrepareRingtonePickerIntent" type="(Landroid/content/Intent;)V"/>
<method name="onSaveRingtone" type="(Landroid/net/Uri;)V"/>
<method name="onRestoreRingtone" type="()Landroid/net/Uri;"/>
<method name="onGetDefaultValue" type="(Landroid/content/res/TypedArray;I)Ljava/lang/Object;"/>
<method name="onSetInitialValue" type="(ZLjava/lang/Object;)V"/>
<method name="onAttachedToHierarchy" type="(Landroid/preference/PreferenceManager;)V"/>
<method name="onActivityResult" type="(IILandroid/content/Intent;)Z"/>
</class>
<class name="android/provider/AlarmClock">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Browser$BookmarkColumns">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Browser$SearchColumns">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Browser">
<method name="&lt;init&gt;" type="()V"/>
<method name="saveBookmark" type="(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="sendString" type="(Landroid/content/Context;Ljava/lang/String;)V" class_method="true"/>
<method name="getAllBookmarks" type="(Landroid/content/ContentResolver;)Landroid/database/Cursor;" class_method="true"/>
<method name="getAllVisitedUrls" type="(Landroid/content/ContentResolver;)Landroid/database/Cursor;" class_method="true"/>
<method name="updateVisitedHistory" type="(Landroid/content/ContentResolver;Ljava/lang/String;Z)V" class_method="true"/>
<method name="truncateHistory" type="(Landroid/content/ContentResolver;)V" class_method="true"/>
<method name="canClearHistory" type="(Landroid/content/ContentResolver;)Z" class_method="true"/>
<method name="clearHistory" type="(Landroid/content/ContentResolver;)V" class_method="true"/>
<method name="deleteHistoryTimeFrame" type="(Landroid/content/ContentResolver;JJ)V" class_method="true"/>
<method name="deleteFromHistory" type="(Landroid/content/ContentResolver;Ljava/lang/String;)V" class_method="true"/>
<method name="addSearchUrl" type="(Landroid/content/ContentResolver;Ljava/lang/String;)V" class_method="true"/>
<method name="clearSearches" type="(Landroid/content/ContentResolver;)V" class_method="true"/>
<method name="requestAllIcons" type="(Landroid/content/ContentResolver;Ljava/lang/String;Landroid/webkit/WebIconDatabase$IconListener;)V" class_method="true"/>
</class>
<class name="android/provider/CallLog$Calls">
<method name="&lt;init&gt;" type="()V"/>
<method name="getLastOutgoingCall" type="(Landroid/content/Context;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/provider/CallLog">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Contacts$ContactMethods">
<method name="encodePredefinedImProtocol" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="encodeCustomImProtocol" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="decodeImProtocol" type="(Ljava/lang/String;)Ljava/lang/Object;" class_method="true"/>
<method name="getDisplayLabel" type="(Landroid/content/Context;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="addPostalLocation" type="(Landroid/content/Context;JDD)V"/>
</class>
<class name="android/provider/Contacts$Extensions">
</class>
<class name="android/provider/Contacts$GroupMembership">
</class>
<class name="android/provider/Contacts$Groups">
</class>
<class name="android/provider/Contacts$Intents$Insert">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Contacts$Intents$UI">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Contacts$Intents">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/Contacts$Organizations">
<method name="getDisplayLabel" type="(Landroid/content/Context;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/Contacts$People$ContactMethods">
</class>
<class name="android/provider/Contacts$People$Extensions">
</class>
<class name="android/provider/Contacts$People$Phones">
</class>
<class name="android/provider/Contacts$People">
<method name="markAsContacted" type="(Landroid/content/ContentResolver;J)V" class_method="true"/>
<method name="addToMyContactsGroup" type="(Landroid/content/ContentResolver;J)Landroid/net/Uri;" class_method="true"/>
<method name="addToGroup" type="(Landroid/content/ContentResolver;JLjava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="addToGroup" type="(Landroid/content/ContentResolver;JJ)Landroid/net/Uri;" class_method="true"/>
<method name="createPersonInMyContactsGroup" type="(Landroid/content/ContentResolver;Landroid/content/ContentValues;)Landroid/net/Uri;" class_method="true"/>
<method name="queryGroups" type="(Landroid/content/ContentResolver;J)Landroid/database/Cursor;" class_method="true"/>
<method name="setPhotoData" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[B)V" class_method="true"/>
<method name="openContactPhotoInputStream" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Ljava/io/InputStream;" class_method="true"/>
<method name="loadContactPhoto" type="(Landroid/content/Context;Landroid/net/Uri;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
</class>
<class name="android/provider/Contacts$Phones">
<method name="getDisplayLabel" type="(Landroid/content/Context;ILjava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getDisplayLabel" type="(Landroid/content/Context;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/Contacts$Photos">
</class>
<class name="android/provider/Contacts$Settings">
<method name="getSetting" type="(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="setSetting" type="(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
</class>
<class name="android/provider/Contacts">
</class>
<class name="android/provider/ContactsContract$AggregationExceptions">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Email">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Event">
<method name="getTypeResource" type="(Ljava/lang/Integer;)I" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$GroupMembership">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Im">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getProtocolLabelResource" type="(I)I" class_method="true"/>
<method name="getProtocolLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Nickname">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Note">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Organization">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Phone">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Photo">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Relation">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$SipAddress">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$StructuredName">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$StructuredPostal">
<method name="getTypeLabelResource" type="(I)I" class_method="true"/>
<method name="getTypeLabel" type="(Landroid/content/res/Resources;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$CommonDataKinds$Website">
</class>
<class name="android/provider/ContactsContract$CommonDataKinds">
</class>
<class name="android/provider/ContactsContract$Contacts$AggregationSuggestions">
</class>
<class name="android/provider/ContactsContract$Contacts$Data">
</class>
<class name="android/provider/ContactsContract$Contacts$Photo">
</class>
<class name="android/provider/ContactsContract$Contacts">
<method name="getLookupUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;" class_method="true"/>
<method name="getLookupUri" type="(JLjava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="lookupContact" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;" class_method="true"/>
<method name="markAsContacted" type="(Landroid/content/ContentResolver;J)V" class_method="true"/>
<method name="openContactPhotoInputStream" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Ljava/io/InputStream;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$Data">
<method name="getContactLookupUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$Groups">
<method name="newEntityIterator" type="(Landroid/database/Cursor;)Landroid/content/EntityIterator;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$Intents$Insert">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/ContactsContract$Intents">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/ContactsContract$PhoneLookup">
</class>
<class name="android/provider/ContactsContract$Presence">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/ContactsContract$QuickContact">
<method name="&lt;init&gt;" type="()V"/>
<method name="showQuickContact" type="(Landroid/content/Context;Landroid/view/View;Landroid/net/Uri;I[Ljava/lang/String;)V" class_method="true"/>
<method name="showQuickContact" type="(Landroid/content/Context;Landroid/graphics/Rect;Landroid/net/Uri;I[Ljava/lang/String;)V" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$RawContacts$Data">
</class>
<class name="android/provider/ContactsContract$RawContacts$Entity">
</class>
<class name="android/provider/ContactsContract$RawContacts">
<method name="getContactLookupUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;" class_method="true"/>
<method name="newEntityIterator" type="(Landroid/database/Cursor;)Landroid/content/EntityIterator;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$RawContactsEntity">
</class>
<class name="android/provider/ContactsContract$Settings">
</class>
<class name="android/provider/ContactsContract$StatusUpdates">
<method name="getPresenceIconResourceId" type="(I)I" class_method="true"/>
<method name="getPresencePrecedence" type="(I)I" class_method="true"/>
</class>
<class name="android/provider/ContactsContract$SyncState">
<method name="get" type="(Landroid/content/ContentProviderClient;Landroid/accounts/Account;)[B" class_method="true"/>
<method name="getWithUri" type="(Landroid/content/ContentProviderClient;Landroid/accounts/Account;)Landroid/util/Pair;" class_method="true"/>
<method name="set" type="(Landroid/content/ContentProviderClient;Landroid/accounts/Account;[B)V" class_method="true"/>
<method name="newSetOperation" type="(Landroid/accounts/Account;[B)Landroid/content/ContentProviderOperation;" class_method="true"/>
</class>
<class name="android/provider/ContactsContract">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/LiveFolders">
</class>
<class name="android/provider/MediaStore$Audio$Albums">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Artists$Albums">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;J)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Artists">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Genres$Members">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;J)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Genres">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Media">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="getContentUriForPath" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Playlists$Members">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;J)Landroid/net/Uri;" class_method="true"/>
<method name="moveItem" type="(Landroid/content/ContentResolver;JII)Z" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio$Playlists">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Audio">
<method name="&lt;init&gt;" type="()V"/>
<method name="keyFor" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Images$Media">
<method name="&lt;init&gt;" type="()V"/>
<method name="query" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="query" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="query" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="getBitmap" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="insertImage" type="(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="insertImage" type="(Landroid/content/ContentResolver;Landroid/graphics/Bitmap;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Images$Thumbnails">
<method name="&lt;init&gt;" type="()V"/>
<method name="query" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="queryMiniThumbnails" type="(Landroid/content/ContentResolver;Landroid/net/Uri;I[Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="queryMiniThumbnail" type="(Landroid/content/ContentResolver;JI[Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
<method name="cancelThumbnailRequest" type="(Landroid/content/ContentResolver;J)V" class_method="true"/>
<method name="getThumbnail" type="(Landroid/content/ContentResolver;JILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="cancelThumbnailRequest" type="(Landroid/content/ContentResolver;JJ)V" class_method="true"/>
<method name="getThumbnail" type="(Landroid/content/ContentResolver;JJILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Images">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/MediaStore$Video$Media">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Video$Thumbnails">
<method name="&lt;init&gt;" type="()V"/>
<method name="cancelThumbnailRequest" type="(Landroid/content/ContentResolver;J)V" class_method="true"/>
<method name="getThumbnail" type="(Landroid/content/ContentResolver;JILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="getThumbnail" type="(Landroid/content/ContentResolver;JJILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;" class_method="true"/>
<method name="cancelThumbnailRequest" type="(Landroid/content/ContentResolver;JJ)V" class_method="true"/>
<method name="getContentUri" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/MediaStore$Video">
<method name="&lt;init&gt;" type="()V"/>
<method name="query" type="(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;)Landroid/database/Cursor;" class_method="true"/>
</class>
<class name="android/provider/MediaStore">
<method name="&lt;init&gt;" type="()V"/>
<method name="getMediaScannerUri" type="()Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/SearchRecentSuggestions">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;I)V"/>
<method name="saveRecentQuery" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="clearHistory" type="()V"/>
<method name="truncateHistory" type="(Landroid/content/ContentResolver;I)V"/>
</class>
<class name="android/provider/Settings$NameValueTable">
<method name="&lt;init&gt;" type="()V"/>
<method name="putString" type="(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="getUriFor" type="(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
</class>
<class name="android/provider/Settings$Secure">
<method name="&lt;init&gt;" type="()V"/>
<method name="getString" type="(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="putString" type="(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="getUriFor" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="getInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;I)I" class_method="true"/>
<method name="getInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;)I" class_method="true"/>
<method name="putInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;I)Z" class_method="true"/>
<method name="getLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;J)J" class_method="true"/>
<method name="getLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;)J" class_method="true"/>
<method name="putLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;J)Z" class_method="true"/>
<method name="getFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;F)F" class_method="true"/>
<method name="getFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;)F" class_method="true"/>
<method name="putFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;F)Z" class_method="true"/>
<method name="isLocationProviderEnabled" type="(Landroid/content/ContentResolver;Ljava/lang/String;)Z" class_method="true"/>
<method name="setLocationProviderEnabled" type="(Landroid/content/ContentResolver;Ljava/lang/String;Z)V" class_method="true"/>
</class>
<class name="android/provider/Settings$SettingNotFoundException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/provider/Settings$System">
<method name="&lt;init&gt;" type="()V"/>
<method name="getString" type="(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="putString" type="(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="getUriFor" type="(Ljava/lang/String;)Landroid/net/Uri;" class_method="true"/>
<method name="getInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;I)I" class_method="true"/>
<method name="getInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;)I" class_method="true"/>
<method name="putInt" type="(Landroid/content/ContentResolver;Ljava/lang/String;I)Z" class_method="true"/>
<method name="getLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;J)J" class_method="true"/>
<method name="getLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;)J" class_method="true"/>
<method name="putLong" type="(Landroid/content/ContentResolver;Ljava/lang/String;J)Z" class_method="true"/>
<method name="getFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;F)F" class_method="true"/>
<method name="getFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;)F" class_method="true"/>
<method name="putFloat" type="(Landroid/content/ContentResolver;Ljava/lang/String;F)Z" class_method="true"/>
<method name="getConfiguration" type="(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V" class_method="true"/>
<method name="putConfiguration" type="(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)Z" class_method="true"/>
<method name="getShowGTalkServiceStatus" type="(Landroid/content/ContentResolver;)Z" class_method="true"/>
<method name="setShowGTalkServiceStatus" type="(Landroid/content/ContentResolver;Z)V" class_method="true"/>
</class>
<class name="android/provider/Settings">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/SyncStateContract$Constants">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/SyncStateContract$Helpers">
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)[B" class_method="true"/>
<method name="set" type="(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)V" class_method="true"/>
<method name="insert" type="(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/net/Uri;" class_method="true"/>
<method name="update" type="(Landroid/content/ContentProviderClient;Landroid/net/Uri;[B)V" class_method="true"/>
<method name="getWithUri" type="(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)Landroid/util/Pair;" class_method="true"/>
<method name="newSetOperation" type="(Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/content/ContentProviderOperation;" class_method="true"/>
<method name="newUpdateOperation" type="(Landroid/net/Uri;[B)Landroid/content/ContentProviderOperation;" class_method="true"/>
</class>
<class name="android/provider/SyncStateContract">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/provider/UserDictionary$Words">
<method name="&lt;init&gt;" type="()V"/>
<method name="addWord" type="(Landroid/content/Context;Ljava/lang/String;II)V" class_method="true"/>
</class>
<class name="android/provider/UserDictionary">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$anim">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$array">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$attr">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$bool">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$color">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$dimen">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$drawable">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$id">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$integer">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$layout">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$plurals">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$raw">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$string">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$style">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R$xml">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/R">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/sax/Element">
<method name="getChild" type="(Ljava/lang/String;)Landroid/sax/Element;"/>
<method name="getChild" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;"/>
<method name="requireChild" type="(Ljava/lang/String;)Landroid/sax/Element;"/>
<method name="requireChild" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;"/>
<method name="setElementListener" type="(Landroid/sax/ElementListener;)V"/>
<method name="setTextElementListener" type="(Landroid/sax/TextElementListener;)V"/>
<method name="setStartElementListener" type="(Landroid/sax/StartElementListener;)V"/>
<method name="setEndElementListener" type="(Landroid/sax/EndElementListener;)V"/>
<method name="setEndTextElementListener" type="(Landroid/sax/EndTextElementListener;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/sax/RootElement">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
</class>
<class name="android/service/wallpaper/WallpaperService$Engine">
<method name="&lt;init&gt;" type="(Landroid/service/wallpaper/WallpaperService;)V"/>
<method name="getSurfaceHolder" type="()Landroid/view/SurfaceHolder;"/>
<method name="getDesiredMinimumWidth" type="()I"/>
<method name="getDesiredMinimumHeight" type="()I"/>
<method name="isVisible" type="()Z"/>
<method name="isPreview" type="()Z"/>
<method name="setTouchEventsEnabled" type="(Z)V"/>
<method name="onCreate" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="onDestroy" type="()V"/>
<method name="onVisibilityChanged" type="(Z)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)V"/>
<method name="onOffsetsChanged" type="(FFFFII)V"/>
<method name="onCommand" type="(Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;"/>
<method name="onDesiredSizeChanged" type="(II)V"/>
<method name="onSurfaceChanged" type="(Landroid/view/SurfaceHolder;III)V"/>
<method name="onSurfaceRedrawNeeded" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="onSurfaceCreated" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="onSurfaceDestroyed" type="(Landroid/view/SurfaceHolder;)V"/>
</class>
<class name="android/service/wallpaper/WallpaperService">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="()V"/>
<method name="onDestroy" type="()V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="onCreateEngine" type="()Landroid/service/wallpaper/WallpaperService$Engine;"/>
</class>
<class name="android/speech/RecognitionService$Callback">
<method name="beginningOfSpeech" type="()V"/>
<method name="bufferReceived" type="([B)V"/>
<method name="endOfSpeech" type="()V"/>
<method name="error" type="(I)V"/>
<method name="partialResults" type="(Landroid/os/Bundle;)V"/>
<method name="readyForSpeech" type="(Landroid/os/Bundle;)V"/>
<method name="results" type="(Landroid/os/Bundle;)V"/>
<method name="rmsChanged" type="(F)V"/>
</class>
<class name="android/speech/RecognitionService">
<method name="&lt;init&gt;" type="()V"/>
<method name="onStartListening" type="(Landroid/content/Intent;Landroid/speech/RecognitionService$Callback;)V"/>
<method name="onCancel" type="(Landroid/speech/RecognitionService$Callback;)V"/>
<method name="onStopListening" type="(Landroid/speech/RecognitionService$Callback;)V"/>
<method name="onBind" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="onDestroy" type="()V"/>
</class>
<class name="android/speech/RecognizerIntent">
<method name="getVoiceDetailsIntent" type="(Landroid/content/Context;)Landroid/content/Intent;" class_method="true"/>
</class>
<class name="android/speech/SpeechRecognizer">
<method name="isRecognitionAvailable" type="(Landroid/content/Context;)Z" class_method="true"/>
<method name="createSpeechRecognizer" type="(Landroid/content/Context;)Landroid/speech/SpeechRecognizer;" class_method="true"/>
<method name="createSpeechRecognizer" type="(Landroid/content/Context;Landroid/content/ComponentName;)Landroid/speech/SpeechRecognizer;" class_method="true"/>
<method name="setRecognitionListener" type="(Landroid/speech/RecognitionListener;)V"/>
<method name="startListening" type="(Landroid/content/Intent;)V"/>
<method name="stopListening" type="()V"/>
<method name="cancel" type="()V"/>
<method name="destroy" type="()V"/>
</class>
<class name="android/speech/tts/TextToSpeech$Engine">
<method name="&lt;init&gt;" type="(Landroid/speech/tts/TextToSpeech;)V"/>
</class>
<class name="android/speech/tts/TextToSpeech">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/speech/tts/TextToSpeech$OnInitListener;)V"/>
<method name="shutdown" type="()V"/>
<method name="addSpeech" type="(Ljava/lang/String;Ljava/lang/String;I)I"/>
<method name="addSpeech" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="addEarcon" type="(Ljava/lang/String;Ljava/lang/String;I)I"/>
<method name="addEarcon" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="speak" type="(Ljava/lang/String;ILjava/util/HashMap;)I"/>
<method name="playEarcon" type="(Ljava/lang/String;ILjava/util/HashMap;)I"/>
<method name="playSilence" type="(JILjava/util/HashMap;)I"/>
<method name="isSpeaking" type="()Z"/>
<method name="stop" type="()I"/>
<method name="setSpeechRate" type="(F)I"/>
<method name="setPitch" type="(F)I"/>
<method name="setLanguage" type="(Ljava/util/Locale;)I"/>
<method name="getLanguage" type="()Ljava/util/Locale;"/>
<method name="isLanguageAvailable" type="(Ljava/util/Locale;)I"/>
<method name="synthesizeToFile" type="(Ljava/lang/String;Ljava/util/HashMap;Ljava/lang/String;)I"/>
<method name="setOnUtteranceCompletedListener" type="(Landroid/speech/tts/TextToSpeech$OnUtteranceCompletedListener;)I"/>
<method name="setEngineByPackageName" type="(Ljava/lang/String;)I"/>
<method name="getDefaultEngine" type="()Ljava/lang/String;"/>
<method name="areDefaultsEnforced" type="()Z"/>
</class>
<class name="android/telephony/cdma/CdmaCellLocation">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Bundle;)V"/>
<method name="getBaseStationId" type="()I"/>
<method name="getBaseStationLatitude" type="()I"/>
<method name="getBaseStationLongitude" type="()I"/>
<method name="getSystemId" type="()I"/>
<method name="getNetworkId" type="()I"/>
<method name="setStateInvalid" type="()V"/>
<method name="setCellLocationData" type="(III)V"/>
<method name="setCellLocationData" type="(IIIII)V"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="fillInNotifierBundle" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/telephony/CellLocation">
<method name="&lt;init&gt;" type="()V"/>
<method name="requestLocationUpdate" type="()V" class_method="true"/>
<method name="getEmpty" type="()Landroid/telephony/CellLocation;" class_method="true"/>
</class>
<class name="android/telephony/gsm/GsmCellLocation">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Bundle;)V"/>
<method name="getLac" type="()I"/>
<method name="getCid" type="()I"/>
<method name="getPsc" type="()I"/>
<method name="setStateInvalid" type="()V"/>
<method name="setLacAndCid" type="(II)V"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="fillInNotifierBundle" type="(Landroid/os/Bundle;)V"/>
</class>
<class name="android/telephony/gsm/SmsManager">
<method name="getDefault" type="()Landroid/telephony/gsm/SmsManager;" class_method="true"/>
<method name="sendTextMessage" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V"/>
<method name="divideMessage" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="sendMultipartTextMessage" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V"/>
<method name="sendDataMessage" type="(Ljava/lang/String;Ljava/lang/String;S[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V"/>
</class>
<class name="android/telephony/gsm/SmsMessage$MessageClass">
<method name="values" type="()[Landroid/telephony/gsm/SmsMessage$MessageClass;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/telephony/gsm/SmsMessage$MessageClass;" class_method="true"/>
</class>
<class name="android/telephony/gsm/SmsMessage$SubmitPdu">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/telephony/gsm/SmsMessage">
<method name="&lt;init&gt;" type="()V"/>
<method name="createFromPdu" type="([B)Landroid/telephony/gsm/SmsMessage;" class_method="true"/>
<method name="getTPLayerLengthForPDU" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="calculateLength" type="(Ljava/lang/CharSequence;Z)[I" class_method="true"/>
<method name="calculateLength" type="(Ljava/lang/String;Z)[I" class_method="true"/>
<method name="getSubmitPdu" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Landroid/telephony/gsm/SmsMessage$SubmitPdu;" class_method="true"/>
<method name="getSubmitPdu" type="(Ljava/lang/String;Ljava/lang/String;S[BZ)Landroid/telephony/gsm/SmsMessage$SubmitPdu;" class_method="true"/>
<method name="getServiceCenterAddress" type="()Ljava/lang/String;"/>
<method name="getOriginatingAddress" type="()Ljava/lang/String;"/>
<method name="getDisplayOriginatingAddress" type="()Ljava/lang/String;"/>
<method name="getMessageBody" type="()Ljava/lang/String;"/>
<method name="getMessageClass" type="()Landroid/telephony/gsm/SmsMessage$MessageClass;"/>
<method name="getDisplayMessageBody" type="()Ljava/lang/String;"/>
<method name="getPseudoSubject" type="()Ljava/lang/String;"/>
<method name="getTimestampMillis" type="()J"/>
<method name="isEmail" type="()Z"/>
<method name="getEmailBody" type="()Ljava/lang/String;"/>
<method name="getEmailFrom" type="()Ljava/lang/String;"/>
<method name="getProtocolIdentifier" type="()I"/>
<method name="isReplace" type="()Z"/>
<method name="isCphsMwiMessage" type="()Z"/>
<method name="isMWIClearMessage" type="()Z"/>
<method name="isMWISetMessage" type="()Z"/>
<method name="isMwiDontStore" type="()Z"/>
<method name="getUserData" type="()[B"/>
<method name="getPdu" type="()[B"/>
<method name="getStatusOnSim" type="()I"/>
<method name="getIndexOnSim" type="()I"/>
<method name="getStatus" type="()I"/>
<method name="isStatusReportMessage" type="()Z"/>
<method name="isReplyPathPresent" type="()Z"/>
</class>
<class name="android/telephony/NeighboringCellInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getRssi" type="()I"/>
<method name="getLac" type="()I"/>
<method name="getCid" type="()I"/>
<method name="getPsc" type="()I"/>
<method name="getNetworkType" type="()I"/>
<method name="setCid" type="(I)V"/>
<method name="setRssi" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/telephony/PhoneNumberFormattingTextWatcher">
<method name="&lt;init&gt;" type="()V"/>
<method name="afterTextChanged" type="(Landroid/text/Editable;)V"/>
<method name="beforeTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="onTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
</class>
<class name="android/telephony/PhoneNumberUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="isISODigit" type="(C)Z" class_method="true"/>
<method name="is12Key" type="(C)Z" class_method="true"/>
<method name="isDialable" type="(C)Z" class_method="true"/>
<method name="isReallyDialable" type="(C)Z" class_method="true"/>
<method name="isNonSeparator" type="(C)Z" class_method="true"/>
<method name="isStartsPostDial" type="(C)Z" class_method="true"/>
<method name="getNumberFromIntent" type="(Landroid/content/Intent;Landroid/content/Context;)Ljava/lang/String;" class_method="true"/>
<method name="extractNetworkPortion" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="stripSeparators" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="extractPostDialPortion" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="compare" type="(Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="compare" type="(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="toCallerIDMinMatch" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getStrippedReversed" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="stringFromStringAndTOA" type="(Ljava/lang/String;I)Ljava/lang/String;" class_method="true"/>
<method name="toaFromString" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="calledPartyBCDToString" type="([BII)Ljava/lang/String;" class_method="true"/>
<method name="calledPartyBCDFragmentToString" type="([BII)Ljava/lang/String;" class_method="true"/>
<method name="isWellFormedSmsAddress" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isGlobalPhoneNumber" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="networkPortionToCalledPartyBCD" type="(Ljava/lang/String;)[B" class_method="true"/>
<method name="networkPortionToCalledPartyBCDWithLength" type="(Ljava/lang/String;)[B" class_method="true"/>
<method name="numberToCalledPartyBCD" type="(Ljava/lang/String;)[B" class_method="true"/>
<method name="formatNumber" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getFormatTypeForLocale" type="(Ljava/util/Locale;)I" class_method="true"/>
<method name="formatNumber" type="(Landroid/text/Editable;I)V" class_method="true"/>
<method name="formatNanpNumber" type="(Landroid/text/Editable;)V" class_method="true"/>
<method name="formatJapaneseNumber" type="(Landroid/text/Editable;)V" class_method="true"/>
<method name="isEmergencyNumber" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="convertKeypadLettersToDigits" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/telephony/PhoneStateListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onServiceStateChanged" type="(Landroid/telephony/ServiceState;)V"/>
<method name="onSignalStrengthChanged" type="(I)V"/>
<method name="onMessageWaitingIndicatorChanged" type="(Z)V"/>
<method name="onCallForwardingIndicatorChanged" type="(Z)V"/>
<method name="onCellLocationChanged" type="(Landroid/telephony/CellLocation;)V"/>
<method name="onCallStateChanged" type="(ILjava/lang/String;)V"/>
<method name="onDataConnectionStateChanged" type="(I)V"/>
<method name="onDataConnectionStateChanged" type="(II)V"/>
<method name="onDataActivity" type="(I)V"/>
<method name="onSignalStrengthsChanged" type="(Landroid/telephony/SignalStrength;)V"/>
</class>
<class name="android/telephony/ServiceState">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/telephony/ServiceState;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="copyFrom" type="(Landroid/telephony/ServiceState;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="getState" type="()I"/>
<method name="getRoaming" type="()Z"/>
<method name="getOperatorAlphaLong" type="()Ljava/lang/String;"/>
<method name="getOperatorAlphaShort" type="()Ljava/lang/String;"/>
<method name="getOperatorNumeric" type="()Ljava/lang/String;"/>
<method name="getIsManualSelection" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="setStateOutOfService" type="()V"/>
<method name="setStateOff" type="()V"/>
<method name="setState" type="(I)V"/>
<method name="setRoaming" type="(Z)V"/>
<method name="setOperatorName" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setIsManualSelection" type="(Z)V"/>
</class>
<class name="android/telephony/SignalStrength">
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="getGsmSignalStrength" type="()I"/>
<method name="getGsmBitErrorRate" type="()I"/>
<method name="getCdmaDbm" type="()I"/>
<method name="getCdmaEcio" type="()I"/>
<method name="getEvdoDbm" type="()I"/>
<method name="getEvdoEcio" type="()I"/>
<method name="getEvdoSnr" type="()I"/>
<method name="isGsm" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/telephony/SmsManager">
<method name="sendTextMessage" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V"/>
<method name="divideMessage" type="(Ljava/lang/String;)Ljava/util/ArrayList;"/>
<method name="sendMultipartTextMessage" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V"/>
<method name="sendDataMessage" type="(Ljava/lang/String;Ljava/lang/String;S[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V"/>
<method name="getDefault" type="()Landroid/telephony/SmsManager;" class_method="true"/>
</class>
<class name="android/telephony/SmsMessage$MessageClass">
<method name="values" type="()[Landroid/telephony/SmsMessage$MessageClass;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/telephony/SmsMessage$MessageClass;" class_method="true"/>
</class>
<class name="android/telephony/SmsMessage$SubmitPdu">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/telephony/SmsMessage">
<method name="createFromPdu" type="([B)Landroid/telephony/SmsMessage;" class_method="true"/>
<method name="getTPLayerLengthForPDU" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="calculateLength" type="(Ljava/lang/CharSequence;Z)[I" class_method="true"/>
<method name="calculateLength" type="(Ljava/lang/String;Z)[I" class_method="true"/>
<method name="getSubmitPdu" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Landroid/telephony/SmsMessage$SubmitPdu;" class_method="true"/>
<method name="getSubmitPdu" type="(Ljava/lang/String;Ljava/lang/String;S[BZ)Landroid/telephony/SmsMessage$SubmitPdu;" class_method="true"/>
<method name="getServiceCenterAddress" type="()Ljava/lang/String;"/>
<method name="getOriginatingAddress" type="()Ljava/lang/String;"/>
<method name="getDisplayOriginatingAddress" type="()Ljava/lang/String;"/>
<method name="getMessageBody" type="()Ljava/lang/String;"/>
<method name="getMessageClass" type="()Landroid/telephony/SmsMessage$MessageClass;"/>
<method name="getDisplayMessageBody" type="()Ljava/lang/String;"/>
<method name="getPseudoSubject" type="()Ljava/lang/String;"/>
<method name="getTimestampMillis" type="()J"/>
<method name="isEmail" type="()Z"/>
<method name="getEmailBody" type="()Ljava/lang/String;"/>
<method name="getEmailFrom" type="()Ljava/lang/String;"/>
<method name="getProtocolIdentifier" type="()I"/>
<method name="isReplace" type="()Z"/>
<method name="isCphsMwiMessage" type="()Z"/>
<method name="isMWIClearMessage" type="()Z"/>
<method name="isMWISetMessage" type="()Z"/>
<method name="isMwiDontStore" type="()Z"/>
<method name="getUserData" type="()[B"/>
<method name="getPdu" type="()[B"/>
<method name="getStatusOnSim" type="()I"/>
<method name="getStatusOnIcc" type="()I"/>
<method name="getIndexOnSim" type="()I"/>
<method name="getIndexOnIcc" type="()I"/>
<method name="getStatus" type="()I"/>
<method name="isStatusReportMessage" type="()Z"/>
<method name="isReplyPathPresent" type="()Z"/>
</class>
<class name="android/telephony/TelephonyManager">
<method name="getDeviceSoftwareVersion" type="()Ljava/lang/String;"/>
<method name="getDeviceId" type="()Ljava/lang/String;"/>
<method name="getCellLocation" type="()Landroid/telephony/CellLocation;"/>
<method name="getNeighboringCellInfo" type="()Ljava/util/List;"/>
<method name="getPhoneType" type="()I"/>
<method name="getNetworkOperatorName" type="()Ljava/lang/String;"/>
<method name="getNetworkOperator" type="()Ljava/lang/String;"/>
<method name="isNetworkRoaming" type="()Z"/>
<method name="getNetworkCountryIso" type="()Ljava/lang/String;"/>
<method name="getNetworkType" type="()I"/>
<method name="hasIccCard" type="()Z"/>
<method name="getSimState" type="()I"/>
<method name="getSimOperator" type="()Ljava/lang/String;"/>
<method name="getSimOperatorName" type="()Ljava/lang/String;"/>
<method name="getSimCountryIso" type="()Ljava/lang/String;"/>
<method name="getSimSerialNumber" type="()Ljava/lang/String;"/>
<method name="getSubscriberId" type="()Ljava/lang/String;"/>
<method name="getLine1Number" type="()Ljava/lang/String;"/>
<method name="getVoiceMailNumber" type="()Ljava/lang/String;"/>
<method name="getVoiceMailAlphaTag" type="()Ljava/lang/String;"/>
<method name="getCallState" type="()I"/>
<method name="getDataActivity" type="()I"/>
<method name="getDataState" type="()I"/>
<method name="listen" type="(Landroid/telephony/PhoneStateListener;I)V"/>
</class>
<class name="android/test/ActivityInstrumentationTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;Z)V"/>
<method name="getActivity" type="()Landroid/app/Activity;"/>
<method name="setUp" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="testActivityTestCaseSetUpProperly" type="()V"/>
</class>
<class name="android/test/ActivityInstrumentationTestCase2">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="getActivity" type="()Landroid/app/Activity;"/>
<method name="setActivityIntent" type="(Landroid/content/Intent;)V"/>
<method name="setActivityInitialTouchMode" type="(Z)V"/>
<method name="setUp" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="runTest" type="()V"/>
</class>
<class name="android/test/ActivityTestCase">
<method name="&lt;init&gt;" type="()V"/>
<method name="getActivity" type="()Landroid/app/Activity;"/>
<method name="setActivity" type="(Landroid/app/Activity;)V"/>
<method name="scrubClass" type="(Ljava/lang/Class;)V"/>
</class>
<class name="android/test/ActivityUnitTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="getActivity" type="()Landroid/app/Activity;"/>
<method name="setUp" type="()V"/>
<method name="startActivity" type="(Landroid/content/Intent;Landroid/os/Bundle;Ljava/lang/Object;)Landroid/app/Activity;"/>
<method name="tearDown" type="()V"/>
<method name="setApplication" type="(Landroid/app/Application;)V"/>
<method name="setActivityContext" type="(Landroid/content/Context;)V"/>
<method name="getRequestedOrientation" type="()I"/>
<method name="getStartedActivityIntent" type="()Landroid/content/Intent;"/>
<method name="getStartedActivityRequest" type="()I"/>
<method name="isFinishCalled" type="()Z"/>
<method name="getFinishedActivityRequest" type="()I"/>
</class>
<class name="android/test/AndroidTestCase">
<method name="&lt;init&gt;" type="()V"/>
<method name="setUp" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="testAndroidTestCaseSetupProperly" type="()V"/>
<method name="setContext" type="(Landroid/content/Context;)V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="assertActivityRequiresPermission" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="assertReadingContentUriRequiresPermission" type="(Landroid/net/Uri;Ljava/lang/String;)V"/>
<method name="assertWritingContentUriRequiresPermission" type="(Landroid/net/Uri;Ljava/lang/String;)V"/>
<method name="scrubClass" type="(Ljava/lang/Class;)V"/>
</class>
<class name="android/test/AndroidTestRunner">
<method name="&lt;init&gt;" type="()V"/>
<method name="setTestClassName" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setTest" type="(Ljunit/framework/Test;)V"/>
<method name="clearTestListeners" type="()V"/>
<method name="addTestListener" type="(Ljunit/framework/TestListener;)V"/>
<method name="createTestResult" type="()Ljunit/framework/TestResult;"/>
<method name="getTestCases" type="()Ljava/util/List;"/>
<method name="getTestClassName" type="()Ljava/lang/String;"/>
<method name="getTestResult" type="()Ljunit/framework/TestResult;"/>
<method name="runTest" type="()V"/>
<method name="runTest" type="(Ljunit/framework/TestResult;)V"/>
<method name="setContext" type="(Landroid/content/Context;)V"/>
<method name="setInstrumentation" type="(Landroid/app/Instrumentation;)V"/>
<method name="setInstrumentaiton" type="(Landroid/app/Instrumentation;)V"/>
<method name="loadSuiteClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="testStarted" type="(Ljava/lang/String;)V"/>
<method name="testEnded" type="(Ljava/lang/String;)V"/>
<method name="testFailed" type="(ILjunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="runFailed" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/test/ApplicationTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="getApplication" type="()Landroid/app/Application;"/>
<method name="setUp" type="()V"/>
<method name="createApplication" type="()V"/>
<method name="terminateApplication" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="getSystemContext" type="()Landroid/content/Context;"/>
<method name="testApplicationTestCaseSetUpProperly" type="()V"/>
</class>
<class name="android/test/AssertionFailedError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/test/ComparisonFailure">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="android/test/InstrumentationTestCase">
<method name="&lt;init&gt;" type="()V"/>
<method name="injectInstrumentation" type="(Landroid/app/Instrumentation;)V"/>
<method name="injectInsrumentation" type="(Landroid/app/Instrumentation;)V"/>
<method name="getInstrumentation" type="()Landroid/app/Instrumentation;"/>
<method name="launchActivity" type="(Ljava/lang/String;Ljava/lang/Class;Landroid/os/Bundle;)Landroid/app/Activity;"/>
<method name="launchActivityWithIntent" type="(Ljava/lang/String;Ljava/lang/Class;Landroid/content/Intent;)Landroid/app/Activity;"/>
<method name="runTestOnUiThread" type="(Ljava/lang/Runnable;)V"/>
<method name="runTest" type="()V"/>
<method name="sendKeys" type="(Ljava/lang/String;)V"/>
<method name="sendKeys" type="([I)V"/>
<method name="sendRepeatedKeys" type="([I)V"/>
<method name="tearDown" type="()V"/>
</class>
<class name="android/test/InstrumentationTestRunner">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="getAndroidTestRunner" type="()Landroid/test/AndroidTestRunner;"/>
<method name="onStart" type="()V"/>
<method name="getTestSuite" type="()Ljunit/framework/TestSuite;"/>
<method name="getAllTests" type="()Ljunit/framework/TestSuite;"/>
<method name="getLoader" type="()Ljava/lang/ClassLoader;"/>
</class>
<class name="android/test/InstrumentationTestSuite">
<method name="&lt;init&gt;" type="(Landroid/app/Instrumentation;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Landroid/app/Instrumentation;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Landroid/app/Instrumentation;)V"/>
<method name="addTestSuite" type="(Ljava/lang/Class;)V"/>
<method name="runTest" type="(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"/>
</class>
<class name="android/test/IsolatedContext">
<method name="&lt;init&gt;" type="(Landroid/content/ContentResolver;Landroid/content/Context;)V"/>
<method name="getAndClearBroadcastIntents" type="()Ljava/util/List;"/>
<method name="getContentResolver" type="()Landroid/content/ContentResolver;"/>
<method name="bindService" type="(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;III)I"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getFilesDir" type="()Ljava/io/File;"/>
</class>
<class name="android/test/mock/MockApplication">
<method name="&lt;init&gt;" type="()V"/>
<method name="onCreate" type="()V"/>
<method name="onTerminate" type="()V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
</class>
<class name="android/test/mock/MockContentProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;[Landroid/content/pm/PathPermission;)V"/>
<method name="delete" type="(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="getType" type="(Landroid/net/Uri;)Ljava/lang/String;"/>
<method name="insert" type="(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;"/>
<method name="onCreate" type="()Z"/>
<method name="query" type="(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="update" type="(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I"/>
<method name="bulkInsert" type="(Landroid/net/Uri;[Landroid/content/ContentValues;)I"/>
<method name="attachInfo" type="(Landroid/content/Context;Landroid/content/pm/ProviderInfo;)V"/>
<method name="applyBatch" type="(Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;"/>
</class>
<class name="android/test/mock/MockContentResolver">
<method name="&lt;init&gt;" type="()V"/>
<method name="addProvider" type="(Ljava/lang/String;Landroid/content/ContentProvider;)V"/>
<method name="notifyChange" type="(Landroid/net/Uri;Landroid/database/ContentObserver;Z)V"/>
</class>
<class name="android/test/mock/MockContext">
<method name="&lt;init&gt;" type="()V"/>
<method name="getAssets" type="()Landroid/content/res/AssetManager;"/>
<method name="getResources" type="()Landroid/content/res/Resources;"/>
<method name="getPackageManager" type="()Landroid/content/pm/PackageManager;"/>
<method name="getContentResolver" type="()Landroid/content/ContentResolver;"/>
<method name="getMainLooper" type="()Landroid/os/Looper;"/>
<method name="getApplicationContext" type="()Landroid/content/Context;"/>
<method name="setTheme" type="(I)V"/>
<method name="getTheme" type="()Landroid/content/res/Resources$Theme;"/>
<method name="getClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getApplicationInfo" type="()Landroid/content/pm/ApplicationInfo;"/>
<method name="getPackageResourcePath" type="()Ljava/lang/String;"/>
<method name="getPackageCodePath" type="()Ljava/lang/String;"/>
<method name="getSharedPreferences" type="(Ljava/lang/String;I)Landroid/content/SharedPreferences;"/>
<method name="openFileInput" type="(Ljava/lang/String;)Ljava/io/FileInputStream;"/>
<method name="openFileOutput" type="(Ljava/lang/String;I)Ljava/io/FileOutputStream;"/>
<method name="deleteFile" type="(Ljava/lang/String;)Z"/>
<method name="getFileStreamPath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="fileList" type="()[Ljava/lang/String;"/>
<method name="getFilesDir" type="()Ljava/io/File;"/>
<method name="getExternalFilesDir" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="getCacheDir" type="()Ljava/io/File;"/>
<method name="getExternalCacheDir" type="()Ljava/io/File;"/>
<method name="getDir" type="(Ljava/lang/String;I)Ljava/io/File;"/>
<method name="openOrCreateDatabase" type="(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="getDatabasePath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="databaseList" type="()[Ljava/lang/String;"/>
<method name="deleteDatabase" type="(Ljava/lang/String;)Z"/>
<method name="getWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="peekWallpaper" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getWallpaperDesiredMinimumWidth" type="()I"/>
<method name="getWallpaperDesiredMinimumHeight" type="()I"/>
<method name="setWallpaper" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setWallpaper" type="(Ljava/io/InputStream;)V"/>
<method name="clearWallpaper" type="()V"/>
<method name="startActivity" type="(Landroid/content/Intent;)V"/>
<method name="startIntentSender" type="(Landroid/content/IntentSender;Landroid/content/Intent;III)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;)V"/>
<method name="sendOrderedBroadcast" type="(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="sendStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="sendStickyOrderedBroadcast" type="(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="removeStickyBroadcast" type="(Landroid/content/Intent;)V"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;"/>
<method name="registerReceiver" type="(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;"/>
<method name="unregisterReceiver" type="(Landroid/content/BroadcastReceiver;)V"/>
<method name="startService" type="(Landroid/content/Intent;)Landroid/content/ComponentName;"/>
<method name="stopService" type="(Landroid/content/Intent;)Z"/>
<method name="bindService" type="(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z"/>
<method name="unbindService" type="(Landroid/content/ServiceConnection;)V"/>
<method name="startInstrumentation" type="(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="checkPermission" type="(Ljava/lang/String;II)I"/>
<method name="checkCallingPermission" type="(Ljava/lang/String;)I"/>
<method name="checkCallingOrSelfPermission" type="(Ljava/lang/String;)I"/>
<method name="enforcePermission" type="(Ljava/lang/String;IILjava/lang/String;)V"/>
<method name="enforceCallingPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="enforceCallingOrSelfPermission" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="grantUriPermission" type="(Ljava/lang/String;Landroid/net/Uri;I)V"/>
<method name="revokeUriPermission" type="(Landroid/net/Uri;I)V"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;III)I"/>
<method name="checkCallingUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkCallingOrSelfUriPermission" type="(Landroid/net/Uri;I)I"/>
<method name="checkUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;IIILjava/lang/String;)V"/>
<method name="enforceCallingUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceCallingOrSelfUriPermission" type="(Landroid/net/Uri;ILjava/lang/String;)V"/>
<method name="enforceUriPermission" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V"/>
<method name="createPackageContext" type="(Ljava/lang/String;I)Landroid/content/Context;"/>
<method name="isRestricted" type="()Z"/>
</class>
<class name="android/test/mock/MockCursor">
<method name="&lt;init&gt;" type="()V"/>
<method name="getColumnCount" type="()I"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="getColumnIndexOrThrow" type="(Ljava/lang/String;)I"/>
<method name="getColumnName" type="(I)Ljava/lang/String;"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="getCount" type="()I"/>
<method name="isNull" type="(I)Z"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getShort" type="(I)S"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="getBlob" type="(I)[B"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="getPosition" type="()I"/>
<method name="isAfterLast" type="()Z"/>
<method name="isBeforeFirst" type="()Z"/>
<method name="isFirst" type="()Z"/>
<method name="isLast" type="()Z"/>
<method name="move" type="(I)Z"/>
<method name="moveToFirst" type="()Z"/>
<method name="moveToLast" type="()Z"/>
<method name="moveToNext" type="()Z"/>
<method name="moveToPrevious" type="()Z"/>
<method name="moveToPosition" type="(I)Z"/>
<method name="copyStringToBuffer" type="(ILandroid/database/CharArrayBuffer;)V"/>
<method name="deactivate" type="()V"/>
<method name="close" type="()V"/>
<method name="isClosed" type="()Z"/>
<method name="requery" type="()Z"/>
<method name="registerContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="respond" type="(Landroid/os/Bundle;)Landroid/os/Bundle;"/>
<method name="getWantsAllOnMoveCalls" type="()Z"/>
<method name="commitUpdates" type="()Z"/>
<method name="commitUpdates" type="(Ljava/util/Map;)Z"/>
<method name="hasUpdates" type="()Z"/>
<method name="setNotificationUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)V"/>
<method name="supportsUpdates" type="()Z"/>
<method name="deleteRow" type="()Z"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="updateBlob" type="(I[B)Z"/>
<method name="updateDouble" type="(ID)Z"/>
<method name="updateFloat" type="(IF)Z"/>
<method name="updateInt" type="(II)Z"/>
<method name="updateLong" type="(IJ)Z"/>
<method name="updateShort" type="(IS)Z"/>
<method name="updateString" type="(ILjava/lang/String;)Z"/>
<method name="updateToNull" type="(I)Z"/>
<method name="abortUpdates" type="()V"/>
</class>
<class name="android/test/mock/MockDialogInterface">
<method name="&lt;init&gt;" type="()V"/>
<method name="cancel" type="()V"/>
<method name="dismiss" type="()V"/>
</class>
<class name="android/test/mock/MockPackageManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="getPackageInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;"/>
<method name="currentToCanonicalPackageNames" type="([Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="canonicalToCurrentPackageNames" type="([Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="getLaunchIntentForPackage" type="(Ljava/lang/String;)Landroid/content/Intent;"/>
<method name="getPackageGids" type="(Ljava/lang/String;)[I"/>
<method name="getPermissionInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;"/>
<method name="queryPermissionsByGroup" type="(Ljava/lang/String;I)Ljava/util/List;"/>
<method name="getPermissionGroupInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;"/>
<method name="getAllPermissionGroups" type="(I)Ljava/util/List;"/>
<method name="getApplicationInfo" type="(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;"/>
<method name="getActivityInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;"/>
<method name="getReceiverInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;"/>
<method name="getServiceInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;"/>
<method name="getProviderInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;"/>
<method name="getInstalledPackages" type="(I)Ljava/util/List;"/>
<method name="checkPermission" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="addPermission" type="(Landroid/content/pm/PermissionInfo;)Z"/>
<method name="addPermissionAsync" type="(Landroid/content/pm/PermissionInfo;)Z"/>
<method name="removePermission" type="(Ljava/lang/String;)V"/>
<method name="checkSignatures" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="checkSignatures" type="(II)I"/>
<method name="getPackagesForUid" type="(I)[Ljava/lang/String;"/>
<method name="getNameForUid" type="(I)Ljava/lang/String;"/>
<method name="getInstalledApplications" type="(I)Ljava/util/List;"/>
<method name="resolveActivity" type="(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;"/>
<method name="queryIntentActivities" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="queryIntentActivityOptions" type="(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="queryBroadcastReceivers" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="resolveService" type="(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;"/>
<method name="queryIntentServices" type="(Landroid/content/Intent;I)Ljava/util/List;"/>
<method name="resolveContentProvider" type="(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;"/>
<method name="queryContentProviders" type="(Ljava/lang/String;II)Ljava/util/List;"/>
<method name="getInstrumentationInfo" type="(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;"/>
<method name="queryInstrumentation" type="(Ljava/lang/String;I)Ljava/util/List;"/>
<method name="getDrawable" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityIcon" type="(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityIcon" type="(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;"/>
<method name="getDefaultActivityIcon" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationIcon" type="(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationIcon" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityLogo" type="(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;"/>
<method name="getActivityLogo" type="(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationLogo" type="(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;"/>
<method name="getApplicationLogo" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;"/>
<method name="getText" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;"/>
<method name="getXml" type="(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;"/>
<method name="getApplicationLabel" type="(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;"/>
<method name="getResourcesForActivity" type="(Landroid/content/ComponentName;)Landroid/content/res/Resources;"/>
<method name="getResourcesForApplication" type="(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;"/>
<method name="getResourcesForApplication" type="(Ljava/lang/String;)Landroid/content/res/Resources;"/>
<method name="getPackageArchiveInfo" type="(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;"/>
<method name="getInstallerPackageName" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="addPackageToPreferred" type="(Ljava/lang/String;)V"/>
<method name="removePackageFromPreferred" type="(Ljava/lang/String;)V"/>
<method name="getPreferredPackages" type="(I)Ljava/util/List;"/>
<method name="setComponentEnabledSetting" type="(Landroid/content/ComponentName;II)V"/>
<method name="getComponentEnabledSetting" type="(Landroid/content/ComponentName;)I"/>
<method name="setApplicationEnabledSetting" type="(Ljava/lang/String;II)V"/>
<method name="getApplicationEnabledSetting" type="(Ljava/lang/String;)I"/>
<method name="addPreferredActivity" type="(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V"/>
<method name="clearPackagePreferredActivities" type="(Ljava/lang/String;)V"/>
<method name="getPreferredActivities" type="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I"/>
<method name="getSystemSharedLibraryNames" type="()[Ljava/lang/String;"/>
<method name="getSystemAvailableFeatures" type="()[Landroid/content/pm/FeatureInfo;"/>
<method name="hasSystemFeature" type="(Ljava/lang/String;)Z"/>
<method name="isSafeMode" type="()Z"/>
<method name="setPackageObbPath" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="android/test/mock/MockResources">
<method name="&lt;init&gt;" type="()V"/>
<method name="updateConfiguration" type="(Landroid/content/res/Configuration;Landroid/util/DisplayMetrics;)V"/>
<method name="getText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getQuantityText" type="(II)Ljava/lang/CharSequence;"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="getString" type="(I[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="getQuantityString" type="(II[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="getQuantityString" type="(II)Ljava/lang/String;"/>
<method name="getText" type="(ILjava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
<method name="getTextArray" type="(I)[Ljava/lang/CharSequence;"/>
<method name="getStringArray" type="(I)[Ljava/lang/String;"/>
<method name="getIntArray" type="(I)[I"/>
<method name="obtainTypedArray" type="(I)Landroid/content/res/TypedArray;"/>
<method name="getDimension" type="(I)F"/>
<method name="getDimensionPixelOffset" type="(I)I"/>
<method name="getDimensionPixelSize" type="(I)I"/>
<method name="getDrawable" type="(I)Landroid/graphics/drawable/Drawable;"/>
<method name="getMovie" type="(I)Landroid/graphics/Movie;"/>
<method name="getColor" type="(I)I"/>
<method name="getColorStateList" type="(I)Landroid/content/res/ColorStateList;"/>
<method name="getInteger" type="(I)I"/>
<method name="getLayout" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="getAnimation" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="getXml" type="(I)Landroid/content/res/XmlResourceParser;"/>
<method name="openRawResource" type="(I)Ljava/io/InputStream;"/>
<method name="openRawResourceFd" type="(I)Landroid/content/res/AssetFileDescriptor;"/>
<method name="getValue" type="(ILandroid/util/TypedValue;Z)V"/>
<method name="getValue" type="(Ljava/lang/String;Landroid/util/TypedValue;Z)V"/>
<method name="obtainAttributes" type="(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;"/>
<method name="getDisplayMetrics" type="()Landroid/util/DisplayMetrics;"/>
<method name="getConfiguration" type="()Landroid/content/res/Configuration;"/>
<method name="getIdentifier" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getResourceName" type="(I)Ljava/lang/String;"/>
<method name="getResourcePackageName" type="(I)Ljava/lang/String;"/>
<method name="getResourceTypeName" type="(I)Ljava/lang/String;"/>
<method name="getResourceEntryName" type="(I)Ljava/lang/String;"/>
</class>
<class name="android/test/MoreAsserts">
<method name="assertAssignableFrom" type="(Ljava/lang/Class;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertAssignableFrom" type="(Ljava/lang/Class;Ljava/lang/Class;)V" class_method="true"/>
<method name="assertNotEqual" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNotEqual" type="(Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;[B[B)V" class_method="true"/>
<method name="assertEquals" type="([B[B)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;[I[I)V" class_method="true"/>
<method name="assertEquals" type="([I[I)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;[D[D)V" class_method="true"/>
<method name="assertEquals" type="([D[D)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEquals" type="([Ljava/lang/Object;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/util/Set;Ljava/util/Set;)V" class_method="true"/>
<method name="assertMatchesRegex" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/MatchResult;" class_method="true"/>
<method name="assertMatchesRegex" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/MatchResult;" class_method="true"/>
<method name="assertContainsRegex" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/MatchResult;" class_method="true"/>
<method name="assertContainsRegex" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/MatchResult;" class_method="true"/>
<method name="assertNotMatchesRegex" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertNotMatchesRegex" type="(Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertNotContainsRegex" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertNotContainsRegex" type="(Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertContentsInOrder" type="(Ljava/lang/String;Ljava/lang/Iterable;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertContentsInOrder" type="(Ljava/lang/Iterable;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertContentsInAnyOrder" type="(Ljava/lang/String;Ljava/lang/Iterable;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertContentsInAnyOrder" type="(Ljava/lang/Iterable;[Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEmpty" type="(Ljava/lang/String;Ljava/lang/Iterable;)V" class_method="true"/>
<method name="assertEmpty" type="(Ljava/lang/Iterable;)V" class_method="true"/>
<method name="assertEmpty" type="(Ljava/lang/String;Ljava/util/Map;)V" class_method="true"/>
<method name="assertEmpty" type="(Ljava/util/Map;)V" class_method="true"/>
<method name="assertNotEmpty" type="(Ljava/lang/String;Ljava/lang/Iterable;)V" class_method="true"/>
<method name="assertNotEmpty" type="(Ljava/lang/Iterable;)V" class_method="true"/>
<method name="assertNotEmpty" type="(Ljava/lang/String;Ljava/util/Map;)V" class_method="true"/>
<method name="assertNotEmpty" type="(Ljava/util/Map;)V" class_method="true"/>
<method name="checkEqualsAndHashCodeMethods" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V" class_method="true"/>
<method name="checkEqualsAndHashCodeMethods" type="(Ljava/lang/Object;Ljava/lang/Object;Z)V" class_method="true"/>
</class>
<class name="android/test/ProviderTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Ljava/lang/String;)V"/>
<method name="getProvider" type="()Landroid/content/ContentProvider;"/>
<method name="setUp" type="()V"/>
<method name="getMockContentResolver" type="()Landroid/test/mock/MockContentResolver;"/>
<method name="getMockContext" type="()Landroid/test/IsolatedContext;"/>
<method name="newResolverWithContentProviderFromSql" type="(Landroid/content/Context;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Landroid/content/ContentResolver;" class_method="true"/>
</class>
<class name="android/test/ProviderTestCase2">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Ljava/lang/String;)V"/>
<method name="getProvider" type="()Landroid/content/ContentProvider;"/>
<method name="setUp" type="()V"/>
<method name="getMockContentResolver" type="()Landroid/test/mock/MockContentResolver;"/>
<method name="getMockContext" type="()Landroid/test/IsolatedContext;"/>
<method name="newResolverWithContentProviderFromSql" type="(Landroid/content/Context;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Landroid/content/ContentResolver;" class_method="true"/>
</class>
<class name="android/test/RenamingDelegatingContext">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/content/Context;Ljava/lang/String;)V"/>
<method name="providerWithRenamedContext" type="(Ljava/lang/Class;Landroid/content/Context;Ljava/lang/String;)Landroid/content/ContentProvider;" class_method="true"/>
<method name="providerWithRenamedContext" type="(Ljava/lang/Class;Landroid/content/Context;Ljava/lang/String;Z)Landroid/content/ContentProvider;" class_method="true"/>
<method name="makeExistingFilesAndDbsAccessible" type="()V"/>
<method name="getDatabasePrefix" type="()Ljava/lang/String;"/>
<method name="openOrCreateDatabase" type="(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;"/>
<method name="deleteDatabase" type="(Ljava/lang/String;)Z"/>
<method name="getDatabasePath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="databaseList" type="()[Ljava/lang/String;"/>
<method name="openFileInput" type="(Ljava/lang/String;)Ljava/io/FileInputStream;"/>
<method name="openFileOutput" type="(Ljava/lang/String;I)Ljava/io/FileOutputStream;"/>
<method name="getFileStreamPath" type="(Ljava/lang/String;)Ljava/io/File;"/>
<method name="deleteFile" type="(Ljava/lang/String;)Z"/>
<method name="fileList" type="()[Ljava/lang/String;"/>
<method name="getCacheDir" type="()Ljava/io/File;"/>
</class>
<class name="android/test/ServiceTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="getService" type="()Landroid/app/Service;"/>
<method name="setUp" type="()V"/>
<method name="setupService" type="()V"/>
<method name="startService" type="(Landroid/content/Intent;)V"/>
<method name="bindService" type="(Landroid/content/Intent;)Landroid/os/IBinder;"/>
<method name="shutdownService" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="setApplication" type="(Landroid/app/Application;)V"/>
<method name="getApplication" type="()Landroid/app/Application;"/>
<method name="getSystemContext" type="()Landroid/content/Context;"/>
<method name="testServiceTestCaseSetUpProperly" type="()V"/>
</class>
<class name="android/test/SingleLaunchActivityTestCase">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;)V"/>
<method name="getActivity" type="()Landroid/app/Activity;"/>
<method name="setUp" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="testActivityTestCaseSetUpProperly" type="()V"/>
</class>
<class name="android/test/suitebuilder/TestMethod">
<method name="&lt;init&gt;" type="(Ljava/lang/reflect/Method;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljunit/framework/TestCase;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getEnclosingClassname" type="()Ljava/lang/String;"/>
<method name="getAnnotation" type="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"/>
<method name="getEnclosingClass" type="()Ljava/lang/Class;"/>
<method name="createTest" type="()Ljunit/framework/TestCase;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/test/suitebuilder/TestSuiteBuilder$FailedToCreateTests">
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="testSuiteConstructionFailed" type="()V"/>
</class>
<class name="android/test/suitebuilder/TestSuiteBuilder">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)V"/>
<method name="includePackages" type="([Ljava/lang/String;)Landroid/test/suitebuilder/TestSuiteBuilder;"/>
<method name="excludePackages" type="([Ljava/lang/String;)Landroid/test/suitebuilder/TestSuiteBuilder;"/>
<method name="addRequirements" type="(Ljava/util/List;)Landroid/test/suitebuilder/TestSuiteBuilder;"/>
<method name="includeAllPackagesUnderHere" type="()Landroid/test/suitebuilder/TestSuiteBuilder;"/>
<method name="named" type="(Ljava/lang/String;)Landroid/test/suitebuilder/TestSuiteBuilder;"/>
<method name="build" type="()Ljunit/framework/TestSuite;"/>
<method name="getSuiteName" type="()Ljava/lang/String;"/>
<method name="addRequirements" type="([Lcom/android/internal/util/Predicate;)Landroid/test/suitebuilder/TestSuiteBuilder;"/>
</class>
<class name="android/test/SyncBaseInstrumentation">
<method name="&lt;init&gt;" type="()V"/>
<method name="setUp" type="()V"/>
<method name="syncProvider" type="(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="cancelSyncsandDisableAutoSync" type="()V"/>
</class>
<class name="android/test/TouchUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="dragQuarterScreenDown" type="(Landroid/test/ActivityInstrumentationTestCase;)V" class_method="true"/>
<method name="dragQuarterScreenDown" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;)V" class_method="true"/>
<method name="dragQuarterScreenUp" type="(Landroid/test/ActivityInstrumentationTestCase;)V" class_method="true"/>
<method name="dragQuarterScreenUp" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;)V" class_method="true"/>
<method name="scrollToBottom" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/ViewGroup;)V" class_method="true"/>
<method name="scrollToBottom" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;Landroid/view/ViewGroup;)V" class_method="true"/>
<method name="scrollToTop" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/ViewGroup;)V" class_method="true"/>
<method name="scrollToTop" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;Landroid/view/ViewGroup;)V" class_method="true"/>
<method name="dragViewToBottom" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="dragViewToBottom" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;Landroid/view/View;)V" class_method="true"/>
<method name="dragViewToBottom" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;I)V" class_method="true"/>
<method name="dragViewToBottom" type="(Landroid/test/InstrumentationTestCase;Landroid/app/Activity;Landroid/view/View;I)V" class_method="true"/>
<method name="tapView" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="touchAndCancelView" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="clickView" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="longClickView" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="longClickView" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="dragViewToTop" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="dragViewToTop" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;I)V" class_method="true"/>
<method name="dragViewToTop" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;)V" class_method="true"/>
<method name="dragViewToTop" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;I)V" class_method="true"/>
<method name="dragViewBy" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;III)I" class_method="true"/>
<method name="dragViewBy" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;III)I" class_method="true"/>
<method name="dragViewTo" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;III)I" class_method="true"/>
<method name="dragViewTo" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;III)I" class_method="true"/>
<method name="dragViewToX" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;II)I" class_method="true"/>
<method name="dragViewToX" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;II)I" class_method="true"/>
<method name="dragViewToY" type="(Landroid/test/ActivityInstrumentationTestCase;Landroid/view/View;II)I" class_method="true"/>
<method name="dragViewToY" type="(Landroid/test/InstrumentationTestCase;Landroid/view/View;II)I" class_method="true"/>
<method name="drag" type="(Landroid/test/ActivityInstrumentationTestCase;FFFFI)V" class_method="true"/>
<method name="drag" type="(Landroid/test/InstrumentationTestCase;FFFFI)V" class_method="true"/>
</class>
<class name="android/test/ViewAsserts">
<method name="assertOnScreen" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertOffScreenBelow" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertOffScreenAbove" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertHasScreenCoordinates" type="(Landroid/view/View;Landroid/view/View;II)V" class_method="true"/>
<method name="assertBaselineAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertRightAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertRightAligned" type="(Landroid/view/View;Landroid/view/View;I)V" class_method="true"/>
<method name="assertLeftAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertLeftAligned" type="(Landroid/view/View;Landroid/view/View;I)V" class_method="true"/>
<method name="assertBottomAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertBottomAligned" type="(Landroid/view/View;Landroid/view/View;I)V" class_method="true"/>
<method name="assertTopAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertTopAligned" type="(Landroid/view/View;Landroid/view/View;I)V" class_method="true"/>
<method name="assertHorizontalCenterAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertVerticalCenterAligned" type="(Landroid/view/View;Landroid/view/View;)V" class_method="true"/>
<method name="assertGroupIntegrity" type="(Landroid/view/ViewGroup;)V" class_method="true"/>
<method name="assertGroupContains" type="(Landroid/view/ViewGroup;Landroid/view/View;)V" class_method="true"/>
<method name="assertGroupNotContains" type="(Landroid/view/ViewGroup;Landroid/view/View;)V" class_method="true"/>
</class>
<class name="android/text/AlteredCharSequence">
<method name="make" type="(Ljava/lang/CharSequence;[CII)Landroid/text/AlteredCharSequence;" class_method="true"/>
<method name="charAt" type="(I)C"/>
<method name="length" type="()I"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="getChars" type="(II[CI)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/text/AndroidCharacter">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDirectionalities" type="([C[BI)V" class_method="true"/>
<method name="getEastAsianWidth" type="(C)I" class_method="true"/>
<method name="getEastAsianWidths" type="([CII[B)V" class_method="true"/>
<method name="mirror" type="([CII)Z" class_method="true"/>
<method name="getMirror" type="(C)C" class_method="true"/>
</class>
<class name="android/text/Annotation">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getKey" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
</class>
<class name="android/text/AutoText">
<method name="get" type="(Ljava/lang/CharSequence;IILandroid/view/View;)Ljava/lang/String;" class_method="true"/>
<method name="getSize" type="(Landroid/view/View;)I" class_method="true"/>
</class>
<class name="android/text/BoringLayout$Metrics">
<method name="&lt;init&gt;" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/text/BoringLayout">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)V"/>
<method name="make" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;" class_method="true"/>
<method name="make" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;" class_method="true"/>
<method name="replaceOrMake" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;"/>
<method name="replaceOrMake" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;"/>
<method name="isBoring" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;)Landroid/text/BoringLayout$Metrics;" class_method="true"/>
<method name="isBoring" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;Landroid/text/BoringLayout$Metrics;)Landroid/text/BoringLayout$Metrics;" class_method="true"/>
<method name="getHeight" type="()I"/>
<method name="getLineCount" type="()I"/>
<method name="getLineTop" type="(I)I"/>
<method name="getLineDescent" type="(I)I"/>
<method name="getLineStart" type="(I)I"/>
<method name="getParagraphDirection" type="(I)I"/>
<method name="getLineContainsTab" type="(I)Z"/>
<method name="getLineMax" type="(I)F"/>
<method name="getLineDirections" type="(I)Landroid/text/Layout$Directions;"/>
<method name="getTopPadding" type="()I"/>
<method name="getBottomPadding" type="()I"/>
<method name="getEllipsisCount" type="(I)I"/>
<method name="getEllipsisStart" type="(I)I"/>
<method name="getEllipsizedWidth" type="()I"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;I)V"/>
<method name="ellipsized" type="(II)V"/>
</class>
<class name="android/text/ClipboardManager">
<method name="getText" type="()Ljava/lang/CharSequence;"/>
<method name="setText" type="(Ljava/lang/CharSequence;)V"/>
<method name="hasText" type="()Z"/>
</class>
<class name="android/text/DynamicLayout">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V"/>
<method name="getLineCount" type="()I"/>
<method name="getLineTop" type="(I)I"/>
<method name="getLineDescent" type="(I)I"/>
<method name="getLineStart" type="(I)I"/>
<method name="getLineContainsTab" type="(I)Z"/>
<method name="getParagraphDirection" type="(I)I"/>
<method name="getLineDirections" type="(I)Landroid/text/Layout$Directions;"/>
<method name="getTopPadding" type="()I"/>
<method name="getBottomPadding" type="()I"/>
<method name="getEllipsizedWidth" type="()I"/>
<method name="getEllipsisStart" type="(I)I"/>
<method name="getEllipsisCount" type="(I)I"/>
</class>
<class name="android/text/Editable$Factory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstance" type="()Landroid/text/Editable$Factory;" class_method="true"/>
<method name="newEditable" type="(Ljava/lang/CharSequence;)Landroid/text/Editable;"/>
</class>
<class name="android/text/format/DateFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="is24HourFormat" type="(Landroid/content/Context;)Z" class_method="true"/>
<method name="getTimeFormat" type="(Landroid/content/Context;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateFormat" type="(Landroid/content/Context;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getLongDateFormat" type="(Landroid/content/Context;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getMediumDateFormat" type="(Landroid/content/Context;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateFormatOrder" type="(Landroid/content/Context;)[C" class_method="true"/>
<method name="format" type="(Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;" class_method="true"/>
<method name="format" type="(Ljava/lang/CharSequence;Ljava/util/Date;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="format" type="(Ljava/lang/CharSequence;Ljava/util/Calendar;)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/text/format/DateUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDayOfWeekString" type="(II)Ljava/lang/String;" class_method="true"/>
<method name="getAMPMString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="getMonthString" type="(II)Ljava/lang/String;" class_method="true"/>
<method name="getRelativeTimeSpanString" type="(J)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getRelativeTimeSpanString" type="(JJJ)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getRelativeTimeSpanString" type="(JJJI)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getRelativeDateTimeString" type="(Landroid/content/Context;JJJI)Ljava/lang/CharSequence;" class_method="true"/>
<method name="formatElapsedTime" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="formatElapsedTime" type="(Ljava/lang/StringBuilder;J)Ljava/lang/String;" class_method="true"/>
<method name="formatSameDayTime" type="(JJII)Ljava/lang/CharSequence;" class_method="true"/>
<method name="isToday" type="(J)Z" class_method="true"/>
<method name="formatDateRange" type="(Landroid/content/Context;JJI)Ljava/lang/String;" class_method="true"/>
<method name="formatDateRange" type="(Landroid/content/Context;Ljava/util/Formatter;JJI)Ljava/util/Formatter;" class_method="true"/>
<method name="formatDateRange" type="(Landroid/content/Context;Ljava/util/Formatter;JJILjava/lang/String;)Ljava/util/Formatter;" class_method="true"/>
<method name="formatDateTime" type="(Landroid/content/Context;JI)Ljava/lang/String;" class_method="true"/>
<method name="getRelativeTimeSpanString" type="(Landroid/content/Context;JZ)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getRelativeTimeSpanString" type="(Landroid/content/Context;J)Ljava/lang/CharSequence;" class_method="true"/>
</class>
<class name="android/text/format/Formatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="formatFileSize" type="(Landroid/content/Context;J)Ljava/lang/String;" class_method="true"/>
<method name="formatShortFileSize" type="(Landroid/content/Context;J)Ljava/lang/String;" class_method="true"/>
<method name="formatIpAddress" type="(I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/text/format/Time">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/text/format/Time;)V"/>
<method name="normalize" type="(Z)J"/>
<method name="switchTimezone" type="(Ljava/lang/String;)V"/>
<method name="getActualMaximum" type="(I)I"/>
<method name="clear" type="(Ljava/lang/String;)V"/>
<method name="compare" type="(Landroid/text/format/Time;Landroid/text/format/Time;)I" class_method="true"/>
<method name="format" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="parse" type="(Ljava/lang/String;)Z"/>
<method name="parse3339" type="(Ljava/lang/String;)Z"/>
<method name="getCurrentTimezone" type="()Ljava/lang/String;" class_method="true"/>
<method name="setToNow" type="()V"/>
<method name="toMillis" type="(Z)J"/>
<method name="set" type="(J)V"/>
<method name="format2445" type="()Ljava/lang/String;"/>
<method name="set" type="(Landroid/text/format/Time;)V"/>
<method name="set" type="(IIIIII)V"/>
<method name="set" type="(III)V"/>
<method name="before" type="(Landroid/text/format/Time;)Z"/>
<method name="after" type="(Landroid/text/format/Time;)Z"/>
<method name="getWeekNumber" type="()I"/>
<method name="format3339" type="(Z)Ljava/lang/String;"/>
<method name="isEpoch" type="(Landroid/text/format/Time;)Z" class_method="true"/>
<method name="getJulianDay" type="(JJ)I" class_method="true"/>
<method name="setJulianDay" type="(I)J"/>
</class>
<class name="android/text/Html">
<method name="fromHtml" type="(Ljava/lang/String;)Landroid/text/Spanned;" class_method="true"/>
<method name="fromHtml" type="(Ljava/lang/String;Landroid/text/Html$ImageGetter;Landroid/text/Html$TagHandler;)Landroid/text/Spanned;" class_method="true"/>
<method name="toHtml" type="(Landroid/text/Spanned;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/text/InputFilter$AllCaps">
<method name="&lt;init&gt;" type="()V"/>
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
</class>
<class name="android/text/InputFilter$LengthFilter">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
</class>
<class name="android/text/Layout$Alignment">
<method name="values" type="()[Landroid/text/Layout$Alignment;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/text/Layout$Alignment;" class_method="true"/>
</class>
<class name="android/text/Layout$Directions">
</class>
<class name="android/text/Layout">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FF)V"/>
<method name="getDesiredWidth" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;)F" class_method="true"/>
<method name="getDesiredWidth" type="(Ljava/lang/CharSequence;IILandroid/text/TextPaint;)F" class_method="true"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;I)V"/>
<method name="getText" type="()Ljava/lang/CharSequence;"/>
<method name="getPaint" type="()Landroid/text/TextPaint;"/>
<method name="getWidth" type="()I"/>
<method name="getEllipsizedWidth" type="()I"/>
<method name="increaseWidthTo" type="(I)V"/>
<method name="getHeight" type="()I"/>
<method name="getAlignment" type="()Landroid/text/Layout$Alignment;"/>
<method name="getSpacingMultiplier" type="()F"/>
<method name="getSpacingAdd" type="()F"/>
<method name="getLineCount" type="()I"/>
<method name="getLineBounds" type="(ILandroid/graphics/Rect;)I"/>
<method name="getLineTop" type="(I)I"/>
<method name="getLineDescent" type="(I)I"/>
<method name="getLineStart" type="(I)I"/>
<method name="getParagraphDirection" type="(I)I"/>
<method name="getLineContainsTab" type="(I)Z"/>
<method name="getLineDirections" type="(I)Landroid/text/Layout$Directions;"/>
<method name="getTopPadding" type="()I"/>
<method name="getBottomPadding" type="()I"/>
<method name="getPrimaryHorizontal" type="(I)F"/>
<method name="getSecondaryHorizontal" type="(I)F"/>
<method name="getLineLeft" type="(I)F"/>
<method name="getLineRight" type="(I)F"/>
<method name="getLineMax" type="(I)F"/>
<method name="getLineWidth" type="(I)F"/>
<method name="getLineForVertical" type="(I)I"/>
<method name="getLineForOffset" type="(I)I"/>
<method name="getOffsetForHorizontal" type="(IF)I"/>
<method name="getLineEnd" type="(I)I"/>
<method name="getLineVisibleEnd" type="(I)I"/>
<method name="getLineBottom" type="(I)I"/>
<method name="getLineBaseline" type="(I)I"/>
<method name="getLineAscent" type="(I)I"/>
<method name="getOffsetToLeftOf" type="(I)I"/>
<method name="getOffsetToRightOf" type="(I)I"/>
<method name="getCursorPath" type="(ILandroid/graphics/Path;Ljava/lang/CharSequence;)V"/>
<method name="getSelectionPath" type="(IILandroid/graphics/Path;)V"/>
<method name="getParagraphAlignment" type="(I)Landroid/text/Layout$Alignment;"/>
<method name="getParagraphLeft" type="(I)I"/>
<method name="getParagraphRight" type="(I)I"/>
<method name="isSpanned" type="()Z"/>
<method name="getEllipsisStart" type="(I)I"/>
<method name="getEllipsisCount" type="(I)I"/>
</class>
<class name="android/text/LoginFilter$PasswordFilterGMail">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="isAllowed" type="(C)Z"/>
</class>
<class name="android/text/LoginFilter$UsernameFilterGeneric">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="isAllowed" type="(C)Z"/>
</class>
<class name="android/text/LoginFilter$UsernameFilterGMail">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="isAllowed" type="(C)Z"/>
</class>
<class name="android/text/LoginFilter">
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
<method name="onStart" type="()V"/>
<method name="onInvalidCharacter" type="(C)V"/>
<method name="onStop" type="()V"/>
<method name="isAllowed" type="(C)Z"/>
</class>
<class name="android/text/method/ArrowKeyMovementMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="onKeyDown" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/KeyEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="canSelectArbitrarily" type="()Z"/>
<method name="initialize" type="(Landroid/widget/TextView;Landroid/text/Spannable;)V"/>
<method name="onTakeFocus" type="(Landroid/widget/TextView;Landroid/text/Spannable;I)V"/>
<method name="getInstance" type="()Landroid/text/method/MovementMethod;" class_method="true"/>
</class>
<class name="android/text/method/BaseKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="backspace" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/view/View;Landroid/text/Editable;Landroid/view/KeyEvent;)Z"/>
</class>
<class name="android/text/method/CharacterPickerDialog">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/View;Landroid/text/Editable;Ljava/lang/String;Z)V"/>
<method name="onCreate" type="(Landroid/os/Bundle;)V"/>
<method name="onItemClick" type="(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"/>
<method name="onClick" type="(Landroid/view/View;)V"/>
</class>
<class name="android/text/method/DateKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInputType" type="()I"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/DateKeyListener;" class_method="true"/>
</class>
<class name="android/text/method/DateTimeKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInputType" type="()I"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/DateTimeKeyListener;" class_method="true"/>
</class>
<class name="android/text/method/DialerKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/DialerKeyListener;" class_method="true"/>
<method name="getInputType" type="()I"/>
<method name="lookup" type="(Landroid/view/KeyEvent;Landroid/text/Spannable;)I"/>
</class>
<class name="android/text/method/DigitsKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(ZZ)V"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/DigitsKeyListener;" class_method="true"/>
<method name="getInstance" type="(ZZ)Landroid/text/method/DigitsKeyListener;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;)Landroid/text/method/DigitsKeyListener;" class_method="true"/>
<method name="getInputType" type="()I"/>
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
</class>
<class name="android/text/method/HideReturnsTransformationMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="getOriginal" type="()[C"/>
<method name="getReplacement" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/HideReturnsTransformationMethod;" class_method="true"/>
</class>
<class name="android/text/method/LinkMovementMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="onKeyDown" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="up" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="down" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="left" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="right" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="onKeyUp" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="initialize" type="(Landroid/widget/TextView;Landroid/text/Spannable;)V"/>
<method name="onTakeFocus" type="(Landroid/widget/TextView;Landroid/text/Spannable;I)V"/>
<method name="getInstance" type="()Landroid/text/method/MovementMethod;" class_method="true"/>
</class>
<class name="android/text/method/MetaKeyKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="resetMetaState" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="getMetaState" type="(Ljava/lang/CharSequence;)I" class_method="true"/>
<method name="getMetaState" type="(Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="adjustMetaAfterKeypress" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="isMetaTracker" type="(Ljava/lang/CharSequence;Ljava/lang/Object;)Z" class_method="true"/>
<method name="isSelectingMetaTracker" type="(Ljava/lang/CharSequence;Ljava/lang/Object;)Z" class_method="true"/>
<method name="resetLockedMeta" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="clearMetaKeyState" type="(Landroid/view/View;Landroid/text/Editable;I)V"/>
<method name="clearMetaKeyState" type="(Landroid/text/Editable;I)V" class_method="true"/>
<method name="resetLockedMeta" type="(J)J" class_method="true"/>
<method name="getMetaState" type="(J)I" class_method="true"/>
<method name="getMetaState" type="(JI)I" class_method="true"/>
<method name="adjustMetaAfterKeypress" type="(J)J" class_method="true"/>
<method name="handleKeyDown" type="(JILandroid/view/KeyEvent;)J" class_method="true"/>
<method name="handleKeyUp" type="(JILandroid/view/KeyEvent;)J" class_method="true"/>
<method name="clearMetaKeyState" type="(JI)J"/>
</class>
<class name="android/text/method/MultiTapKeyListener">
<method name="&lt;init&gt;" type="(Landroid/text/method/TextKeyListener$Capitalize;Z)V"/>
<method name="getInstance" type="(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/MultiTapKeyListener;" class_method="true"/>
<method name="getInputType" type="()I"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onSpanChanged" type="(Landroid/text/Spannable;Ljava/lang/Object;IIII)V"/>
<method name="onSpanAdded" type="(Landroid/text/Spannable;Ljava/lang/Object;II)V"/>
<method name="onSpanRemoved" type="(Landroid/text/Spannable;Ljava/lang/Object;II)V"/>
</class>
<class name="android/text/method/NumberKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="lookup" type="(Landroid/view/KeyEvent;Landroid/text/Spannable;)I"/>
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
<method name="ok" type="([CC)Z" class_method="true"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
</class>
<class name="android/text/method/PasswordTransformationMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="getTransformation" type="(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;"/>
<method name="getInstance" type="()Landroid/text/method/PasswordTransformationMethod;" class_method="true"/>
<method name="beforeTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="onTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="afterTextChanged" type="(Landroid/text/Editable;)V"/>
<method name="onFocusChanged" type="(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V"/>
</class>
<class name="android/text/method/QwertyKeyListener">
<method name="&lt;init&gt;" type="(Landroid/text/method/TextKeyListener$Capitalize;Z)V"/>
<method name="getInstance" type="(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/QwertyKeyListener;" class_method="true"/>
<method name="getInputType" type="()I"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="markAsReplaced" type="(Landroid/text/Spannable;IILjava/lang/String;)V" class_method="true"/>
</class>
<class name="android/text/method/ReplacementTransformationMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="getOriginal" type="()[C"/>
<method name="getReplacement" type="()[C"/>
<method name="getTransformation" type="(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;"/>
<method name="onFocusChanged" type="(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V"/>
</class>
<class name="android/text/method/ScrollingMovementMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="left" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="right" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="up" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="down" type="(Landroid/widget/TextView;Landroid/text/Spannable;)Z"/>
<method name="onKeyDown" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/KeyEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="initialize" type="(Landroid/widget/TextView;Landroid/text/Spannable;)V"/>
<method name="canSelectArbitrarily" type="()Z"/>
<method name="onTakeFocus" type="(Landroid/widget/TextView;Landroid/text/Spannable;I)V"/>
<method name="getInstance" type="()Landroid/text/method/MovementMethod;" class_method="true"/>
</class>
<class name="android/text/method/SingleLineTransformationMethod">
<method name="&lt;init&gt;" type="()V"/>
<method name="getOriginal" type="()[C"/>
<method name="getReplacement" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/SingleLineTransformationMethod;" class_method="true"/>
</class>
<class name="android/text/method/TextKeyListener$Capitalize">
<method name="values" type="()[Landroid/text/method/TextKeyListener$Capitalize;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/text/method/TextKeyListener$Capitalize;" class_method="true"/>
</class>
<class name="android/text/method/TextKeyListener">
<method name="&lt;init&gt;" type="(Landroid/text/method/TextKeyListener$Capitalize;Z)V"/>
<method name="getInstance" type="(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/TextKeyListener;" class_method="true"/>
<method name="getInstance" type="()Landroid/text/method/TextKeyListener;" class_method="true"/>
<method name="shouldCap" type="(Landroid/text/method/TextKeyListener$Capitalize;Ljava/lang/CharSequence;I)Z" class_method="true"/>
<method name="getInputType" type="()I"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/view/View;Landroid/text/Editable;Landroid/view/KeyEvent;)Z"/>
<method name="clear" type="(Landroid/text/Editable;)V" class_method="true"/>
<method name="onSpanAdded" type="(Landroid/text/Spannable;Ljava/lang/Object;II)V"/>
<method name="onSpanRemoved" type="(Landroid/text/Spannable;Ljava/lang/Object;II)V"/>
<method name="onSpanChanged" type="(Landroid/text/Spannable;Ljava/lang/Object;IIII)V"/>
<method name="release" type="()V"/>
</class>
<class name="android/text/method/TimeKeyListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInputType" type="()I"/>
<method name="getAcceptedChars" type="()[C"/>
<method name="getInstance" type="()Landroid/text/method/TimeKeyListener;" class_method="true"/>
</class>
<class name="android/text/method/Touch">
<method name="scrollTo" type="(Landroid/widget/TextView;Landroid/text/Layout;II)V" class_method="true"/>
<method name="onTouchEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z" class_method="true"/>
<method name="getInitialScrollX" type="(Landroid/widget/TextView;Landroid/text/Spannable;)I" class_method="true"/>
<method name="getInitialScrollY" type="(Landroid/widget/TextView;Landroid/text/Spannable;)I" class_method="true"/>
</class>
<class name="android/text/NoCopySpan$Concrete">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/text/Selection">
<method name="getSelectionStart" type="(Ljava/lang/CharSequence;)I" class_method="true"/>
<method name="getSelectionEnd" type="(Ljava/lang/CharSequence;)I" class_method="true"/>
<method name="setSelection" type="(Landroid/text/Spannable;II)V" class_method="true"/>
<method name="setSelection" type="(Landroid/text/Spannable;I)V" class_method="true"/>
<method name="selectAll" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="extendSelection" type="(Landroid/text/Spannable;I)V" class_method="true"/>
<method name="removeSelection" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="moveUp" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="moveDown" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="moveLeft" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="moveRight" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendUp" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendDown" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendLeft" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendRight" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendToLeftEdge" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="extendToRightEdge" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="moveToLeftEdge" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
<method name="moveToRightEdge" type="(Landroid/text/Spannable;Landroid/text/Layout;)Z" class_method="true"/>
</class>
<class name="android/text/Spannable$Factory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstance" type="()Landroid/text/Spannable$Factory;" class_method="true"/>
<method name="newSpannable" type="(Ljava/lang/CharSequence;)Landroid/text/Spannable;"/>
</class>
<class name="android/text/SpannableString">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;)V"/>
<method name="valueOf" type="(Ljava/lang/CharSequence;)Landroid/text/SpannableString;" class_method="true"/>
<method name="setSpan" type="(Ljava/lang/Object;III)V"/>
<method name="removeSpan" type="(Ljava/lang/Object;)V"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="nextSpanTransition" type="(IILjava/lang/Class;)I"/>
<method name="getSpans" type="(IILjava/lang/Class;)[Ljava/lang/Object;"/>
<method name="getSpanFlags" type="(Ljava/lang/Object;)I"/>
<method name="getSpanEnd" type="(Ljava/lang/Object;)I"/>
<method name="getSpanStart" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/text/SpannableStringBuilder">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;II)V"/>
<method name="valueOf" type="(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;" class_method="true"/>
<method name="charAt" type="(I)C"/>
<method name="length" type="()I"/>
<method name="insert" type="(ILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;"/>
<method name="insert" type="(ILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;"/>
<method name="delete" type="(II)Landroid/text/SpannableStringBuilder;"/>
<method name="clear" type="()V"/>
<method name="clearSpans" type="()V"/>
<method name="append" type="(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;"/>
<method name="append" type="(C)Landroid/text/SpannableStringBuilder;"/>
<method name="replace" type="(IILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;"/>
<method name="replace" type="(IILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;"/>
<method name="setSpan" type="(Ljava/lang/Object;III)V"/>
<method name="removeSpan" type="(Ljava/lang/Object;)V"/>
<method name="getSpanStart" type="(Ljava/lang/Object;)I"/>
<method name="getSpanEnd" type="(Ljava/lang/Object;)I"/>
<method name="getSpanFlags" type="(Ljava/lang/Object;)I"/>
<method name="getSpans" type="(IILjava/lang/Class;)[Ljava/lang/Object;"/>
<method name="nextSpanTransition" type="(IILjava/lang/Class;)I"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="getChars" type="(II[CI)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="setFilters" type="([Landroid/text/InputFilter;)V"/>
<method name="getFilters" type="()[Landroid/text/InputFilter;"/>
<method name="append" type="(C)Landroid/text/Editable;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Landroid/text/Editable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Landroid/text/Editable;"/>
<method name="delete" type="(II)Landroid/text/Editable;"/>
<method name="insert" type="(ILjava/lang/CharSequence;)Landroid/text/Editable;"/>
<method name="insert" type="(ILjava/lang/CharSequence;II)Landroid/text/Editable;"/>
<method name="replace" type="(IILjava/lang/CharSequence;)Landroid/text/Editable;"/>
<method name="replace" type="(IILjava/lang/CharSequence;II)Landroid/text/Editable;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="android/text/SpannableStringInternal">
<method name="length" type="()I"/>
<method name="charAt" type="(I)C"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getChars" type="(II[CI)V"/>
<method name="getSpanStart" type="(Ljava/lang/Object;)I"/>
<method name="getSpanEnd" type="(Ljava/lang/Object;)I"/>
<method name="getSpanFlags" type="(Ljava/lang/Object;)I"/>
<method name="getSpans" type="(IILjava/lang/Class;)[Ljava/lang/Object;"/>
<method name="nextSpanTransition" type="(IILjava/lang/Class;)I"/>
</class>
<class name="android/text/SpannedString">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;)V"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="valueOf" type="(Ljava/lang/CharSequence;)Landroid/text/SpannedString;" class_method="true"/>
<method name="nextSpanTransition" type="(IILjava/lang/Class;)I"/>
<method name="getSpans" type="(IILjava/lang/Class;)[Ljava/lang/Object;"/>
<method name="getSpanFlags" type="(Ljava/lang/Object;)I"/>
<method name="getSpanEnd" type="(Ljava/lang/Object;)I"/>
<method name="getSpanStart" type="(Ljava/lang/Object;)I"/>
</class>
<class name="android/text/StaticLayout">
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V"/>
<method name="getLineForVertical" type="(I)I"/>
<method name="getLineCount" type="()I"/>
<method name="getLineTop" type="(I)I"/>
<method name="getLineDescent" type="(I)I"/>
<method name="getLineStart" type="(I)I"/>
<method name="getParagraphDirection" type="(I)I"/>
<method name="getLineContainsTab" type="(I)Z"/>
<method name="getLineDirections" type="(I)Landroid/text/Layout$Directions;"/>
<method name="getTopPadding" type="()I"/>
<method name="getBottomPadding" type="()I"/>
<method name="getEllipsisCount" type="(I)I"/>
<method name="getEllipsisStart" type="(I)I"/>
<method name="getEllipsizedWidth" type="()I"/>
</class>
<class name="android/text/style/AbsoluteSizeSpan">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IZ)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getSize" type="()I"/>
<method name="getDip" type="()Z"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/AlignmentSpan$Standard">
<method name="&lt;init&gt;" type="(Landroid/text/Layout$Alignment;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getAlignment" type="()Landroid/text/Layout$Alignment;"/>
</class>
<class name="android/text/style/BackgroundColorSpan">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getBackgroundColor" type="()I"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/BulletSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getLeadingMargin" type="(Z)I"/>
<method name="drawLeadingMargin" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V"/>
</class>
<class name="android/text/style/CharacterStyle">
<method name="&lt;init&gt;" type="()V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="wrap" type="(Landroid/text/style/CharacterStyle;)Landroid/text/style/CharacterStyle;" class_method="true"/>
<method name="getUnderlying" type="()Landroid/text/style/CharacterStyle;"/>
</class>
<class name="android/text/style/ClickableSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="onClick" type="(Landroid/view/View;)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/DrawableMarginSpan">
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;I)V"/>
<method name="getLeadingMargin" type="(Z)I"/>
<method name="drawLeadingMargin" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V"/>
<method name="chooseHeight" type="(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;)V"/>
</class>
<class name="android/text/style/DynamicDrawableSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getVerticalAlignment" type="()I"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getSize" type="(Landroid/graphics/Paint;Ljava/lang/CharSequence;IILandroid/graphics/Paint$FontMetricsInt;)I"/>
<method name="draw" type="(Landroid/graphics/Canvas;Ljava/lang/CharSequence;IIFIIILandroid/graphics/Paint;)V"/>
</class>
<class name="android/text/style/ForegroundColorSpan">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getForegroundColor" type="()I"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/IconMarginSpan">
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;I)V"/>
<method name="getLeadingMargin" type="(Z)I"/>
<method name="drawLeadingMargin" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V"/>
<method name="chooseHeight" type="(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;)V"/>
</class>
<class name="android/text/style/ImageSpan">
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Bitmap;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/graphics/Bitmap;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/graphics/Bitmap;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/net/Uri;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/net/Uri;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II)V"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="getSource" type="()Ljava/lang/String;"/>
</class>
<class name="android/text/style/LeadingMarginSpan$Standard">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getLeadingMargin" type="(Z)I"/>
<method name="drawLeadingMargin" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V"/>
</class>
<class name="android/text/style/MaskFilterSpan">
<method name="&lt;init&gt;" type="(Landroid/graphics/MaskFilter;)V"/>
<method name="getMaskFilter" type="()Landroid/graphics/MaskFilter;"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/MetricAffectingSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
<method name="getUnderlying" type="()Landroid/text/style/MetricAffectingSpan;"/>
<method name="getUnderlying" type="()Landroid/text/style/CharacterStyle;"/>
</class>
<class name="android/text/style/QuoteSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getColor" type="()I"/>
<method name="getLeadingMargin" type="(Z)I"/>
<method name="drawLeadingMargin" type="(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V"/>
</class>
<class name="android/text/style/RasterizerSpan">
<method name="&lt;init&gt;" type="(Landroid/graphics/Rasterizer;)V"/>
<method name="getRasterizer" type="()Landroid/graphics/Rasterizer;"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/RelativeSizeSpan">
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getSizeChange" type="()F"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/ReplacementSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="getSize" type="(Landroid/graphics/Paint;Ljava/lang/CharSequence;IILandroid/graphics/Paint$FontMetricsInt;)I"/>
<method name="draw" type="(Landroid/graphics/Canvas;Ljava/lang/CharSequence;IIFIIILandroid/graphics/Paint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/ScaleXSpan">
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getScaleX" type="()F"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/StrikethroughSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/StyleSpan">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getStyle" type="()I"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/SubscriptSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/SuperscriptSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/TabStopSpan$Standard">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getTabStop" type="()I"/>
</class>
<class name="android/text/style/TextAppearanceSpan">
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;IILandroid/content/res/ColorStateList;Landroid/content/res/ColorStateList;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getFamily" type="()Ljava/lang/String;"/>
<method name="getTextColor" type="()Landroid/content/res/ColorStateList;"/>
<method name="getLinkTextColor" type="()Landroid/content/res/ColorStateList;"/>
<method name="getTextSize" type="()I"/>
<method name="getTextStyle" type="()I"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/TypefaceSpan">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getFamily" type="()Ljava/lang/String;"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
<method name="updateMeasureState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/UnderlineSpan">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="updateDrawState" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/style/URLSpan">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSpanTypeId" type="()I"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="getURL" type="()Ljava/lang/String;"/>
<method name="onClick" type="(Landroid/view/View;)V"/>
</class>
<class name="android/text/TextPaint">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/graphics/Paint;)V"/>
<method name="set" type="(Landroid/text/TextPaint;)V"/>
</class>
<class name="android/text/TextUtils$SimpleStringSplitter">
<method name="&lt;init&gt;" type="(C)V"/>
<method name="setString" type="(Ljava/lang/String;)V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="hasNext" type="()Z"/>
<method name="next" type="()Ljava/lang/String;"/>
<method name="remove" type="()V"/>
<method name="next" type="()Ljava/lang/Object;"/>
</class>
<class name="android/text/TextUtils$TruncateAt">
<method name="values" type="()[Landroid/text/TextUtils$TruncateAt;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/text/TextUtils$TruncateAt;" class_method="true"/>
</class>
<class name="android/text/TextUtils">
<method name="getChars" type="(Ljava/lang/CharSequence;II[CI)V" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;C)I" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;CI)I" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;CII)I" class_method="true"/>
<method name="lastIndexOf" type="(Ljava/lang/CharSequence;C)I" class_method="true"/>
<method name="lastIndexOf" type="(Ljava/lang/CharSequence;CI)I" class_method="true"/>
<method name="lastIndexOf" type="(Ljava/lang/CharSequence;CII)I" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="indexOf" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;II)I" class_method="true"/>
<method name="regionMatches" type="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z" class_method="true"/>
<method name="substring" type="(Ljava/lang/CharSequence;II)Ljava/lang/String;" class_method="true"/>
<method name="join" type="(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="join" type="(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;" class_method="true"/>
<method name="split" type="(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;" class_method="true"/>
<method name="split" type="(Ljava/lang/String;Ljava/util/regex/Pattern;)[Ljava/lang/String;" class_method="true"/>
<method name="stringOrSpannedString" type="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="isEmpty" type="(Ljava/lang/CharSequence;)Z" class_method="true"/>
<method name="getTrimmedLength" type="(Ljava/lang/CharSequence;)I" class_method="true"/>
<method name="equals" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" class_method="true"/>
<method name="getReverse" type="(Ljava/lang/CharSequence;II)Ljava/lang/CharSequence;" class_method="true"/>
<method name="writeToParcel" type="(Ljava/lang/CharSequence;Landroid/os/Parcel;I)V" class_method="true"/>
<method name="dumpSpans" type="(Ljava/lang/CharSequence;Landroid/util/Printer;Ljava/lang/String;)V" class_method="true"/>
<method name="replace" type="(Ljava/lang/CharSequence;[Ljava/lang/String;[Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="expandTemplate" type="(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="getOffsetBefore" type="(Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="getOffsetAfter" type="(Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="copySpansFrom" type="(Landroid/text/Spanned;IILjava/lang/Class;Landroid/text/Spannable;I)V" class_method="true"/>
<method name="ellipsize" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="ellipsize" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;ZLandroid/text/TextUtils$EllipsizeCallback;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="commaEllipsize" type="(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLjava/lang/String;Ljava/lang/String;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="htmlEncode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="concat" type="([Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" class_method="true"/>
<method name="isGraphic" type="(Ljava/lang/CharSequence;)Z" class_method="true"/>
<method name="isGraphic" type="(C)Z" class_method="true"/>
<method name="isDigitsOnly" type="(Ljava/lang/CharSequence;)Z" class_method="true"/>
<method name="getCapsMode" type="(Ljava/lang/CharSequence;II)I" class_method="true"/>
</class>
<class name="android/text/util/Linkify">
<method name="&lt;init&gt;" type="()V"/>
<method name="addLinks" type="(Landroid/text/Spannable;I)Z" class_method="true"/>
<method name="addLinks" type="(Landroid/widget/TextView;I)Z" class_method="true"/>
<method name="addLinks" type="(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V" class_method="true"/>
<method name="addLinks" type="(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V" class_method="true"/>
<method name="addLinks" type="(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z" class_method="true"/>
<method name="addLinks" type="(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z" class_method="true"/>
</class>
<class name="android/text/util/Rfc822Token">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getAddress" type="()Ljava/lang/String;"/>
<method name="getComment" type="()Ljava/lang/String;"/>
<method name="setName" type="(Ljava/lang/String;)V"/>
<method name="setAddress" type="(Ljava/lang/String;)V"/>
<method name="setComment" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="quoteNameIfNecessary" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="quoteName" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="quoteComment" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="android/text/util/Rfc822Tokenizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="tokenize" type="(Ljava/lang/CharSequence;Ljava/util/Collection;)V" class_method="true"/>
<method name="tokenize" type="(Ljava/lang/CharSequence;)[Landroid/text/util/Rfc822Token;" class_method="true"/>
<method name="findTokenStart" type="(Ljava/lang/CharSequence;I)I"/>
<method name="findTokenEnd" type="(Ljava/lang/CharSequence;I)I"/>
<method name="terminateToken" type="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
</class>
<class name="android/util/AndroidException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="android/util/AndroidRuntimeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="android/util/Base64">
<method name="decode" type="(Ljava/lang/String;I)[B" class_method="true"/>
<method name="decode" type="([BI)[B" class_method="true"/>
<method name="decode" type="([BIII)[B" class_method="true"/>
<method name="encodeToString" type="([BI)Ljava/lang/String;" class_method="true"/>
<method name="encodeToString" type="([BIII)Ljava/lang/String;" class_method="true"/>
<method name="encode" type="([BI)[B" class_method="true"/>
<method name="encode" type="([BIII)[B" class_method="true"/>
</class>
<class name="android/util/Base64InputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;I)V"/>
<method name="markSupported" type="()Z"/>
<method name="mark" type="(I)V"/>
<method name="reset" type="()V"/>
<method name="close" type="()V"/>
<method name="available" type="()I"/>
<method name="skip" type="(J)J"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
</class>
<class name="android/util/Base64OutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;I)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([BII)V"/>
<method name="close" type="()V"/>
</class>
<class name="android/util/Config">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/util/DebugUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="isObjectSelected" type="(Ljava/lang/Object;)Z" class_method="true"/>
</class>
<class name="android/util/DisplayMetrics">
<method name="&lt;init&gt;" type="()V"/>
<method name="setTo" type="(Landroid/util/DisplayMetrics;)V"/>
<method name="setToDefaults" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/util/EventLog$Event">
<method name="getProcessId" type="()I"/>
<method name="getThreadId" type="()I"/>
<method name="getTimeNanos" type="()J"/>
<method name="getTag" type="()I"/>
<method name="getData" type="()Ljava/lang/Object;"/>
</class>
<class name="android/util/EventLog">
<method name="&lt;init&gt;" type="()V"/>
<method name="writeEvent" type="(II)I" class_method="true"/>
<method name="writeEvent" type="(IJ)I" class_method="true"/>
<method name="writeEvent" type="(ILjava/lang/String;)I" class_method="true"/>
<method name="writeEvent" type="(I[Ljava/lang/Object;)I" class_method="true"/>
<method name="readEvents" type="([ILjava/util/Collection;)V" class_method="true"/>
<method name="getTagName" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="getTagCode" type="(Ljava/lang/String;)I" class_method="true"/>
</class>
<class name="android/util/EventLogTags$Description">
</class>
<class name="android/util/EventLogTags">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/BufferedReader;)V"/>
<method name="get" type="(Ljava/lang/String;)Landroid/util/EventLogTags$Description;"/>
<method name="get" type="(I)Landroid/util/EventLogTags$Description;"/>
</class>
<class name="android/util/FloatMath">
<method name="floor" type="(F)F" class_method="true"/>
<method name="ceil" type="(F)F" class_method="true"/>
<method name="sin" type="(F)F" class_method="true"/>
<method name="cos" type="(F)F" class_method="true"/>
<method name="sqrt" type="(F)F" class_method="true"/>
</class>
<class name="android/util/Log">
<method name="v" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="v" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="d" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="d" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="i" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="i" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="w" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="w" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="isLoggable" type="(Ljava/lang/String;I)Z" class_method="true"/>
<method name="w" type="(Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="e" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="e" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="wtf" type="(Ljava/lang/String;Ljava/lang/String;)I" class_method="true"/>
<method name="wtf" type="(Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="wtf" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I" class_method="true"/>
<method name="getStackTraceString" type="(Ljava/lang/Throwable;)Ljava/lang/String;" class_method="true"/>
<method name="println" type="(ILjava/lang/String;Ljava/lang/String;)I" class_method="true"/>
</class>
<class name="android/util/LogPrinter">
<method name="&lt;init&gt;" type="(ILjava/lang/String;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/util/MonthDisplayHelper">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getYear" type="()I"/>
<method name="getMonth" type="()I"/>
<method name="getWeekStartDay" type="()I"/>
<method name="getFirstDayOfMonth" type="()I"/>
<method name="getNumberOfDaysInMonth" type="()I"/>
<method name="getOffset" type="()I"/>
<method name="getDigitsForRow" type="(I)[I"/>
<method name="getDayAt" type="(II)I"/>
<method name="getRowOf" type="(I)I"/>
<method name="getColumnOf" type="(I)I"/>
<method name="previousMonth" type="()V"/>
<method name="nextMonth" type="()V"/>
<method name="isWithinCurrentMonth" type="(II)Z"/>
</class>
<class name="android/util/Pair">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="create" type="(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;" class_method="true"/>
</class>
<class name="android/util/Patterns">
<method name="concatGroups" type="(Ljava/util/regex/Matcher;)Ljava/lang/String;" class_method="true"/>
<method name="digitsAndPlusOnly" type="(Ljava/util/regex/Matcher;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/util/PrintStreamPrinter">
<method name="&lt;init&gt;" type="(Ljava/io/PrintStream;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/util/PrintWriterPrinter">
<method name="&lt;init&gt;" type="(Ljava/io/PrintWriter;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/util/SparseArray">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="get" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="delete" type="(I)V"/>
<method name="remove" type="(I)V"/>
<method name="put" type="(ILjava/lang/Object;)V"/>
<method name="size" type="()I"/>
<method name="keyAt" type="(I)I"/>
<method name="valueAt" type="(I)Ljava/lang/Object;"/>
<method name="setValueAt" type="(ILjava/lang/Object;)V"/>
<method name="indexOfKey" type="(I)I"/>
<method name="indexOfValue" type="(Ljava/lang/Object;)I"/>
<method name="clear" type="()V"/>
<method name="append" type="(ILjava/lang/Object;)V"/>
</class>
<class name="android/util/SparseBooleanArray">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="get" type="(I)Z"/>
<method name="get" type="(IZ)Z"/>
<method name="delete" type="(I)V"/>
<method name="put" type="(IZ)V"/>
<method name="size" type="()I"/>
<method name="keyAt" type="(I)I"/>
<method name="valueAt" type="(I)Z"/>
<method name="indexOfKey" type="(I)I"/>
<method name="indexOfValue" type="(Z)I"/>
<method name="clear" type="()V"/>
<method name="append" type="(IZ)V"/>
</class>
<class name="android/util/SparseIntArray">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="get" type="(I)I"/>
<method name="get" type="(II)I"/>
<method name="delete" type="(I)V"/>
<method name="removeAt" type="(I)V"/>
<method name="put" type="(II)V"/>
<method name="size" type="()I"/>
<method name="keyAt" type="(I)I"/>
<method name="valueAt" type="(I)I"/>
<method name="indexOfKey" type="(I)I"/>
<method name="indexOfValue" type="(I)I"/>
<method name="clear" type="()V"/>
<method name="append" type="(II)V"/>
</class>
<class name="android/util/StateSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="isWildCard" type="([I)Z" class_method="true"/>
<method name="stateSetMatches" type="([I[I)Z" class_method="true"/>
<method name="stateSetMatches" type="([II)Z" class_method="true"/>
<method name="trimStateSet" type="([II)[I" class_method="true"/>
<method name="dump" type="([I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/util/StringBuilderPrinter">
<method name="&lt;init&gt;" type="(Ljava/lang/StringBuilder;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/util/TimeFormatException">
</class>
<class name="android/util/TimeUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="getTimeZone" type="(IZJLjava/lang/String;)Ljava/util/TimeZone;" class_method="true"/>
<method name="getTimeZoneDatabaseVersion" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/util/TimingLogger">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="reset" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="reset" type="()V"/>
<method name="addSplit" type="(Ljava/lang/String;)V"/>
<method name="dumpToLog" type="()V"/>
</class>
<class name="android/util/TypedValue">
<method name="&lt;init&gt;" type="()V"/>
<method name="getFloat" type="()F"/>
<method name="complexToFloat" type="(I)F" class_method="true"/>
<method name="complexToDimension" type="(ILandroid/util/DisplayMetrics;)F" class_method="true"/>
<method name="complexToDimensionPixelOffset" type="(ILandroid/util/DisplayMetrics;)I" class_method="true"/>
<method name="complexToDimensionPixelSize" type="(ILandroid/util/DisplayMetrics;)I" class_method="true"/>
<method name="complexToDimensionNoisy" type="(ILandroid/util/DisplayMetrics;)F" class_method="true"/>
<method name="applyDimension" type="(IFLandroid/util/DisplayMetrics;)F" class_method="true"/>
<method name="getDimension" type="(Landroid/util/DisplayMetrics;)F"/>
<method name="complexToFraction" type="(IFF)F" class_method="true"/>
<method name="getFraction" type="(FF)F"/>
<method name="coerceToString" type="()Ljava/lang/CharSequence;"/>
<method name="coerceToString" type="(II)Ljava/lang/String;" class_method="true"/>
<method name="setTo" type="(Landroid/util/TypedValue;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/util/Xml$Encoding">
<method name="values" type="()[Landroid/util/Xml$Encoding;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/util/Xml$Encoding;" class_method="true"/>
</class>
<class name="android/util/Xml">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Ljava/lang/String;Lorg/xml/sax/ContentHandler;)V" class_method="true"/>
<method name="parse" type="(Ljava/io/Reader;Lorg/xml/sax/ContentHandler;)V" class_method="true"/>
<method name="parse" type="(Ljava/io/InputStream;Landroid/util/Xml$Encoding;Lorg/xml/sax/ContentHandler;)V" class_method="true"/>
<method name="newPullParser" type="()Lorg/xmlpull/v1/XmlPullParser;" class_method="true"/>
<method name="newSerializer" type="()Lorg/xmlpull/v1/XmlSerializer;" class_method="true"/>
<method name="findEncodingByName" type="(Ljava/lang/String;)Landroid/util/Xml$Encoding;" class_method="true"/>
<method name="asAttributeSet" type="(Lorg/xmlpull/v1/XmlPullParser;)Landroid/util/AttributeSet;" class_method="true"/>
</class>
<class name="android/view/AbsSavedState">
<method name="&lt;init&gt;" type="(Landroid/os/Parcelable;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="getSuperState" type="()Landroid/os/Parcelable;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/view/accessibility/AccessibilityEvent">
<method name="isChecked" type="()Z"/>
<method name="setChecked" type="(Z)V"/>
<method name="isEnabled" type="()Z"/>
<method name="setEnabled" type="(Z)V"/>
<method name="isPassword" type="()Z"/>
<method name="setPassword" type="(Z)V"/>
<method name="setFullScreen" type="(Z)V"/>
<method name="isFullScreen" type="()Z"/>
<method name="getEventType" type="()I"/>
<method name="setEventType" type="(I)V"/>
<method name="getItemCount" type="()I"/>
<method name="setItemCount" type="(I)V"/>
<method name="getCurrentItemIndex" type="()I"/>
<method name="setCurrentItemIndex" type="(I)V"/>
<method name="getFromIndex" type="()I"/>
<method name="setFromIndex" type="(I)V"/>
<method name="getAddedCount" type="()I"/>
<method name="setAddedCount" type="(I)V"/>
<method name="getRemovedCount" type="()I"/>
<method name="setRemovedCount" type="(I)V"/>
<method name="getEventTime" type="()J"/>
<method name="setEventTime" type="(J)V"/>
<method name="getClassName" type="()Ljava/lang/CharSequence;"/>
<method name="setClassName" type="(Ljava/lang/CharSequence;)V"/>
<method name="getPackageName" type="()Ljava/lang/CharSequence;"/>
<method name="setPackageName" type="(Ljava/lang/CharSequence;)V"/>
<method name="getText" type="()Ljava/util/List;"/>
<method name="getBeforeText" type="()Ljava/lang/CharSequence;"/>
<method name="setBeforeText" type="(Ljava/lang/CharSequence;)V"/>
<method name="getContentDescription" type="()Ljava/lang/CharSequence;"/>
<method name="setContentDescription" type="(Ljava/lang/CharSequence;)V"/>
<method name="getParcelableData" type="()Landroid/os/Parcelable;"/>
<method name="setParcelableData" type="(Landroid/os/Parcelable;)V"/>
<method name="obtain" type="(I)Landroid/view/accessibility/AccessibilityEvent;" class_method="true"/>
<method name="obtain" type="()Landroid/view/accessibility/AccessibilityEvent;" class_method="true"/>
<method name="recycle" type="()V"/>
<method name="initFromParcel" type="(Landroid/os/Parcel;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/view/accessibility/AccessibilityManager">
<method name="isEnabled" type="()Z"/>
<method name="sendAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)V"/>
<method name="interrupt" type="()V"/>
<method name="getAccessibilityServiceList" type="()Ljava/util/List;"/>
</class>
<class name="android/view/animation/AccelerateDecelerateInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/AccelerateInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/AlphaAnimation">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(FF)V"/>
<method name="applyTransformation" type="(FLandroid/view/animation/Transformation;)V"/>
<method name="willChangeTransformationMatrix" type="()Z"/>
<method name="willChangeBounds" type="()Z"/>
</class>
<class name="android/view/animation/Animation$Description">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/view/animation/Animation">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="clone" type="()Landroid/view/animation/Animation;"/>
<method name="reset" type="()V"/>
<method name="cancel" type="()V"/>
<method name="isInitialized" type="()Z"/>
<method name="initialize" type="(IIII)V"/>
<method name="setInterpolator" type="(Landroid/content/Context;I)V"/>
<method name="setInterpolator" type="(Landroid/view/animation/Interpolator;)V"/>
<method name="setStartOffset" type="(J)V"/>
<method name="setDuration" type="(J)V"/>
<method name="restrictDuration" type="(J)V"/>
<method name="scaleCurrentDuration" type="(F)V"/>
<method name="setStartTime" type="(J)V"/>
<method name="start" type="()V"/>
<method name="startNow" type="()V"/>
<method name="setRepeatMode" type="(I)V"/>
<method name="setRepeatCount" type="(I)V"/>
<method name="isFillEnabled" type="()Z"/>
<method name="setFillEnabled" type="(Z)V"/>
<method name="setFillBefore" type="(Z)V"/>
<method name="setFillAfter" type="(Z)V"/>
<method name="setZAdjustment" type="(I)V"/>
<method name="setDetachWallpaper" type="(Z)V"/>
<method name="getInterpolator" type="()Landroid/view/animation/Interpolator;"/>
<method name="getStartTime" type="()J"/>
<method name="getDuration" type="()J"/>
<method name="getStartOffset" type="()J"/>
<method name="getRepeatMode" type="()I"/>
<method name="getRepeatCount" type="()I"/>
<method name="getFillBefore" type="()Z"/>
<method name="getFillAfter" type="()Z"/>
<method name="getZAdjustment" type="()I"/>
<method name="getDetachWallpaper" type="()Z"/>
<method name="willChangeTransformationMatrix" type="()Z"/>
<method name="willChangeBounds" type="()Z"/>
<method name="setAnimationListener" type="(Landroid/view/animation/Animation$AnimationListener;)V"/>
<method name="ensureInterpolator" type="()V"/>
<method name="computeDurationHint" type="()J"/>
<method name="getTransformation" type="(JLandroid/view/animation/Transformation;)Z"/>
<method name="hasStarted" type="()Z"/>
<method name="hasEnded" type="()Z"/>
<method name="applyTransformation" type="(FLandroid/view/animation/Transformation;)V"/>
<method name="resolveSize" type="(IFII)F"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/view/animation/AnimationSet">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="clone" type="()Landroid/view/animation/AnimationSet;"/>
<method name="setFillAfter" type="(Z)V"/>
<method name="setFillBefore" type="(Z)V"/>
<method name="setRepeatMode" type="(I)V"/>
<method name="setStartOffset" type="(J)V"/>
<method name="setDuration" type="(J)V"/>
<method name="addAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="setStartTime" type="(J)V"/>
<method name="getStartTime" type="()J"/>
<method name="restrictDuration" type="(J)V"/>
<method name="getDuration" type="()J"/>
<method name="computeDurationHint" type="()J"/>
<method name="getTransformation" type="(JLandroid/view/animation/Transformation;)Z"/>
<method name="scaleCurrentDuration" type="(F)V"/>
<method name="initialize" type="(IIII)V"/>
<method name="reset" type="()V"/>
<method name="getAnimations" type="()Ljava/util/List;"/>
<method name="willChangeTransformationMatrix" type="()Z"/>
<method name="willChangeBounds" type="()Z"/>
<method name="clone" type="()Landroid/view/animation/Animation;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/view/animation/AnimationUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="currentAnimationTimeMillis" type="()J" class_method="true"/>
<method name="loadAnimation" type="(Landroid/content/Context;I)Landroid/view/animation/Animation;" class_method="true"/>
<method name="loadLayoutAnimation" type="(Landroid/content/Context;I)Landroid/view/animation/LayoutAnimationController;" class_method="true"/>
<method name="makeInAnimation" type="(Landroid/content/Context;Z)Landroid/view/animation/Animation;" class_method="true"/>
<method name="makeOutAnimation" type="(Landroid/content/Context;Z)Landroid/view/animation/Animation;" class_method="true"/>
<method name="makeInChildBottomAnimation" type="(Landroid/content/Context;)Landroid/view/animation/Animation;" class_method="true"/>
<method name="loadInterpolator" type="(Landroid/content/Context;I)Landroid/view/animation/Interpolator;" class_method="true"/>
</class>
<class name="android/view/animation/AnticipateInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/AnticipateOvershootInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(FF)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/BounceInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/CycleInterpolator">
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/DecelerateInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/GridLayoutAnimationController$AnimationParameters">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/view/animation/GridLayoutAnimationController">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/animation/Animation;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/animation/Animation;FF)V"/>
<method name="getColumnDelay" type="()F"/>
<method name="setColumnDelay" type="(F)V"/>
<method name="getRowDelay" type="()F"/>
<method name="setRowDelay" type="(F)V"/>
<method name="getDirection" type="()I"/>
<method name="setDirection" type="(I)V"/>
<method name="getDirectionPriority" type="()I"/>
<method name="setDirectionPriority" type="(I)V"/>
<method name="willOverlap" type="()Z"/>
<method name="getDelayForView" type="(Landroid/view/View;)J"/>
</class>
<class name="android/view/animation/LayoutAnimationController$AnimationParameters">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/view/animation/LayoutAnimationController">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/animation/Animation;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/animation/Animation;F)V"/>
<method name="getOrder" type="()I"/>
<method name="setOrder" type="(I)V"/>
<method name="setAnimation" type="(Landroid/content/Context;I)V"/>
<method name="setAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="getAnimation" type="()Landroid/view/animation/Animation;"/>
<method name="setInterpolator" type="(Landroid/content/Context;I)V"/>
<method name="setInterpolator" type="(Landroid/view/animation/Interpolator;)V"/>
<method name="getInterpolator" type="()Landroid/view/animation/Interpolator;"/>
<method name="getDelay" type="()F"/>
<method name="setDelay" type="(F)V"/>
<method name="willOverlap" type="()Z"/>
<method name="start" type="()V"/>
<method name="getAnimationForView" type="(Landroid/view/View;)Landroid/view/animation/Animation;"/>
<method name="isDone" type="()Z"/>
<method name="getDelayForView" type="(Landroid/view/View;)J"/>
<method name="getTransformedIndex" type="(Landroid/view/animation/LayoutAnimationController$AnimationParameters;)I"/>
</class>
<class name="android/view/animation/LinearInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/OvershootInterpolator">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="getInterpolation" type="(F)F"/>
</class>
<class name="android/view/animation/RotateAnimation">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(FF)V"/>
<method name="&lt;init&gt;" type="(FFFF)V"/>
<method name="&lt;init&gt;" type="(FFIFIF)V"/>
<method name="applyTransformation" type="(FLandroid/view/animation/Transformation;)V"/>
<method name="initialize" type="(IIII)V"/>
</class>
<class name="android/view/animation/ScaleAnimation">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(FFFF)V"/>
<method name="&lt;init&gt;" type="(FFFFFF)V"/>
<method name="&lt;init&gt;" type="(FFFFIFIF)V"/>
<method name="applyTransformation" type="(FLandroid/view/animation/Transformation;)V"/>
<method name="initialize" type="(IIII)V"/>
</class>
<class name="android/view/animation/Transformation">
<method name="&lt;init&gt;" type="()V"/>
<method name="clear" type="()V"/>
<method name="getTransformationType" type="()I"/>
<method name="setTransformationType" type="(I)V"/>
<method name="set" type="(Landroid/view/animation/Transformation;)V"/>
<method name="compose" type="(Landroid/view/animation/Transformation;)V"/>
<method name="getMatrix" type="()Landroid/graphics/Matrix;"/>
<method name="setAlpha" type="(F)V"/>
<method name="getAlpha" type="()F"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toShortString" type="()Ljava/lang/String;"/>
</class>
<class name="android/view/animation/TranslateAnimation">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(FFFF)V"/>
<method name="&lt;init&gt;" type="(IFIFIFIF)V"/>
<method name="applyTransformation" type="(FLandroid/view/animation/Transformation;)V"/>
<method name="initialize" type="(IIII)V"/>
</class>
<class name="android/view/ContextThemeWrapper">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="attachBaseContext" type="(Landroid/content/Context;)V"/>
<method name="setTheme" type="(I)V"/>
<method name="getTheme" type="()Landroid/content/res/Resources$Theme;"/>
<method name="getSystemService" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="onApplyThemeResource" type="(Landroid/content/res/Resources$Theme;IZ)V"/>
</class>
<class name="android/view/Display">
<method name="getDisplayId" type="()I"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="getRotation" type="()I"/>
<method name="getOrientation" type="()I"/>
<method name="getPixelFormat" type="()I"/>
<method name="getRefreshRate" type="()F"/>
<method name="getMetrics" type="(Landroid/util/DisplayMetrics;)V"/>
</class>
<class name="android/view/FocusFinder">
<method name="getInstance" type="()Landroid/view/FocusFinder;" class_method="true"/>
<method name="findNextFocus" type="(Landroid/view/ViewGroup;Landroid/view/View;I)Landroid/view/View;"/>
<method name="findNextFocusFromRect" type="(Landroid/view/ViewGroup;Landroid/graphics/Rect;I)Landroid/view/View;"/>
<method name="findNearestTouchable" type="(Landroid/view/ViewGroup;III[I)Landroid/view/View;"/>
</class>
<class name="android/view/GestureDetector$SimpleOnGestureListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onSingleTapUp" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onLongPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="onScroll" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
<method name="onFling" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
<method name="onShowPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="onDown" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onDoubleTap" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onDoubleTapEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onSingleTapConfirmed" type="(Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/view/GestureDetector">
<method name="&lt;init&gt;" type="(Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/GestureDetector$OnGestureListener;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;Z)V"/>
<method name="setOnDoubleTapListener" type="(Landroid/view/GestureDetector$OnDoubleTapListener;)V"/>
<method name="setIsLongpressEnabled" type="(Z)V"/>
<method name="isLongpressEnabled" type="()Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/view/Gravity">
<method name="&lt;init&gt;" type="()V"/>
<method name="apply" type="(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V" class_method="true"/>
<method name="apply" type="(IIILandroid/graphics/Rect;IILandroid/graphics/Rect;)V" class_method="true"/>
<method name="applyDisplay" type="(ILandroid/graphics/Rect;Landroid/graphics/Rect;)V" class_method="true"/>
<method name="isVertical" type="(I)Z" class_method="true"/>
<method name="isHorizontal" type="(I)Z" class_method="true"/>
</class>
<class name="android/view/HapticFeedbackConstants">
</class>
<class name="android/view/InflateException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="android/view/InputDevice$MotionRange">
<method name="getMin" type="()F"/>
<method name="getMax" type="()F"/>
<method name="getRange" type="()F"/>
<method name="getFlat" type="()F"/>
<method name="getFuzz" type="()F"/>
</class>
<class name="android/view/InputDevice">
<method name="getDevice" type="(I)Landroid/view/InputDevice;" class_method="true"/>
<method name="getDeviceIds" type="()[I" class_method="true"/>
<method name="getId" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getSources" type="()I"/>
<method name="getKeyboardType" type="()I"/>
<method name="getKeyCharacterMap" type="()Landroid/view/KeyCharacterMap;"/>
<method name="getMotionRange" type="(I)Landroid/view/InputDevice$MotionRange;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/view/InputEvent">
<method name="getDeviceId" type="()I"/>
<method name="getDevice" type="()Landroid/view/InputDevice;"/>
<method name="getSource" type="()I"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/BaseInputConnection">
<method name="&lt;init&gt;" type="(Landroid/view/View;Z)V"/>
<method name="removeComposingSpans" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="setComposingSpans" type="(Landroid/text/Spannable;)V" class_method="true"/>
<method name="getComposingSpanStart" type="(Landroid/text/Spannable;)I" class_method="true"/>
<method name="getComposingSpanEnd" type="(Landroid/text/Spannable;)I" class_method="true"/>
<method name="getEditable" type="()Landroid/text/Editable;"/>
<method name="beginBatchEdit" type="()Z"/>
<method name="endBatchEdit" type="()Z"/>
<method name="clearMetaKeyStates" type="(I)Z"/>
<method name="commitCompletion" type="(Landroid/view/inputmethod/CompletionInfo;)Z"/>
<method name="commitText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="deleteSurroundingText" type="(II)Z"/>
<method name="finishComposingText" type="()Z"/>
<method name="getCursorCapsMode" type="(I)I"/>
<method name="getExtractedText" type="(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;"/>
<method name="getTextBeforeCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="getSelectedText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getTextAfterCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="performEditorAction" type="(I)Z"/>
<method name="performContextMenuAction" type="(I)Z"/>
<method name="performPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="setComposingText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="setComposingRegion" type="(II)Z"/>
<method name="setSelection" type="(II)Z"/>
<method name="sendKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="reportFullscreenMode" type="(Z)Z"/>
</class>
<class name="android/view/inputmethod/CompletionInfo">
<method name="&lt;init&gt;" type="(JILjava/lang/CharSequence;)V"/>
<method name="&lt;init&gt;" type="(JILjava/lang/CharSequence;Ljava/lang/CharSequence;)V"/>
<method name="getId" type="()J"/>
<method name="getPosition" type="()I"/>
<method name="getText" type="()Ljava/lang/CharSequence;"/>
<method name="getLabel" type="()Ljava/lang/CharSequence;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/EditorInfo">
<method name="&lt;init&gt;" type="()V"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/ExtractedText">
<method name="&lt;init&gt;" type="()V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/ExtractedTextRequest">
<method name="&lt;init&gt;" type="()V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/InputBinding">
<method name="&lt;init&gt;" type="(Landroid/view/inputmethod/InputConnection;Landroid/os/IBinder;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/InputBinding;)V"/>
<method name="getConnection" type="()Landroid/view/inputmethod/InputConnection;"/>
<method name="getConnectionToken" type="()Landroid/os/IBinder;"/>
<method name="getUid" type="()I"/>
<method name="getPid" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/InputConnectionWrapper">
<method name="&lt;init&gt;" type="(Landroid/view/inputmethod/InputConnection;Z)V"/>
<method name="setTarget" type="(Landroid/view/inputmethod/InputConnection;)V"/>
<method name="getTextBeforeCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="getTextAfterCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="getSelectedText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getCursorCapsMode" type="(I)I"/>
<method name="getExtractedText" type="(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;"/>
<method name="deleteSurroundingText" type="(II)Z"/>
<method name="setComposingText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="setComposingRegion" type="(II)Z"/>
<method name="finishComposingText" type="()Z"/>
<method name="commitText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="commitCompletion" type="(Landroid/view/inputmethod/CompletionInfo;)Z"/>
<method name="setSelection" type="(II)Z"/>
<method name="performEditorAction" type="(I)Z"/>
<method name="performContextMenuAction" type="(I)Z"/>
<method name="beginBatchEdit" type="()Z"/>
<method name="endBatchEdit" type="()Z"/>
<method name="sendKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="clearMetaKeyStates" type="(I)Z"/>
<method name="reportFullscreenMode" type="(Z)Z"/>
<method name="performPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)Z"/>
</class>
<class name="android/view/inputmethod/InputMethodInfo">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/content/pm/ResolveInfo;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;)V"/>
<method name="getId" type="()Ljava/lang/String;"/>
<method name="getPackageName" type="()Ljava/lang/String;"/>
<method name="getServiceName" type="()Ljava/lang/String;"/>
<method name="getServiceInfo" type="()Landroid/content/pm/ServiceInfo;"/>
<method name="getComponent" type="()Landroid/content/ComponentName;"/>
<method name="loadLabel" type="(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"/>
<method name="loadIcon" type="(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;"/>
<method name="getSettingsActivity" type="()Ljava/lang/String;"/>
<method name="getIsDefaultResourceId" type="()I"/>
<method name="dump" type="(Landroid/util/Printer;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="describeContents" type="()I"/>
</class>
<class name="android/view/inputmethod/InputMethodManager">
<method name="getInputMethodList" type="()Ljava/util/List;"/>
<method name="getEnabledInputMethodList" type="()Ljava/util/List;"/>
<method name="showStatusIcon" type="(Landroid/os/IBinder;Ljava/lang/String;I)V"/>
<method name="hideStatusIcon" type="(Landroid/os/IBinder;)V"/>
<method name="isFullscreenMode" type="()Z"/>
<method name="isActive" type="(Landroid/view/View;)Z"/>
<method name="isActive" type="()Z"/>
<method name="isAcceptingText" type="()Z"/>
<method name="displayCompletions" type="(Landroid/view/View;[Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="updateExtractedText" type="(Landroid/view/View;ILandroid/view/inputmethod/ExtractedText;)V"/>
<method name="showSoftInput" type="(Landroid/view/View;I)Z"/>
<method name="showSoftInput" type="(Landroid/view/View;ILandroid/os/ResultReceiver;)Z"/>
<method name="hideSoftInputFromWindow" type="(Landroid/os/IBinder;I)Z"/>
<method name="hideSoftInputFromWindow" type="(Landroid/os/IBinder;ILandroid/os/ResultReceiver;)Z"/>
<method name="toggleSoftInputFromWindow" type="(Landroid/os/IBinder;II)V"/>
<method name="toggleSoftInput" type="(II)V"/>
<method name="restartInput" type="(Landroid/view/View;)V"/>
<method name="updateSelection" type="(Landroid/view/View;IIII)V"/>
<method name="isWatchingCursor" type="(Landroid/view/View;)Z"/>
<method name="updateCursor" type="(Landroid/view/View;IIII)V"/>
<method name="sendAppPrivateCommand" type="(Landroid/view/View;Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="setInputMethod" type="(Landroid/os/IBinder;Ljava/lang/String;)V"/>
<method name="hideSoftInputFromInputMethod" type="(Landroid/os/IBinder;I)V"/>
<method name="showSoftInputFromInputMethod" type="(Landroid/os/IBinder;I)V"/>
<method name="showInputMethodPicker" type="()V"/>
</class>
<class name="android/view/InputQueue">
</class>
<class name="android/view/KeyCharacterMap$KeyData">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/view/KeyCharacterMap">
<method name="load" type="(I)Landroid/view/KeyCharacterMap;" class_method="true"/>
<method name="get" type="(II)I"/>
<method name="getNumber" type="(I)C"/>
<method name="getMatch" type="(I[C)C"/>
<method name="getMatch" type="(I[CI)C"/>
<method name="getDisplayLabel" type="(I)C"/>
<method name="getDeadChar" type="(II)I" class_method="true"/>
<method name="getKeyData" type="(ILandroid/view/KeyCharacterMap$KeyData;)Z"/>
<method name="getEvents" type="([C)[Landroid/view/KeyEvent;"/>
<method name="isPrintingKey" type="(I)Z"/>
<method name="finalize" type="()V"/>
<method name="getKeyboardType" type="()I"/>
<method name="deviceHasKey" type="(I)Z" class_method="true"/>
<method name="deviceHasKeys" type="([I)[Z" class_method="true"/>
</class>
<class name="android/view/KeyEvent$DispatcherState">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="reset" type="(Ljava/lang/Object;)V"/>
<method name="startTracking" type="(Landroid/view/KeyEvent;Ljava/lang/Object;)V"/>
<method name="isTracking" type="(Landroid/view/KeyEvent;)Z"/>
<method name="performedLongPress" type="(Landroid/view/KeyEvent;)V"/>
<method name="handleUpEvent" type="(Landroid/view/KeyEvent;)V"/>
</class>
<class name="android/view/KeyEvent">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(JJIII)V"/>
<method name="&lt;init&gt;" type="(JJIIII)V"/>
<method name="&lt;init&gt;" type="(JJIIIIII)V"/>
<method name="&lt;init&gt;" type="(JJIIIIIII)V"/>
<method name="&lt;init&gt;" type="(JJIIIIIIII)V"/>
<method name="&lt;init&gt;" type="(JLjava/lang/String;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/KeyEvent;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/KeyEvent;JI)V"/>
<method name="getMaxKeyCode" type="()I" class_method="true"/>
<method name="getDeadChar" type="(II)I" class_method="true"/>
<method name="changeTimeRepeat" type="(Landroid/view/KeyEvent;JI)Landroid/view/KeyEvent;" class_method="true"/>
<method name="changeTimeRepeat" type="(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;" class_method="true"/>
<method name="changeAction" type="(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;" class_method="true"/>
<method name="changeFlags" type="(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;" class_method="true"/>
<method name="isSystem" type="()Z"/>
<method name="getMetaState" type="()I"/>
<method name="getFlags" type="()I"/>
<method name="isModifierKey" type="(I)Z" class_method="true"/>
<method name="isAltPressed" type="()Z"/>
<method name="isShiftPressed" type="()Z"/>
<method name="isSymPressed" type="()Z"/>
<method name="getAction" type="()I"/>
<method name="isCanceled" type="()Z"/>
<method name="startTracking" type="()V"/>
<method name="isTracking" type="()Z"/>
<method name="isLongPress" type="()Z"/>
<method name="getKeyCode" type="()I"/>
<method name="getCharacters" type="()Ljava/lang/String;"/>
<method name="getScanCode" type="()I"/>
<method name="getRepeatCount" type="()I"/>
<method name="getDownTime" type="()J"/>
<method name="getEventTime" type="()J"/>
<method name="getDisplayLabel" type="()C"/>
<method name="getUnicodeChar" type="()I"/>
<method name="getUnicodeChar" type="(I)I"/>
<method name="getKeyData" type="(Landroid/view/KeyCharacterMap$KeyData;)Z"/>
<method name="getMatch" type="([C)C"/>
<method name="getMatch" type="([CI)C"/>
<method name="getNumber" type="()C"/>
<method name="isPrintingKey" type="()Z"/>
<method name="dispatch" type="(Landroid/view/KeyEvent$Callback;)Z"/>
<method name="dispatch" type="(Landroid/view/KeyEvent$Callback;Landroid/view/KeyEvent$DispatcherState;Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/view/LayoutInflater">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/LayoutInflater;Landroid/content/Context;)V"/>
<method name="from" type="(Landroid/content/Context;)Landroid/view/LayoutInflater;" class_method="true"/>
<method name="cloneInContext" type="(Landroid/content/Context;)Landroid/view/LayoutInflater;"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getFactory" type="()Landroid/view/LayoutInflater$Factory;"/>
<method name="setFactory" type="(Landroid/view/LayoutInflater$Factory;)V"/>
<method name="getFilter" type="()Landroid/view/LayoutInflater$Filter;"/>
<method name="setFilter" type="(Landroid/view/LayoutInflater$Filter;)V"/>
<method name="inflate" type="(ILandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="inflate" type="(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="inflate" type="(ILandroid/view/ViewGroup;Z)Landroid/view/View;"/>
<method name="inflate" type="(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;Z)Landroid/view/View;"/>
<method name="createView" type="(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;"/>
<method name="onCreateView" type="(Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;"/>
</class>
<class name="android/view/MenuInflater">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="inflate" type="(ILandroid/view/Menu;)V"/>
</class>
<class name="android/view/MotionEvent$PointerCoords">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/view/MotionEvent">
<method name="obtain" type="(JJII[I[Landroid/view/MotionEvent$PointerCoords;IFFIIII)Landroid/view/MotionEvent;" class_method="true"/>
<method name="obtain" type="(JJIFFFFIFFII)Landroid/view/MotionEvent;" class_method="true"/>
<method name="obtain" type="(JJIIFFFFIFFII)Landroid/view/MotionEvent;" class_method="true"/>
<method name="obtain" type="(JJIFFI)Landroid/view/MotionEvent;" class_method="true"/>
<method name="obtain" type="(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;" class_method="true"/>
<method name="obtainNoHistory" type="(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;" class_method="true"/>
<method name="recycle" type="()V"/>
<method name="getAction" type="()I"/>
<method name="getActionMasked" type="()I"/>
<method name="getActionIndex" type="()I"/>
<method name="getFlags" type="()I"/>
<method name="getDownTime" type="()J"/>
<method name="getEventTime" type="()J"/>
<method name="getX" type="()F"/>
<method name="getY" type="()F"/>
<method name="getPressure" type="()F"/>
<method name="getSize" type="()F"/>
<method name="getTouchMajor" type="()F"/>
<method name="getTouchMinor" type="()F"/>
<method name="getToolMajor" type="()F"/>
<method name="getToolMinor" type="()F"/>
<method name="getOrientation" type="()F"/>
<method name="getPointerCount" type="()I"/>
<method name="getPointerId" type="(I)I"/>
<method name="findPointerIndex" type="(I)I"/>
<method name="getX" type="(I)F"/>
<method name="getY" type="(I)F"/>
<method name="getPressure" type="(I)F"/>
<method name="getSize" type="(I)F"/>
<method name="getTouchMajor" type="(I)F"/>
<method name="getTouchMinor" type="(I)F"/>
<method name="getToolMajor" type="(I)F"/>
<method name="getToolMinor" type="(I)F"/>
<method name="getOrientation" type="(I)F"/>
<method name="getPointerCoords" type="(ILandroid/view/MotionEvent$PointerCoords;)V"/>
<method name="getMetaState" type="()I"/>
<method name="getRawX" type="()F"/>
<method name="getRawY" type="()F"/>
<method name="getXPrecision" type="()F"/>
<method name="getYPrecision" type="()F"/>
<method name="getHistorySize" type="()I"/>
<method name="getHistoricalEventTime" type="(I)J"/>
<method name="getHistoricalX" type="(I)F"/>
<method name="getHistoricalY" type="(I)F"/>
<method name="getHistoricalPressure" type="(I)F"/>
<method name="getHistoricalSize" type="(I)F"/>
<method name="getHistoricalTouchMajor" type="(I)F"/>
<method name="getHistoricalTouchMinor" type="(I)F"/>
<method name="getHistoricalToolMajor" type="(I)F"/>
<method name="getHistoricalToolMinor" type="(I)F"/>
<method name="getHistoricalOrientation" type="(I)F"/>
<method name="getHistoricalX" type="(II)F"/>
<method name="getHistoricalY" type="(II)F"/>
<method name="getHistoricalPressure" type="(II)F"/>
<method name="getHistoricalSize" type="(II)F"/>
<method name="getHistoricalTouchMajor" type="(II)F"/>
<method name="getHistoricalTouchMinor" type="(II)F"/>
<method name="getHistoricalToolMajor" type="(II)F"/>
<method name="getHistoricalToolMinor" type="(II)F"/>
<method name="getHistoricalOrientation" type="(II)F"/>
<method name="getHistoricalPointerCoords" type="(IILandroid/view/MotionEvent$PointerCoords;)V"/>
<method name="getEdgeFlags" type="()I"/>
<method name="setEdgeFlags" type="(I)V"/>
<method name="setAction" type="(I)V"/>
<method name="offsetLocation" type="(FF)V"/>
<method name="setLocation" type="(FF)V"/>
<method name="addBatch" type="(JFFFFI)V"/>
<method name="addBatch" type="(J[Landroid/view/MotionEvent$PointerCoords;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</class>
<class name="android/view/OrientationEventListener">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="enable" type="()V"/>
<method name="disable" type="()V"/>
<method name="canDetectOrientation" type="()Z"/>
<method name="onOrientationChanged" type="(I)V"/>
</class>
<class name="android/view/OrientationListener">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="enable" type="()V"/>
<method name="disable" type="()V"/>
<method name="onAccuracyChanged" type="(II)V"/>
<method name="onSensorChanged" type="(I[F)V"/>
<method name="onOrientationChanged" type="(I)V"/>
</class>
<class name="android/view/ScaleGestureDetector$SimpleOnScaleGestureListener">
<method name="&lt;init&gt;" type="()V"/>
<method name="onScale" type="(Landroid/view/ScaleGestureDetector;)Z"/>
<method name="onScaleBegin" type="(Landroid/view/ScaleGestureDetector;)Z"/>
<method name="onScaleEnd" type="(Landroid/view/ScaleGestureDetector;)V"/>
</class>
<class name="android/view/ScaleGestureDetector">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/ScaleGestureDetector$OnScaleGestureListener;)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="isInProgress" type="()Z"/>
<method name="getFocusX" type="()F"/>
<method name="getFocusY" type="()F"/>
<method name="getCurrentSpan" type="()F"/>
<method name="getPreviousSpan" type="()F"/>
<method name="getScaleFactor" type="()F"/>
<method name="getTimeDelta" type="()J"/>
<method name="getEventTime" type="()J"/>
</class>
<class name="android/view/SoundEffectConstants">
<method name="getContantForFocusDirection" type="(I)I" class_method="true"/>
</class>
<class name="android/view/Surface$OutOfResourcesException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/view/Surface">
<method name="isValid" type="()Z"/>
<method name="lockCanvas" type="(Landroid/graphics/Rect;)Landroid/graphics/Canvas;"/>
<method name="unlockCanvasAndPost" type="(Landroid/graphics/Canvas;)V"/>
<method name="unlockCanvas" type="(Landroid/graphics/Canvas;)V"/>
<method name="setOrientation" type="(II)V" class_method="true"/>
<method name="setLayer" type="(I)V"/>
<method name="setPosition" type="(II)V"/>
<method name="setSize" type="(II)V"/>
<method name="hide" type="()V"/>
<method name="show" type="()V"/>
<method name="setTransparentRegionHint" type="(Landroid/graphics/Region;)V"/>
<method name="setAlpha" type="(F)V"/>
<method name="setMatrix" type="(FFFF)V"/>
<method name="freeze" type="()V"/>
<method name="unfreeze" type="()V"/>
<method name="setFreezeTint" type="(I)V"/>
<method name="setFlags" type="(II)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="describeContents" type="()I"/>
<method name="readFromParcel" type="(Landroid/os/Parcel;)V"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="finalize" type="()V"/>
</class>
<class name="android/view/SurfaceHolder$BadSurfaceTypeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/view/SurfaceView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getHolder" type="()Landroid/view/SurfaceHolder;"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onWindowVisibilityChanged" type="(I)V"/>
<method name="setVisibility" type="(I)V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onMeasure" type="(II)V"/>
<method name="gatherTransparentRegion" type="(Landroid/graphics/Region;)Z"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setZOrderMediaOverlay" type="(Z)V"/>
<method name="setZOrderOnTop" type="(Z)V"/>
</class>
<class name="android/view/TouchDelegate">
<method name="&lt;init&gt;" type="(Landroid/graphics/Rect;Landroid/view/View;)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/view/VelocityTracker">
<method name="obtain" type="()Landroid/view/VelocityTracker;" class_method="true"/>
<method name="recycle" type="()V"/>
<method name="clear" type="()V"/>
<method name="addMovement" type="(Landroid/view/MotionEvent;)V"/>
<method name="computeCurrentVelocity" type="(I)V"/>
<method name="computeCurrentVelocity" type="(IF)V"/>
<method name="getXVelocity" type="()F"/>
<method name="getYVelocity" type="()F"/>
<method name="getXVelocity" type="(I)F"/>
<method name="getYVelocity" type="(I)F"/>
</class>
<class name="android/view/View$BaseSavedState">
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/view/View$MeasureSpec">
<method name="&lt;init&gt;" type="()V"/>
<method name="makeMeasureSpec" type="(II)I" class_method="true"/>
<method name="getMode" type="(I)I" class_method="true"/>
<method name="getSize" type="(I)I" class_method="true"/>
<method name="toString" type="(I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/view/View">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="initializeFadingEdge" type="(Landroid/content/res/TypedArray;)V"/>
<method name="getVerticalFadingEdgeLength" type="()I"/>
<method name="setFadingEdgeLength" type="(I)V"/>
<method name="getHorizontalFadingEdgeLength" type="()I"/>
<method name="getVerticalScrollbarWidth" type="()I"/>
<method name="getHorizontalScrollbarHeight" type="()I"/>
<method name="initializeScrollbars" type="(Landroid/content/res/TypedArray;)V"/>
<method name="setOnFocusChangeListener" type="(Landroid/view/View$OnFocusChangeListener;)V"/>
<method name="getOnFocusChangeListener" type="()Landroid/view/View$OnFocusChangeListener;"/>
<method name="setOnClickListener" type="(Landroid/view/View$OnClickListener;)V"/>
<method name="setOnLongClickListener" type="(Landroid/view/View$OnLongClickListener;)V"/>
<method name="setOnCreateContextMenuListener" type="(Landroid/view/View$OnCreateContextMenuListener;)V"/>
<method name="performClick" type="()Z"/>
<method name="performLongClick" type="()Z"/>
<method name="showContextMenu" type="()Z"/>
<method name="setOnKeyListener" type="(Landroid/view/View$OnKeyListener;)V"/>
<method name="setOnTouchListener" type="(Landroid/view/View$OnTouchListener;)V"/>
<method name="requestRectangleOnScreen" type="(Landroid/graphics/Rect;)Z"/>
<method name="requestRectangleOnScreen" type="(Landroid/graphics/Rect;Z)Z"/>
<method name="clearFocus" type="()V"/>
<method name="hasFocus" type="()Z"/>
<method name="hasFocusable" type="()Z"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="sendAccessibilityEvent" type="(I)V"/>
<method name="sendAccessibilityEventUnchecked" type="(Landroid/view/accessibility/AccessibilityEvent;)V"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="getContentDescription" type="()Ljava/lang/CharSequence;"/>
<method name="setContentDescription" type="(Ljava/lang/CharSequence;)V"/>
<method name="isFocused" type="()Z"/>
<method name="findFocus" type="()Landroid/view/View;"/>
<method name="setScrollContainer" type="(Z)V"/>
<method name="getDrawingCacheQuality" type="()I"/>
<method name="setDrawingCacheQuality" type="(I)V"/>
<method name="getKeepScreenOn" type="()Z"/>
<method name="setKeepScreenOn" type="(Z)V"/>
<method name="getNextFocusLeftId" type="()I"/>
<method name="setNextFocusLeftId" type="(I)V"/>
<method name="getNextFocusRightId" type="()I"/>
<method name="setNextFocusRightId" type="(I)V"/>
<method name="getNextFocusUpId" type="()I"/>
<method name="setNextFocusUpId" type="(I)V"/>
<method name="getNextFocusDownId" type="()I"/>
<method name="setNextFocusDownId" type="(I)V"/>
<method name="isShown" type="()Z"/>
<method name="fitSystemWindows" type="(Landroid/graphics/Rect;)Z"/>
<method name="getVisibility" type="()I"/>
<method name="setVisibility" type="(I)V"/>
<method name="isEnabled" type="()Z"/>
<method name="setEnabled" type="(Z)V"/>
<method name="setFocusable" type="(Z)V"/>
<method name="setFocusableInTouchMode" type="(Z)V"/>
<method name="setSoundEffectsEnabled" type="(Z)V"/>
<method name="isSoundEffectsEnabled" type="()Z"/>
<method name="setHapticFeedbackEnabled" type="(Z)V"/>
<method name="isHapticFeedbackEnabled" type="()Z"/>
<method name="setWillNotDraw" type="(Z)V"/>
<method name="willNotDraw" type="()Z"/>
<method name="setWillNotCacheDrawing" type="(Z)V"/>
<method name="willNotCacheDrawing" type="()Z"/>
<method name="isClickable" type="()Z"/>
<method name="setClickable" type="(Z)V"/>
<method name="isLongClickable" type="()Z"/>
<method name="setLongClickable" type="(Z)V"/>
<method name="setPressed" type="(Z)V"/>
<method name="dispatchSetPressed" type="(Z)V"/>
<method name="isPressed" type="()Z"/>
<method name="isSaveEnabled" type="()Z"/>
<method name="setSaveEnabled" type="(Z)V"/>
<method name="getFilterTouchesWhenObscured" type="()Z"/>
<method name="setFilterTouchesWhenObscured" type="(Z)V"/>
<method name="isFocusable" type="()Z"/>
<method name="isFocusableInTouchMode" type="()Z"/>
<method name="focusSearch" type="(I)Landroid/view/View;"/>
<method name="dispatchUnhandledMove" type="(Landroid/view/View;I)Z"/>
<method name="getFocusables" type="(I)Ljava/util/ArrayList;"/>
<method name="addFocusables" type="(Ljava/util/ArrayList;I)V"/>
<method name="addFocusables" type="(Ljava/util/ArrayList;II)V"/>
<method name="getTouchables" type="()Ljava/util/ArrayList;"/>
<method name="addTouchables" type="(Ljava/util/ArrayList;)V"/>
<method name="requestFocus" type="()Z"/>
<method name="requestFocus" type="(I)Z"/>
<method name="requestFocus" type="(ILandroid/graphics/Rect;)Z"/>
<method name="requestFocusFromTouch" type="()Z"/>
<method name="onStartTemporaryDetach" type="()V"/>
<method name="onFinishTemporaryDetach" type="()V"/>
<method name="getKeyDispatcherState" type="()Landroid/view/KeyEvent$DispatcherState;"/>
<method name="dispatchKeyEventPreIme" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchKeyShortcutEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onFilterTouchEventForSecurity" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchWindowFocusChanged" type="(Z)V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="hasWindowFocus" type="()Z"/>
<method name="dispatchVisibilityChanged" type="(Landroid/view/View;I)V"/>
<method name="onVisibilityChanged" type="(Landroid/view/View;I)V"/>
<method name="dispatchDisplayHint" type="(I)V"/>
<method name="onDisplayHint" type="(I)V"/>
<method name="dispatchWindowVisibilityChanged" type="(I)V"/>
<method name="onWindowVisibilityChanged" type="(I)V"/>
<method name="getWindowVisibility" type="()I"/>
<method name="getWindowVisibleDisplayFrame" type="(Landroid/graphics/Rect;)V"/>
<method name="dispatchConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="isInTouchMode" type="()Z"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="onKeyPreIme" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyLongPress" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyShortcut" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onCheckIsTextEditor" type="()Z"/>
<method name="onCreateInputConnection" type="(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"/>
<method name="checkInputConnectionProxy" type="(Landroid/view/View;)Z"/>
<method name="createContextMenu" type="(Landroid/view/ContextMenu;)V"/>
<method name="getContextMenuInfo" type="()Landroid/view/ContextMenu$ContextMenuInfo;"/>
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;)V"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="cancelLongPress" type="()V"/>
<method name="setTouchDelegate" type="(Landroid/view/TouchDelegate;)V"/>
<method name="getTouchDelegate" type="()Landroid/view/TouchDelegate;"/>
<method name="bringToFront" type="()V"/>
<method name="onScrollChanged" type="(IIII)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getParent" type="()Landroid/view/ViewParent;"/>
<method name="getScrollX" type="()I"/>
<method name="getScrollY" type="()I"/>
<method name="getWidth" type="()I"/>
<method name="getHeight" type="()I"/>
<method name="getDrawingRect" type="(Landroid/graphics/Rect;)V"/>
<method name="getMeasuredWidth" type="()I"/>
<method name="getMeasuredHeight" type="()I"/>
<method name="getTop" type="()I"/>
<method name="getBottom" type="()I"/>
<method name="getLeft" type="()I"/>
<method name="getRight" type="()I"/>
<method name="getHitRect" type="(Landroid/graphics/Rect;)V"/>
<method name="getFocusedRect" type="(Landroid/graphics/Rect;)V"/>
<method name="getGlobalVisibleRect" type="(Landroid/graphics/Rect;Landroid/graphics/Point;)Z"/>
<method name="getGlobalVisibleRect" type="(Landroid/graphics/Rect;)Z"/>
<method name="getLocalVisibleRect" type="(Landroid/graphics/Rect;)Z"/>
<method name="offsetTopAndBottom" type="(I)V"/>
<method name="offsetLeftAndRight" type="(I)V"/>
<method name="getLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="setLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="scrollTo" type="(II)V"/>
<method name="scrollBy" type="(II)V"/>
<method name="awakenScrollBars" type="()Z"/>
<method name="awakenScrollBars" type="(I)Z"/>
<method name="awakenScrollBars" type="(IZ)Z"/>
<method name="invalidate" type="(Landroid/graphics/Rect;)V"/>
<method name="invalidate" type="(IIII)V"/>
<method name="invalidate" type="()V"/>
<method name="isOpaque" type="()Z"/>
<method name="getHandler" type="()Landroid/os/Handler;"/>
<method name="post" type="(Ljava/lang/Runnable;)Z"/>
<method name="postDelayed" type="(Ljava/lang/Runnable;J)Z"/>
<method name="removeCallbacks" type="(Ljava/lang/Runnable;)Z"/>
<method name="postInvalidate" type="()V"/>
<method name="postInvalidate" type="(IIII)V"/>
<method name="postInvalidateDelayed" type="(J)V"/>
<method name="postInvalidateDelayed" type="(JIIII)V"/>
<method name="computeScroll" type="()V"/>
<method name="isHorizontalFadingEdgeEnabled" type="()Z"/>
<method name="setHorizontalFadingEdgeEnabled" type="(Z)V"/>
<method name="isVerticalFadingEdgeEnabled" type="()Z"/>
<method name="setVerticalFadingEdgeEnabled" type="(Z)V"/>
<method name="getTopFadingEdgeStrength" type="()F"/>
<method name="getBottomFadingEdgeStrength" type="()F"/>
<method name="getLeftFadingEdgeStrength" type="()F"/>
<method name="getRightFadingEdgeStrength" type="()F"/>
<method name="isHorizontalScrollBarEnabled" type="()Z"/>
<method name="setHorizontalScrollBarEnabled" type="(Z)V"/>
<method name="isVerticalScrollBarEnabled" type="()Z"/>
<method name="setVerticalScrollBarEnabled" type="(Z)V"/>
<method name="setScrollbarFadingEnabled" type="(Z)V"/>
<method name="isScrollbarFadingEnabled" type="()Z"/>
<method name="setScrollBarStyle" type="(I)V"/>
<method name="getScrollBarStyle" type="()I"/>
<method name="computeHorizontalScrollRange" type="()I"/>
<method name="computeHorizontalScrollOffset" type="()I"/>
<method name="computeHorizontalScrollExtent" type="()I"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="computeVerticalScrollOffset" type="()I"/>
<method name="computeVerticalScrollExtent" type="()I"/>
<method name="onDrawScrollBars" type="(Landroid/graphics/Canvas;)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="getWindowAttachCount" type="()I"/>
<method name="getWindowToken" type="()Landroid/os/IBinder;"/>
<method name="getApplicationWindowToken" type="()Landroid/os/IBinder;"/>
<method name="saveHierarchyState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchSaveInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="restoreHierarchyState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="getDrawingTime" type="()J"/>
<method name="setDuplicateParentStateEnabled" type="(Z)V"/>
<method name="isDuplicateParentStateEnabled" type="()Z"/>
<method name="setDrawingCacheEnabled" type="(Z)V"/>
<method name="isDrawingCacheEnabled" type="()Z"/>
<method name="getDrawingCache" type="()Landroid/graphics/Bitmap;"/>
<method name="getDrawingCache" type="(Z)Landroid/graphics/Bitmap;"/>
<method name="destroyDrawingCache" type="()V"/>
<method name="setDrawingCacheBackgroundColor" type="(I)V"/>
<method name="getDrawingCacheBackgroundColor" type="()I"/>
<method name="buildDrawingCache" type="()V"/>
<method name="buildDrawingCache" type="(Z)V"/>
<method name="isInEditMode" type="()Z"/>
<method name="isPaddingOffsetRequired" type="()Z"/>
<method name="getLeftPaddingOffset" type="()I"/>
<method name="getRightPaddingOffset" type="()I"/>
<method name="getTopPaddingOffset" type="()I"/>
<method name="getBottomPaddingOffset" type="()I"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getSolidColor" type="()I"/>
<method name="isLayoutRequested" type="()Z"/>
<method name="layout" type="(IIII)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="getResources" type="()Landroid/content/res/Resources;"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="drawableStateChanged" type="()V"/>
<method name="refreshDrawableState" type="()V"/>
<method name="getDrawableState" type="()[I"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="mergeDrawableStates" type="([I[I)[I" class_method="true"/>
<method name="setBackgroundColor" type="(I)V"/>
<method name="setBackgroundResource" type="(I)V"/>
<method name="setBackgroundDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getBackground" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setPadding" type="(IIII)V"/>
<method name="getPaddingTop" type="()I"/>
<method name="getPaddingBottom" type="()I"/>
<method name="getPaddingLeft" type="()I"/>
<method name="getPaddingRight" type="()I"/>
<method name="setSelected" type="(Z)V"/>
<method name="dispatchSetSelected" type="(Z)V"/>
<method name="isSelected" type="()Z"/>
<method name="getViewTreeObserver" type="()Landroid/view/ViewTreeObserver;"/>
<method name="getRootView" type="()Landroid/view/View;"/>
<method name="getLocationOnScreen" type="([I)V"/>
<method name="getLocationInWindow" type="([I)V"/>
<method name="findViewById" type="(I)Landroid/view/View;"/>
<method name="findViewWithTag" type="(Ljava/lang/Object;)Landroid/view/View;"/>
<method name="setId" type="(I)V"/>
<method name="getId" type="()I"/>
<method name="getTag" type="()Ljava/lang/Object;"/>
<method name="setTag" type="(Ljava/lang/Object;)V"/>
<method name="getTag" type="(I)Ljava/lang/Object;"/>
<method name="setTag" type="(ILjava/lang/Object;)V"/>
<method name="getBaseline" type="()I"/>
<method name="requestLayout" type="()V"/>
<method name="forceLayout" type="()V"/>
<method name="measure" type="(II)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="setMeasuredDimension" type="(II)V"/>
<method name="resolveSize" type="(II)I" class_method="true"/>
<method name="getDefaultSize" type="(II)I" class_method="true"/>
<method name="getSuggestedMinimumHeight" type="()I"/>
<method name="getSuggestedMinimumWidth" type="()I"/>
<method name="setMinimumHeight" type="(I)V"/>
<method name="setMinimumWidth" type="(I)V"/>
<method name="getAnimation" type="()Landroid/view/animation/Animation;"/>
<method name="startAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="clearAnimation" type="()V"/>
<method name="setAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="onAnimationStart" type="()V"/>
<method name="onAnimationEnd" type="()V"/>
<method name="onSetAlpha" type="(I)Z"/>
<method name="playSoundEffect" type="(I)V"/>
<method name="performHapticFeedback" type="(I)Z"/>
<method name="performHapticFeedback" type="(II)Z"/>
<method name="inflate" type="(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;" class_method="true"/>
<method name="overScrollBy" type="(IIIIIIIIZ)Z"/>
<method name="onOverScrolled" type="(IIZZ)V"/>
<method name="getOverScrollMode" type="()I"/>
<method name="setOverScrollMode" type="(I)V"/>
</class>
<class name="android/view/ViewConfiguration">
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="(Landroid/content/Context;)Landroid/view/ViewConfiguration;" class_method="true"/>
<method name="getScrollBarSize" type="()I" class_method="true"/>
<method name="getScaledScrollBarSize" type="()I"/>
<method name="getScrollBarFadeDuration" type="()I" class_method="true"/>
<method name="getScrollDefaultDelay" type="()I" class_method="true"/>
<method name="getFadingEdgeLength" type="()I" class_method="true"/>
<method name="getScaledFadingEdgeLength" type="()I"/>
<method name="getPressedStateDuration" type="()I" class_method="true"/>
<method name="getLongPressTimeout" type="()I" class_method="true"/>
<method name="getTapTimeout" type="()I" class_method="true"/>
<method name="getJumpTapTimeout" type="()I" class_method="true"/>
<method name="getDoubleTapTimeout" type="()I" class_method="true"/>
<method name="getEdgeSlop" type="()I" class_method="true"/>
<method name="getScaledEdgeSlop" type="()I"/>
<method name="getTouchSlop" type="()I" class_method="true"/>
<method name="getScaledTouchSlop" type="()I"/>
<method name="getScaledPagingTouchSlop" type="()I"/>
<method name="getScaledDoubleTapSlop" type="()I"/>
<method name="getWindowTouchSlop" type="()I" class_method="true"/>
<method name="getScaledWindowTouchSlop" type="()I"/>
<method name="getMinimumFlingVelocity" type="()I" class_method="true"/>
<method name="getScaledMinimumFlingVelocity" type="()I"/>
<method name="getMaximumFlingVelocity" type="()I" class_method="true"/>
<method name="getScaledMaximumFlingVelocity" type="()I"/>
<method name="getMaximumDrawingCacheSize" type="()I" class_method="true"/>
<method name="getScaledMaximumDrawingCacheSize" type="()I"/>
<method name="getScaledOverscrollDistance" type="()I"/>
<method name="getScaledOverflingDistance" type="()I"/>
<method name="getZoomControlsTimeout" type="()J" class_method="true"/>
<method name="getGlobalActionKeyTimeout" type="()J" class_method="true"/>
<method name="getScrollFriction" type="()F" class_method="true"/>
</class>
<class name="android/view/ViewDebug$HierarchyTraceType">
<method name="values" type="()[Landroid/view/ViewDebug$HierarchyTraceType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/view/ViewDebug$HierarchyTraceType;" class_method="true"/>
</class>
<class name="android/view/ViewDebug$RecyclerTraceType">
<method name="values" type="()[Landroid/view/ViewDebug$RecyclerTraceType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/view/ViewDebug$RecyclerTraceType;" class_method="true"/>
</class>
<class name="android/view/ViewDebug">
<method name="&lt;init&gt;" type="()V"/>
<method name="trace" type="(Landroid/view/View;Landroid/view/ViewDebug$RecyclerTraceType;[I)V" class_method="true"/>
<method name="startRecyclerTracing" type="(Ljava/lang/String;Landroid/view/View;)V" class_method="true"/>
<method name="stopRecyclerTracing" type="()V" class_method="true"/>
<method name="trace" type="(Landroid/view/View;Landroid/view/ViewDebug$HierarchyTraceType;)V" class_method="true"/>
<method name="startHierarchyTracing" type="(Ljava/lang/String;Landroid/view/View;)V" class_method="true"/>
<method name="stopHierarchyTracing" type="()V" class_method="true"/>
<method name="dumpCapturedView" type="(Ljava/lang/String;Ljava/lang/Object;)V" class_method="true"/>
</class>
<class name="android/view/ViewGroup$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="setBaseAttributes" type="(Landroid/content/res/TypedArray;II)V"/>
</class>
<class name="android/view/ViewGroup$MarginLayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="setMargins" type="(IIII)V"/>
</class>
<class name="android/view/ViewGroup">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getDescendantFocusability" type="()I"/>
<method name="setDescendantFocusability" type="(I)V"/>
<method name="requestChildFocus" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="focusableViewAvailable" type="(Landroid/view/View;)V"/>
<method name="showContextMenuForChild" type="(Landroid/view/View;)Z"/>
<method name="focusSearch" type="(Landroid/view/View;I)Landroid/view/View;"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
<method name="dispatchUnhandledMove" type="(Landroid/view/View;I)Z"/>
<method name="clearChildFocus" type="(Landroid/view/View;)V"/>
<method name="clearFocus" type="()V"/>
<method name="getFocusedChild" type="()Landroid/view/View;"/>
<method name="hasFocus" type="()Z"/>
<method name="findFocus" type="()Landroid/view/View;"/>
<method name="hasFocusable" type="()Z"/>
<method name="addFocusables" type="(Ljava/util/ArrayList;I)V"/>
<method name="addFocusables" type="(Ljava/util/ArrayList;II)V"/>
<method name="dispatchWindowFocusChanged" type="(Z)V"/>
<method name="addTouchables" type="(Ljava/util/ArrayList;)V"/>
<method name="dispatchDisplayHint" type="(I)V"/>
<method name="dispatchVisibilityChanged" type="(Landroid/view/View;I)V"/>
<method name="dispatchWindowVisibilityChanged" type="(I)V"/>
<method name="dispatchConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="recomputeViewAttributes" type="(Landroid/view/View;)V"/>
<method name="bringChildToFront" type="(Landroid/view/View;)V"/>
<method name="dispatchKeyEventPreIme" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchKeyShortcutEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="requestDisallowInterceptTouchEvent" type="(Z)V"/>
<method name="onInterceptTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="requestFocus" type="(ILandroid/graphics/Rect;)Z"/>
<method name="onRequestFocusInDescendants" type="(ILandroid/graphics/Rect;)Z"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="setPadding" type="(IIII)V"/>
<method name="dispatchSaveInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchFreezeSelfOnly" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchThawSelfOnly" type="(Landroid/util/SparseArray;)V"/>
<method name="setChildrenDrawingCacheEnabled" type="(Z)V"/>
<method name="onAnimationStart" type="()V"/>
<method name="onAnimationEnd" type="()V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getChildDrawingOrder" type="(II)I"/>
<method name="drawChild" type="(Landroid/graphics/Canvas;Landroid/view/View;J)Z"/>
<method name="setClipChildren" type="(Z)V"/>
<method name="setClipToPadding" type="(Z)V"/>
<method name="dispatchSetSelected" type="(Z)V"/>
<method name="dispatchSetPressed" type="(Z)V"/>
<method name="setStaticTransformationsEnabled" type="(Z)V"/>
<method name="getChildStaticTransformation" type="(Landroid/view/View;Landroid/view/animation/Transformation;)Z"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="addView" type="(Landroid/view/View;I)V"/>
<method name="addView" type="(Landroid/view/View;II)V"/>
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="updateViewLayout" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="setOnHierarchyChangeListener" type="(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V"/>
<method name="addViewInLayout" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="addViewInLayout" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;Z)Z"/>
<method name="cleanupLayoutState" type="(Landroid/view/View;)V"/>
<method name="attachLayoutAnimationParameters" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;II)V"/>
<method name="removeView" type="(Landroid/view/View;)V"/>
<method name="removeViewInLayout" type="(Landroid/view/View;)V"/>
<method name="removeViewsInLayout" type="(II)V"/>
<method name="removeViewAt" type="(I)V"/>
<method name="removeViews" type="(II)V"/>
<method name="removeAllViews" type="()V"/>
<method name="removeAllViewsInLayout" type="()V"/>
<method name="removeDetachedView" type="(Landroid/view/View;Z)V"/>
<method name="attachViewToParent" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="detachViewFromParent" type="(Landroid/view/View;)V"/>
<method name="detachViewFromParent" type="(I)V"/>
<method name="detachViewsFromParent" type="(II)V"/>
<method name="detachAllViewsFromParent" type="()V"/>
<method name="invalidateChild" type="(Landroid/view/View;Landroid/graphics/Rect;)V"/>
<method name="invalidateChildInParent" type="([ILandroid/graphics/Rect;)Landroid/view/ViewParent;"/>
<method name="offsetDescendantRectToMyCoords" type="(Landroid/view/View;Landroid/graphics/Rect;)V"/>
<method name="offsetRectIntoDescendantCoords" type="(Landroid/view/View;Landroid/graphics/Rect;)V"/>
<method name="getChildVisibleRect" type="(Landroid/view/View;Landroid/graphics/Rect;Landroid/graphics/Point;)Z"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="canAnimate" type="()Z"/>
<method name="startLayoutAnimation" type="()V"/>
<method name="scheduleLayoutAnimation" type="()V"/>
<method name="setLayoutAnimation" type="(Landroid/view/animation/LayoutAnimationController;)V"/>
<method name="getLayoutAnimation" type="()Landroid/view/animation/LayoutAnimationController;"/>
<method name="isAnimationCacheEnabled" type="()Z"/>
<method name="setAnimationCacheEnabled" type="(Z)V"/>
<method name="isAlwaysDrawnWithCacheEnabled" type="()Z"/>
<method name="setAlwaysDrawnWithCacheEnabled" type="(Z)V"/>
<method name="isChildrenDrawnWithCacheEnabled" type="()Z"/>
<method name="setChildrenDrawnWithCacheEnabled" type="(Z)V"/>
<method name="isChildrenDrawingOrderEnabled" type="()Z"/>
<method name="setChildrenDrawingOrderEnabled" type="(Z)V"/>
<method name="getPersistentDrawingCache" type="()I"/>
<method name="setPersistentDrawingCache" type="(I)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="debug" type="(I)V"/>
<method name="indexOfChild" type="(Landroid/view/View;)I"/>
<method name="getChildCount" type="()I"/>
<method name="getChildAt" type="(I)Landroid/view/View;"/>
<method name="measureChildren" type="(II)V"/>
<method name="measureChild" type="(Landroid/view/View;II)V"/>
<method name="measureChildWithMargins" type="(Landroid/view/View;IIII)V"/>
<method name="getChildMeasureSpec" type="(III)I" class_method="true"/>
<method name="clearDisappearingChildren" type="()V"/>
<method name="gatherTransparentRegion" type="(Landroid/graphics/Region;)Z"/>
<method name="requestTransparentRegion" type="(Landroid/view/View;)V"/>
<method name="fitSystemWindows" type="(Landroid/graphics/Rect;)Z"/>
<method name="getLayoutAnimationListener" type="()Landroid/view/animation/Animation$AnimationListener;"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="setAddStatesFromChildren" type="(Z)V"/>
<method name="addStatesFromChildren" type="()Z"/>
<method name="childDrawableStateChanged" type="(Landroid/view/View;)V"/>
<method name="setLayoutAnimationListener" type="(Landroid/view/animation/Animation$AnimationListener;)V"/>
</class>
<class name="android/view/ViewStub">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getInflatedId" type="()I"/>
<method name="setInflatedId" type="(I)V"/>
<method name="getLayoutResource" type="()I"/>
<method name="setLayoutResource" type="(I)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setVisibility" type="(I)V"/>
<method name="inflate" type="()Landroid/view/View;"/>
<method name="setOnInflateListener" type="(Landroid/view/ViewStub$OnInflateListener;)V"/>
</class>
<class name="android/view/ViewTreeObserver">
<method name="addOnGlobalFocusChangeListener" type="(Landroid/view/ViewTreeObserver$OnGlobalFocusChangeListener;)V"/>
<method name="removeOnGlobalFocusChangeListener" type="(Landroid/view/ViewTreeObserver$OnGlobalFocusChangeListener;)V"/>
<method name="addOnGlobalLayoutListener" type="(Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V"/>
<method name="removeGlobalOnLayoutListener" type="(Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V"/>
<method name="addOnPreDrawListener" type="(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V"/>
<method name="removeOnPreDrawListener" type="(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V"/>
<method name="addOnScrollChangedListener" type="(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"/>
<method name="removeOnScrollChangedListener" type="(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"/>
<method name="addOnTouchModeChangeListener" type="(Landroid/view/ViewTreeObserver$OnTouchModeChangeListener;)V"/>
<method name="removeOnTouchModeChangeListener" type="(Landroid/view/ViewTreeObserver$OnTouchModeChangeListener;)V"/>
<method name="isAlive" type="()Z"/>
<method name="dispatchOnGlobalLayout" type="()V"/>
<method name="dispatchOnPreDraw" type="()Z"/>
</class>
<class name="android/view/Window">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getWindowStyle" type="()Landroid/content/res/TypedArray;"/>
<method name="setContainer" type="(Landroid/view/Window;)V"/>
<method name="getContainer" type="()Landroid/view/Window;"/>
<method name="hasChildren" type="()Z"/>
<method name="setWindowManager" type="(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;)V"/>
<method name="getWindowManager" type="()Landroid/view/WindowManager;"/>
<method name="setCallback" type="(Landroid/view/Window$Callback;)V"/>
<method name="getCallback" type="()Landroid/view/Window$Callback;"/>
<method name="takeSurface" type="(Landroid/view/SurfaceHolder$Callback2;)V"/>
<method name="takeInputQueue" type="(Landroid/view/InputQueue$Callback;)V"/>
<method name="isFloating" type="()Z"/>
<method name="setLayout" type="(II)V"/>
<method name="setGravity" type="(I)V"/>
<method name="setType" type="(I)V"/>
<method name="setFormat" type="(I)V"/>
<method name="setWindowAnimations" type="(I)V"/>
<method name="setSoftInputMode" type="(I)V"/>
<method name="addFlags" type="(I)V"/>
<method name="clearFlags" type="(I)V"/>
<method name="setFlags" type="(II)V"/>
<method name="setAttributes" type="(Landroid/view/WindowManager$LayoutParams;)V"/>
<method name="getAttributes" type="()Landroid/view/WindowManager$LayoutParams;"/>
<method name="getForcedWindowFlags" type="()I"/>
<method name="hasSoftInputMode" type="()Z"/>
<method name="requestFeature" type="(I)Z"/>
<method name="makeActive" type="()V"/>
<method name="isActive" type="()Z"/>
<method name="findViewById" type="(I)Landroid/view/View;"/>
<method name="setContentView" type="(I)V"/>
<method name="setContentView" type="(Landroid/view/View;)V"/>
<method name="setContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addContentView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="getCurrentFocus" type="()Landroid/view/View;"/>
<method name="getLayoutInflater" type="()Landroid/view/LayoutInflater;"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="setTitleColor" type="(I)V"/>
<method name="openPanel" type="(ILandroid/view/KeyEvent;)V"/>
<method name="closePanel" type="(I)V"/>
<method name="togglePanel" type="(ILandroid/view/KeyEvent;)V"/>
<method name="performPanelShortcut" type="(IILandroid/view/KeyEvent;I)Z"/>
<method name="performPanelIdentifierAction" type="(III)Z"/>
<method name="closeAllPanels" type="()V"/>
<method name="performContextMenuIdentifierAction" type="(II)Z"/>
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="setBackgroundDrawableResource" type="(I)V"/>
<method name="setBackgroundDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setFeatureDrawableResource" type="(II)V"/>
<method name="setFeatureDrawableUri" type="(ILandroid/net/Uri;)V"/>
<method name="setFeatureDrawable" type="(ILandroid/graphics/drawable/Drawable;)V"/>
<method name="setFeatureDrawableAlpha" type="(II)V"/>
<method name="setFeatureInt" type="(II)V"/>
<method name="takeKeyEvents" type="(Z)V"/>
<method name="superDispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="superDispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="superDispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="getDecorView" type="()Landroid/view/View;"/>
<method name="peekDecorView" type="()Landroid/view/View;"/>
<method name="saveHierarchyState" type="()Landroid/os/Bundle;"/>
<method name="restoreHierarchyState" type="(Landroid/os/Bundle;)V"/>
<method name="onActive" type="()V"/>
<method name="getFeatures" type="()I"/>
<method name="getLocalFeatures" type="()I"/>
<method name="setDefaultWindowFormat" type="(I)V"/>
<method name="setChildDrawable" type="(ILandroid/graphics/drawable/Drawable;)V"/>
<method name="setChildInt" type="(II)V"/>
<method name="isShortcutKey" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="setVolumeControlStream" type="(I)V"/>
<method name="getVolumeControlStream" type="()I"/>
</class>
<class name="android/view/WindowManager$BadTokenException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/view/WindowManager$LayoutParams">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(IIIII)V"/>
<method name="&lt;init&gt;" type="(IIIIIII)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="mayUseInputMethod" type="(I)Z" class_method="true"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)V"/>
<method name="getTitle" type="()Ljava/lang/CharSequence;"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="copyFrom" type="(Landroid/view/WindowManager$LayoutParams;)I"/>
<method name="debug" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/webkit/CacheManager$CacheResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="getHttpStatusCode" type="()I"/>
<method name="getContentLength" type="()J"/>
<method name="getLocalPath" type="()Ljava/lang/String;"/>
<method name="getExpires" type="()J"/>
<method name="getExpiresString" type="()Ljava/lang/String;"/>
<method name="getLastModified" type="()Ljava/lang/String;"/>
<method name="getETag" type="()Ljava/lang/String;"/>
<method name="getMimeType" type="()Ljava/lang/String;"/>
<method name="getLocation" type="()Ljava/lang/String;"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="getContentDisposition" type="()Ljava/lang/String;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="setInputStream" type="(Ljava/io/InputStream;)V"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/webkit/CacheManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="getCacheFileBaseDir" type="()Ljava/io/File;" class_method="true"/>
<method name="cacheDisabled" type="()Z" class_method="true"/>
<method name="startCacheTransaction" type="()Z" class_method="true"/>
<method name="endCacheTransaction" type="()Z" class_method="true"/>
<method name="getCacheFile" type="(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/CacheManager$CacheResult;" class_method="true"/>
<method name="saveCacheFile" type="(Ljava/lang/String;Landroid/webkit/CacheManager$CacheResult;)V" class_method="true"/>
</class>
<class name="android/webkit/ConsoleMessage$MessageLevel">
<method name="values" type="()[Landroid/webkit/ConsoleMessage$MessageLevel;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/ConsoleMessage$MessageLevel;" class_method="true"/>
</class>
<class name="android/webkit/ConsoleMessage">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILandroid/webkit/ConsoleMessage$MessageLevel;)V"/>
<method name="messageLevel" type="()Landroid/webkit/ConsoleMessage$MessageLevel;"/>
<method name="message" type="()Ljava/lang/String;"/>
<method name="sourceId" type="()Ljava/lang/String;"/>
<method name="lineNumber" type="()I"/>
</class>
<class name="android/webkit/CookieManager">
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getInstance" type="()Landroid/webkit/CookieManager;" class_method="true"/>
<method name="setAcceptCookie" type="(Z)V"/>
<method name="acceptCookie" type="()Z"/>
<method name="setCookie" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getCookie" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="removeSessionCookie" type="()V"/>
<method name="removeAllCookie" type="()V"/>
<method name="hasCookies" type="()Z"/>
<method name="removeExpiredCookie" type="()V"/>
</class>
<class name="android/webkit/CookieSyncManager">
<method name="getInstance" type="()Landroid/webkit/CookieSyncManager;" class_method="true"/>
<method name="createInstance" type="(Landroid/content/Context;)Landroid/webkit/CookieSyncManager;" class_method="true"/>
<method name="syncFromRamToFlash" type="()V"/>
<method name="stopSync" type="()V"/>
<method name="startSync" type="()V"/>
<method name="resetSync" type="()V"/>
<method name="sync" type="()V"/>
<method name="run" type="()V"/>
</class>
<class name="android/webkit/DateSorter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="getIndex" type="(J)I"/>
<method name="getLabel" type="(I)Ljava/lang/String;"/>
<method name="getBoundary" type="(I)J"/>
</class>
<class name="android/webkit/GeolocationPermissions">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstance" type="()Landroid/webkit/GeolocationPermissions;" class_method="true"/>
<method name="getOrigins" type="(Landroid/webkit/ValueCallback;)V"/>
<method name="getAllowed" type="(Ljava/lang/String;Landroid/webkit/ValueCallback;)V"/>
<method name="clear" type="(Ljava/lang/String;)V"/>
<method name="allow" type="(Ljava/lang/String;)V"/>
<method name="clearAll" type="()V"/>
</class>
<class name="android/webkit/HttpAuthHandler">
<method name="handleMessage" type="(Landroid/os/Message;)V"/>
<method name="proceed" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="cancel" type="()V"/>
<method name="useHttpAuthUsernamePassword" type="()Z"/>
</class>
<class name="android/webkit/JsPromptResult">
<method name="confirm" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/webkit/JsResult">
<method name="cancel" type="()V"/>
<method name="confirm" type="()V"/>
<method name="wakeUp" type="()V"/>
</class>
<class name="android/webkit/MimeTypeMap">
<method name="getFileExtensionFromUrl" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="hasMimeType" type="(Ljava/lang/String;)Z"/>
<method name="getMimeTypeFromExtension" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="hasExtension" type="(Ljava/lang/String;)Z"/>
<method name="getExtensionFromMimeType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getSingleton" type="()Landroid/webkit/MimeTypeMap;" class_method="true"/>
</class>
<class name="android/webkit/Plugin">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getFileName" type="()Ljava/lang/String;"/>
<method name="getDescription" type="()Ljava/lang/String;"/>
<method name="setName" type="(Ljava/lang/String;)V"/>
<method name="setPath" type="(Ljava/lang/String;)V"/>
<method name="setFileName" type="(Ljava/lang/String;)V"/>
<method name="setDescription" type="(Ljava/lang/String;)V"/>
<method name="setClickHandler" type="(Landroid/webkit/Plugin$PreferencesClickHandler;)V"/>
<method name="dispatchClickEvent" type="(Landroid/content/Context;)V"/>
</class>
<class name="android/webkit/PluginData">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;JLjava/util/Map;I)V"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getContentLength" type="()J"/>
<method name="getHeaders" type="()Ljava/util/Map;"/>
<method name="getStatusCode" type="()I"/>
</class>
<class name="android/webkit/PluginList">
<method name="&lt;init&gt;" type="()V"/>
<method name="getList" type="()Ljava/util/List;"/>
<method name="addPlugin" type="(Landroid/webkit/Plugin;)V"/>
<method name="removePlugin" type="(Landroid/webkit/Plugin;)V"/>
<method name="clear" type="()V"/>
<method name="pluginClicked" type="(Landroid/content/Context;I)V"/>
</class>
<class name="android/webkit/SslErrorHandler">
<method name="handleMessage" type="(Landroid/os/Message;)V"/>
<method name="proceed" type="()V"/>
<method name="cancel" type="()V"/>
</class>
<class name="android/webkit/UrlInterceptRegistry">
<method name="&lt;init&gt;" type="()V"/>
<method name="setUrlInterceptDisabled" type="(Z)V" class_method="true"/>
<method name="urlInterceptDisabled" type="()Z" class_method="true"/>
<method name="registerHandler" type="(Landroid/webkit/UrlInterceptHandler;)Z" class_method="true"/>
<method name="unregisterHandler" type="(Landroid/webkit/UrlInterceptHandler;)Z" class_method="true"/>
<method name="getSurrogate" type="(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/CacheManager$CacheResult;" class_method="true"/>
<method name="getPluginData" type="(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/PluginData;" class_method="true"/>
</class>
<class name="android/webkit/URLUtil">
<method name="&lt;init&gt;" type="()V"/>
<method name="guessUrl" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="composeSearchUrl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="decode" type="([B)[B" class_method="true"/>
<method name="isAssetUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isCookielessProxyUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isFileUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isAboutUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isDataUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isJavaScriptUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isHttpUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isHttpsUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isNetworkUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isContentUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isValidUrl" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="stripAnchor" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="guessFileName" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="android/webkit/WebBackForwardList">
<method name="getCurrentItem" type="()Landroid/webkit/WebHistoryItem;"/>
<method name="getCurrentIndex" type="()I"/>
<method name="getItemAtIndex" type="(I)Landroid/webkit/WebHistoryItem;"/>
<method name="getSize" type="()I"/>
<method name="clone" type="()Landroid/webkit/WebBackForwardList;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/webkit/WebChromeClient">
<method name="&lt;init&gt;" type="()V"/>
<method name="onProgressChanged" type="(Landroid/webkit/WebView;I)V"/>
<method name="onReceivedTitle" type="(Landroid/webkit/WebView;Ljava/lang/String;)V"/>
<method name="onReceivedIcon" type="(Landroid/webkit/WebView;Landroid/graphics/Bitmap;)V"/>
<method name="onReceivedTouchIconUrl" type="(Landroid/webkit/WebView;Ljava/lang/String;Z)V"/>
<method name="onShowCustomView" type="(Landroid/view/View;Landroid/webkit/WebChromeClient$CustomViewCallback;)V"/>
<method name="onHideCustomView" type="()V"/>
<method name="onCreateWindow" type="(Landroid/webkit/WebView;ZZLandroid/os/Message;)Z"/>
<method name="onRequestFocus" type="(Landroid/webkit/WebView;)V"/>
<method name="onCloseWindow" type="(Landroid/webkit/WebView;)V"/>
<method name="onJsAlert" type="(Landroid/webkit/WebView;Ljava/lang/String;Ljava/lang/String;Landroid/webkit/JsResult;)Z"/>
<method name="onJsConfirm" type="(Landroid/webkit/WebView;Ljava/lang/String;Ljava/lang/String;Landroid/webkit/JsResult;)Z"/>
<method name="onJsPrompt" type="(Landroid/webkit/WebView;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/webkit/JsPromptResult;)Z"/>
<method name="onJsBeforeUnload" type="(Landroid/webkit/WebView;Ljava/lang/String;Ljava/lang/String;Landroid/webkit/JsResult;)Z"/>
<method name="onExceededDatabaseQuota" type="(Ljava/lang/String;Ljava/lang/String;JJJLandroid/webkit/WebStorage$QuotaUpdater;)V"/>
<method name="onReachedMaxAppCacheSize" type="(JJLandroid/webkit/WebStorage$QuotaUpdater;)V"/>
<method name="onGeolocationPermissionsShowPrompt" type="(Ljava/lang/String;Landroid/webkit/GeolocationPermissions$Callback;)V"/>
<method name="onGeolocationPermissionsHidePrompt" type="()V"/>
<method name="onJsTimeout" type="()Z"/>
<method name="onConsoleMessage" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="onConsoleMessage" type="(Landroid/webkit/ConsoleMessage;)Z"/>
<method name="getDefaultVideoPoster" type="()Landroid/graphics/Bitmap;"/>
<method name="getVideoLoadingProgressView" type="()Landroid/view/View;"/>
<method name="getVisitedHistory" type="(Landroid/webkit/ValueCallback;)V"/>
</class>
<class name="android/webkit/WebHistoryItem">
<method name="getId" type="()I"/>
<method name="getUrl" type="()Ljava/lang/String;"/>
<method name="getOriginalUrl" type="()Ljava/lang/String;"/>
<method name="getTitle" type="()Ljava/lang/String;"/>
<method name="getFavicon" type="()Landroid/graphics/Bitmap;"/>
<method name="clone" type="()Landroid/webkit/WebHistoryItem;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/webkit/WebIconDatabase">
<method name="open" type="(Ljava/lang/String;)V"/>
<method name="close" type="()V"/>
<method name="removeAllIcons" type="()V"/>
<method name="requestIconForPageUrl" type="(Ljava/lang/String;Landroid/webkit/WebIconDatabase$IconListener;)V"/>
<method name="retainIconForPageUrl" type="(Ljava/lang/String;)V"/>
<method name="releaseIconForPageUrl" type="(Ljava/lang/String;)V"/>
<method name="getInstance" type="()Landroid/webkit/WebIconDatabase;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings$LayoutAlgorithm">
<method name="values" type="()[Landroid/webkit/WebSettings$LayoutAlgorithm;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/WebSettings$LayoutAlgorithm;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings$PluginState">
<method name="values" type="()[Landroid/webkit/WebSettings$PluginState;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/WebSettings$PluginState;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings$RenderPriority">
<method name="values" type="()[Landroid/webkit/WebSettings$RenderPriority;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/WebSettings$RenderPriority;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings$TextSize">
<method name="values" type="()[Landroid/webkit/WebSettings$TextSize;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/WebSettings$TextSize;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings$ZoomDensity">
<method name="values" type="()[Landroid/webkit/WebSettings$ZoomDensity;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/webkit/WebSettings$ZoomDensity;" class_method="true"/>
</class>
<class name="android/webkit/WebSettings">
<method name="setNavDump" type="(Z)V"/>
<method name="getNavDump" type="()Z"/>
<method name="setSupportZoom" type="(Z)V"/>
<method name="supportZoom" type="()Z"/>
<method name="setBuiltInZoomControls" type="(Z)V"/>
<method name="getBuiltInZoomControls" type="()Z"/>
<method name="setAllowFileAccess" type="(Z)V"/>
<method name="getAllowFileAccess" type="()Z"/>
<method name="setLoadWithOverviewMode" type="(Z)V"/>
<method name="getLoadWithOverviewMode" type="()Z"/>
<method name="setUseWebViewBackgroundForOverscrollBackground" type="(Z)V"/>
<method name="getUseWebViewBackgroundForOverscrollBackground" type="()Z"/>
<method name="setSaveFormData" type="(Z)V"/>
<method name="getSaveFormData" type="()Z"/>
<method name="setSavePassword" type="(Z)V"/>
<method name="getSavePassword" type="()Z"/>
<method name="setTextSize" type="(Landroid/webkit/WebSettings$TextSize;)V"/>
<method name="getTextSize" type="()Landroid/webkit/WebSettings$TextSize;"/>
<method name="setDefaultZoom" type="(Landroid/webkit/WebSettings$ZoomDensity;)V"/>
<method name="getDefaultZoom" type="()Landroid/webkit/WebSettings$ZoomDensity;"/>
<method name="setLightTouchEnabled" type="(Z)V"/>
<method name="getLightTouchEnabled" type="()Z"/>
<method name="setUseDoubleTree" type="(Z)V"/>
<method name="getUseDoubleTree" type="()Z"/>
<method name="setUserAgent" type="(I)V"/>
<method name="getUserAgent" type="()I"/>
<method name="setUseWideViewPort" type="(Z)V"/>
<method name="getUseWideViewPort" type="()Z"/>
<method name="setSupportMultipleWindows" type="(Z)V"/>
<method name="supportMultipleWindows" type="()Z"/>
<method name="setLayoutAlgorithm" type="(Landroid/webkit/WebSettings$LayoutAlgorithm;)V"/>
<method name="getLayoutAlgorithm" type="()Landroid/webkit/WebSettings$LayoutAlgorithm;"/>
<method name="setStandardFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getStandardFontFamily" type="()Ljava/lang/String;"/>
<method name="setFixedFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getFixedFontFamily" type="()Ljava/lang/String;"/>
<method name="setSansSerifFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getSansSerifFontFamily" type="()Ljava/lang/String;"/>
<method name="setSerifFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getSerifFontFamily" type="()Ljava/lang/String;"/>
<method name="setCursiveFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getCursiveFontFamily" type="()Ljava/lang/String;"/>
<method name="setFantasyFontFamily" type="(Ljava/lang/String;)V"/>
<method name="getFantasyFontFamily" type="()Ljava/lang/String;"/>
<method name="setMinimumFontSize" type="(I)V"/>
<method name="getMinimumFontSize" type="()I"/>
<method name="setMinimumLogicalFontSize" type="(I)V"/>
<method name="getMinimumLogicalFontSize" type="()I"/>
<method name="setDefaultFontSize" type="(I)V"/>
<method name="getDefaultFontSize" type="()I"/>
<method name="setDefaultFixedFontSize" type="(I)V"/>
<method name="getDefaultFixedFontSize" type="()I"/>
<method name="setLoadsImagesAutomatically" type="(Z)V"/>
<method name="getLoadsImagesAutomatically" type="()Z"/>
<method name="setBlockNetworkImage" type="(Z)V"/>
<method name="getBlockNetworkImage" type="()Z"/>
<method name="setBlockNetworkLoads" type="(Z)V"/>
<method name="getBlockNetworkLoads" type="()Z"/>
<method name="setJavaScriptEnabled" type="(Z)V"/>
<method name="setPluginsEnabled" type="(Z)V"/>
<method name="setPluginState" type="(Landroid/webkit/WebSettings$PluginState;)V"/>
<method name="setPluginsPath" type="(Ljava/lang/String;)V"/>
<method name="setDatabasePath" type="(Ljava/lang/String;)V"/>
<method name="setGeolocationDatabasePath" type="(Ljava/lang/String;)V"/>
<method name="setAppCacheEnabled" type="(Z)V"/>
<method name="setAppCachePath" type="(Ljava/lang/String;)V"/>
<method name="setAppCacheMaxSize" type="(J)V"/>
<method name="setDatabaseEnabled" type="(Z)V"/>
<method name="setDomStorageEnabled" type="(Z)V"/>
<method name="getDomStorageEnabled" type="()Z"/>
<method name="getDatabasePath" type="()Ljava/lang/String;"/>
<method name="getDatabaseEnabled" type="()Z"/>
<method name="setGeolocationEnabled" type="(Z)V"/>
<method name="getJavaScriptEnabled" type="()Z"/>
<method name="getPluginsEnabled" type="()Z"/>
<method name="getPluginState" type="()Landroid/webkit/WebSettings$PluginState;"/>
<method name="getPluginsPath" type="()Ljava/lang/String;"/>
<method name="setJavaScriptCanOpenWindowsAutomatically" type="(Z)V"/>
<method name="getJavaScriptCanOpenWindowsAutomatically" type="()Z"/>
<method name="setDefaultTextEncodingName" type="(Ljava/lang/String;)V"/>
<method name="getDefaultTextEncodingName" type="()Ljava/lang/String;"/>
<method name="setUserAgentString" type="(Ljava/lang/String;)V"/>
<method name="getUserAgentString" type="()Ljava/lang/String;"/>
<method name="setNeedInitialFocus" type="(Z)V"/>
<method name="setRenderPriority" type="(Landroid/webkit/WebSettings$RenderPriority;)V"/>
<method name="setCacheMode" type="(I)V"/>
<method name="getCacheMode" type="()I"/>
</class>
<class name="android/webkit/WebStorage">
<method name="&lt;init&gt;" type="()V"/>
<method name="getOrigins" type="(Landroid/webkit/ValueCallback;)V"/>
<method name="getUsageForOrigin" type="(Ljava/lang/String;Landroid/webkit/ValueCallback;)V"/>
<method name="getQuotaForOrigin" type="(Ljava/lang/String;Landroid/webkit/ValueCallback;)V"/>
<method name="setQuotaForOrigin" type="(Ljava/lang/String;J)V"/>
<method name="deleteOrigin" type="(Ljava/lang/String;)V"/>
<method name="deleteAllData" type="()V"/>
<method name="getInstance" type="()Landroid/webkit/WebStorage;" class_method="true"/>
</class>
<class name="android/webkit/WebSyncManager">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="run" type="()V"/>
<method name="sync" type="()V"/>
<method name="resetSync" type="()V"/>
<method name="startSync" type="()V"/>
<method name="stopSync" type="()V"/>
<method name="onSyncInit" type="()V"/>
</class>
<class name="android/webkit/WebView$HitTestResult">
<method name="getType" type="()I"/>
<method name="getExtra" type="()Ljava/lang/String;"/>
</class>
<class name="android/webkit/WebView$WebViewTransport">
<method name="&lt;init&gt;" type="(Landroid/webkit/WebView;)V"/>
<method name="setWebView" type="(Landroid/webkit/WebView;)V"/>
<method name="getWebView" type="()Landroid/webkit/WebView;"/>
</class>
<class name="android/webkit/WebView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOverScrollMode" type="(I)V"/>
<method name="setScrollBarStyle" type="(I)V"/>
<method name="setHorizontalScrollbarOverlay" type="(Z)V"/>
<method name="setVerticalScrollbarOverlay" type="(Z)V"/>
<method name="overlayHorizontalScrollbar" type="()Z"/>
<method name="overlayVerticalScrollbar" type="()Z"/>
<method name="getCertificate" type="()Landroid/net/http/SslCertificate;"/>
<method name="setCertificate" type="(Landroid/net/http/SslCertificate;)V"/>
<method name="savePassword" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setHttpAuthUsernamePassword" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getHttpAuthUsernamePassword" type="(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="destroy" type="()V"/>
<method name="enablePlatformNotifications" type="()V" class_method="true"/>
<method name="disablePlatformNotifications" type="()V" class_method="true"/>
<method name="setNetworkAvailable" type="(Z)V"/>
<method name="saveState" type="(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;"/>
<method name="savePicture" type="(Landroid/os/Bundle;Ljava/io/File;)Z"/>
<method name="restorePicture" type="(Landroid/os/Bundle;Ljava/io/File;)Z"/>
<method name="restoreState" type="(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;"/>
<method name="loadUrl" type="(Ljava/lang/String;Ljava/util/Map;)V"/>
<method name="loadUrl" type="(Ljava/lang/String;)V"/>
<method name="postUrl" type="(Ljava/lang/String;[B)V"/>
<method name="loadData" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="loadDataWithBaseURL" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="stopLoading" type="()V"/>
<method name="reload" type="()V"/>
<method name="canGoBack" type="()Z"/>
<method name="goBack" type="()V"/>
<method name="canGoForward" type="()Z"/>
<method name="goForward" type="()V"/>
<method name="canGoBackOrForward" type="(I)Z"/>
<method name="goBackOrForward" type="(I)V"/>
<method name="pageUp" type="(Z)Z"/>
<method name="pageDown" type="(Z)Z"/>
<method name="clearView" type="()V"/>
<method name="capturePicture" type="()Landroid/graphics/Picture;"/>
<method name="getScale" type="()F"/>
<method name="setInitialScale" type="(I)V"/>
<method name="invokeZoomPicker" type="()V"/>
<method name="getHitTestResult" type="()Landroid/webkit/WebView$HitTestResult;"/>
<method name="requestFocusNodeHref" type="(Landroid/os/Message;)V"/>
<method name="requestImageRef" type="(Landroid/os/Message;)V"/>
<method name="computeHorizontalScrollRange" type="()I"/>
<method name="computeHorizontalScrollOffset" type="()I"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="computeVerticalScrollOffset" type="()I"/>
<method name="computeVerticalScrollExtent" type="()I"/>
<method name="onOverScrolled" type="(IIZZ)V"/>
<method name="getUrl" type="()Ljava/lang/String;"/>
<method name="getOriginalUrl" type="()Ljava/lang/String;"/>
<method name="getTitle" type="()Ljava/lang/String;"/>
<method name="getFavicon" type="()Landroid/graphics/Bitmap;"/>
<method name="getProgress" type="()I"/>
<method name="getContentHeight" type="()I"/>
<method name="pauseTimers" type="()V"/>
<method name="resumeTimers" type="()V"/>
<method name="freeMemory" type="()V"/>
<method name="clearCache" type="(Z)V"/>
<method name="clearFormData" type="()V"/>
<method name="clearHistory" type="()V"/>
<method name="clearSslPreferences" type="()V"/>
<method name="copyBackForwardList" type="()Landroid/webkit/WebBackForwardList;"/>
<method name="findNext" type="(Z)V"/>
<method name="findAll" type="(Ljava/lang/String;)I"/>
<method name="findAddress" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="clearMatches" type="()V"/>
<method name="documentHasImages" type="(Landroid/os/Message;)V"/>
<method name="computeScroll" type="()V"/>
<method name="setWebViewClient" type="(Landroid/webkit/WebViewClient;)V"/>
<method name="setDownloadListener" type="(Landroid/webkit/DownloadListener;)V"/>
<method name="setWebChromeClient" type="(Landroid/webkit/WebChromeClient;)V"/>
<method name="setPictureListener" type="(Landroid/webkit/WebView$PictureListener;)V"/>
<method name="addJavascriptInterface" type="(Ljava/lang/Object;Ljava/lang/String;)V"/>
<method name="getSettings" type="()Landroid/webkit/WebSettings;"/>
<method name="getPluginList" type="()Landroid/webkit/PluginList;" class_method="true"/>
<method name="refreshPlugins" type="(Z)V"/>
<method name="finalize" type="()V"/>
<method name="drawChild" type="(Landroid/graphics/Canvas;Landroid/view/View;J)Z"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="performLongClick" type="()Z"/>
<method name="onCreateInputConnection" type="(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="emulateShiftHeld" type="()V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onChildViewAdded" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onChildViewRemoved" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onGlobalFocusChanged" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onScrollChanged" type="(IIII)V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="setMapTrackballToArrowKeys" type="(Z)V"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="flingScroll" type="(II)V"/>
<method name="getZoomControls" type="()Landroid/view/View;"/>
<method name="zoomIn" type="()Z"/>
<method name="zoomOut" type="()Z"/>
<method name="requestFocus" type="(ILandroid/graphics/Rect;)Z"/>
<method name="onMeasure" type="(II)V"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
<method name="setBackgroundColor" type="(I)V"/>
<method name="debugDump" type="()V"/>
</class>
<class name="android/webkit/WebViewClient">
<method name="&lt;init&gt;" type="()V"/>
<method name="shouldOverrideUrlLoading" type="(Landroid/webkit/WebView;Ljava/lang/String;)Z"/>
<method name="onPageStarted" type="(Landroid/webkit/WebView;Ljava/lang/String;Landroid/graphics/Bitmap;)V"/>
<method name="onPageFinished" type="(Landroid/webkit/WebView;Ljava/lang/String;)V"/>
<method name="onLoadResource" type="(Landroid/webkit/WebView;Ljava/lang/String;)V"/>
<method name="onTooManyRedirects" type="(Landroid/webkit/WebView;Landroid/os/Message;Landroid/os/Message;)V"/>
<method name="onReceivedError" type="(Landroid/webkit/WebView;ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="onFormResubmission" type="(Landroid/webkit/WebView;Landroid/os/Message;Landroid/os/Message;)V"/>
<method name="doUpdateVisitedHistory" type="(Landroid/webkit/WebView;Ljava/lang/String;Z)V"/>
<method name="onReceivedSslError" type="(Landroid/webkit/WebView;Landroid/webkit/SslErrorHandler;Landroid/net/http/SslError;)V"/>
<method name="onReceivedHttpAuthRequest" type="(Landroid/webkit/WebView;Landroid/webkit/HttpAuthHandler;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="shouldOverrideKeyEvent" type="(Landroid/webkit/WebView;Landroid/view/KeyEvent;)Z"/>
<method name="onUnhandledKeyEvent" type="(Landroid/webkit/WebView;Landroid/view/KeyEvent;)V"/>
<method name="onScaleChanged" type="(Landroid/webkit/WebView;FF)V"/>
</class>
<class name="android/webkit/WebViewDatabase">
<method name="getInstance" type="(Landroid/content/Context;)Landroid/webkit/WebViewDatabase;" class_method="true"/>
<method name="hasUsernamePassword" type="()Z"/>
<method name="clearUsernamePassword" type="()V"/>
<method name="hasHttpAuthUsernamePassword" type="()Z"/>
<method name="clearHttpAuthUsernamePassword" type="()V"/>
<method name="hasFormData" type="()Z"/>
<method name="clearFormData" type="()V"/>
</class>
<class name="android/widget/AbsListView$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
</class>
<class name="android/widget/AbsListView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOverScrollMode" type="(I)V"/>
<method name="setFastScrollEnabled" type="(Z)V"/>
<method name="isFastScrollEnabled" type="()Z"/>
<method name="setSmoothScrollbarEnabled" type="(Z)V"/>
<method name="isSmoothScrollbarEnabled" type="()Z"/>
<method name="setOnScrollListener" type="(Landroid/widget/AbsListView$OnScrollListener;)V"/>
<method name="isScrollingCacheEnabled" type="()Z"/>
<method name="setScrollingCacheEnabled" type="(Z)V"/>
<method name="setTextFilterEnabled" type="(Z)V"/>
<method name="isTextFilterEnabled" type="()Z"/>
<method name="getFocusedRect" type="(Landroid/graphics/Rect;)V"/>
<method name="isStackFromBottom" type="()Z"/>
<method name="setStackFromBottom" type="(Z)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setFilterText" type="(Ljava/lang/String;)V"/>
<method name="getTextFilter" type="()Ljava/lang/CharSequence;"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="requestLayout" type="()V"/>
<method name="computeVerticalScrollExtent" type="()I"/>
<method name="computeVerticalScrollOffset" type="()I"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="getTopFadingEdgeStrength" type="()F"/>
<method name="getBottomFadingEdgeStrength" type="()F"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="layoutChildren" type="()V"/>
<method name="getSelectedView" type="()Landroid/view/View;"/>
<method name="getListPaddingTop" type="()I"/>
<method name="getListPaddingBottom" type="()I"/>
<method name="getListPaddingLeft" type="()I"/>
<method name="getListPaddingRight" type="()I"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="setDrawSelectorOnTop" type="(Z)V"/>
<method name="setSelector" type="(I)V"/>
<method name="setSelector" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getSelector" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setScrollIndicators" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="getContextMenuInfo" type="()Landroid/view/ContextMenu$ContextMenuInfo;"/>
<method name="showContextMenuForChild" type="(Landroid/view/View;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="dispatchSetPressed" type="(Z)V"/>
<method name="pointToPosition" type="(II)I"/>
<method name="pointToRowId" type="(II)J"/>
<method name="onTouchModeChanged" type="(Z)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onOverScrolled" type="(IIZZ)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onInterceptTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="addTouchables" type="(Ljava/util/ArrayList;)V"/>
<method name="smoothScrollToPosition" type="(I)V"/>
<method name="smoothScrollToPosition" type="(II)V"/>
<method name="smoothScrollBy" type="(II)V"/>
<method name="invalidateViews" type="()V"/>
<method name="handleDataChanged" type="()V"/>
<method name="onDisplayHint" type="(I)V"/>
<method name="isInFilterMode" type="()Z"/>
<method name="onCreateInputConnection" type="(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"/>
<method name="checkInputConnectionProxy" type="(Landroid/view/View;)Z"/>
<method name="clearTextFilter" type="()V"/>
<method name="hasTextFilter" type="()Z"/>
<method name="onGlobalLayout" type="()V"/>
<method name="beforeTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="onTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="afterTextChanged" type="(Landroid/text/Editable;)V"/>
<method name="onFilterComplete" type="(I)V"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/AbsListView$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="setTranscriptMode" type="(I)V"/>
<method name="getTranscriptMode" type="()I"/>
<method name="getSolidColor" type="()I"/>
<method name="setCacheColorHint" type="(I)V"/>
<method name="getCacheColorHint" type="()I"/>
<method name="reclaimViews" type="(Ljava/util/List;)V"/>
<method name="setRecyclerListener" type="(Landroid/widget/AbsListView$RecyclerListener;)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/AbsoluteLayout$LayoutParams">
<method name="&lt;init&gt;" type="(IIII)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="debug" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="android/widget/AbsoluteLayout">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/AbsSeekBar">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setThumb" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getThumbOffset" type="()I"/>
<method name="setThumbOffset" type="(I)V"/>
<method name="setKeyProgressIncrement" type="(I)V"/>
<method name="getKeyProgressIncrement" type="()I"/>
<method name="setMax" type="(I)V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
</class>
<class name="android/widget/AbsSpinner">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setAdapter" type="(Landroid/widget/SpinnerAdapter;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="setSelection" type="(IZ)V"/>
<method name="setSelection" type="(I)V"/>
<method name="getSelectedView" type="()Landroid/view/View;"/>
<method name="requestLayout" type="()V"/>
<method name="getAdapter" type="()Landroid/widget/SpinnerAdapter;"/>
<method name="getCount" type="()I"/>
<method name="pointToPosition" type="(II)I"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setAdapter" type="(Landroid/widget/Adapter;)V"/>
<method name="getAdapter" type="()Landroid/widget/Adapter;"/>
</class>
<class name="android/widget/AdapterView$AdapterContextMenuInfo">
<method name="&lt;init&gt;" type="(Landroid/view/View;IJ)V"/>
</class>
<class name="android/widget/AdapterView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOnItemClickListener" type="(Landroid/widget/AdapterView$OnItemClickListener;)V"/>
<method name="getOnItemClickListener" type="()Landroid/widget/AdapterView$OnItemClickListener;"/>
<method name="performItemClick" type="(Landroid/view/View;IJ)Z"/>
<method name="setOnItemLongClickListener" type="(Landroid/widget/AdapterView$OnItemLongClickListener;)V"/>
<method name="getOnItemLongClickListener" type="()Landroid/widget/AdapterView$OnItemLongClickListener;"/>
<method name="setOnItemSelectedListener" type="(Landroid/widget/AdapterView$OnItemSelectedListener;)V"/>
<method name="getOnItemSelectedListener" type="()Landroid/widget/AdapterView$OnItemSelectedListener;"/>
<method name="getAdapter" type="()Landroid/widget/Adapter;"/>
<method name="setAdapter" type="(Landroid/widget/Adapter;)V"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="addView" type="(Landroid/view/View;I)V"/>
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="removeView" type="(Landroid/view/View;)V"/>
<method name="removeViewAt" type="(I)V"/>
<method name="removeAllViews" type="()V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="getSelectedItemPosition" type="()I"/>
<method name="getSelectedItemId" type="()J"/>
<method name="getSelectedView" type="()Landroid/view/View;"/>
<method name="getSelectedItem" type="()Ljava/lang/Object;"/>
<method name="getCount" type="()I"/>
<method name="getPositionForView" type="(Landroid/view/View;)I"/>
<method name="getFirstVisiblePosition" type="()I"/>
<method name="getLastVisiblePosition" type="()I"/>
<method name="setSelection" type="(I)V"/>
<method name="setEmptyView" type="(Landroid/view/View;)V"/>
<method name="getEmptyView" type="()Landroid/view/View;"/>
<method name="setFocusable" type="(Z)V"/>
<method name="setFocusableInTouchMode" type="(Z)V"/>
<method name="getItemAtPosition" type="(I)Ljava/lang/Object;"/>
<method name="getItemIdAtPosition" type="(I)J"/>
<method name="setOnClickListener" type="(Landroid/view/View$OnClickListener;)V"/>
<method name="dispatchSaveInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="canAnimate" type="()Z"/>
</class>
<class name="android/widget/AlphabetIndexer">
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;ILjava/lang/CharSequence;)V"/>
<method name="getSections" type="()[Ljava/lang/Object;"/>
<method name="setCursor" type="(Landroid/database/Cursor;)V"/>
<method name="compare" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getPositionForSection" type="(I)I"/>
<method name="getSectionForPosition" type="(I)I"/>
<method name="onChanged" type="()V"/>
<method name="onInvalidated" type="()V"/>
</class>
<class name="android/widget/AnalogClock">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
</class>
<class name="android/widget/ArrayAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;I[Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;II[Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILjava/util/List;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;IILjava/util/List;)V"/>
<method name="add" type="(Ljava/lang/Object;)V"/>
<method name="insert" type="(Ljava/lang/Object;I)V"/>
<method name="remove" type="(Ljava/lang/Object;)V"/>
<method name="clear" type="()V"/>
<method name="sort" type="(Ljava/util/Comparator;)V"/>
<method name="notifyDataSetChanged" type="()V"/>
<method name="setNotifyOnChange" type="(Z)V"/>
<method name="getContext" type="()Landroid/content/Context;"/>
<method name="getCount" type="()I"/>
<method name="getItem" type="(I)Ljava/lang/Object;"/>
<method name="getPosition" type="(Ljava/lang/Object;)I"/>
<method name="getItemId" type="(I)J"/>
<method name="getView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="setDropDownViewResource" type="(I)V"/>
<method name="getDropDownView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="createFromResource" type="(Landroid/content/Context;II)Landroid/widget/ArrayAdapter;" class_method="true"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
</class>
<class name="android/widget/AutoCompleteTextView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOnClickListener" type="(Landroid/view/View$OnClickListener;)V"/>
<method name="setCompletionHint" type="(Ljava/lang/CharSequence;)V"/>
<method name="getDropDownWidth" type="()I"/>
<method name="setDropDownWidth" type="(I)V"/>
<method name="getDropDownHeight" type="()I"/>
<method name="setDropDownHeight" type="(I)V"/>
<method name="getDropDownAnchor" type="()I"/>
<method name="setDropDownAnchor" type="(I)V"/>
<method name="getDropDownBackground" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setDropDownBackgroundDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setDropDownBackgroundResource" type="(I)V"/>
<method name="setDropDownVerticalOffset" type="(I)V"/>
<method name="getDropDownVerticalOffset" type="()I"/>
<method name="setDropDownHorizontalOffset" type="(I)V"/>
<method name="getDropDownHorizontalOffset" type="()I"/>
<method name="getThreshold" type="()I"/>
<method name="setThreshold" type="(I)V"/>
<method name="setOnItemClickListener" type="(Landroid/widget/AdapterView$OnItemClickListener;)V"/>
<method name="setOnItemSelectedListener" type="(Landroid/widget/AdapterView$OnItemSelectedListener;)V"/>
<method name="getItemClickListener" type="()Landroid/widget/AdapterView$OnItemClickListener;"/>
<method name="getItemSelectedListener" type="()Landroid/widget/AdapterView$OnItemSelectedListener;"/>
<method name="getOnItemClickListener" type="()Landroid/widget/AdapterView$OnItemClickListener;"/>
<method name="getOnItemSelectedListener" type="()Landroid/widget/AdapterView$OnItemSelectedListener;"/>
<method name="getAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="setAdapter" type="(Landroid/widget/ListAdapter;)V"/>
<method name="onKeyPreIme" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="enoughToFilter" type="()Z"/>
<method name="isPopupShowing" type="()Z"/>
<method name="convertSelectionToString" type="(Ljava/lang/Object;)Ljava/lang/CharSequence;"/>
<method name="clearListSelection" type="()V"/>
<method name="setListSelection" type="(I)V"/>
<method name="getListSelection" type="()I"/>
<method name="performFiltering" type="(Ljava/lang/CharSequence;I)V"/>
<method name="performCompletion" type="()V"/>
<method name="onCommitCompletion" type="(Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="isPerformingCompletion" type="()Z"/>
<method name="replaceText" type="(Ljava/lang/CharSequence;)V"/>
<method name="onFilterComplete" type="(I)V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onDisplayHint" type="(I)V"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="dismissDropDown" type="()V"/>
<method name="setFrame" type="(IIII)Z"/>
<method name="showDropDown" type="()V"/>
<method name="setValidator" type="(Landroid/widget/AutoCompleteTextView$Validator;)V"/>
<method name="getValidator" type="()Landroid/widget/AutoCompleteTextView$Validator;"/>
<method name="performValidation" type="()V"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
</class>
<class name="android/widget/BaseAdapter">
<method name="&lt;init&gt;" type="()V"/>
<method name="hasStableIds" type="()Z"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="notifyDataSetChanged" type="()V"/>
<method name="notifyDataSetInvalidated" type="()V"/>
<method name="areAllItemsEnabled" type="()Z"/>
<method name="isEnabled" type="(I)Z"/>
<method name="getDropDownView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getItemViewType" type="(I)I"/>
<method name="getViewTypeCount" type="()I"/>
<method name="isEmpty" type="()Z"/>
</class>
<class name="android/widget/BaseExpandableListAdapter">
<method name="&lt;init&gt;" type="()V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="notifyDataSetInvalidated" type="()V"/>
<method name="notifyDataSetChanged" type="()V"/>
<method name="areAllItemsEnabled" type="()Z"/>
<method name="onGroupCollapsed" type="(I)V"/>
<method name="onGroupExpanded" type="(I)V"/>
<method name="getCombinedChildId" type="(JJ)J"/>
<method name="getCombinedGroupId" type="(J)J"/>
<method name="isEmpty" type="()Z"/>
<method name="getChildType" type="(II)I"/>
<method name="getChildTypeCount" type="()I"/>
<method name="getGroupType" type="(I)I"/>
<method name="getGroupTypeCount" type="()I"/>
</class>
<class name="android/widget/Button">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
</class>
<class name="android/widget/CheckBox">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
</class>
<class name="android/widget/CheckedTextView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="toggle" type="()V"/>
<method name="isChecked" type="()Z"/>
<method name="setChecked" type="(Z)V"/>
<method name="setCheckMarkDrawable" type="(I)V"/>
<method name="setCheckMarkDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setPadding" type="(IIII)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="drawableStateChanged" type="()V"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
</class>
<class name="android/widget/Chronometer">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setBase" type="(J)V"/>
<method name="getBase" type="()J"/>
<method name="setFormat" type="(Ljava/lang/String;)V"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
<method name="setOnChronometerTickListener" type="(Landroid/widget/Chronometer$OnChronometerTickListener;)V"/>
<method name="getOnChronometerTickListener" type="()Landroid/widget/Chronometer$OnChronometerTickListener;"/>
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onWindowVisibilityChanged" type="(I)V"/>
</class>
<class name="android/widget/CompoundButton">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="toggle" type="()V"/>
<method name="performClick" type="()Z"/>
<method name="isChecked" type="()Z"/>
<method name="setChecked" type="(Z)V"/>
<method name="setOnCheckedChangeListener" type="(Landroid/widget/CompoundButton$OnCheckedChangeListener;)V"/>
<method name="setButtonDrawable" type="(I)V"/>
<method name="setButtonDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="drawableStateChanged" type="()V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
</class>
<class name="android/widget/CursorAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="init" type="(Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="getCursor" type="()Landroid/database/Cursor;"/>
<method name="getCount" type="()I"/>
<method name="getItem" type="(I)Ljava/lang/Object;"/>
<method name="getItemId" type="(I)J"/>
<method name="hasStableIds" type="()Z"/>
<method name="getView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getDropDownView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newView" type="(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newDropDownView" type="(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="bindView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V"/>
<method name="changeCursor" type="(Landroid/database/Cursor;)V"/>
<method name="convertToString" type="(Landroid/database/Cursor;)Ljava/lang/CharSequence;"/>
<method name="runQueryOnBackgroundThread" type="(Ljava/lang/CharSequence;)Landroid/database/Cursor;"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
<method name="getFilterQueryProvider" type="()Landroid/widget/FilterQueryProvider;"/>
<method name="setFilterQueryProvider" type="(Landroid/widget/FilterQueryProvider;)V"/>
<method name="onContentChanged" type="()V"/>
</class>
<class name="android/widget/CursorTreeAdapter">
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/database/Cursor;Landroid/content/Context;Z)V"/>
<method name="getChildrenCursor" type="(Landroid/database/Cursor;)Landroid/database/Cursor;"/>
<method name="setGroupCursor" type="(Landroid/database/Cursor;)V"/>
<method name="setChildrenCursor" type="(ILandroid/database/Cursor;)V"/>
<method name="getChild" type="(II)Landroid/database/Cursor;"/>
<method name="getChildId" type="(II)J"/>
<method name="getChildrenCount" type="(I)I"/>
<method name="getGroup" type="(I)Landroid/database/Cursor;"/>
<method name="getGroupCount" type="()I"/>
<method name="getGroupId" type="(I)J"/>
<method name="getGroupView" type="(IZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newGroupView" type="(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="bindGroupView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="getChildView" type="(IIZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newChildView" type="(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="bindChildView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="isChildSelectable" type="(II)Z"/>
<method name="hasStableIds" type="()Z"/>
<method name="notifyDataSetChanged" type="()V"/>
<method name="notifyDataSetChanged" type="(Z)V"/>
<method name="notifyDataSetInvalidated" type="()V"/>
<method name="onGroupCollapsed" type="(I)V"/>
<method name="convertToString" type="(Landroid/database/Cursor;)Ljava/lang/String;"/>
<method name="runQueryOnBackgroundThread" type="(Ljava/lang/CharSequence;)Landroid/database/Cursor;"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
<method name="getFilterQueryProvider" type="()Landroid/widget/FilterQueryProvider;"/>
<method name="setFilterQueryProvider" type="(Landroid/widget/FilterQueryProvider;)V"/>
<method name="changeCursor" type="(Landroid/database/Cursor;)V"/>
<method name="getCursor" type="()Landroid/database/Cursor;"/>
<method name="getChild" type="(II)Ljava/lang/Object;"/>
<method name="getGroup" type="(I)Ljava/lang/Object;"/>
</class>
<class name="android/widget/DatePicker">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setEnabled" type="(Z)V"/>
<method name="updateDate" type="(III)V"/>
<method name="dispatchRestoreInstanceState" type="(Landroid/util/SparseArray;)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="init" type="(IIILandroid/widget/DatePicker$OnDateChangedListener;)V"/>
<method name="getYear" type="()I"/>
<method name="getMonth" type="()I"/>
<method name="getDayOfMonth" type="()I"/>
</class>
<class name="android/widget/DialerFilter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="isQwertyKeyboard" type="()Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="getMode" type="()I"/>
<method name="setMode" type="(I)V"/>
<method name="getLetters" type="()Ljava/lang/CharSequence;"/>
<method name="getDigits" type="()Ljava/lang/CharSequence;"/>
<method name="getFilterText" type="()Ljava/lang/CharSequence;"/>
<method name="append" type="(Ljava/lang/String;)V"/>
<method name="clearText" type="()V"/>
<method name="setLettersWatcher" type="(Landroid/text/TextWatcher;)V"/>
<method name="setDigitsWatcher" type="(Landroid/text/TextWatcher;)V"/>
<method name="setFilterWatcher" type="(Landroid/text/TextWatcher;)V"/>
<method name="removeFilterWatcher" type="(Landroid/text/TextWatcher;)V"/>
<method name="onModeChange" type="(II)V"/>
</class>
<class name="android/widget/DigitalClock">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
</class>
<class name="android/widget/EditText">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getDefaultEditable" type="()Z"/>
<method name="getDefaultMovementMethod" type="()Landroid/text/method/MovementMethod;"/>
<method name="getText" type="()Landroid/text/Editable;"/>
<method name="setText" type="(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V"/>
<method name="setSelection" type="(II)V"/>
<method name="setSelection" type="(I)V"/>
<method name="selectAll" type="()V"/>
<method name="extendSelection" type="(I)V"/>
<method name="setEllipsize" type="(Landroid/text/TextUtils$TruncateAt;)V"/>
<method name="getText" type="()Ljava/lang/CharSequence;"/>
</class>
<class name="android/widget/ExpandableListView$ExpandableListContextMenuInfo">
<method name="&lt;init&gt;" type="(Landroid/view/View;JJ)V"/>
</class>
<class name="android/widget/ExpandableListView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setChildDivider" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setAdapter" type="(Landroid/widget/ListAdapter;)V"/>
<method name="getAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="setOnItemClickListener" type="(Landroid/widget/AdapterView$OnItemClickListener;)V"/>
<method name="setAdapter" type="(Landroid/widget/ExpandableListAdapter;)V"/>
<method name="getExpandableListAdapter" type="()Landroid/widget/ExpandableListAdapter;"/>
<method name="performItemClick" type="(Landroid/view/View;IJ)Z"/>
<method name="expandGroup" type="(I)Z"/>
<method name="collapseGroup" type="(I)Z"/>
<method name="setOnGroupCollapseListener" type="(Landroid/widget/ExpandableListView$OnGroupCollapseListener;)V"/>
<method name="setOnGroupExpandListener" type="(Landroid/widget/ExpandableListView$OnGroupExpandListener;)V"/>
<method name="setOnGroupClickListener" type="(Landroid/widget/ExpandableListView$OnGroupClickListener;)V"/>
<method name="setOnChildClickListener" type="(Landroid/widget/ExpandableListView$OnChildClickListener;)V"/>
<method name="getExpandableListPosition" type="(I)J"/>
<method name="getFlatListPosition" type="(J)I"/>
<method name="getSelectedPosition" type="()J"/>
<method name="getSelectedId" type="()J"/>
<method name="setSelectedGroup" type="(I)V"/>
<method name="setSelectedChild" type="(IIZ)Z"/>
<method name="isGroupExpanded" type="(I)Z"/>
<method name="getPackedPositionType" type="(J)I" class_method="true"/>
<method name="getPackedPositionGroup" type="(J)I" class_method="true"/>
<method name="getPackedPositionChild" type="(J)I" class_method="true"/>
<method name="getPackedPositionForChild" type="(II)J" class_method="true"/>
<method name="getPackedPositionForGroup" type="(I)J" class_method="true"/>
<method name="setChildIndicator" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setChildIndicatorBounds" type="(II)V"/>
<method name="setGroupIndicator" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setIndicatorBounds" type="(II)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setAdapter" type="(Landroid/widget/Adapter;)V"/>
<method name="getAdapter" type="()Landroid/widget/Adapter;"/>
</class>
<class name="android/widget/Filter$FilterResults">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="android/widget/Filter">
<method name="&lt;init&gt;" type="()V"/>
<method name="filter" type="(Ljava/lang/CharSequence;)V"/>
<method name="filter" type="(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterListener;)V"/>
<method name="performFiltering" type="(Ljava/lang/CharSequence;)Landroid/widget/Filter$FilterResults;"/>
<method name="publishResults" type="(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterResults;)V"/>
<method name="convertResultToString" type="(Ljava/lang/Object;)Ljava/lang/CharSequence;"/>
</class>
<class name="android/widget/FrameLayout$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
</class>
<class name="android/widget/FrameLayout">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setForegroundGravity" type="(I)V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="drawableStateChanged" type="()V"/>
<method name="generateDefaultLayoutParams" type="()Landroid/widget/FrameLayout$LayoutParams;"/>
<method name="setForeground" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getForeground" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
<method name="gatherTransparentRegion" type="(Landroid/graphics/Region;)Z"/>
<method name="setMeasureAllChildren" type="(Z)V"/>
<method name="getConsiderGoneChildrenWhenMeasuring" type="()Z"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/FrameLayout$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/Gallery$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
</class>
<class name="android/widget/Gallery">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setCallbackDuringFling" type="(Z)V"/>
<method name="setAnimationDuration" type="(I)V"/>
<method name="setSpacing" type="(I)V"/>
<method name="setUnselectedAlpha" type="(F)V"/>
<method name="getChildStaticTransformation" type="(Landroid/view/View;Landroid/view/animation/Transformation;)Z"/>
<method name="computeHorizontalScrollExtent" type="()I"/>
<method name="computeHorizontalScrollOffset" type="()I"/>
<method name="computeHorizontalScrollRange" type="()I"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onSingleTapUp" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onFling" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
<method name="onScroll" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
<method name="onDown" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onLongPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="onShowPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="dispatchSetSelected" type="(Z)V"/>
<method name="dispatchSetPressed" type="(Z)V"/>
<method name="getContextMenuInfo" type="()Landroid/view/ContextMenu$ContextMenuInfo;"/>
<method name="showContextMenuForChild" type="(Landroid/view/View;)Z"/>
<method name="showContextMenu" type="()Z"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="setGravity" type="(I)V"/>
<method name="getChildDrawingOrder" type="(II)I"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
</class>
<class name="android/widget/GridView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="setAdapter" type="(Landroid/widget/ListAdapter;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="attachLayoutAnimationParameters" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;II)V"/>
<method name="layoutChildren" type="()V"/>
<method name="setSelection" type="(I)V"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="setGravity" type="(I)V"/>
<method name="setHorizontalSpacing" type="(I)V"/>
<method name="setVerticalSpacing" type="(I)V"/>
<method name="setStretchMode" type="(I)V"/>
<method name="getStretchMode" type="()I"/>
<method name="setColumnWidth" type="(I)V"/>
<method name="setNumColumns" type="(I)V"/>
<method name="computeVerticalScrollExtent" type="()I"/>
<method name="computeVerticalScrollOffset" type="()I"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="setAdapter" type="(Landroid/widget/Adapter;)V"/>
<method name="getAdapter" type="()Landroid/widget/Adapter;"/>
</class>
<class name="android/widget/HeaderViewListAdapter">
<method name="&lt;init&gt;" type="(Ljava/util/ArrayList;Ljava/util/ArrayList;Landroid/widget/ListAdapter;)V"/>
<method name="getHeadersCount" type="()I"/>
<method name="getFootersCount" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="removeHeader" type="(Landroid/view/View;)Z"/>
<method name="removeFooter" type="(Landroid/view/View;)Z"/>
<method name="getCount" type="()I"/>
<method name="areAllItemsEnabled" type="()Z"/>
<method name="isEnabled" type="(I)Z"/>
<method name="getItem" type="(I)Ljava/lang/Object;"/>
<method name="getItemId" type="(I)J"/>
<method name="hasStableIds" type="()Z"/>
<method name="getView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getItemViewType" type="(I)I"/>
<method name="getViewTypeCount" type="()I"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
<method name="getWrappedAdapter" type="()Landroid/widget/ListAdapter;"/>
</class>
<class name="android/widget/HorizontalScrollView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getLeftFadingEdgeStrength" type="()F"/>
<method name="getRightFadingEdgeStrength" type="()F"/>
<method name="getMaxScrollAmount" type="()I"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="addView" type="(Landroid/view/View;I)V"/>
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="isFillViewport" type="()Z"/>
<method name="setFillViewport" type="(Z)V"/>
<method name="isSmoothScrollingEnabled" type="()Z"/>
<method name="setSmoothScrollingEnabled" type="(Z)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="executeKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="onInterceptTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onOverScrolled" type="(IIZZ)V"/>
<method name="pageScroll" type="(I)Z"/>
<method name="fullScroll" type="(I)Z"/>
<method name="arrowScroll" type="(I)Z"/>
<method name="smoothScrollBy" type="(II)V"/>
<method name="smoothScrollTo" type="(II)V"/>
<method name="computeHorizontalScrollRange" type="()I"/>
<method name="computeHorizontalScrollOffset" type="()I"/>
<method name="measureChild" type="(Landroid/view/View;II)V"/>
<method name="measureChildWithMargins" type="(Landroid/view/View;IIII)V"/>
<method name="computeScroll" type="()V"/>
<method name="computeScrollDeltaToGetChildRectOnScreen" type="(Landroid/graphics/Rect;)I"/>
<method name="requestChildFocus" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onRequestFocusInDescendants" type="(ILandroid/graphics/Rect;)Z"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
<method name="requestLayout" type="()V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="fling" type="(I)V"/>
<method name="scrollTo" type="(II)V"/>
<method name="setOverScrollMode" type="(I)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
</class>
<class name="android/widget/ImageButton">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onSetAlpha" type="(I)Z"/>
</class>
<class name="android/widget/ImageSwitcher">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setImageResource" type="(I)V"/>
<method name="setImageURI" type="(Landroid/net/Uri;)V"/>
<method name="setImageDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
</class>
<class name="android/widget/ImageView$ScaleType">
<method name="values" type="()[Landroid/widget/ImageView$ScaleType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/widget/ImageView$ScaleType;" class_method="true"/>
</class>
<class name="android/widget/ImageView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="onSetAlpha" type="(I)Z"/>
<method name="setAdjustViewBounds" type="(Z)V"/>
<method name="setMaxWidth" type="(I)V"/>
<method name="setMaxHeight" type="(I)V"/>
<method name="getDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setImageResource" type="(I)V"/>
<method name="setImageURI" type="(Landroid/net/Uri;)V"/>
<method name="setImageDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setImageBitmap" type="(Landroid/graphics/Bitmap;)V"/>
<method name="setImageState" type="([IZ)V"/>
<method name="setSelected" type="(Z)V"/>
<method name="setImageLevel" type="(I)V"/>
<method name="setScaleType" type="(Landroid/widget/ImageView$ScaleType;)V"/>
<method name="getScaleType" type="()Landroid/widget/ImageView$ScaleType;"/>
<method name="getImageMatrix" type="()Landroid/graphics/Matrix;"/>
<method name="setImageMatrix" type="(Landroid/graphics/Matrix;)V"/>
<method name="onCreateDrawableState" type="(I)[I"/>
<method name="onMeasure" type="(II)V"/>
<method name="setFrame" type="(IIII)Z"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getBaseline" type="()I"/>
<method name="setColorFilter" type="(ILandroid/graphics/PorterDuff$Mode;)V"/>
<method name="setColorFilter" type="(I)V"/>
<method name="clearColorFilter" type="()V"/>
<method name="setColorFilter" type="(Landroid/graphics/ColorFilter;)V"/>
<method name="setAlpha" type="(I)V"/>
</class>
<class name="android/widget/LinearLayout$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IIF)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="debug" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="android/widget/LinearLayout">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="isBaselineAligned" type="()Z"/>
<method name="setBaselineAligned" type="(Z)V"/>
<method name="getBaseline" type="()I"/>
<method name="getBaselineAlignedChildIndex" type="()I"/>
<method name="setBaselineAlignedChildIndex" type="(I)V"/>
<method name="getWeightSum" type="()F"/>
<method name="setWeightSum" type="(F)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="setOrientation" type="(I)V"/>
<method name="getOrientation" type="()I"/>
<method name="setGravity" type="(I)V"/>
<method name="setHorizontalGravity" type="(I)V"/>
<method name="setVerticalGravity" type="(I)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/ListView$FixedViewInfo">
<method name="&lt;init&gt;" type="(Landroid/widget/ListView;)V"/>
</class>
<class name="android/widget/ListView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getMaxScrollAmount" type="()I"/>
<method name="addHeaderView" type="(Landroid/view/View;Ljava/lang/Object;Z)V"/>
<method name="addHeaderView" type="(Landroid/view/View;)V"/>
<method name="getHeaderViewsCount" type="()I"/>
<method name="removeHeaderView" type="(Landroid/view/View;)Z"/>
<method name="addFooterView" type="(Landroid/view/View;Ljava/lang/Object;Z)V"/>
<method name="addFooterView" type="(Landroid/view/View;)V"/>
<method name="getFooterViewsCount" type="()I"/>
<method name="removeFooterView" type="(Landroid/view/View;)Z"/>
<method name="getAdapter" type="()Landroid/widget/ListAdapter;"/>
<method name="setAdapter" type="(Landroid/widget/ListAdapter;)V"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="layoutChildren" type="()V"/>
<method name="canAnimate" type="()Z"/>
<method name="setSelection" type="(I)V"/>
<method name="setSelectionFromTop" type="(II)V"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="setSelectionAfterHeaderView" type="()V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="setItemsCanFocus" type="(Z)V"/>
<method name="getItemsCanFocus" type="()Z"/>
<method name="setCacheColorHint" type="(I)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getDivider" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setDivider" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getDividerHeight" type="()I"/>
<method name="setDividerHeight" type="(I)V"/>
<method name="setHeaderDividersEnabled" type="(Z)V"/>
<method name="setFooterDividersEnabled" type="(Z)V"/>
<method name="setOverscrollHeader" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getOverscrollHeader" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setOverscrollFooter" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getOverscrollFooter" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="findViewTraversal" type="(I)Landroid/view/View;"/>
<method name="findViewWithTagTraversal" type="(Ljava/lang/Object;)Landroid/view/View;"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="getChoiceMode" type="()I"/>
<method name="setChoiceMode" type="(I)V"/>
<method name="performItemClick" type="(Landroid/view/View;IJ)Z"/>
<method name="setItemChecked" type="(IZ)V"/>
<method name="isItemChecked" type="(I)Z"/>
<method name="getCheckedItemPosition" type="()I"/>
<method name="getCheckedItemPositions" type="()Landroid/util/SparseBooleanArray;"/>
<method name="getCheckItemIds" type="()[J"/>
<method name="getCheckedItemIds" type="()[J"/>
<method name="clearChoices" type="()V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setAdapter" type="(Landroid/widget/Adapter;)V"/>
<method name="getAdapter" type="()Landroid/widget/Adapter;"/>
</class>
<class name="android/widget/MediaController">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Z)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="setMediaPlayer" type="(Landroid/widget/MediaController$MediaPlayerControl;)V"/>
<method name="setAnchorView" type="(Landroid/view/View;)V"/>
<method name="show" type="()V"/>
<method name="show" type="(I)V"/>
<method name="isShowing" type="()Z"/>
<method name="hide" type="()V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="setEnabled" type="(Z)V"/>
<method name="setPrevNextListeners" type="(Landroid/view/View$OnClickListener;Landroid/view/View$OnClickListener;)V"/>
</class>
<class name="android/widget/MultiAutoCompleteTextView$CommaTokenizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="findTokenStart" type="(Ljava/lang/CharSequence;I)I"/>
<method name="findTokenEnd" type="(Ljava/lang/CharSequence;I)I"/>
<method name="terminateToken" type="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
</class>
<class name="android/widget/MultiAutoCompleteTextView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setTokenizer" type="(Landroid/widget/MultiAutoCompleteTextView$Tokenizer;)V"/>
<method name="performFiltering" type="(Ljava/lang/CharSequence;I)V"/>
<method name="enoughToFilter" type="()Z"/>
<method name="performValidation" type="()V"/>
<method name="performFiltering" type="(Ljava/lang/CharSequence;III)V"/>
<method name="replaceText" type="(Ljava/lang/CharSequence;)V"/>
</class>
<class name="android/widget/OverScroller">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/animation/Interpolator;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/animation/Interpolator;FF)V"/>
<method name="isFinished" type="()Z"/>
<method name="forceFinished" type="(Z)V"/>
<method name="getCurrX" type="()I"/>
<method name="getCurrY" type="()I"/>
<method name="getStartX" type="()I"/>
<method name="getStartY" type="()I"/>
<method name="getFinalX" type="()I"/>
<method name="getFinalY" type="()I"/>
<method name="computeScrollOffset" type="()Z"/>
<method name="startScroll" type="(IIII)V"/>
<method name="startScroll" type="(IIIII)V"/>
<method name="springBack" type="(IIIIII)Z"/>
<method name="fling" type="(IIIIIIII)V"/>
<method name="fling" type="(IIIIIIIIII)V"/>
<method name="notifyHorizontalEdgeReached" type="(III)V"/>
<method name="notifyVerticalEdgeReached" type="(III)V"/>
<method name="isOverScrolled" type="()Z"/>
<method name="abortAnimation" type="()V"/>
</class>
<class name="android/widget/PopupWindow">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/view/View;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/View;II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/View;IIZ)V"/>
<method name="getBackground" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setBackgroundDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getAnimationStyle" type="()I"/>
<method name="setIgnoreCheekPress" type="()V"/>
<method name="setAnimationStyle" type="(I)V"/>
<method name="getContentView" type="()Landroid/view/View;"/>
<method name="setContentView" type="(Landroid/view/View;)V"/>
<method name="setTouchInterceptor" type="(Landroid/view/View$OnTouchListener;)V"/>
<method name="isFocusable" type="()Z"/>
<method name="setFocusable" type="(Z)V"/>
<method name="getInputMethodMode" type="()I"/>
<method name="setInputMethodMode" type="(I)V"/>
<method name="setSoftInputMode" type="(I)V"/>
<method name="getSoftInputMode" type="()I"/>
<method name="isTouchable" type="()Z"/>
<method name="setTouchable" type="(Z)V"/>
<method name="isOutsideTouchable" type="()Z"/>
<method name="setOutsideTouchable" type="(Z)V"/>
<method name="isClippingEnabled" type="()Z"/>
<method name="setClippingEnabled" type="(Z)V"/>
<method name="setWindowLayoutMode" type="(II)V"/>
<method name="getHeight" type="()I"/>
<method name="setHeight" type="(I)V"/>
<method name="getWidth" type="()I"/>
<method name="setWidth" type="(I)V"/>
<method name="isShowing" type="()Z"/>
<method name="showAtLocation" type="(Landroid/view/View;III)V"/>
<method name="showAsDropDown" type="(Landroid/view/View;)V"/>
<method name="showAsDropDown" type="(Landroid/view/View;II)V"/>
<method name="isAboveAnchor" type="()Z"/>
<method name="getMaxAvailableHeight" type="(Landroid/view/View;)I"/>
<method name="getMaxAvailableHeight" type="(Landroid/view/View;I)I"/>
<method name="dismiss" type="()V"/>
<method name="setOnDismissListener" type="(Landroid/widget/PopupWindow$OnDismissListener;)V"/>
<method name="update" type="()V"/>
<method name="update" type="(II)V"/>
<method name="update" type="(IIII)V"/>
<method name="update" type="(IIIIZ)V"/>
<method name="update" type="(Landroid/view/View;II)V"/>
<method name="update" type="(Landroid/view/View;IIII)V"/>
</class>
<class name="android/widget/ProgressBar">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="isIndeterminate" type="()Z"/>
<method name="setIndeterminate" type="(Z)V"/>
<method name="getIndeterminateDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setIndeterminateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="getProgressDrawable" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setProgressDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="postInvalidate" type="()V"/>
<method name="setProgress" type="(I)V"/>
<method name="setSecondaryProgress" type="(I)V"/>
<method name="getProgress" type="()I"/>
<method name="getSecondaryProgress" type="()I"/>
<method name="getMax" type="()I"/>
<method name="setMax" type="(I)V"/>
<method name="incrementProgressBy" type="(I)V"/>
<method name="incrementSecondaryProgressBy" type="(I)V"/>
<method name="setInterpolator" type="(Landroid/content/Context;I)V"/>
<method name="setInterpolator" type="(Landroid/view/animation/Interpolator;)V"/>
<method name="getInterpolator" type="()Landroid/view/animation/Interpolator;"/>
<method name="setVisibility" type="(I)V"/>
<method name="onVisibilityChanged" type="(Landroid/view/View;I)V"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
</class>
<class name="android/widget/QuickContactBadge">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setMode" type="(I)V"/>
<method name="assignContactUri" type="(Landroid/net/Uri;)V"/>
<method name="assignContactFromEmail" type="(Ljava/lang/String;Z)V"/>
<method name="assignContactFromPhone" type="(Ljava/lang/String;Z)V"/>
<method name="onClick" type="(Landroid/view/View;)V"/>
<method name="setExcludeMimes" type="([Ljava/lang/String;)V"/>
</class>
<class name="android/widget/RadioButton">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="toggle" type="()V"/>
</class>
<class name="android/widget/RadioGroup$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IIF)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="setBaseAttributes" type="(Landroid/content/res/TypedArray;II)V"/>
</class>
<class name="android/widget/RadioGroup">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setOnHierarchyChangeListener" type="(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="check" type="(I)V"/>
<method name="getCheckedRadioButtonId" type="()I"/>
<method name="clearCheck" type="()V"/>
<method name="setOnCheckedChangeListener" type="(Landroid/widget/RadioGroup$OnCheckedChangeListener;)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/RadioGroup$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateDefaultLayoutParams" type="()Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/RatingBar">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setOnRatingBarChangeListener" type="(Landroid/widget/RatingBar$OnRatingBarChangeListener;)V"/>
<method name="getOnRatingBarChangeListener" type="()Landroid/widget/RatingBar$OnRatingBarChangeListener;"/>
<method name="setIsIndicator" type="(Z)V"/>
<method name="isIndicator" type="()Z"/>
<method name="setNumStars" type="(I)V"/>
<method name="getNumStars" type="()I"/>
<method name="setRating" type="(F)V"/>
<method name="getRating" type="()F"/>
<method name="setStepSize" type="(F)V"/>
<method name="getStepSize" type="()F"/>
<method name="onMeasure" type="(II)V"/>
<method name="setMax" type="(I)V"/>
</class>
<class name="android/widget/RelativeLayout$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="debug" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="addRule" type="(I)V"/>
<method name="addRule" type="(II)V"/>
<method name="getRules" type="()[I"/>
</class>
<class name="android/widget/RelativeLayout">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setIgnoreGravity" type="(I)V"/>
<method name="setGravity" type="(I)V"/>
<method name="setHorizontalGravity" type="(I)V"/>
<method name="setVerticalGravity" type="(I)V"/>
<method name="getBaseline" type="()I"/>
<method name="requestLayout" type="()V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/RelativeLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/RemoteViews$ActionException">
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="android/widget/RemoteViews">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/os/Parcel;)V"/>
<method name="clone" type="()Landroid/widget/RemoteViews;"/>
<method name="getPackage" type="()Ljava/lang/String;"/>
<method name="getLayoutId" type="()I"/>
<method name="addView" type="(ILandroid/widget/RemoteViews;)V"/>
<method name="removeAllViews" type="(I)V"/>
<method name="setViewVisibility" type="(II)V"/>
<method name="setTextViewText" type="(ILjava/lang/CharSequence;)V"/>
<method name="setImageViewResource" type="(II)V"/>
<method name="setImageViewUri" type="(ILandroid/net/Uri;)V"/>
<method name="setImageViewBitmap" type="(ILandroid/graphics/Bitmap;)V"/>
<method name="setChronometer" type="(IJLjava/lang/String;Z)V"/>
<method name="setProgressBar" type="(IIIZ)V"/>
<method name="setOnClickPendingIntent" type="(ILandroid/app/PendingIntent;)V"/>
<method name="setTextColor" type="(II)V"/>
<method name="setBoolean" type="(ILjava/lang/String;Z)V"/>
<method name="setByte" type="(ILjava/lang/String;B)V"/>
<method name="setShort" type="(ILjava/lang/String;S)V"/>
<method name="setInt" type="(ILjava/lang/String;I)V"/>
<method name="setLong" type="(ILjava/lang/String;J)V"/>
<method name="setFloat" type="(ILjava/lang/String;F)V"/>
<method name="setDouble" type="(ILjava/lang/String;D)V"/>
<method name="setChar" type="(ILjava/lang/String;C)V"/>
<method name="setString" type="(ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="setCharSequence" type="(ILjava/lang/String;Ljava/lang/CharSequence;)V"/>
<method name="setUri" type="(ILjava/lang/String;Landroid/net/Uri;)V"/>
<method name="setBitmap" type="(ILjava/lang/String;Landroid/graphics/Bitmap;)V"/>
<method name="setBundle" type="(ILjava/lang/String;Landroid/os/Bundle;)V"/>
<method name="apply" type="(Landroid/content/Context;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="reapply" type="(Landroid/content/Context;Landroid/view/View;)V"/>
<method name="onLoadClass" type="(Ljava/lang/Class;)Z"/>
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="android/widget/ResourceCursorAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILandroid/database/Cursor;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILandroid/database/Cursor;Z)V"/>
<method name="newView" type="(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newDropDownView" type="(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="setViewResource" type="(I)V"/>
<method name="setDropDownViewResource" type="(I)V"/>
</class>
<class name="android/widget/ResourceCursorTreeAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;IIII)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;III)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;II)V"/>
<method name="newChildView" type="(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newGroupView" type="(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
</class>
<class name="android/widget/Scroller">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/view/animation/Interpolator;)V"/>
<method name="isFinished" type="()Z"/>
<method name="forceFinished" type="(Z)V"/>
<method name="getDuration" type="()I"/>
<method name="getCurrX" type="()I"/>
<method name="getCurrY" type="()I"/>
<method name="getStartX" type="()I"/>
<method name="getStartY" type="()I"/>
<method name="getFinalX" type="()I"/>
<method name="getFinalY" type="()I"/>
<method name="computeScrollOffset" type="()Z"/>
<method name="startScroll" type="(IIII)V"/>
<method name="startScroll" type="(IIIII)V"/>
<method name="fling" type="(IIIIIIII)V"/>
<method name="abortAnimation" type="()V"/>
<method name="extendDuration" type="(I)V"/>
<method name="timePassed" type="()I"/>
<method name="setFinalX" type="(I)V"/>
<method name="setFinalY" type="(I)V"/>
</class>
<class name="android/widget/ScrollView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getTopFadingEdgeStrength" type="()F"/>
<method name="getBottomFadingEdgeStrength" type="()F"/>
<method name="getMaxScrollAmount" type="()I"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="addView" type="(Landroid/view/View;I)V"/>
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="isFillViewport" type="()Z"/>
<method name="setFillViewport" type="(Z)V"/>
<method name="isSmoothScrollingEnabled" type="()Z"/>
<method name="setSmoothScrollingEnabled" type="(Z)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="executeKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="onInterceptTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onOverScrolled" type="(IIZZ)V"/>
<method name="pageScroll" type="(I)Z"/>
<method name="fullScroll" type="(I)Z"/>
<method name="arrowScroll" type="(I)Z"/>
<method name="smoothScrollBy" type="(II)V"/>
<method name="smoothScrollTo" type="(II)V"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="computeVerticalScrollOffset" type="()I"/>
<method name="measureChild" type="(Landroid/view/View;II)V"/>
<method name="measureChildWithMargins" type="(Landroid/view/View;IIII)V"/>
<method name="computeScroll" type="()V"/>
<method name="computeScrollDeltaToGetChildRectOnScreen" type="(Landroid/graphics/Rect;)I"/>
<method name="requestChildFocus" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onRequestFocusInDescendants" type="(ILandroid/graphics/Rect;)Z"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
<method name="requestLayout" type="()V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="fling" type="(I)V"/>
<method name="scrollTo" type="(II)V"/>
<method name="setOverScrollMode" type="(I)V"/>
<method name="draw" type="(Landroid/graphics/Canvas;)V"/>
</class>
<class name="android/widget/SeekBar">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setOnSeekBarChangeListener" type="(Landroid/widget/SeekBar$OnSeekBarChangeListener;)V"/>
</class>
<class name="android/widget/SimpleAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/util/List;I[Ljava/lang/String;[I)V"/>
<method name="getCount" type="()I"/>
<method name="getItem" type="(I)Ljava/lang/Object;"/>
<method name="getItemId" type="(I)J"/>
<method name="getView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="setDropDownViewResource" type="(I)V"/>
<method name="getDropDownView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getViewBinder" type="()Landroid/widget/SimpleAdapter$ViewBinder;"/>
<method name="setViewBinder" type="(Landroid/widget/SimpleAdapter$ViewBinder;)V"/>
<method name="setViewImage" type="(Landroid/widget/ImageView;I)V"/>
<method name="setViewImage" type="(Landroid/widget/ImageView;Ljava/lang/String;)V"/>
<method name="setViewText" type="(Landroid/widget/TextView;Ljava/lang/String;)V"/>
<method name="getFilter" type="()Landroid/widget/Filter;"/>
</class>
<class name="android/widget/SimpleCursorAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;ILandroid/database/Cursor;[Ljava/lang/String;[I)V"/>
<method name="bindView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V"/>
<method name="getViewBinder" type="()Landroid/widget/SimpleCursorAdapter$ViewBinder;"/>
<method name="setViewBinder" type="(Landroid/widget/SimpleCursorAdapter$ViewBinder;)V"/>
<method name="setViewImage" type="(Landroid/widget/ImageView;Ljava/lang/String;)V"/>
<method name="setViewText" type="(Landroid/widget/TextView;Ljava/lang/String;)V"/>
<method name="getStringConversionColumn" type="()I"/>
<method name="setStringConversionColumn" type="(I)V"/>
<method name="getCursorToStringConverter" type="()Landroid/widget/SimpleCursorAdapter$CursorToStringConverter;"/>
<method name="setCursorToStringConverter" type="(Landroid/widget/SimpleCursorAdapter$CursorToStringConverter;)V"/>
<method name="convertToString" type="(Landroid/database/Cursor;)Ljava/lang/CharSequence;"/>
<method name="changeCursor" type="(Landroid/database/Cursor;)V"/>
<method name="changeCursorAndColumns" type="(Landroid/database/Cursor;[Ljava/lang/String;[I)V"/>
</class>
<class name="android/widget/SimpleCursorTreeAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[III[Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[II[Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/database/Cursor;I[Ljava/lang/String;[II[Ljava/lang/String;[I)V"/>
<method name="getViewBinder" type="()Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;"/>
<method name="setViewBinder" type="(Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;)V"/>
<method name="bindChildView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="bindGroupView" type="(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"/>
<method name="setViewImage" type="(Landroid/widget/ImageView;Ljava/lang/String;)V"/>
<method name="setViewText" type="(Landroid/widget/TextView;Ljava/lang/String;)V"/>
</class>
<class name="android/widget/SimpleExpandableListAdapter">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/util/List;I[Ljava/lang/String;[ILjava/util/List;I[Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/util/List;II[Ljava/lang/String;[ILjava/util/List;I[Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Ljava/util/List;II[Ljava/lang/String;[ILjava/util/List;II[Ljava/lang/String;[I)V"/>
<method name="getChild" type="(II)Ljava/lang/Object;"/>
<method name="getChildId" type="(II)J"/>
<method name="getChildView" type="(IIZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newChildView" type="(ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getChildrenCount" type="(I)I"/>
<method name="getGroup" type="(I)Ljava/lang/Object;"/>
<method name="getGroupCount" type="()I"/>
<method name="getGroupId" type="(I)J"/>
<method name="getGroupView" type="(IZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="newGroupView" type="(ZLandroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="isChildSelectable" type="(II)Z"/>
<method name="hasStableIds" type="()Z"/>
</class>
<class name="android/widget/SlidingDrawer">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="onMeasure" type="(II)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="onInterceptTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="toggle" type="()V"/>
<method name="animateToggle" type="()V"/>
<method name="open" type="()V"/>
<method name="close" type="()V"/>
<method name="animateClose" type="()V"/>
<method name="animateOpen" type="()V"/>
<method name="setOnDrawerOpenListener" type="(Landroid/widget/SlidingDrawer$OnDrawerOpenListener;)V"/>
<method name="setOnDrawerCloseListener" type="(Landroid/widget/SlidingDrawer$OnDrawerCloseListener;)V"/>
<method name="setOnDrawerScrollListener" type="(Landroid/widget/SlidingDrawer$OnDrawerScrollListener;)V"/>
<method name="getHandle" type="()Landroid/view/View;"/>
<method name="getContent" type="()Landroid/view/View;"/>
<method name="unlock" type="()V"/>
<method name="lock" type="()V"/>
<method name="isOpened" type="()Z"/>
<method name="isMoving" type="()Z"/>
</class>
<class name="android/widget/Spinner">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="getBaseline" type="()I"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="setOnItemClickListener" type="(Landroid/widget/AdapterView$OnItemClickListener;)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="performClick" type="()Z"/>
<method name="onClick" type="(Landroid/content/DialogInterface;I)V"/>
<method name="setPrompt" type="(Ljava/lang/CharSequence;)V"/>
<method name="setPromptId" type="(I)V"/>
<method name="getPrompt" type="()Ljava/lang/CharSequence;"/>
</class>
<class name="android/widget/TabHost$TabSpec">
<method name="setIndicator" type="(Ljava/lang/CharSequence;)Landroid/widget/TabHost$TabSpec;"/>
<method name="setIndicator" type="(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)Landroid/widget/TabHost$TabSpec;"/>
<method name="setIndicator" type="(Landroid/view/View;)Landroid/widget/TabHost$TabSpec;"/>
<method name="setContent" type="(I)Landroid/widget/TabHost$TabSpec;"/>
<method name="setContent" type="(Landroid/widget/TabHost$TabContentFactory;)Landroid/widget/TabHost$TabSpec;"/>
<method name="setContent" type="(Landroid/content/Intent;)Landroid/widget/TabHost$TabSpec;"/>
<method name="getTag" type="()Ljava/lang/String;"/>
</class>
<class name="android/widget/TabHost">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="newTabSpec" type="(Ljava/lang/String;)Landroid/widget/TabHost$TabSpec;"/>
<method name="setup" type="()V"/>
<method name="setup" type="(Landroid/app/LocalActivityManager;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onTouchModeChanged" type="(Z)V"/>
<method name="addTab" type="(Landroid/widget/TabHost$TabSpec;)V"/>
<method name="clearAllTabs" type="()V"/>
<method name="getTabWidget" type="()Landroid/widget/TabWidget;"/>
<method name="getCurrentTab" type="()I"/>
<method name="getCurrentTabTag" type="()Ljava/lang/String;"/>
<method name="getCurrentTabView" type="()Landroid/view/View;"/>
<method name="getCurrentView" type="()Landroid/view/View;"/>
<method name="setCurrentTabByTag" type="(Ljava/lang/String;)V"/>
<method name="getTabContentView" type="()Landroid/widget/FrameLayout;"/>
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchWindowFocusChanged" type="(Z)V"/>
<method name="setCurrentTab" type="(I)V"/>
<method name="setOnTabChangedListener" type="(Landroid/widget/TabHost$OnTabChangeListener;)V"/>
</class>
<class name="android/widget/TableLayout$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IIF)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="setBaseAttributes" type="(Landroid/content/res/TypedArray;II)V"/>
</class>
<class name="android/widget/TableLayout">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setOnHierarchyChangeListener" type="(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V"/>
<method name="requestLayout" type="()V"/>
<method name="isShrinkAllColumns" type="()Z"/>
<method name="setShrinkAllColumns" type="(Z)V"/>
<method name="isStretchAllColumns" type="()Z"/>
<method name="setStretchAllColumns" type="(Z)V"/>
<method name="setColumnCollapsed" type="(IZ)V"/>
<method name="isColumnCollapsed" type="(I)Z"/>
<method name="setColumnStretchable" type="(IZ)V"/>
<method name="isColumnStretchable" type="(I)Z"/>
<method name="setColumnShrinkable" type="(IZ)V"/>
<method name="isColumnShrinkable" type="(I)Z"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="addView" type="(Landroid/view/View;I)V"/>
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/TableLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/TableRow$LayoutParams">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IIF)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="&lt;init&gt;" type="(Landroid/view/ViewGroup$MarginLayoutParams;)V"/>
<method name="setBaseAttributes" type="(Landroid/content/res/TypedArray;II)V"/>
</class>
<class name="android/widget/TableRow">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setOnHierarchyChangeListener" type="(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="onLayout" type="(ZIIII)V"/>
<method name="getVirtualChildAt" type="(I)Landroid/view/View;"/>
<method name="getVirtualChildCount" type="()I"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/TableRow$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="checkLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Z"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;"/>
<method name="generateDefaultLayoutParams" type="()Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;"/>
<method name="generateLayoutParams" type="(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"/>
</class>
<class name="android/widget/TabWidget">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onSizeChanged" type="(IIII)V"/>
<method name="getChildDrawingOrder" type="(II)I"/>
<method name="getChildTabViewAt" type="(I)Landroid/view/View;"/>
<method name="getTabCount" type="()I"/>
<method name="setDividerDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setDividerDrawable" type="(I)V"/>
<method name="setLeftStripDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setLeftStripDrawable" type="(I)V"/>
<method name="setRightStripDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="setRightStripDrawable" type="(I)V"/>
<method name="setStripEnabled" type="(Z)V"/>
<method name="isStripEnabled" type="()Z"/>
<method name="childDrawableStateChanged" type="(Landroid/view/View;)V"/>
<method name="dispatchDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="setCurrentTab" type="(I)V"/>
<method name="focusCurrentTab" type="(I)V"/>
<method name="setEnabled" type="(Z)V"/>
<method name="addView" type="(Landroid/view/View;)V"/>
<method name="onFocusChange" type="(Landroid/view/View;Z)V"/>
</class>
<class name="android/widget/TextSwitcher">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="setText" type="(Ljava/lang/CharSequence;)V"/>
<method name="setCurrentText" type="(Ljava/lang/CharSequence;)V"/>
</class>
<class name="android/widget/TextView$BufferType">
<method name="values" type="()[Landroid/widget/TextView$BufferType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Landroid/widget/TextView$BufferType;" class_method="true"/>
</class>
<class name="android/widget/TextView$SavedState">
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="android/widget/TextView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setTypeface" type="(Landroid/graphics/Typeface;I)V"/>
<method name="getDefaultEditable" type="()Z"/>
<method name="getDefaultMovementMethod" type="()Landroid/text/method/MovementMethod;"/>
<method name="getText" type="()Ljava/lang/CharSequence;"/>
<method name="length" type="()I"/>
<method name="getEditableText" type="()Landroid/text/Editable;"/>
<method name="getLineHeight" type="()I"/>
<method name="getLayout" type="()Landroid/text/Layout;"/>
<method name="getKeyListener" type="()Landroid/text/method/KeyListener;"/>
<method name="setKeyListener" type="(Landroid/text/method/KeyListener;)V"/>
<method name="getMovementMethod" type="()Landroid/text/method/MovementMethod;"/>
<method name="setMovementMethod" type="(Landroid/text/method/MovementMethod;)V"/>
<method name="getTransformationMethod" type="()Landroid/text/method/TransformationMethod;"/>
<method name="setTransformationMethod" type="(Landroid/text/method/TransformationMethod;)V"/>
<method name="getCompoundPaddingTop" type="()I"/>
<method name="getCompoundPaddingBottom" type="()I"/>
<method name="getCompoundPaddingLeft" type="()I"/>
<method name="getCompoundPaddingRight" type="()I"/>
<method name="getExtendedPaddingTop" type="()I"/>
<method name="getExtendedPaddingBottom" type="()I"/>
<method name="getTotalPaddingLeft" type="()I"/>
<method name="getTotalPaddingRight" type="()I"/>
<method name="getTotalPaddingTop" type="()I"/>
<method name="getTotalPaddingBottom" type="()I"/>
<method name="setCompoundDrawables" type="(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V"/>
<method name="setCompoundDrawablesWithIntrinsicBounds" type="(IIII)V"/>
<method name="setCompoundDrawablesWithIntrinsicBounds" type="(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V"/>
<method name="getCompoundDrawables" type="()[Landroid/graphics/drawable/Drawable;"/>
<method name="setCompoundDrawablePadding" type="(I)V"/>
<method name="getCompoundDrawablePadding" type="()I"/>
<method name="setPadding" type="(IIII)V"/>
<method name="getAutoLinkMask" type="()I"/>
<method name="setTextAppearance" type="(Landroid/content/Context;I)V"/>
<method name="getTextSize" type="()F"/>
<method name="setTextSize" type="(F)V"/>
<method name="setTextSize" type="(IF)V"/>
<method name="getTextScaleX" type="()F"/>
<method name="setTextScaleX" type="(F)V"/>
<method name="setTypeface" type="(Landroid/graphics/Typeface;)V"/>
<method name="getTypeface" type="()Landroid/graphics/Typeface;"/>
<method name="setTextColor" type="(I)V"/>
<method name="setTextColor" type="(Landroid/content/res/ColorStateList;)V"/>
<method name="getTextColors" type="()Landroid/content/res/ColorStateList;"/>
<method name="getCurrentTextColor" type="()I"/>
<method name="setHighlightColor" type="(I)V"/>
<method name="setShadowLayer" type="(FFFI)V"/>
<method name="getPaint" type="()Landroid/text/TextPaint;"/>
<method name="setAutoLinkMask" type="(I)V"/>
<method name="setLinksClickable" type="(Z)V"/>
<method name="getLinksClickable" type="()Z"/>
<method name="getUrls" type="()[Landroid/text/style/URLSpan;"/>
<method name="setHintTextColor" type="(I)V"/>
<method name="setHintTextColor" type="(Landroid/content/res/ColorStateList;)V"/>
<method name="getHintTextColors" type="()Landroid/content/res/ColorStateList;"/>
<method name="getCurrentHintTextColor" type="()I"/>
<method name="setLinkTextColor" type="(I)V"/>
<method name="setLinkTextColor" type="(Landroid/content/res/ColorStateList;)V"/>
<method name="getLinkTextColors" type="()Landroid/content/res/ColorStateList;"/>
<method name="setGravity" type="(I)V"/>
<method name="getGravity" type="()I"/>
<method name="getPaintFlags" type="()I"/>
<method name="setPaintFlags" type="(I)V"/>
<method name="setHorizontallyScrolling" type="(Z)V"/>
<method name="setMinLines" type="(I)V"/>
<method name="setMinHeight" type="(I)V"/>
<method name="setMaxLines" type="(I)V"/>
<method name="setMaxHeight" type="(I)V"/>
<method name="setLines" type="(I)V"/>
<method name="setHeight" type="(I)V"/>
<method name="setMinEms" type="(I)V"/>
<method name="setMinWidth" type="(I)V"/>
<method name="setMaxEms" type="(I)V"/>
<method name="setMaxWidth" type="(I)V"/>
<method name="setEms" type="(I)V"/>
<method name="setWidth" type="(I)V"/>
<method name="setLineSpacing" type="(FF)V"/>
<method name="append" type="(Ljava/lang/CharSequence;)V"/>
<method name="append" type="(Ljava/lang/CharSequence;II)V"/>
<method name="drawableStateChanged" type="()V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setFreezesText" type="(Z)V"/>
<method name="getFreezesText" type="()Z"/>
<method name="setEditableFactory" type="(Landroid/text/Editable$Factory;)V"/>
<method name="setSpannableFactory" type="(Landroid/text/Spannable$Factory;)V"/>
<method name="setText" type="(Ljava/lang/CharSequence;)V"/>
<method name="setTextKeepState" type="(Ljava/lang/CharSequence;)V"/>
<method name="setText" type="(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V"/>
<method name="setText" type="([CII)V"/>
<method name="setTextKeepState" type="(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V"/>
<method name="setText" type="(I)V"/>
<method name="setText" type="(ILandroid/widget/TextView$BufferType;)V"/>
<method name="setHint" type="(Ljava/lang/CharSequence;)V"/>
<method name="setHint" type="(I)V"/>
<method name="getHint" type="()Ljava/lang/CharSequence;"/>
<method name="setInputType" type="(I)V"/>
<method name="setRawInputType" type="(I)V"/>
<method name="getInputType" type="()I"/>
<method name="setImeOptions" type="(I)V"/>
<method name="getImeOptions" type="()I"/>
<method name="setImeActionLabel" type="(Ljava/lang/CharSequence;I)V"/>
<method name="getImeActionLabel" type="()Ljava/lang/CharSequence;"/>
<method name="getImeActionId" type="()I"/>
<method name="setOnEditorActionListener" type="(Landroid/widget/TextView$OnEditorActionListener;)V"/>
<method name="onEditorAction" type="(I)V"/>
<method name="setPrivateImeOptions" type="(Ljava/lang/String;)V"/>
<method name="getPrivateImeOptions" type="()Ljava/lang/String;"/>
<method name="setInputExtras" type="(I)V"/>
<method name="getInputExtras" type="(Z)Landroid/os/Bundle;"/>
<method name="getError" type="()Ljava/lang/CharSequence;"/>
<method name="setError" type="(Ljava/lang/CharSequence;)V"/>
<method name="setError" type="(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)V"/>
<method name="setFrame" type="(IIII)Z"/>
<method name="setFilters" type="([Landroid/text/InputFilter;)V"/>
<method name="getFilters" type="()[Landroid/text/InputFilter;"/>
<method name="onPreDraw" type="()Z"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="isPaddingOffsetRequired" type="()Z"/>
<method name="getLeftPaddingOffset" type="()I"/>
<method name="getTopPaddingOffset" type="()I"/>
<method name="getBottomPaddingOffset" type="()I"/>
<method name="getRightPaddingOffset" type="()I"/>
<method name="verifyDrawable" type="(Landroid/graphics/drawable/Drawable;)Z"/>
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="onDraw" type="(Landroid/graphics/Canvas;)V"/>
<method name="getFocusedRect" type="(Landroid/graphics/Rect;)V"/>
<method name="getLineCount" type="()I"/>
<method name="getLineBounds" type="(ILandroid/graphics/Rect;)I"/>
<method name="getBaseline" type="()I"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onCheckIsTextEditor" type="()Z"/>
<method name="onCreateInputConnection" type="(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"/>
<method name="extractText" type="(Landroid/view/inputmethod/ExtractedTextRequest;Landroid/view/inputmethod/ExtractedText;)Z"/>
<method name="setExtractedText" type="(Landroid/view/inputmethod/ExtractedText;)V"/>
<method name="onCommitCompletion" type="(Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="beginBatchEdit" type="()V"/>
<method name="endBatchEdit" type="()V"/>
<method name="onBeginBatchEdit" type="()V"/>
<method name="onEndBatchEdit" type="()V"/>
<method name="onPrivateIMECommand" type="(Ljava/lang/String;Landroid/os/Bundle;)Z"/>
<method name="setIncludeFontPadding" type="(Z)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="bringPointIntoView" type="(I)Z"/>
<method name="moveCursorToVisibleOffset" type="()Z"/>
<method name="computeScroll" type="()V"/>
<method name="debug" type="(I)V"/>
<method name="getSelectionStart" type="()I"/>
<method name="getSelectionEnd" type="()I"/>
<method name="hasSelection" type="()Z"/>
<method name="setSingleLine" type="()V"/>
<method name="setSingleLine" type="(Z)V"/>
<method name="setEllipsize" type="(Landroid/text/TextUtils$TruncateAt;)V"/>
<method name="setMarqueeRepeatLimit" type="(I)V"/>
<method name="getEllipsize" type="()Landroid/text/TextUtils$TruncateAt;"/>
<method name="setSelectAllOnFocus" type="(Z)V"/>
<method name="setCursorVisible" type="(Z)V"/>
<method name="onTextChanged" type="(Ljava/lang/CharSequence;III)V"/>
<method name="onSelectionChanged" type="(II)V"/>
<method name="addTextChangedListener" type="(Landroid/text/TextWatcher;)V"/>
<method name="removeTextChangedListener" type="(Landroid/text/TextWatcher;)V"/>
<method name="onStartTemporaryDetach" type="()V"/>
<method name="onFinishTemporaryDetach" type="()V"/>
<method name="onFocusChanged" type="(ZILandroid/graphics/Rect;)V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onVisibilityChanged" type="(Landroid/view/View;I)V"/>
<method name="clearComposingText" type="()V"/>
<method name="setSelected" type="(Z)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="didTouchFocusSelect" type="()Z"/>
<method name="cancelLongPress" type="()V"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="setScroller" type="(Landroid/widget/Scroller;)V"/>
<method name="getLeftFadingEdgeStrength" type="()F"/>
<method name="getRightFadingEdgeStrength" type="()F"/>
<method name="computeHorizontalScrollRange" type="()I"/>
<method name="computeVerticalScrollRange" type="()I"/>
<method name="computeVerticalScrollExtent" type="()I"/>
<method name="getTextColors" type="(Landroid/content/Context;Landroid/content/res/TypedArray;)Landroid/content/res/ColorStateList;" class_method="true"/>
<method name="getTextColor" type="(Landroid/content/Context;Landroid/content/res/TypedArray;I)I" class_method="true"/>
<method name="onKeyShortcut" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;)V"/>
<method name="isInputMethodTarget" type="()Z"/>
<method name="onTextContextMenuItem" type="(I)Z"/>
<method name="performLongClick" type="()Z"/>
</class>
<class name="android/widget/TimePicker">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="setEnabled" type="(Z)V"/>
<method name="onSaveInstanceState" type="()Landroid/os/Parcelable;"/>
<method name="onRestoreInstanceState" type="(Landroid/os/Parcelable;)V"/>
<method name="setOnTimeChangedListener" type="(Landroid/widget/TimePicker$OnTimeChangedListener;)V"/>
<method name="getCurrentHour" type="()Ljava/lang/Integer;"/>
<method name="setCurrentHour" type="(Ljava/lang/Integer;)V"/>
<method name="setIs24HourView" type="(Ljava/lang/Boolean;)V"/>
<method name="is24HourView" type="()Z"/>
<method name="getCurrentMinute" type="()Ljava/lang/Integer;"/>
<method name="setCurrentMinute" type="(Ljava/lang/Integer;)V"/>
<method name="getBaseline" type="()I"/>
</class>
<class name="android/widget/Toast">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="show" type="()V"/>
<method name="cancel" type="()V"/>
<method name="setView" type="(Landroid/view/View;)V"/>
<method name="getView" type="()Landroid/view/View;"/>
<method name="setDuration" type="(I)V"/>
<method name="getDuration" type="()I"/>
<method name="setMargin" type="(FF)V"/>
<method name="getHorizontalMargin" type="()F"/>
<method name="getVerticalMargin" type="()F"/>
<method name="setGravity" type="(III)V"/>
<method name="getGravity" type="()I"/>
<method name="getXOffset" type="()I"/>
<method name="getYOffset" type="()I"/>
<method name="makeText" type="(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;" class_method="true"/>
<method name="makeText" type="(Landroid/content/Context;II)Landroid/widget/Toast;" class_method="true"/>
<method name="setText" type="(I)V"/>
<method name="setText" type="(Ljava/lang/CharSequence;)V"/>
</class>
<class name="android/widget/ToggleButton">
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="setChecked" type="(Z)V"/>
<method name="getTextOn" type="()Ljava/lang/CharSequence;"/>
<method name="setTextOn" type="(Ljava/lang/CharSequence;)V"/>
<method name="getTextOff" type="()Ljava/lang/CharSequence;"/>
<method name="setTextOff" type="(Ljava/lang/CharSequence;)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="setBackgroundDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="drawableStateChanged" type="()V"/>
</class>
<class name="android/widget/TwoLineListItem">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onFinishInflate" type="()V"/>
<method name="getText1" type="()Landroid/widget/TextView;"/>
<method name="getText2" type="()Landroid/widget/TextView;"/>
</class>
<class name="android/widget/VideoView">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onMeasure" type="(II)V"/>
<method name="resolveAdjustedSize" type="(II)I"/>
<method name="setVideoPath" type="(Ljava/lang/String;)V"/>
<method name="setVideoURI" type="(Landroid/net/Uri;)V"/>
<method name="stopPlayback" type="()V"/>
<method name="setMediaController" type="(Landroid/widget/MediaController;)V"/>
<method name="setOnPreparedListener" type="(Landroid/media/MediaPlayer$OnPreparedListener;)V"/>
<method name="setOnCompletionListener" type="(Landroid/media/MediaPlayer$OnCompletionListener;)V"/>
<method name="setOnErrorListener" type="(Landroid/media/MediaPlayer$OnErrorListener;)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="start" type="()V"/>
<method name="pause" type="()V"/>
<method name="suspend" type="()V"/>
<method name="resume" type="()V"/>
<method name="getDuration" type="()I"/>
<method name="getCurrentPosition" type="()I"/>
<method name="seekTo" type="(I)V"/>
<method name="isPlaying" type="()Z"/>
<method name="getBufferPercentage" type="()I"/>
<method name="canPause" type="()Z"/>
<method name="canSeekBackward" type="()Z"/>
<method name="canSeekForward" type="()Z"/>
</class>
<class name="android/widget/ViewAnimator">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setDisplayedChild" type="(I)V"/>
<method name="getDisplayedChild" type="()I"/>
<method name="showNext" type="()V"/>
<method name="showPrevious" type="()V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="removeAllViews" type="()V"/>
<method name="removeView" type="(Landroid/view/View;)V"/>
<method name="removeViewAt" type="(I)V"/>
<method name="removeViewInLayout" type="(Landroid/view/View;)V"/>
<method name="removeViews" type="(II)V"/>
<method name="removeViewsInLayout" type="(II)V"/>
<method name="getCurrentView" type="()Landroid/view/View;"/>
<method name="getInAnimation" type="()Landroid/view/animation/Animation;"/>
<method name="setInAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="getOutAnimation" type="()Landroid/view/animation/Animation;"/>
<method name="setOutAnimation" type="(Landroid/view/animation/Animation;)V"/>
<method name="setInAnimation" type="(Landroid/content/Context;I)V"/>
<method name="setOutAnimation" type="(Landroid/content/Context;I)V"/>
<method name="setAnimateFirstView" type="(Z)V"/>
<method name="getBaseline" type="()I"/>
</class>
<class name="android/widget/ViewFlipper">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onWindowVisibilityChanged" type="(I)V"/>
<method name="setFlipInterval" type="(I)V"/>
<method name="startFlipping" type="()V"/>
<method name="stopFlipping" type="()V"/>
<method name="isFlipping" type="()Z"/>
<method name="setAutoStart" type="(Z)V"/>
<method name="isAutoStart" type="()Z"/>
</class>
<class name="android/widget/ViewSwitcher">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="addView" type="(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"/>
<method name="getNextView" type="()Landroid/view/View;"/>
<method name="setFactory" type="(Landroid/widget/ViewSwitcher$ViewFactory;)V"/>
<method name="reset" type="()V"/>
</class>
<class name="android/widget/ZoomButton">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;I)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="setZoomSpeed" type="(J)V"/>
<method name="onLongClick" type="(Landroid/view/View;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="setEnabled" type="(Z)V"/>
<method name="dispatchUnhandledMove" type="(Landroid/view/View;I)Z"/>
</class>
<class name="android/widget/ZoomButtonsController">
<method name="&lt;init&gt;" type="(Landroid/view/View;)V"/>
<method name="setZoomInEnabled" type="(Z)V"/>
<method name="setZoomOutEnabled" type="(Z)V"/>
<method name="setZoomSpeed" type="(J)V"/>
<method name="setOnZoomListener" type="(Landroid/widget/ZoomButtonsController$OnZoomListener;)V"/>
<method name="setFocusable" type="(Z)V"/>
<method name="isAutoDismissed" type="()Z"/>
<method name="setAutoDismissed" type="(Z)V"/>
<method name="isVisible" type="()Z"/>
<method name="setVisible" type="(Z)V"/>
<method name="getContainer" type="()Landroid/view/ViewGroup;"/>
<method name="getZoomControls" type="()Landroid/view/View;"/>
<method name="onTouch" type="(Landroid/view/View;Landroid/view/MotionEvent;)Z"/>
</class>
<class name="android/widget/ZoomControls">
<method name="&lt;init&gt;" type="(Landroid/content/Context;)V"/>
<method name="&lt;init&gt;" type="(Landroid/content/Context;Landroid/util/AttributeSet;)V"/>
<method name="setOnZoomInClickListener" type="(Landroid/view/View$OnClickListener;)V"/>
<method name="setOnZoomOutClickListener" type="(Landroid/view/View$OnClickListener;)V"/>
<method name="setZoomSpeed" type="(J)V"/>
<method name="onTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="show" type="()V"/>
<method name="hide" type="()V"/>
<method name="setIsZoomInEnabled" type="(Z)V"/>
<method name="setIsZoomOutEnabled" type="(Z)V"/>
<method name="hasFocus" type="()Z"/>
</class>
<class name="dalvik/system/DexClassLoader">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V"/>
<method name="findClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="findResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="findLibrary" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPackage" type="(Ljava/lang/String;)Ljava/lang/Package;"/>
</class>
<class name="dalvik/system/DexFile">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="loadDex" type="(Ljava/lang/String;Ljava/lang/String;I)Ldalvik/system/DexFile;" class_method="true"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="close" type="()V"/>
<method name="loadClass" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;"/>
<method name="entries" type="()Ljava/util/Enumeration;"/>
<method name="finalize" type="()V"/>
<method name="isDexOptNeeded" type="(Ljava/lang/String;)Z" class_method="true"/>
</class>
<class name="dalvik/system/PathClassLoader">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V"/>
<method name="findClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="findResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="findResources" type="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
<method name="findLibrary" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPackage" type="(Ljava/lang/String;)Ljava/lang/Package;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/awt/font/NumericShaper">
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getContextualShaper" type="(II)Ljava/awt/font/NumericShaper;" class_method="true"/>
<method name="getContextualShaper" type="(I)Ljava/awt/font/NumericShaper;" class_method="true"/>
<method name="getRanges" type="()I"/>
<method name="getShaper" type="(I)Ljava/awt/font/NumericShaper;" class_method="true"/>
<method name="isContextual" type="()Z"/>
<method name="shape" type="([CIII)V"/>
<method name="shape" type="([CII)V"/>
</class>
<class name="java/awt/font/TextAttribute">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/beans/IndexedPropertyChangeEvent">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)V"/>
<method name="getIndex" type="()I"/>
</class>
<class name="java/beans/PropertyChangeEvent">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="getPropertyName" type="()Ljava/lang/String;"/>
<method name="setPropagationId" type="(Ljava/lang/Object;)V"/>
<method name="getPropagationId" type="()Ljava/lang/Object;"/>
<method name="getOldValue" type="()Ljava/lang/Object;"/>
<method name="getNewValue" type="()Ljava/lang/Object;"/>
</class>
<class name="java/beans/PropertyChangeListenerProxy">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"/>
<method name="getPropertyName" type="()Ljava/lang/String;"/>
<method name="propertyChange" type="(Ljava/beans/PropertyChangeEvent;)V"/>
</class>
<class name="java/beans/PropertyChangeSupport">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="firePropertyChange" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="fireIndexedPropertyChange" type="(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V"/>
<method name="removePropertyChangeListener" type="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"/>
<method name="addPropertyChangeListener" type="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"/>
<method name="getPropertyChangeListeners" type="(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;"/>
<method name="firePropertyChange" type="(Ljava/lang/String;ZZ)V"/>
<method name="fireIndexedPropertyChange" type="(Ljava/lang/String;IZZ)V"/>
<method name="firePropertyChange" type="(Ljava/lang/String;II)V"/>
<method name="fireIndexedPropertyChange" type="(Ljava/lang/String;III)V"/>
<method name="hasListeners" type="(Ljava/lang/String;)Z"/>
<method name="removePropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
<method name="addPropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
<method name="getPropertyChangeListeners" type="()[Ljava/beans/PropertyChangeListener;"/>
<method name="firePropertyChange" type="(Ljava/beans/PropertyChangeEvent;)V"/>
</class>
<class name="java/io/BufferedInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;I)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/BufferedOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;I)V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="close" type="()V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/BufferedReader">
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;I)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/BufferedWriter">
<method name="&lt;init&gt;" type="(Ljava/io/Writer;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Writer;I)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="newLine" type="()V"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
</class>
<class name="java/io/ByteArrayInputStream">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([BII)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/ByteArrayOutputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="close" type="()V"/>
<method name="reset" type="()V"/>
<method name="size" type="()I"/>
<method name="toByteArray" type="()[B"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(I)Ljava/lang/String;"/>
<method name="toString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
</class>
<class name="java/io/CharArrayReader">
<method name="&lt;init&gt;" type="([C)V"/>
<method name="&lt;init&gt;" type="([CII)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/CharArrayWriter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="reset" type="()V"/>
<method name="size" type="()I"/>
<method name="toCharArray" type="()[C"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
<method name="writeTo" type="(Ljava/io/Writer;)V"/>
<method name="append" type="(C)Ljava/io/CharArrayWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/Writer;"/>
<method name="append" type="(C)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/io/CharConversionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/Console">
<method name="flush" type="()V"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;"/>
<method name="printf" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;"/>
<method name="reader" type="()Ljava/io/Reader;"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLine" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="readPassword" type="()[C"/>
<method name="readPassword" type="(Ljava/lang/String;[Ljava/lang/Object;)[C"/>
<method name="writer" type="()Ljava/io/PrintWriter;"/>
</class>
<class name="java/io/DataInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="readBoolean" type="()Z"/>
<method name="readByte" type="()B"/>
<method name="readChar" type="()C"/>
<method name="readDouble" type="()D"/>
<method name="readFloat" type="()F"/>
<method name="readFully" type="([B)V"/>
<method name="readFully" type="([BII)V"/>
<method name="readInt" type="()I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLong" type="()J"/>
<method name="readShort" type="()S"/>
<method name="readUnsignedByte" type="()I"/>
<method name="readUnsignedShort" type="()I"/>
<method name="readUTF" type="()Ljava/lang/String;"/>
<method name="readUTF" type="(Ljava/io/DataInput;)Ljava/lang/String;" class_method="true"/>
<method name="skipBytes" type="(I)I"/>
</class>
<class name="java/io/DataOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="flush" type="()V"/>
<method name="size" type="()I"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="writeBoolean" type="(Z)V"/>
<method name="writeByte" type="(I)V"/>
<method name="writeBytes" type="(Ljava/lang/String;)V"/>
<method name="writeChar" type="(I)V"/>
<method name="writeChars" type="(Ljava/lang/String;)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeShort" type="(I)V"/>
<method name="writeUTF" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/EOFException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/File">
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="listRoots" type="()[Ljava/io/File;" class_method="true"/>
<method name="canExecute" type="()Z"/>
<method name="canRead" type="()Z"/>
<method name="canWrite" type="()Z"/>
<method name="compareTo" type="(Ljava/io/File;)I"/>
<method name="delete" type="()Z"/>
<method name="deleteOnExit" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="exists" type="()Z"/>
<method name="getAbsolutePath" type="()Ljava/lang/String;"/>
<method name="getAbsoluteFile" type="()Ljava/io/File;"/>
<method name="getCanonicalPath" type="()Ljava/lang/String;"/>
<method name="getCanonicalFile" type="()Ljava/io/File;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getParent" type="()Ljava/lang/String;"/>
<method name="getParentFile" type="()Ljava/io/File;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="isAbsolute" type="()Z"/>
<method name="isDirectory" type="()Z"/>
<method name="isFile" type="()Z"/>
<method name="isHidden" type="()Z"/>
<method name="lastModified" type="()J"/>
<method name="setLastModified" type="(J)Z"/>
<method name="setReadOnly" type="()Z"/>
<method name="setExecutable" type="(ZZ)Z"/>
<method name="setExecutable" type="(Z)Z"/>
<method name="setReadable" type="(ZZ)Z"/>
<method name="setReadable" type="(Z)Z"/>
<method name="setWritable" type="(ZZ)Z"/>
<method name="setWritable" type="(Z)Z"/>
<method name="length" type="()J"/>
<method name="list" type="()[Ljava/lang/String;"/>
<method name="list" type="(Ljava/io/FilenameFilter;)[Ljava/lang/String;"/>
<method name="listFiles" type="()[Ljava/io/File;"/>
<method name="listFiles" type="(Ljava/io/FilenameFilter;)[Ljava/io/File;"/>
<method name="listFiles" type="(Ljava/io/FileFilter;)[Ljava/io/File;"/>
<method name="mkdir" type="()Z"/>
<method name="mkdirs" type="()Z"/>
<method name="createNewFile" type="()Z"/>
<method name="createTempFile" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;" class_method="true"/>
<method name="createTempFile" type="(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" class_method="true"/>
<method name="renameTo" type="(Ljava/io/File;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toURI" type="()Ljava/net/URI;"/>
<method name="toURL" type="()Ljava/net/URL;"/>
<method name="getTotalSpace" type="()J"/>
<method name="getUsableSpace" type="()J"/>
<method name="getFreeSpace" type="()J"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/io/FileDescriptor">
<method name="&lt;init&gt;" type="()V"/>
<method name="sync" type="()V"/>
<method name="valid" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/io/FileInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/FileDescriptor;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getChannel" type="()Ljava/nio/channels/FileChannel;"/>
<method name="getFD" type="()Ljava/io/FileDescriptor;"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/FileNotFoundException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/FileOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/FileDescriptor;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getChannel" type="()Ljava/nio/channels/FileChannel;"/>
<method name="getFD" type="()Ljava/io/FileDescriptor;"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/FilePermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/io/FileReader">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/FileDescriptor;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/FileWriter">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/FileDescriptor;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
</class>
<class name="java/io/FilterInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/FilterOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/FilterReader">
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/FilterWriter">
<method name="&lt;init&gt;" type="(Ljava/io/Writer;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
</class>
<class name="java/io/InputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/InputStreamReader">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V"/>
<method name="close" type="()V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
</class>
<class name="java/io/InterruptedIOException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/InvalidClassException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/io/InvalidObjectException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/IOError">
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/io/IOException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/io/LineNumberInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="available" type="()I"/>
<method name="getLineNumber" type="()I"/>
<method name="mark" type="(I)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="setLineNumber" type="(I)V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/LineNumberReader">
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;I)V"/>
<method name="getLineNumber" type="()I"/>
<method name="mark" type="(I)V"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="reset" type="()V"/>
<method name="setLineNumber" type="(I)V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/NotActiveException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/NotSerializableException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/ObjectInputStream$GetField">
<method name="&lt;init&gt;" type="()V"/>
<method name="getObjectStreamClass" type="()Ljava/io/ObjectStreamClass;"/>
<method name="defaulted" type="(Ljava/lang/String;)Z"/>
<method name="get" type="(Ljava/lang/String;Z)Z"/>
<method name="get" type="(Ljava/lang/String;C)C"/>
<method name="get" type="(Ljava/lang/String;B)B"/>
<method name="get" type="(Ljava/lang/String;S)S"/>
<method name="get" type="(Ljava/lang/String;I)I"/>
<method name="get" type="(Ljava/lang/String;J)J"/>
<method name="get" type="(Ljava/lang/String;F)F"/>
<method name="get" type="(Ljava/lang/String;D)D"/>
<method name="get" type="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/io/ObjectInputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="defaultReadObject" type="()V"/>
<method name="enableResolveObject" type="(Z)Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="readBoolean" type="()Z"/>
<method name="readByte" type="()B"/>
<method name="readChar" type="()C"/>
<method name="readDouble" type="()D"/>
<method name="readFields" type="()Ljava/io/ObjectInputStream$GetField;"/>
<method name="readFloat" type="()F"/>
<method name="readFully" type="([B)V"/>
<method name="readFully" type="([BII)V"/>
<method name="readInt" type="()I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLong" type="()J"/>
<method name="readClassDescriptor" type="()Ljava/io/ObjectStreamClass;"/>
<method name="resolveProxyClass" type="([Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="readObject" type="()Ljava/lang/Object;"/>
<method name="readUnshared" type="()Ljava/lang/Object;"/>
<method name="readObjectOverride" type="()Ljava/lang/Object;"/>
<method name="readShort" type="()S"/>
<method name="readStreamHeader" type="()V"/>
<method name="readUnsignedByte" type="()I"/>
<method name="readUnsignedShort" type="()I"/>
<method name="readUTF" type="()Ljava/lang/String;"/>
<method name="registerValidation" type="(Ljava/io/ObjectInputValidation;I)V"/>
<method name="resolveClass" type="(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"/>
<method name="resolveObject" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="skipBytes" type="(I)I"/>
</class>
<class name="java/io/ObjectOutputStream$PutField">
<method name="&lt;init&gt;" type="()V"/>
<method name="put" type="(Ljava/lang/String;Z)V"/>
<method name="put" type="(Ljava/lang/String;C)V"/>
<method name="put" type="(Ljava/lang/String;B)V"/>
<method name="put" type="(Ljava/lang/String;S)V"/>
<method name="put" type="(Ljava/lang/String;I)V"/>
<method name="put" type="(Ljava/lang/String;J)V"/>
<method name="put" type="(Ljava/lang/String;F)V"/>
<method name="put" type="(Ljava/lang/String;D)V"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="write" type="(Ljava/io/ObjectOutput;)V"/>
</class>
<class name="java/io/ObjectOutputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="annotateClass" type="(Ljava/lang/Class;)V"/>
<method name="annotateProxyClass" type="(Ljava/lang/Class;)V"/>
<method name="close" type="()V"/>
<method name="defaultWriteObject" type="()V"/>
<method name="drain" type="()V"/>
<method name="enableReplaceObject" type="(Z)Z"/>
<method name="flush" type="()V"/>
<method name="putFields" type="()Ljava/io/ObjectOutputStream$PutField;"/>
<method name="replaceObject" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="reset" type="()V"/>
<method name="useProtocolVersion" type="(I)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="writeBoolean" type="(Z)V"/>
<method name="writeByte" type="(I)V"/>
<method name="writeBytes" type="(Ljava/lang/String;)V"/>
<method name="writeChar" type="(I)V"/>
<method name="writeChars" type="(Ljava/lang/String;)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeFields" type="()V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeClassDescriptor" type="(Ljava/io/ObjectStreamClass;)V"/>
<method name="writeObject" type="(Ljava/lang/Object;)V"/>
<method name="writeUnshared" type="(Ljava/lang/Object;)V"/>
<method name="writeObjectOverride" type="(Ljava/lang/Object;)V"/>
<method name="writeShort" type="(I)V"/>
<method name="writeStreamHeader" type="()V"/>
<method name="writeUTF" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/ObjectStreamClass">
<method name="forClass" type="()Ljava/lang/Class;"/>
<method name="getField" type="(Ljava/lang/String;)Ljava/io/ObjectStreamField;"/>
<method name="getFields" type="()[Ljava/io/ObjectStreamField;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getSerialVersionUID" type="()J"/>
<method name="lookup" type="(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;" class_method="true"/>
<method name="lookupAny" type="(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/io/ObjectStreamException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/ObjectStreamField">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Class;Z)V"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getOffset" type="()I"/>
<method name="getType" type="()Ljava/lang/Class;"/>
<method name="getTypeCode" type="()C"/>
<method name="getTypeString" type="()Ljava/lang/String;"/>
<method name="isPrimitive" type="()Z"/>
<method name="setOffset" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isUnshared" type="()Z"/>
</class>
<class name="java/io/OptionalDataException">
</class>
<class name="java/io/OutputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/OutputStreamWriter">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
</class>
<class name="java/io/PipedInputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedOutputStream;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedOutputStream;I)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/io/PipedOutputStream;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="receive" type="(I)V"/>
</class>
<class name="java/io/PipedOutputStream">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedInputStream;)V"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/io/PipedInputStream;)V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/PipedReader">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedWriter;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedWriter;I)V"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/io/PipedWriter;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
</class>
<class name="java/io/PipedWriter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PipedReader;)V"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/io/PipedReader;)V"/>
<method name="flush" type="()V"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="java/io/PrintStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;ZLjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="checkError" type="()Z"/>
<method name="clearError" type="()V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;"/>
<method name="format" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;"/>
<method name="printf" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;"/>
<method name="printf" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;"/>
<method name="print" type="([C)V"/>
<method name="print" type="(C)V"/>
<method name="print" type="(D)V"/>
<method name="print" type="(F)V"/>
<method name="print" type="(I)V"/>
<method name="print" type="(J)V"/>
<method name="print" type="(Ljava/lang/Object;)V"/>
<method name="print" type="(Ljava/lang/String;)V"/>
<method name="print" type="(Z)V"/>
<method name="println" type="()V"/>
<method name="println" type="([C)V"/>
<method name="println" type="(C)V"/>
<method name="println" type="(D)V"/>
<method name="println" type="(F)V"/>
<method name="println" type="(I)V"/>
<method name="println" type="(J)V"/>
<method name="println" type="(Ljava/lang/Object;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
<method name="println" type="(Z)V"/>
<method name="setError" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="append" type="(C)Ljava/io/PrintStream;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/PrintStream;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/PrintStream;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/io/PrintWriter">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Writer;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Writer;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="checkError" type="()Z"/>
<method name="clearError" type="()V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;"/>
<method name="format" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;"/>
<method name="printf" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;"/>
<method name="printf" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;"/>
<method name="print" type="([C)V"/>
<method name="print" type="(C)V"/>
<method name="print" type="(D)V"/>
<method name="print" type="(F)V"/>
<method name="print" type="(I)V"/>
<method name="print" type="(J)V"/>
<method name="print" type="(Ljava/lang/Object;)V"/>
<method name="print" type="(Ljava/lang/String;)V"/>
<method name="print" type="(Z)V"/>
<method name="println" type="()V"/>
<method name="println" type="([C)V"/>
<method name="println" type="(C)V"/>
<method name="println" type="(D)V"/>
<method name="println" type="(F)V"/>
<method name="println" type="(I)V"/>
<method name="println" type="(J)V"/>
<method name="println" type="(Ljava/lang/Object;)V"/>
<method name="println" type="(Ljava/lang/String;)V"/>
<method name="println" type="(Z)V"/>
<method name="setError" type="()V"/>
<method name="write" type="([C)V"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
<method name="append" type="(C)Ljava/io/PrintWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/Writer;"/>
<method name="append" type="(C)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/io/PushbackInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;I)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
<method name="unread" type="([B)V"/>
<method name="unread" type="([BII)V"/>
<method name="unread" type="(I)V"/>
<method name="mark" type="(I)V"/>
<method name="reset" type="()V"/>
</class>
<class name="java/io/PushbackReader">
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;I)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="unread" type="([C)V"/>
<method name="unread" type="([CII)V"/>
<method name="unread" type="(I)V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/RandomAccessFile">
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="close" type="()V"/>
<method name="finalize" type="()V"/>
<method name="getChannel" type="()Ljava/nio/channels/FileChannel;"/>
<method name="getFD" type="()Ljava/io/FileDescriptor;"/>
<method name="getFilePointer" type="()J"/>
<method name="length" type="()J"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="readBoolean" type="()Z"/>
<method name="readByte" type="()B"/>
<method name="readChar" type="()C"/>
<method name="readDouble" type="()D"/>
<method name="readFloat" type="()F"/>
<method name="readFully" type="([B)V"/>
<method name="readFully" type="([BII)V"/>
<method name="readInt" type="()I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLong" type="()J"/>
<method name="readShort" type="()S"/>
<method name="readUnsignedByte" type="()I"/>
<method name="readUnsignedShort" type="()I"/>
<method name="readUTF" type="()Ljava/lang/String;"/>
<method name="seek" type="(J)V"/>
<method name="setLength" type="(J)V"/>
<method name="skipBytes" type="(I)I"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="writeBoolean" type="(Z)V"/>
<method name="writeByte" type="(I)V"/>
<method name="writeBytes" type="(Ljava/lang/String;)V"/>
<method name="writeChar" type="(I)V"/>
<method name="writeChars" type="(Ljava/lang/String;)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeShort" type="(I)V"/>
<method name="writeUTF" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/Reader">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([C)I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
<method name="read" type="(Ljava/nio/CharBuffer;)I"/>
</class>
<class name="java/io/SequenceInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Enumeration;)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
</class>
<class name="java/io/SerializablePermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/io/StreamCorruptedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/StreamTokenizer">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="commentChar" type="(I)V"/>
<method name="eolIsSignificant" type="(Z)V"/>
<method name="lineno" type="()I"/>
<method name="lowerCaseMode" type="(Z)V"/>
<method name="nextToken" type="()I"/>
<method name="ordinaryChar" type="(I)V"/>
<method name="ordinaryChars" type="(II)V"/>
<method name="parseNumbers" type="()V"/>
<method name="pushBack" type="()V"/>
<method name="quoteChar" type="(I)V"/>
<method name="resetSyntax" type="()V"/>
<method name="slashSlashComments" type="(Z)V"/>
<method name="slashStarComments" type="(Z)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="whitespaceChars" type="(II)V"/>
<method name="wordChars" type="(II)V"/>
</class>
<class name="java/io/StringBufferInputStream">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="available" type="()I"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/StringReader">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="markSupported" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([CII)I"/>
<method name="ready" type="()Z"/>
<method name="reset" type="()V"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/io/StringWriter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="getBuffer" type="()Ljava/lang/StringBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
<method name="append" type="(C)Ljava/io/StringWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/StringWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/Writer;"/>
<method name="append" type="(C)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/io/SyncFailedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/UnsupportedEncodingException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/UTFDataFormatException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/io/WriteAbortedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Exception;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/io/Writer">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([C)V"/>
<method name="write" type="([CII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="(Ljava/lang/String;)V"/>
<method name="write" type="(Ljava/lang/String;II)V"/>
<method name="append" type="(C)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/io/Writer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/lang/AbstractMethodError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/AbstractStringBuilder">
<method name="capacity" type="()I"/>
<method name="charAt" type="(I)C"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="getChars" type="(II[CI)V"/>
<method name="length" type="()I"/>
<method name="setCharAt" type="(IC)V"/>
<method name="setLength" type="(I)V"/>
<method name="substring" type="(I)Ljava/lang/String;"/>
<method name="substring" type="(II)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="indexOf" type="(Ljava/lang/String;)I"/>
<method name="indexOf" type="(Ljava/lang/String;I)I"/>
<method name="lastIndexOf" type="(Ljava/lang/String;)I"/>
<method name="lastIndexOf" type="(Ljava/lang/String;I)I"/>
<method name="trimToSize" type="()V"/>
<method name="codePointAt" type="(I)I"/>
<method name="codePointBefore" type="(I)I"/>
<method name="codePointCount" type="(II)I"/>
<method name="offsetByCodePoints" type="(II)I"/>
</class>
<class name="java/lang/annotation/AnnotationFormatError">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/annotation/AnnotationTypeMismatchException">
<method name="&lt;init&gt;" type="(Ljava/lang/reflect/Method;Ljava/lang/String;)V"/>
<method name="element" type="()Ljava/lang/reflect/Method;"/>
<method name="foundType" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/annotation/ElementType">
<method name="values" type="()[Ljava/lang/annotation/ElementType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/annotation/ElementType;" class_method="true"/>
</class>
<class name="java/lang/annotation/IncompleteAnnotationException">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Ljava/lang/String;)V"/>
<method name="annotationType" type="()Ljava/lang/Class;"/>
<method name="elementName" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/annotation/RetentionPolicy">
<method name="values" type="()[Ljava/lang/annotation/RetentionPolicy;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/annotation/RetentionPolicy;" class_method="true"/>
</class>
<class name="java/lang/ArithmeticException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/ArrayIndexOutOfBoundsException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/ArrayStoreException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/AssertionError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="&lt;init&gt;" type="(C)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(D)V"/>
</class>
<class name="java/lang/Boolean">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="booleanValue" type="()Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="compareTo" type="(Ljava/lang/Boolean;)I"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getBoolean" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="parseBoolean" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="toString" type="(Z)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Boolean;" class_method="true"/>
<method name="valueOf" type="(Z)Ljava/lang/Boolean;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/Byte">
<method name="&lt;init&gt;" type="(B)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="byteValue" type="()B"/>
<method name="compareTo" type="(Ljava/lang/Byte;)I"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/Byte;" class_method="true"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatValue" type="()F"/>
<method name="hashCode" type="()I"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="parseByte" type="(Ljava/lang/String;)B" class_method="true"/>
<method name="parseByte" type="(Ljava/lang/String;I)B" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(B)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Byte;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;I)Ljava/lang/Byte;" class_method="true"/>
<method name="valueOf" type="(B)Ljava/lang/Byte;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/Character$Subset">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/Character$UnicodeBlock">
<method name="forName" type="(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;" class_method="true"/>
<method name="of" type="(C)Ljava/lang/Character$UnicodeBlock;" class_method="true"/>
<method name="of" type="(I)Ljava/lang/Character$UnicodeBlock;" class_method="true"/>
</class>
<class name="java/lang/Character">
<method name="&lt;init&gt;" type="(C)V"/>
<method name="charValue" type="()C"/>
<method name="compareTo" type="(Ljava/lang/Character;)I"/>
<method name="valueOf" type="(C)Ljava/lang/Character;" class_method="true"/>
<method name="isValidCodePoint" type="(I)Z" class_method="true"/>
<method name="isSupplementaryCodePoint" type="(I)Z" class_method="true"/>
<method name="isHighSurrogate" type="(C)Z" class_method="true"/>
<method name="isLowSurrogate" type="(C)Z" class_method="true"/>
<method name="isSurrogatePair" type="(CC)Z" class_method="true"/>
<method name="charCount" type="(I)I" class_method="true"/>
<method name="toCodePoint" type="(CC)I" class_method="true"/>
<method name="codePointAt" type="(Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="codePointAt" type="([CI)I" class_method="true"/>
<method name="codePointAt" type="([CII)I" class_method="true"/>
<method name="codePointBefore" type="(Ljava/lang/CharSequence;I)I" class_method="true"/>
<method name="codePointBefore" type="([CI)I" class_method="true"/>
<method name="codePointBefore" type="([CII)I" class_method="true"/>
<method name="toChars" type="(I[CI)I" class_method="true"/>
<method name="toChars" type="(I)[C" class_method="true"/>
<method name="codePointCount" type="(Ljava/lang/CharSequence;II)I" class_method="true"/>
<method name="codePointCount" type="([CII)I" class_method="true"/>
<method name="offsetByCodePoints" type="(Ljava/lang/CharSequence;II)I" class_method="true"/>
<method name="offsetByCodePoints" type="([CIIII)I" class_method="true"/>
<method name="digit" type="(CI)I" class_method="true"/>
<method name="digit" type="(II)I" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="forDigit" type="(II)C" class_method="true"/>
<method name="getNumericValue" type="(C)I" class_method="true"/>
<method name="getNumericValue" type="(I)I" class_method="true"/>
<method name="getType" type="(C)I" class_method="true"/>
<method name="getType" type="(I)I" class_method="true"/>
<method name="getDirectionality" type="(C)B" class_method="true"/>
<method name="getDirectionality" type="(I)B" class_method="true"/>
<method name="isMirrored" type="(C)Z" class_method="true"/>
<method name="isMirrored" type="(I)Z" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="isDefined" type="(C)Z" class_method="true"/>
<method name="isDefined" type="(I)Z" class_method="true"/>
<method name="isDigit" type="(C)Z" class_method="true"/>
<method name="isDigit" type="(I)Z" class_method="true"/>
<method name="isIdentifierIgnorable" type="(C)Z" class_method="true"/>
<method name="isIdentifierIgnorable" type="(I)Z" class_method="true"/>
<method name="isISOControl" type="(C)Z" class_method="true"/>
<method name="isISOControl" type="(I)Z" class_method="true"/>
<method name="isJavaIdentifierPart" type="(C)Z" class_method="true"/>
<method name="isJavaIdentifierPart" type="(I)Z" class_method="true"/>
<method name="isJavaIdentifierStart" type="(C)Z" class_method="true"/>
<method name="isJavaIdentifierStart" type="(I)Z" class_method="true"/>
<method name="isJavaLetter" type="(C)Z" class_method="true"/>
<method name="isJavaLetterOrDigit" type="(C)Z" class_method="true"/>
<method name="isLetter" type="(C)Z" class_method="true"/>
<method name="isLetter" type="(I)Z" class_method="true"/>
<method name="isLetterOrDigit" type="(C)Z" class_method="true"/>
<method name="isLetterOrDigit" type="(I)Z" class_method="true"/>
<method name="isLowerCase" type="(C)Z" class_method="true"/>
<method name="isLowerCase" type="(I)Z" class_method="true"/>
<method name="isSpace" type="(C)Z" class_method="true"/>
<method name="isSpaceChar" type="(C)Z" class_method="true"/>
<method name="isSpaceChar" type="(I)Z" class_method="true"/>
<method name="isTitleCase" type="(C)Z" class_method="true"/>
<method name="isTitleCase" type="(I)Z" class_method="true"/>
<method name="isUnicodeIdentifierPart" type="(C)Z" class_method="true"/>
<method name="isUnicodeIdentifierPart" type="(I)Z" class_method="true"/>
<method name="isUnicodeIdentifierStart" type="(C)Z" class_method="true"/>
<method name="isUnicodeIdentifierStart" type="(I)Z" class_method="true"/>
<method name="isUpperCase" type="(C)Z" class_method="true"/>
<method name="isUpperCase" type="(I)Z" class_method="true"/>
<method name="isWhitespace" type="(C)Z" class_method="true"/>
<method name="isWhitespace" type="(I)Z" class_method="true"/>
<method name="reverseBytes" type="(C)C" class_method="true"/>
<method name="toLowerCase" type="(C)C" class_method="true"/>
<method name="toLowerCase" type="(I)I" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(C)Ljava/lang/String;" class_method="true"/>
<method name="toTitleCase" type="(C)C" class_method="true"/>
<method name="toTitleCase" type="(I)I" class_method="true"/>
<method name="toUpperCase" type="(C)C" class_method="true"/>
<method name="toUpperCase" type="(I)I" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/Class">
<method name="forName" type="(Ljava/lang/String;)Ljava/lang/Class;" class_method="true"/>
<method name="forName" type="(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;" class_method="true"/>
<method name="getClasses" type="()[Ljava/lang/Class;"/>
<method name="getAnnotation" type="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"/>
<method name="getAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getCanonicalName" type="()Ljava/lang/String;"/>
<method name="getClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getComponentType" type="()Ljava/lang/Class;"/>
<method name="getConstructor" type="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"/>
<method name="getConstructors" type="()[Ljava/lang/reflect/Constructor;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getDeclaredClasses" type="()[Ljava/lang/Class;"/>
<method name="getDeclaredConstructor" type="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"/>
<method name="getDeclaredConstructors" type="()[Ljava/lang/reflect/Constructor;"/>
<method name="getDeclaredField" type="(Ljava/lang/String;)Ljava/lang/reflect/Field;"/>
<method name="getDeclaredFields" type="()[Ljava/lang/reflect/Field;"/>
<method name="getDeclaredMethod" type="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"/>
<method name="getDeclaredMethods" type="()[Ljava/lang/reflect/Method;"/>
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="getEnclosingClass" type="()Ljava/lang/Class;"/>
<method name="getEnclosingConstructor" type="()Ljava/lang/reflect/Constructor;"/>
<method name="getEnclosingMethod" type="()Ljava/lang/reflect/Method;"/>
<method name="getEnumConstants" type="()[Ljava/lang/Object;"/>
<method name="getField" type="(Ljava/lang/String;)Ljava/lang/reflect/Field;"/>
<method name="getFields" type="()[Ljava/lang/reflect/Field;"/>
<method name="getGenericInterfaces" type="()[Ljava/lang/reflect/Type;"/>
<method name="getGenericSuperclass" type="()Ljava/lang/reflect/Type;"/>
<method name="getInterfaces" type="()[Ljava/lang/Class;"/>
<method name="getMethod" type="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"/>
<method name="getMethods" type="()[Ljava/lang/reflect/Method;"/>
<method name="getModifiers" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getSimpleName" type="()Ljava/lang/String;"/>
<method name="getProtectionDomain" type="()Ljava/security/ProtectionDomain;"/>
<method name="getResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="getResourceAsStream" type="(Ljava/lang/String;)Ljava/io/InputStream;"/>
<method name="getSigners" type="()[Ljava/lang/Object;"/>
<method name="getSuperclass" type="()Ljava/lang/Class;"/>
<method name="getTypeParameters" type="()[Ljava/lang/reflect/TypeVariable;"/>
<method name="isAnnotation" type="()Z"/>
<method name="isAnnotationPresent" type="(Ljava/lang/Class;)Z"/>
<method name="isAnonymousClass" type="()Z"/>
<method name="isArray" type="()Z"/>
<method name="isAssignableFrom" type="(Ljava/lang/Class;)Z"/>
<method name="isEnum" type="()Z"/>
<method name="isInstance" type="(Ljava/lang/Object;)Z"/>
<method name="isInterface" type="()Z"/>
<method name="isLocalClass" type="()Z"/>
<method name="isMemberClass" type="()Z"/>
<method name="isPrimitive" type="()Z"/>
<method name="isSynthetic" type="()Z"/>
<method name="newInstance" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getPackage" type="()Ljava/lang/Package;"/>
<method name="desiredAssertionStatus" type="()Z"/>
<method name="asSubclass" type="(Ljava/lang/Class;)Ljava/lang/Class;"/>
<method name="cast" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/lang/ClassCastException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/ClassCircularityError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/ClassFormatError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/ClassLoader">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ClassLoader;)V"/>
<method name="getSystemClassLoader" type="()Ljava/lang/ClassLoader;" class_method="true"/>
<method name="getSystemResource" type="(Ljava/lang/String;)Ljava/net/URL;" class_method="true"/>
<method name="getSystemResources" type="(Ljava/lang/String;)Ljava/util/Enumeration;" class_method="true"/>
<method name="getSystemResourceAsStream" type="(Ljava/lang/String;)Ljava/io/InputStream;" class_method="true"/>
<method name="defineClass" type="([BII)Ljava/lang/Class;"/>
<method name="defineClass" type="(Ljava/lang/String;[BII)Ljava/lang/Class;"/>
<method name="defineClass" type="(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;"/>
<method name="defineClass" type="(Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/security/ProtectionDomain;)Ljava/lang/Class;"/>
<method name="findClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="findLoadedClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="findSystemClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="getParent" type="()Ljava/lang/ClassLoader;"/>
<method name="getResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="getResources" type="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
<method name="getResourceAsStream" type="(Ljava/lang/String;)Ljava/io/InputStream;"/>
<method name="loadClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="loadClass" type="(Ljava/lang/String;Z)Ljava/lang/Class;"/>
<method name="resolveClass" type="(Ljava/lang/Class;)V"/>
<method name="findResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="findResources" type="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
<method name="findLibrary" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPackage" type="(Ljava/lang/String;)Ljava/lang/Package;"/>
<method name="getPackages" type="()[Ljava/lang/Package;"/>
<method name="definePackage" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;"/>
<method name="setSigners" type="(Ljava/lang/Class;[Ljava/lang/Object;)V"/>
<method name="setClassAssertionStatus" type="(Ljava/lang/String;Z)V"/>
<method name="setPackageAssertionStatus" type="(Ljava/lang/String;Z)V"/>
<method name="setDefaultAssertionStatus" type="(Z)V"/>
<method name="clearAssertionStatus" type="()V"/>
</class>
<class name="java/lang/ClassNotFoundException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="getException" type="()Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/lang/CloneNotSupportedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Compiler">
<method name="command" type="(Ljava/lang/Object;)Ljava/lang/Object;" class_method="true"/>
<method name="compileClass" type="(Ljava/lang/Class;)Z" class_method="true"/>
<method name="compileClasses" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="disable" type="()V" class_method="true"/>
<method name="enable" type="()V" class_method="true"/>
</class>
<class name="java/lang/Double">
<method name="&lt;init&gt;" type="(D)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="compareTo" type="(Ljava/lang/Double;)I"/>
<method name="byteValue" type="()B"/>
<method name="doubleToLongBits" type="(D)J" class_method="true"/>
<method name="doubleToRawLongBits" type="(D)J" class_method="true"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatValue" type="()F"/>
<method name="hashCode" type="()I"/>
<method name="intValue" type="()I"/>
<method name="isInfinite" type="()Z"/>
<method name="isInfinite" type="(D)Z" class_method="true"/>
<method name="isNaN" type="()Z"/>
<method name="isNaN" type="(D)Z" class_method="true"/>
<method name="longBitsToDouble" type="(J)D" class_method="true"/>
<method name="longValue" type="()J"/>
<method name="parseDouble" type="(Ljava/lang/String;)D" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(D)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Double;" class_method="true"/>
<method name="compare" type="(DD)I" class_method="true"/>
<method name="valueOf" type="(D)Ljava/lang/Double;" class_method="true"/>
<method name="toHexString" type="(D)Ljava/lang/String;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/Enum">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="name" type="()Ljava/lang/String;"/>
<method name="ordinal" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Enum;)I"/>
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="valueOf" type="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;" class_method="true"/>
<method name="finalize" type="()V"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/EnumConstantNotPresentException">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Ljava/lang/String;)V"/>
<method name="enumType" type="()Ljava/lang/Class;"/>
<method name="constantName" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/Error">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/Exception">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/ExceptionInInitializerError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="getException" type="()Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/lang/Float">
<method name="&lt;init&gt;" type="(F)V"/>
<method name="&lt;init&gt;" type="(D)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="compareTo" type="(Ljava/lang/Float;)I"/>
<method name="byteValue" type="()B"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatToIntBits" type="(F)I" class_method="true"/>
<method name="floatToRawIntBits" type="(F)I" class_method="true"/>
<method name="floatValue" type="()F"/>
<method name="hashCode" type="()I"/>
<method name="intBitsToFloat" type="(I)F" class_method="true"/>
<method name="intValue" type="()I"/>
<method name="isInfinite" type="()Z"/>
<method name="isInfinite" type="(F)Z" class_method="true"/>
<method name="isNaN" type="()Z"/>
<method name="isNaN" type="(F)Z" class_method="true"/>
<method name="longValue" type="()J"/>
<method name="parseFloat" type="(Ljava/lang/String;)F" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(F)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Float;" class_method="true"/>
<method name="compare" type="(FF)I" class_method="true"/>
<method name="valueOf" type="(F)Ljava/lang/Float;" class_method="true"/>
<method name="toHexString" type="(F)Ljava/lang/String;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/IllegalAccessError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/IllegalAccessException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/IllegalArgumentException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/IllegalMonitorStateException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/IllegalStateException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/IllegalThreadStateException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/IncompatibleClassChangeError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/IndexOutOfBoundsException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/InheritableThreadLocal">
<method name="&lt;init&gt;" type="()V"/>
<method name="childValue" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/lang/InstantiationError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/InstantiationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Integer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="byteValue" type="()B"/>
<method name="compareTo" type="(Ljava/lang/Integer;)I"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/Integer;" class_method="true"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatValue" type="()F"/>
<method name="getInteger" type="(Ljava/lang/String;)Ljava/lang/Integer;" class_method="true"/>
<method name="getInteger" type="(Ljava/lang/String;I)Ljava/lang/Integer;" class_method="true"/>
<method name="getInteger" type="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="parseInt" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="parseInt" type="(Ljava/lang/String;I)I" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toBinaryString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="toHexString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="toOctalString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="(II)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Integer;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;I)Ljava/lang/Integer;" class_method="true"/>
<method name="highestOneBit" type="(I)I" class_method="true"/>
<method name="lowestOneBit" type="(I)I" class_method="true"/>
<method name="numberOfLeadingZeros" type="(I)I" class_method="true"/>
<method name="numberOfTrailingZeros" type="(I)I" class_method="true"/>
<method name="bitCount" type="(I)I" class_method="true"/>
<method name="rotateLeft" type="(II)I" class_method="true"/>
<method name="rotateRight" type="(II)I" class_method="true"/>
<method name="reverseBytes" type="(I)I" class_method="true"/>
<method name="reverse" type="(I)I" class_method="true"/>
<method name="signum" type="(I)I" class_method="true"/>
<method name="valueOf" type="(I)Ljava/lang/Integer;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/InternalError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/InterruptedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/LinkageError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Long">
<method name="&lt;init&gt;" type="(J)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="byteValue" type="()B"/>
<method name="compareTo" type="(Ljava/lang/Long;)I"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/Long;" class_method="true"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatValue" type="()F"/>
<method name="getLong" type="(Ljava/lang/String;)Ljava/lang/Long;" class_method="true"/>
<method name="getLong" type="(Ljava/lang/String;J)Ljava/lang/Long;" class_method="true"/>
<method name="getLong" type="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="parseLong" type="(Ljava/lang/String;)J" class_method="true"/>
<method name="parseLong" type="(Ljava/lang/String;I)J" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toBinaryString" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="toHexString" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="toOctalString" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="(JI)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Long;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;I)Ljava/lang/Long;" class_method="true"/>
<method name="highestOneBit" type="(J)J" class_method="true"/>
<method name="lowestOneBit" type="(J)J" class_method="true"/>
<method name="numberOfLeadingZeros" type="(J)I" class_method="true"/>
<method name="numberOfTrailingZeros" type="(J)I" class_method="true"/>
<method name="bitCount" type="(J)I" class_method="true"/>
<method name="rotateLeft" type="(JI)J" class_method="true"/>
<method name="rotateRight" type="(JI)J" class_method="true"/>
<method name="reverseBytes" type="(J)J" class_method="true"/>
<method name="reverse" type="(J)J" class_method="true"/>
<method name="signum" type="(J)I" class_method="true"/>
<method name="valueOf" type="(J)Ljava/lang/Long;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/Math">
<method name="abs" type="(D)D" class_method="true"/>
<method name="abs" type="(F)F" class_method="true"/>
<method name="abs" type="(I)I" class_method="true"/>
<method name="abs" type="(J)J" class_method="true"/>
<method name="acos" type="(D)D" class_method="true"/>
<method name="asin" type="(D)D" class_method="true"/>
<method name="atan" type="(D)D" class_method="true"/>
<method name="atan2" type="(DD)D" class_method="true"/>
<method name="cbrt" type="(D)D" class_method="true"/>
<method name="ceil" type="(D)D" class_method="true"/>
<method name="cos" type="(D)D" class_method="true"/>
<method name="cosh" type="(D)D" class_method="true"/>
<method name="exp" type="(D)D" class_method="true"/>
<method name="expm1" type="(D)D" class_method="true"/>
<method name="floor" type="(D)D" class_method="true"/>
<method name="hypot" type="(DD)D" class_method="true"/>
<method name="IEEEremainder" type="(DD)D" class_method="true"/>
<method name="log" type="(D)D" class_method="true"/>
<method name="log10" type="(D)D" class_method="true"/>
<method name="log1p" type="(D)D" class_method="true"/>
<method name="max" type="(DD)D" class_method="true"/>
<method name="max" type="(FF)F" class_method="true"/>
<method name="max" type="(II)I" class_method="true"/>
<method name="max" type="(JJ)J" class_method="true"/>
<method name="min" type="(DD)D" class_method="true"/>
<method name="min" type="(FF)F" class_method="true"/>
<method name="min" type="(II)I" class_method="true"/>
<method name="min" type="(JJ)J" class_method="true"/>
<method name="pow" type="(DD)D" class_method="true"/>
<method name="rint" type="(D)D" class_method="true"/>
<method name="round" type="(D)J" class_method="true"/>
<method name="round" type="(F)I" class_method="true"/>
<method name="signum" type="(D)D" class_method="true"/>
<method name="signum" type="(F)F" class_method="true"/>
<method name="sin" type="(D)D" class_method="true"/>
<method name="sinh" type="(D)D" class_method="true"/>
<method name="sqrt" type="(D)D" class_method="true"/>
<method name="tan" type="(D)D" class_method="true"/>
<method name="tanh" type="(D)D" class_method="true"/>
<method name="random" type="()D" class_method="true"/>
<method name="toRadians" type="(D)D" class_method="true"/>
<method name="toDegrees" type="(D)D" class_method="true"/>
<method name="ulp" type="(D)D" class_method="true"/>
<method name="ulp" type="(F)F" class_method="true"/>
<method name="copySign" type="(DD)D" class_method="true"/>
<method name="copySign" type="(FF)F" class_method="true"/>
<method name="getExponent" type="(F)I" class_method="true"/>
<method name="getExponent" type="(D)I" class_method="true"/>
<method name="nextAfter" type="(DD)D" class_method="true"/>
<method name="nextAfter" type="(FD)F" class_method="true"/>
<method name="nextUp" type="(D)D" class_method="true"/>
<method name="nextUp" type="(F)F" class_method="true"/>
<method name="scalb" type="(DI)D" class_method="true"/>
<method name="scalb" type="(FI)F" class_method="true"/>
</class>
<class name="java/lang/NegativeArraySizeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NoClassDefFoundError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NoSuchFieldError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NoSuchFieldException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NoSuchMethodError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NoSuchMethodException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/NullPointerException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Number">
<method name="&lt;init&gt;" type="()V"/>
<method name="byteValue" type="()B"/>
<method name="doubleValue" type="()D"/>
<method name="floatValue" type="()F"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="shortValue" type="()S"/>
</class>
<class name="java/lang/NumberFormatException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/OutOfMemoryError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Package">
<method name="getAnnotation" type="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"/>
<method name="getAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="isAnnotationPresent" type="(Ljava/lang/Class;)Z"/>
<method name="getImplementationTitle" type="()Ljava/lang/String;"/>
<method name="getImplementationVendor" type="()Ljava/lang/String;"/>
<method name="getImplementationVersion" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getPackage" type="(Ljava/lang/String;)Ljava/lang/Package;" class_method="true"/>
<method name="getPackages" type="()[Ljava/lang/Package;" class_method="true"/>
<method name="getSpecificationTitle" type="()Ljava/lang/String;"/>
<method name="getSpecificationVendor" type="()Ljava/lang/String;"/>
<method name="getSpecificationVersion" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="isCompatibleWith" type="(Ljava/lang/String;)Z"/>
<method name="isSealed" type="()Z"/>
<method name="isSealed" type="(Ljava/net/URL;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/Process">
<method name="&lt;init&gt;" type="()V"/>
<method name="destroy" type="()V"/>
<method name="exitValue" type="()I"/>
<method name="getErrorStream" type="()Ljava/io/InputStream;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="waitFor" type="()I"/>
</class>
<class name="java/lang/ProcessBuilder">
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/List;)V"/>
<method name="command" type="()Ljava/util/List;"/>
<method name="command" type="([Ljava/lang/String;)Ljava/lang/ProcessBuilder;"/>
<method name="command" type="(Ljava/util/List;)Ljava/lang/ProcessBuilder;"/>
<method name="directory" type="()Ljava/io/File;"/>
<method name="directory" type="(Ljava/io/File;)Ljava/lang/ProcessBuilder;"/>
<method name="environment" type="()Ljava/util/Map;"/>
<method name="redirectErrorStream" type="()Z"/>
<method name="redirectErrorStream" type="(Z)Ljava/lang/ProcessBuilder;"/>
<method name="start" type="()Ljava/lang/Process;"/>
</class>
<class name="java/lang/ref/PhantomReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V"/>
<method name="get" type="()Ljava/lang/Object;"/>
</class>
<class name="java/lang/ref/Reference">
<method name="clear" type="()V"/>
<method name="enqueue" type="()Z"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="isEnqueued" type="()Z"/>
</class>
<class name="java/lang/ref/ReferenceQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="poll" type="()Ljava/lang/ref/Reference;"/>
<method name="remove" type="()Ljava/lang/ref/Reference;"/>
<method name="remove" type="(J)Ljava/lang/ref/Reference;"/>
</class>
<class name="java/lang/ref/SoftReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V"/>
</class>
<class name="java/lang/ref/WeakReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V"/>
</class>
<class name="java/lang/reflect/AccessibleObject">
<method name="&lt;init&gt;" type="()V"/>
<method name="setAccessible" type="([Ljava/lang/reflect/AccessibleObject;Z)V" class_method="true"/>
<method name="isAccessible" type="()Z"/>
<method name="setAccessible" type="(Z)V"/>
<method name="isAnnotationPresent" type="(Ljava/lang/Class;)Z"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getAnnotation" type="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"/>
</class>
<class name="java/lang/reflect/Array">
<method name="get" type="(Ljava/lang/Object;I)Ljava/lang/Object;" class_method="true"/>
<method name="getBoolean" type="(Ljava/lang/Object;I)Z" class_method="true"/>
<method name="getByte" type="(Ljava/lang/Object;I)B" class_method="true"/>
<method name="getChar" type="(Ljava/lang/Object;I)C" class_method="true"/>
<method name="getDouble" type="(Ljava/lang/Object;I)D" class_method="true"/>
<method name="getFloat" type="(Ljava/lang/Object;I)F" class_method="true"/>
<method name="getInt" type="(Ljava/lang/Object;I)I" class_method="true"/>
<method name="getLength" type="(Ljava/lang/Object;)I" class_method="true"/>
<method name="getLong" type="(Ljava/lang/Object;I)J" class_method="true"/>
<method name="getShort" type="(Ljava/lang/Object;I)S" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/Class;[I)Ljava/lang/Object;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/Class;I)Ljava/lang/Object;" class_method="true"/>
<method name="set" type="(Ljava/lang/Object;ILjava/lang/Object;)V" class_method="true"/>
<method name="setBoolean" type="(Ljava/lang/Object;IZ)V" class_method="true"/>
<method name="setByte" type="(Ljava/lang/Object;IB)V" class_method="true"/>
<method name="setChar" type="(Ljava/lang/Object;IC)V" class_method="true"/>
<method name="setDouble" type="(Ljava/lang/Object;ID)V" class_method="true"/>
<method name="setFloat" type="(Ljava/lang/Object;IF)V" class_method="true"/>
<method name="setInt" type="(Ljava/lang/Object;II)V" class_method="true"/>
<method name="setLong" type="(Ljava/lang/Object;IJ)V" class_method="true"/>
<method name="setShort" type="(Ljava/lang/Object;IS)V" class_method="true"/>
</class>
<class name="java/lang/reflect/Constructor">
<method name="getTypeParameters" type="()[Ljava/lang/reflect/TypeVariable;"/>
<method name="toGenericString" type="()Ljava/lang/String;"/>
<method name="getGenericParameterTypes" type="()[Ljava/lang/reflect/Type;"/>
<method name="getGenericExceptionTypes" type="()[Ljava/lang/reflect/Type;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getParameterAnnotations" type="()[[Ljava/lang/annotation/Annotation;"/>
<method name="isVarArgs" type="()Z"/>
<method name="isSynthetic" type="()Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="getExceptionTypes" type="()[Ljava/lang/Class;"/>
<method name="getModifiers" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getParameterTypes" type="()[Ljava/lang/Class;"/>
<method name="hashCode" type="()I"/>
<method name="newInstance" type="([Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/reflect/Field">
<method name="isSynthetic" type="()Z"/>
<method name="toGenericString" type="()Ljava/lang/String;"/>
<method name="isEnumConstant" type="()Z"/>
<method name="getGenericType" type="()Ljava/lang/reflect/Type;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="getBoolean" type="(Ljava/lang/Object;)Z"/>
<method name="getByte" type="(Ljava/lang/Object;)B"/>
<method name="getChar" type="(Ljava/lang/Object;)C"/>
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="getDouble" type="(Ljava/lang/Object;)D"/>
<method name="getFloat" type="(Ljava/lang/Object;)F"/>
<method name="getInt" type="(Ljava/lang/Object;)I"/>
<method name="getLong" type="(Ljava/lang/Object;)J"/>
<method name="getModifiers" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getShort" type="(Ljava/lang/Object;)S"/>
<method name="getType" type="()Ljava/lang/Class;"/>
<method name="hashCode" type="()I"/>
<method name="set" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="setBoolean" type="(Ljava/lang/Object;Z)V"/>
<method name="setByte" type="(Ljava/lang/Object;B)V"/>
<method name="setChar" type="(Ljava/lang/Object;C)V"/>
<method name="setDouble" type="(Ljava/lang/Object;D)V"/>
<method name="setFloat" type="(Ljava/lang/Object;F)V"/>
<method name="setInt" type="(Ljava/lang/Object;I)V"/>
<method name="setLong" type="(Ljava/lang/Object;J)V"/>
<method name="setShort" type="(Ljava/lang/Object;S)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/reflect/GenericSignatureFormatError">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/lang/reflect/InvocationTargetException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;Ljava/lang/String;)V"/>
<method name="getTargetException" type="()Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/lang/reflect/MalformedParameterizedTypeException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/lang/reflect/Method">
<method name="getTypeParameters" type="()[Ljava/lang/reflect/TypeVariable;"/>
<method name="toGenericString" type="()Ljava/lang/String;"/>
<method name="getGenericParameterTypes" type="()[Ljava/lang/reflect/Type;"/>
<method name="getGenericExceptionTypes" type="()[Ljava/lang/reflect/Type;"/>
<method name="getGenericReturnType" type="()Ljava/lang/reflect/Type;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getParameterAnnotations" type="()[[Ljava/lang/annotation/Annotation;"/>
<method name="isVarArgs" type="()Z"/>
<method name="isBridge" type="()Z"/>
<method name="isSynthetic" type="()Z"/>
<method name="getDefaultValue" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="getExceptionTypes" type="()[Ljava/lang/Class;"/>
<method name="getModifiers" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getParameterTypes" type="()[Ljava/lang/Class;"/>
<method name="getReturnType" type="()Ljava/lang/Class;"/>
<method name="hashCode" type="()I"/>
<method name="invoke" type="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/reflect/Modifier">
<method name="&lt;init&gt;" type="()V"/>
<method name="isAbstract" type="(I)Z" class_method="true"/>
<method name="isFinal" type="(I)Z" class_method="true"/>
<method name="isInterface" type="(I)Z" class_method="true"/>
<method name="isNative" type="(I)Z" class_method="true"/>
<method name="isPrivate" type="(I)Z" class_method="true"/>
<method name="isProtected" type="(I)Z" class_method="true"/>
<method name="isPublic" type="(I)Z" class_method="true"/>
<method name="isStatic" type="(I)Z" class_method="true"/>
<method name="isStrict" type="(I)Z" class_method="true"/>
<method name="isSynchronized" type="(I)Z" class_method="true"/>
<method name="isTransient" type="(I)Z" class_method="true"/>
<method name="isVolatile" type="(I)Z" class_method="true"/>
<method name="toString" type="(I)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/lang/reflect/Proxy">
<method name="&lt;init&gt;" type="(Ljava/lang/reflect/InvocationHandler;)V"/>
<method name="getProxyClass" type="(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;" class_method="true"/>
<method name="newProxyInstance" type="(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;" class_method="true"/>
<method name="isProxyClass" type="(Ljava/lang/Class;)Z" class_method="true"/>
<method name="getInvocationHandler" type="(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;" class_method="true"/>
</class>
<class name="java/lang/reflect/ReflectPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/lang/reflect/UndeclaredThrowableException">
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;Ljava/lang/String;)V"/>
<method name="getUndeclaredThrowable" type="()Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/lang/Runtime">
<method name="exec" type="([Ljava/lang/String;)Ljava/lang/Process;"/>
<method name="exec" type="([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;"/>
<method name="exec" type="([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;"/>
<method name="exec" type="(Ljava/lang/String;)Ljava/lang/Process;"/>
<method name="exec" type="(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;"/>
<method name="exec" type="(Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;"/>
<method name="exit" type="(I)V"/>
<method name="freeMemory" type="()J"/>
<method name="gc" type="()V"/>
<method name="getRuntime" type="()Ljava/lang/Runtime;" class_method="true"/>
<method name="load" type="(Ljava/lang/String;)V"/>
<method name="loadLibrary" type="(Ljava/lang/String;)V"/>
<method name="runFinalization" type="()V"/>
<method name="runFinalizersOnExit" type="(Z)V" class_method="true"/>
<method name="totalMemory" type="()J"/>
<method name="traceInstructions" type="(Z)V"/>
<method name="traceMethodCalls" type="(Z)V"/>
<method name="getLocalizedInputStream" type="(Ljava/io/InputStream;)Ljava/io/InputStream;"/>
<method name="getLocalizedOutputStream" type="(Ljava/io/OutputStream;)Ljava/io/OutputStream;"/>
<method name="addShutdownHook" type="(Ljava/lang/Thread;)V"/>
<method name="removeShutdownHook" type="(Ljava/lang/Thread;)Z"/>
<method name="halt" type="(I)V"/>
<method name="availableProcessors" type="()I"/>
<method name="maxMemory" type="()J"/>
</class>
<class name="java/lang/RuntimeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/RuntimePermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/lang/SecurityException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/SecurityManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="checkAccept" type="(Ljava/lang/String;I)V"/>
<method name="checkAccess" type="(Ljava/lang/Thread;)V"/>
<method name="checkAccess" type="(Ljava/lang/ThreadGroup;)V"/>
<method name="checkConnect" type="(Ljava/lang/String;I)V"/>
<method name="checkConnect" type="(Ljava/lang/String;ILjava/lang/Object;)V"/>
<method name="checkCreateClassLoader" type="()V"/>
<method name="checkDelete" type="(Ljava/lang/String;)V"/>
<method name="checkExec" type="(Ljava/lang/String;)V"/>
<method name="checkExit" type="(I)V"/>
<method name="checkLink" type="(Ljava/lang/String;)V"/>
<method name="checkListen" type="(I)V"/>
<method name="checkMemberAccess" type="(Ljava/lang/Class;I)V"/>
<method name="checkMulticast" type="(Ljava/net/InetAddress;)V"/>
<method name="checkMulticast" type="(Ljava/net/InetAddress;B)V"/>
<method name="checkPackageAccess" type="(Ljava/lang/String;)V"/>
<method name="checkPackageDefinition" type="(Ljava/lang/String;)V"/>
<method name="checkPropertiesAccess" type="()V"/>
<method name="checkPropertyAccess" type="(Ljava/lang/String;)V"/>
<method name="checkRead" type="(Ljava/io/FileDescriptor;)V"/>
<method name="checkRead" type="(Ljava/lang/String;)V"/>
<method name="checkRead" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="checkSecurityAccess" type="(Ljava/lang/String;)V"/>
<method name="checkSetFactory" type="()V"/>
<method name="checkTopLevelWindow" type="(Ljava/lang/Object;)Z"/>
<method name="checkSystemClipboardAccess" type="()V"/>
<method name="checkAwtEventQueueAccess" type="()V"/>
<method name="checkPrintJobAccess" type="()V"/>
<method name="checkWrite" type="(Ljava/io/FileDescriptor;)V"/>
<method name="checkWrite" type="(Ljava/lang/String;)V"/>
<method name="getInCheck" type="()Z"/>
<method name="getClassContext" type="()[Ljava/lang/Class;"/>
<method name="currentClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="classLoaderDepth" type="()I"/>
<method name="currentLoadedClass" type="()Ljava/lang/Class;"/>
<method name="classDepth" type="(Ljava/lang/String;)I"/>
<method name="inClass" type="(Ljava/lang/String;)Z"/>
<method name="inClassLoader" type="()Z"/>
<method name="getThreadGroup" type="()Ljava/lang/ThreadGroup;"/>
<method name="getSecurityContext" type="()Ljava/lang/Object;"/>
<method name="checkPermission" type="(Ljava/security/Permission;)V"/>
<method name="checkPermission" type="(Ljava/security/Permission;Ljava/lang/Object;)V"/>
</class>
<class name="java/lang/Short">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(S)V"/>
<method name="byteValue" type="()B"/>
<method name="compareTo" type="(Ljava/lang/Short;)I"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/Short;" class_method="true"/>
<method name="doubleValue" type="()D"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="floatValue" type="()F"/>
<method name="hashCode" type="()I"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="parseShort" type="(Ljava/lang/String;)S" class_method="true"/>
<method name="parseShort" type="(Ljava/lang/String;I)S" class_method="true"/>
<method name="shortValue" type="()S"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(S)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Short;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;I)Ljava/lang/Short;" class_method="true"/>
<method name="reverseBytes" type="(S)S" class_method="true"/>
<method name="valueOf" type="(S)Ljava/lang/Short;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/StackOverflowError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/StackTraceElement">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getClassName" type="()Ljava/lang/String;"/>
<method name="getFileName" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getMethodName" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="isNativeMethod" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/StrictMath">
<method name="abs" type="(D)D" class_method="true"/>
<method name="abs" type="(F)F" class_method="true"/>
<method name="abs" type="(I)I" class_method="true"/>
<method name="abs" type="(J)J" class_method="true"/>
<method name="acos" type="(D)D" class_method="true"/>
<method name="asin" type="(D)D" class_method="true"/>
<method name="atan" type="(D)D" class_method="true"/>
<method name="atan2" type="(DD)D" class_method="true"/>
<method name="cbrt" type="(D)D" class_method="true"/>
<method name="ceil" type="(D)D" class_method="true"/>
<method name="cosh" type="(D)D" class_method="true"/>
<method name="cos" type="(D)D" class_method="true"/>
<method name="exp" type="(D)D" class_method="true"/>
<method name="expm1" type="(D)D" class_method="true"/>
<method name="floor" type="(D)D" class_method="true"/>
<method name="hypot" type="(DD)D" class_method="true"/>
<method name="IEEEremainder" type="(DD)D" class_method="true"/>
<method name="log" type="(D)D" class_method="true"/>
<method name="log10" type="(D)D" class_method="true"/>
<method name="log1p" type="(D)D" class_method="true"/>
<method name="max" type="(DD)D" class_method="true"/>
<method name="max" type="(FF)F" class_method="true"/>
<method name="max" type="(II)I" class_method="true"/>
<method name="max" type="(JJ)J" class_method="true"/>
<method name="min" type="(DD)D" class_method="true"/>
<method name="min" type="(FF)F" class_method="true"/>
<method name="min" type="(II)I" class_method="true"/>
<method name="min" type="(JJ)J" class_method="true"/>
<method name="pow" type="(DD)D" class_method="true"/>
<method name="random" type="()D" class_method="true"/>
<method name="rint" type="(D)D" class_method="true"/>
<method name="round" type="(D)J" class_method="true"/>
<method name="round" type="(F)I" class_method="true"/>
<method name="signum" type="(D)D" class_method="true"/>
<method name="signum" type="(F)F" class_method="true"/>
<method name="sinh" type="(D)D" class_method="true"/>
<method name="sin" type="(D)D" class_method="true"/>
<method name="sqrt" type="(D)D" class_method="true"/>
<method name="tan" type="(D)D" class_method="true"/>
<method name="tanh" type="(D)D" class_method="true"/>
<method name="toDegrees" type="(D)D" class_method="true"/>
<method name="toRadians" type="(D)D" class_method="true"/>
<method name="ulp" type="(D)D" class_method="true"/>
<method name="ulp" type="(F)F" class_method="true"/>
<method name="copySign" type="(DD)D" class_method="true"/>
<method name="copySign" type="(FF)F" class_method="true"/>
<method name="getExponent" type="(F)I" class_method="true"/>
<method name="getExponent" type="(D)I" class_method="true"/>
<method name="nextAfter" type="(DD)D" class_method="true"/>
<method name="nextAfter" type="(FD)F" class_method="true"/>
<method name="nextUp" type="(D)D" class_method="true"/>
<method name="nextUp" type="(F)F" class_method="true"/>
<method name="scalb" type="(DI)D" class_method="true"/>
<method name="scalb" type="(FI)F" class_method="true"/>
</class>
<class name="java/lang/String">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([BI)V"/>
<method name="&lt;init&gt;" type="([BII)V"/>
<method name="&lt;init&gt;" type="([BIII)V"/>
<method name="&lt;init&gt;" type="([BIILjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="([BLjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="([BIILjava/nio/charset/Charset;)V"/>
<method name="&lt;init&gt;" type="([BLjava/nio/charset/Charset;)V"/>
<method name="&lt;init&gt;" type="([C)V"/>
<method name="&lt;init&gt;" type="([CII)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/StringBuffer;)V"/>
<method name="&lt;init&gt;" type="([III)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/StringBuilder;)V"/>
<method name="charAt" type="(I)C"/>
<method name="compareTo" type="(Ljava/lang/String;)I"/>
<method name="compareToIgnoreCase" type="(Ljava/lang/String;)I"/>
<method name="concat" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="copyValueOf" type="([C)Ljava/lang/String;" class_method="true"/>
<method name="copyValueOf" type="([CII)Ljava/lang/String;" class_method="true"/>
<method name="endsWith" type="(Ljava/lang/String;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="equalsIgnoreCase" type="(Ljava/lang/String;)Z"/>
<method name="getBytes" type="(II[BI)V"/>
<method name="getBytes" type="()[B"/>
<method name="getBytes" type="(Ljava/lang/String;)[B"/>
<method name="getBytes" type="(Ljava/nio/charset/Charset;)[B"/>
<method name="getChars" type="(II[CI)V"/>
<method name="hashCode" type="()I"/>
<method name="indexOf" type="(I)I"/>
<method name="indexOf" type="(II)I"/>
<method name="indexOf" type="(Ljava/lang/String;)I"/>
<method name="indexOf" type="(Ljava/lang/String;I)I"/>
<method name="intern" type="()Ljava/lang/String;"/>
<method name="isEmpty" type="()Z"/>
<method name="lastIndexOf" type="(I)I"/>
<method name="lastIndexOf" type="(II)I"/>
<method name="lastIndexOf" type="(Ljava/lang/String;)I"/>
<method name="lastIndexOf" type="(Ljava/lang/String;I)I"/>
<method name="length" type="()I"/>
<method name="regionMatches" type="(ILjava/lang/String;II)Z"/>
<method name="regionMatches" type="(ZILjava/lang/String;II)Z"/>
<method name="replace" type="(CC)Ljava/lang/String;"/>
<method name="replace" type="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;"/>
<method name="startsWith" type="(Ljava/lang/String;)Z"/>
<method name="startsWith" type="(Ljava/lang/String;I)Z"/>
<method name="substring" type="(I)Ljava/lang/String;"/>
<method name="substring" type="(II)Ljava/lang/String;"/>
<method name="toCharArray" type="()[C"/>
<method name="toLowerCase" type="()Ljava/lang/String;"/>
<method name="toLowerCase" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toUpperCase" type="()Ljava/lang/String;"/>
<method name="toUpperCase" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="trim" type="()Ljava/lang/String;"/>
<method name="valueOf" type="([C)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="([CII)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(C)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(D)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(F)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(I)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(J)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="valueOf" type="(Z)Ljava/lang/String;" class_method="true"/>
<method name="contentEquals" type="(Ljava/lang/StringBuffer;)Z"/>
<method name="contentEquals" type="(Ljava/lang/CharSequence;)Z"/>
<method name="matches" type="(Ljava/lang/String;)Z"/>
<method name="replaceAll" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="replaceFirst" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="split" type="(Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="split" type="(Ljava/lang/String;I)[Ljava/lang/String;"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="codePointAt" type="(I)I"/>
<method name="codePointBefore" type="(I)I"/>
<method name="codePointCount" type="(II)I"/>
<method name="contains" type="(Ljava/lang/CharSequence;)Z"/>
<method name="offsetByCodePoints" type="(II)I"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="format" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/lang/StringBuffer">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;)V"/>
<method name="append" type="(Z)Ljava/lang/StringBuffer;"/>
<method name="append" type="(C)Ljava/lang/StringBuffer;"/>
<method name="append" type="(D)Ljava/lang/StringBuffer;"/>
<method name="append" type="(F)Ljava/lang/StringBuffer;"/>
<method name="append" type="(I)Ljava/lang/StringBuffer;"/>
<method name="append" type="(J)Ljava/lang/StringBuffer;"/>
<method name="append" type="(Ljava/lang/Object;)Ljava/lang/StringBuffer;"/>
<method name="append" type="(Ljava/lang/String;)Ljava/lang/StringBuffer;"/>
<method name="append" type="(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"/>
<method name="append" type="([C)Ljava/lang/StringBuffer;"/>
<method name="append" type="([CII)Ljava/lang/StringBuffer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;"/>
<method name="appendCodePoint" type="(I)Ljava/lang/StringBuffer;"/>
<method name="charAt" type="(I)C"/>
<method name="codePointAt" type="(I)I"/>
<method name="codePointBefore" type="(I)I"/>
<method name="codePointCount" type="(II)I"/>
<method name="delete" type="(II)Ljava/lang/StringBuffer;"/>
<method name="deleteCharAt" type="(I)Ljava/lang/StringBuffer;"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="getChars" type="(II[CI)V"/>
<method name="indexOf" type="(Ljava/lang/String;I)I"/>
<method name="insert" type="(IC)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(IZ)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(II)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(IJ)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(ID)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(IF)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(ILjava/lang/Object;)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(ILjava/lang/String;)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(I[C)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(I[CII)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(ILjava/lang/CharSequence;)Ljava/lang/StringBuffer;"/>
<method name="insert" type="(ILjava/lang/CharSequence;II)Ljava/lang/StringBuffer;"/>
<method name="lastIndexOf" type="(Ljava/lang/String;I)I"/>
<method name="offsetByCodePoints" type="(II)I"/>
<method name="replace" type="(IILjava/lang/String;)Ljava/lang/StringBuffer;"/>
<method name="reverse" type="()Ljava/lang/StringBuffer;"/>
<method name="setCharAt" type="(IC)V"/>
<method name="setLength" type="(I)V"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="substring" type="(I)Ljava/lang/String;"/>
<method name="substring" type="(II)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="trimToSize" type="()V"/>
<method name="lastIndexOf" type="(Ljava/lang/String;)I"/>
<method name="indexOf" type="(Ljava/lang/String;)I"/>
<method name="length" type="()I"/>
<method name="capacity" type="()I"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/lang/StringBuilder">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/CharSequence;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="append" type="(Z)Ljava/lang/StringBuilder;"/>
<method name="append" type="(C)Ljava/lang/StringBuilder;"/>
<method name="append" type="(I)Ljava/lang/StringBuilder;"/>
<method name="append" type="(J)Ljava/lang/StringBuilder;"/>
<method name="append" type="(F)Ljava/lang/StringBuilder;"/>
<method name="append" type="(D)Ljava/lang/StringBuilder;"/>
<method name="append" type="(Ljava/lang/Object;)Ljava/lang/StringBuilder;"/>
<method name="append" type="(Ljava/lang/String;)Ljava/lang/StringBuilder;"/>
<method name="append" type="(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;"/>
<method name="append" type="([C)Ljava/lang/StringBuilder;"/>
<method name="append" type="([CII)Ljava/lang/StringBuilder;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;"/>
<method name="appendCodePoint" type="(I)Ljava/lang/StringBuilder;"/>
<method name="delete" type="(II)Ljava/lang/StringBuilder;"/>
<method name="deleteCharAt" type="(I)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(IZ)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(IC)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(II)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(IJ)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(IF)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(ID)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(ILjava/lang/Object;)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(ILjava/lang/String;)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(I[C)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(I[CII)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;"/>
<method name="insert" type="(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;"/>
<method name="replace" type="(IILjava/lang/String;)Ljava/lang/StringBuilder;"/>
<method name="reverse" type="()Ljava/lang/StringBuilder;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="offsetByCodePoints" type="(II)I"/>
<method name="codePointCount" type="(II)I"/>
<method name="codePointBefore" type="(I)I"/>
<method name="codePointAt" type="(I)I"/>
<method name="trimToSize" type="()V"/>
<method name="lastIndexOf" type="(Ljava/lang/String;I)I"/>
<method name="lastIndexOf" type="(Ljava/lang/String;)I"/>
<method name="indexOf" type="(Ljava/lang/String;I)I"/>
<method name="indexOf" type="(Ljava/lang/String;)I"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="substring" type="(II)Ljava/lang/String;"/>
<method name="substring" type="(I)Ljava/lang/String;"/>
<method name="setLength" type="(I)V"/>
<method name="setCharAt" type="(IC)V"/>
<method name="length" type="()I"/>
<method name="getChars" type="(II[CI)V"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="charAt" type="(I)C"/>
<method name="capacity" type="()I"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/lang/StringIndexOutOfBoundsException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/System">
<method name="setIn" type="(Ljava/io/InputStream;)V" class_method="true"/>
<method name="setOut" type="(Ljava/io/PrintStream;)V" class_method="true"/>
<method name="setErr" type="(Ljava/io/PrintStream;)V" class_method="true"/>
<method name="arraycopy" type="(Ljava/lang/Object;ILjava/lang/Object;II)V" class_method="true"/>
<method name="currentTimeMillis" type="()J" class_method="true"/>
<method name="nanoTime" type="()J" class_method="true"/>
<method name="exit" type="(I)V" class_method="true"/>
<method name="gc" type="()V" class_method="true"/>
<method name="getenv" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getenv" type="()Ljava/util/Map;" class_method="true"/>
<method name="inheritedChannel" type="()Ljava/nio/channels/Channel;" class_method="true"/>
<method name="getProperties" type="()Ljava/util/Properties;" class_method="true"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getProperty" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="clearProperty" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="console" type="()Ljava/io/Console;" class_method="true"/>
<method name="getSecurityManager" type="()Ljava/lang/SecurityManager;" class_method="true"/>
<method name="identityHashCode" type="(Ljava/lang/Object;)I" class_method="true"/>
<method name="load" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="loadLibrary" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="runFinalization" type="()V" class_method="true"/>
<method name="runFinalizersOnExit" type="(Z)V" class_method="true"/>
<method name="setProperties" type="(Ljava/util/Properties;)V" class_method="true"/>
<method name="setSecurityManager" type="(Ljava/lang/SecurityManager;)V" class_method="true"/>
<method name="mapLibraryName" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/lang/Thread$State">
<method name="values" type="()[Ljava/lang/Thread$State;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/lang/Thread$State;" class_method="true"/>
</class>
<class name="java/lang/Thread">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Runnable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Runnable;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ThreadGroup;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V"/>
<method name="activeCount" type="()I" class_method="true"/>
<method name="checkAccess" type="()V"/>
<method name="countStackFrames" type="()I"/>
<method name="currentThread" type="()Ljava/lang/Thread;" class_method="true"/>
<method name="destroy" type="()V"/>
<method name="dumpStack" type="()V" class_method="true"/>
<method name="enumerate" type="([Ljava/lang/Thread;)I" class_method="true"/>
<method name="getAllStackTraces" type="()Ljava/util/Map;" class_method="true"/>
<method name="getContextClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getDefaultUncaughtExceptionHandler" type="()Ljava/lang/Thread$UncaughtExceptionHandler;" class_method="true"/>
<method name="getId" type="()J"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getPriority" type="()I"/>
<method name="getStackTrace" type="()[Ljava/lang/StackTraceElement;"/>
<method name="getState" type="()Ljava/lang/Thread$State;"/>
<method name="getThreadGroup" type="()Ljava/lang/ThreadGroup;"/>
<method name="getUncaughtExceptionHandler" type="()Ljava/lang/Thread$UncaughtExceptionHandler;"/>
<method name="interrupt" type="()V"/>
<method name="interrupted" type="()Z" class_method="true"/>
<method name="isAlive" type="()Z"/>
<method name="isDaemon" type="()Z"/>
<method name="isInterrupted" type="()Z"/>
<method name="join" type="()V"/>
<method name="join" type="(J)V"/>
<method name="join" type="(JI)V"/>
<method name="resume" type="()V"/>
<method name="run" type="()V"/>
<method name="setContextClassLoader" type="(Ljava/lang/ClassLoader;)V"/>
<method name="setDaemon" type="(Z)V"/>
<method name="setDefaultUncaughtExceptionHandler" type="(Ljava/lang/Thread$UncaughtExceptionHandler;)V" class_method="true"/>
<method name="setName" type="(Ljava/lang/String;)V"/>
<method name="setPriority" type="(I)V"/>
<method name="setUncaughtExceptionHandler" type="(Ljava/lang/Thread$UncaughtExceptionHandler;)V"/>
<method name="sleep" type="(J)V" class_method="true"/>
<method name="sleep" type="(JI)V" class_method="true"/>
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="stop" type="(Ljava/lang/Throwable;)V"/>
<method name="suspend" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="yield" type="()V" class_method="true"/>
<method name="holdsLock" type="(Ljava/lang/Object;)Z" class_method="true"/>
</class>
<class name="java/lang/ThreadDeath">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/lang/ThreadGroup">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ThreadGroup;Ljava/lang/String;)V"/>
<method name="activeCount" type="()I"/>
<method name="activeGroupCount" type="()I"/>
<method name="allowThreadSuspension" type="(Z)Z"/>
<method name="checkAccess" type="()V"/>
<method name="destroy" type="()V"/>
<method name="enumerate" type="([Ljava/lang/Thread;)I"/>
<method name="enumerate" type="([Ljava/lang/Thread;Z)I"/>
<method name="enumerate" type="([Ljava/lang/ThreadGroup;)I"/>
<method name="enumerate" type="([Ljava/lang/ThreadGroup;Z)I"/>
<method name="getMaxPriority" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getParent" type="()Ljava/lang/ThreadGroup;"/>
<method name="interrupt" type="()V"/>
<method name="isDaemon" type="()Z"/>
<method name="isDestroyed" type="()Z"/>
<method name="list" type="()V"/>
<method name="parentOf" type="(Ljava/lang/ThreadGroup;)Z"/>
<method name="resume" type="()V"/>
<method name="setDaemon" type="(Z)V"/>
<method name="setMaxPriority" type="(I)V"/>
<method name="stop" type="()V"/>
<method name="suspend" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="uncaughtException" type="(Ljava/lang/Thread;Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/ThreadLocal">
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="initialValue" type="()Ljava/lang/Object;"/>
<method name="set" type="(Ljava/lang/Object;)V"/>
<method name="remove" type="()V"/>
</class>
<class name="java/lang/Throwable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="fillInStackTrace" type="()Ljava/lang/Throwable;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getLocalizedMessage" type="()Ljava/lang/String;"/>
<method name="getStackTrace" type="()[Ljava/lang/StackTraceElement;"/>
<method name="setStackTrace" type="([Ljava/lang/StackTraceElement;)V"/>
<method name="printStackTrace" type="()V"/>
<method name="printStackTrace" type="(Ljava/io/PrintStream;)V"/>
<method name="printStackTrace" type="(Ljava/io/PrintWriter;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="initCause" type="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
</class>
<class name="java/lang/TypeNotPresentException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="typeName" type="()Ljava/lang/String;"/>
</class>
<class name="java/lang/UnknownError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/UnsatisfiedLinkError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/UnsupportedClassVersionError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/UnsupportedOperationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/lang/VerifyError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/VirtualMachineError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/lang/Void">
</class>
<class name="java/math/BigDecimal">
<method name="&lt;init&gt;" type="([CII)V"/>
<method name="&lt;init&gt;" type="([CIILjava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="([C)V"/>
<method name="&lt;init&gt;" type="([CLjava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(D)V"/>
<method name="&lt;init&gt;" type="(DLjava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;)V"/>
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;ILjava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/math/MathContext;)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="&lt;init&gt;" type="(JLjava/math/MathContext;)V"/>
<method name="valueOf" type="(JI)Ljava/math/BigDecimal;" class_method="true"/>
<method name="valueOf" type="(J)Ljava/math/BigDecimal;" class_method="true"/>
<method name="valueOf" type="(D)Ljava/math/BigDecimal;" class_method="true"/>
<method name="add" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="add" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="subtract" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="subtract" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="multiply" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="multiply" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="divide" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="divideToIntegralValue" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="divideToIntegralValue" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="remainder" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="remainder" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="divideAndRemainder" type="(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;"/>
<method name="divideAndRemainder" type="(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;"/>
<method name="pow" type="(I)Ljava/math/BigDecimal;"/>
<method name="pow" type="(ILjava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="abs" type="()Ljava/math/BigDecimal;"/>
<method name="abs" type="(Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="negate" type="()Ljava/math/BigDecimal;"/>
<method name="negate" type="(Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="plus" type="()Ljava/math/BigDecimal;"/>
<method name="plus" type="(Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="signum" type="()I"/>
<method name="scale" type="()I"/>
<method name="precision" type="()I"/>
<method name="unscaledValue" type="()Ljava/math/BigInteger;"/>
<method name="round" type="(Ljava/math/MathContext;)Ljava/math/BigDecimal;"/>
<method name="setScale" type="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;"/>
<method name="setScale" type="(II)Ljava/math/BigDecimal;"/>
<method name="setScale" type="(I)Ljava/math/BigDecimal;"/>
<method name="movePointLeft" type="(I)Ljava/math/BigDecimal;"/>
<method name="movePointRight" type="(I)Ljava/math/BigDecimal;"/>
<method name="scaleByPowerOfTen" type="(I)Ljava/math/BigDecimal;"/>
<method name="stripTrailingZeros" type="()Ljava/math/BigDecimal;"/>
<method name="compareTo" type="(Ljava/math/BigDecimal;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="min" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="max" type="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toEngineeringString" type="()Ljava/lang/String;"/>
<method name="toPlainString" type="()Ljava/lang/String;"/>
<method name="toBigInteger" type="()Ljava/math/BigInteger;"/>
<method name="toBigIntegerExact" type="()Ljava/math/BigInteger;"/>
<method name="longValue" type="()J"/>
<method name="longValueExact" type="()J"/>
<method name="intValue" type="()I"/>
<method name="intValueExact" type="()I"/>
<method name="shortValueExact" type="()S"/>
<method name="byteValueExact" type="()B"/>
<method name="floatValue" type="()F"/>
<method name="doubleValue" type="()D"/>
<method name="ulp" type="()Ljava/math/BigDecimal;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/math/BigInteger">
<method name="&lt;init&gt;" type="(ILjava/util/Random;)V"/>
<method name="&lt;init&gt;" type="(IILjava/util/Random;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(I[B)V"/>
<method name="&lt;init&gt;" type="([B)V"/>
<method name="valueOf" type="(J)Ljava/math/BigInteger;" class_method="true"/>
<method name="toByteArray" type="()[B"/>
<method name="abs" type="()Ljava/math/BigInteger;"/>
<method name="negate" type="()Ljava/math/BigInteger;"/>
<method name="add" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="subtract" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="signum" type="()I"/>
<method name="shiftRight" type="(I)Ljava/math/BigInteger;"/>
<method name="shiftLeft" type="(I)Ljava/math/BigInteger;"/>
<method name="bitLength" type="()I"/>
<method name="testBit" type="(I)Z"/>
<method name="setBit" type="(I)Ljava/math/BigInteger;"/>
<method name="clearBit" type="(I)Ljava/math/BigInteger;"/>
<method name="flipBit" type="(I)Ljava/math/BigInteger;"/>
<method name="getLowestSetBit" type="()I"/>
<method name="bitCount" type="()I"/>
<method name="not" type="()Ljava/math/BigInteger;"/>
<method name="and" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="or" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="xor" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="andNot" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="floatValue" type="()F"/>
<method name="doubleValue" type="()D"/>
<method name="compareTo" type="(Ljava/math/BigInteger;)I"/>
<method name="min" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="max" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(I)Ljava/lang/String;"/>
<method name="gcd" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="multiply" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="pow" type="(I)Ljava/math/BigInteger;"/>
<method name="divideAndRemainder" type="(Ljava/math/BigInteger;)[Ljava/math/BigInteger;"/>
<method name="divide" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="remainder" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="modInverse" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="modPow" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="mod" type="(Ljava/math/BigInteger;)Ljava/math/BigInteger;"/>
<method name="isProbablePrime" type="(I)Z"/>
<method name="nextProbablePrime" type="()Ljava/math/BigInteger;"/>
<method name="probablePrime" type="(ILjava/util/Random;)Ljava/math/BigInteger;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/math/MathContext">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/math/RoundingMode;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getPrecision" type="()I"/>
<method name="getRoundingMode" type="()Ljava/math/RoundingMode;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/math/RoundingMode">
<method name="values" type="()[Ljava/math/RoundingMode;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/math/RoundingMode;" class_method="true"/>
<method name="valueOf" type="(I)Ljava/math/RoundingMode;" class_method="true"/>
</class>
<class name="java/net/Authenticator$RequestorType">
<method name="values" type="()[Ljava/net/Authenticator$RequestorType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/net/Authenticator$RequestorType;" class_method="true"/>
</class>
<class name="java/net/Authenticator">
<method name="&lt;init&gt;" type="()V"/>
<method name="getPasswordAuthentication" type="()Ljava/net/PasswordAuthentication;"/>
<method name="getRequestingPort" type="()I"/>
<method name="getRequestingSite" type="()Ljava/net/InetAddress;"/>
<method name="getRequestingPrompt" type="()Ljava/lang/String;"/>
<method name="getRequestingProtocol" type="()Ljava/lang/String;"/>
<method name="getRequestingScheme" type="()Ljava/lang/String;"/>
<method name="requestPasswordAuthentication" type="(Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/PasswordAuthentication;" class_method="true"/>
<method name="setDefault" type="(Ljava/net/Authenticator;)V" class_method="true"/>
<method name="requestPasswordAuthentication" type="(Ljava/lang/String;Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/PasswordAuthentication;" class_method="true"/>
<method name="getRequestingHost" type="()Ljava/lang/String;"/>
<method name="requestPasswordAuthentication" type="(Ljava/lang/String;Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;Ljava/net/Authenticator$RequestorType;)Ljava/net/PasswordAuthentication;" class_method="true"/>
<method name="getRequestingURL" type="()Ljava/net/URL;"/>
<method name="getRequestorType" type="()Ljava/net/Authenticator$RequestorType;"/>
</class>
<class name="java/net/BindException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/CacheRequest">
<method name="&lt;init&gt;" type="()V"/>
<method name="abort" type="()V"/>
<method name="getBody" type="()Ljava/io/OutputStream;"/>
</class>
<class name="java/net/CacheResponse">
<method name="&lt;init&gt;" type="()V"/>
<method name="getBody" type="()Ljava/io/InputStream;"/>
<method name="getHeaders" type="()Ljava/util/Map;"/>
</class>
<class name="java/net/ConnectException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/ContentHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContent" type="(Ljava/net/URLConnection;)Ljava/lang/Object;"/>
<method name="getContent" type="(Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object;"/>
</class>
<class name="java/net/CookieHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljava/net/CookieHandler;" class_method="true"/>
<method name="setDefault" type="(Ljava/net/CookieHandler;)V" class_method="true"/>
<method name="get" type="(Ljava/net/URI;Ljava/util/Map;)Ljava/util/Map;"/>
<method name="put" type="(Ljava/net/URI;Ljava/util/Map;)V"/>
</class>
<class name="java/net/CookieManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/CookieStore;Ljava/net/CookiePolicy;)V"/>
<method name="get" type="(Ljava/net/URI;Ljava/util/Map;)Ljava/util/Map;"/>
<method name="put" type="(Ljava/net/URI;Ljava/util/Map;)V"/>
<method name="setCookiePolicy" type="(Ljava/net/CookiePolicy;)V"/>
<method name="getCookieStore" type="()Ljava/net/CookieStore;"/>
</class>
<class name="java/net/DatagramPacket">
<method name="&lt;init&gt;" type="([BI)V"/>
<method name="&lt;init&gt;" type="([BII)V"/>
<method name="&lt;init&gt;" type="([BIILjava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="([BILjava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="([BILjava/net/SocketAddress;)V"/>
<method name="&lt;init&gt;" type="([BIILjava/net/SocketAddress;)V"/>
<method name="getAddress" type="()Ljava/net/InetAddress;"/>
<method name="getData" type="()[B"/>
<method name="getLength" type="()I"/>
<method name="getOffset" type="()I"/>
<method name="getPort" type="()I"/>
<method name="setAddress" type="(Ljava/net/InetAddress;)V"/>
<method name="setData" type="([BII)V"/>
<method name="setData" type="([B)V"/>
<method name="setLength" type="(I)V"/>
<method name="setPort" type="(I)V"/>
<method name="getSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="setSocketAddress" type="(Ljava/net/SocketAddress;)V"/>
</class>
<class name="java/net/DatagramSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/net/InetAddress;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/DatagramSocketImpl;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/SocketAddress;)V"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/net/InetAddress;I)V"/>
<method name="disconnect" type="()V"/>
<method name="getInetAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getPort" type="()I"/>
<method name="getReceiveBufferSize" type="()I"/>
<method name="getSendBufferSize" type="()I"/>
<method name="getSoTimeout" type="()I"/>
<method name="receive" type="(Ljava/net/DatagramPacket;)V"/>
<method name="send" type="(Ljava/net/DatagramPacket;)V"/>
<method name="setSendBufferSize" type="(I)V"/>
<method name="setReceiveBufferSize" type="(I)V"/>
<method name="setSoTimeout" type="(I)V"/>
<method name="setDatagramSocketImplFactory" type="(Ljava/net/DatagramSocketImplFactory;)V" class_method="true"/>
<method name="bind" type="(Ljava/net/SocketAddress;)V"/>
<method name="connect" type="(Ljava/net/SocketAddress;)V"/>
<method name="isBound" type="()Z"/>
<method name="isConnected" type="()Z"/>
<method name="getRemoteSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="getLocalSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="setReuseAddress" type="(Z)V"/>
<method name="getReuseAddress" type="()Z"/>
<method name="setBroadcast" type="(Z)V"/>
<method name="getBroadcast" type="()Z"/>
<method name="setTrafficClass" type="(I)V"/>
<method name="getTrafficClass" type="()I"/>
<method name="isClosed" type="()Z"/>
<method name="getChannel" type="()Ljava/nio/channels/DatagramChannel;"/>
</class>
<class name="java/net/DatagramSocketImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="bind" type="(ILjava/net/InetAddress;)V"/>
<method name="close" type="()V"/>
<method name="create" type="()V"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
<method name="getLocalPort" type="()I"/>
<method name="getTTL" type="()B"/>
<method name="getTimeToLive" type="()I"/>
<method name="join" type="(Ljava/net/InetAddress;)V"/>
<method name="joinGroup" type="(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"/>
<method name="leave" type="(Ljava/net/InetAddress;)V"/>
<method name="leaveGroup" type="(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"/>
<method name="peek" type="(Ljava/net/InetAddress;)I"/>
<method name="receive" type="(Ljava/net/DatagramPacket;)V"/>
<method name="send" type="(Ljava/net/DatagramPacket;)V"/>
<method name="setTimeToLive" type="(I)V"/>
<method name="setTTL" type="(B)V"/>
<method name="connect" type="(Ljava/net/InetAddress;I)V"/>
<method name="disconnect" type="()V"/>
<method name="peekData" type="(Ljava/net/DatagramPacket;)I"/>
</class>
<class name="java/net/HttpCookie">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="domainMatches" type="(Ljava/lang/String;Ljava/lang/String;)Z" class_method="true"/>
<method name="parse" type="(Ljava/lang/String;)Ljava/util/List;" class_method="true"/>
<method name="getComment" type="()Ljava/lang/String;"/>
<method name="getCommentURL" type="()Ljava/lang/String;"/>
<method name="getDiscard" type="()Z"/>
<method name="getDomain" type="()Ljava/lang/String;"/>
<method name="getMaxAge" type="()J"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getPortlist" type="()Ljava/lang/String;"/>
<method name="getSecure" type="()Z"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getVersion" type="()I"/>
<method name="hasExpired" type="()Z"/>
<method name="setComment" type="(Ljava/lang/String;)V"/>
<method name="setCommentURL" type="(Ljava/lang/String;)V"/>
<method name="setDiscard" type="(Z)V"/>
<method name="setDomain" type="(Ljava/lang/String;)V"/>
<method name="setMaxAge" type="(J)V"/>
<method name="setPath" type="(Ljava/lang/String;)V"/>
<method name="setPortlist" type="(Ljava/lang/String;)V"/>
<method name="setSecure" type="(Z)V"/>
<method name="setValue" type="(Ljava/lang/String;)V"/>
<method name="setVersion" type="(I)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/net/HttpRetryException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="getLocation" type="()Ljava/lang/String;"/>
<method name="getReason" type="()Ljava/lang/String;"/>
<method name="responseCode" type="()I"/>
</class>
<class name="java/net/HttpURLConnection">
<method name="&lt;init&gt;" type="(Ljava/net/URL;)V"/>
<method name="disconnect" type="()V"/>
<method name="getErrorStream" type="()Ljava/io/InputStream;"/>
<method name="getFollowRedirects" type="()Z" class_method="true"/>
<method name="getPermission" type="()Ljava/security/Permission;"/>
<method name="getRequestMethod" type="()Ljava/lang/String;"/>
<method name="getResponseCode" type="()I"/>
<method name="getResponseMessage" type="()Ljava/lang/String;"/>
<method name="setFollowRedirects" type="(Z)V" class_method="true"/>
<method name="setRequestMethod" type="(Ljava/lang/String;)V"/>
<method name="usingProxy" type="()Z"/>
<method name="getContentEncoding" type="()Ljava/lang/String;"/>
<method name="getInstanceFollowRedirects" type="()Z"/>
<method name="setInstanceFollowRedirects" type="(Z)V"/>
<method name="getHeaderFieldDate" type="(Ljava/lang/String;J)J"/>
<method name="setFixedLengthStreamingMode" type="(I)V"/>
<method name="setChunkedStreamingMode" type="(I)V"/>
</class>
<class name="java/net/IDN">
<method name="toASCII" type="(Ljava/lang/String;I)Ljava/lang/String;" class_method="true"/>
<method name="toASCII" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="toUnicode" type="(Ljava/lang/String;I)Ljava/lang/String;" class_method="true"/>
<method name="toUnicode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/net/Inet4Address">
<method name="isMulticastAddress" type="()Z"/>
<method name="isAnyLocalAddress" type="()Z"/>
<method name="isLoopbackAddress" type="()Z"/>
<method name="isLinkLocalAddress" type="()Z"/>
<method name="isSiteLocalAddress" type="()Z"/>
<method name="isMCGlobal" type="()Z"/>
<method name="isMCNodeLocal" type="()Z"/>
<method name="isMCLinkLocal" type="()Z"/>
<method name="isMCSiteLocal" type="()Z"/>
<method name="isMCOrgLocal" type="()Z"/>
</class>
<class name="java/net/Inet6Address">
<method name="getByAddress" type="(Ljava/lang/String;[BI)Ljava/net/Inet6Address;" class_method="true"/>
<method name="getByAddress" type="(Ljava/lang/String;[BLjava/net/NetworkInterface;)Ljava/net/Inet6Address;" class_method="true"/>
<method name="isMulticastAddress" type="()Z"/>
<method name="isAnyLocalAddress" type="()Z"/>
<method name="isLoopbackAddress" type="()Z"/>
<method name="isLinkLocalAddress" type="()Z"/>
<method name="isSiteLocalAddress" type="()Z"/>
<method name="isMCGlobal" type="()Z"/>
<method name="isMCNodeLocal" type="()Z"/>
<method name="isMCLinkLocal" type="()Z"/>
<method name="isMCSiteLocal" type="()Z"/>
<method name="isMCOrgLocal" type="()Z"/>
<method name="getScopeId" type="()I"/>
<method name="getScopedInterface" type="()Ljava/net/NetworkInterface;"/>
<method name="isIPv4CompatibleAddress" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/net/InetAddress">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getAddress" type="()[B"/>
<method name="getAllByName" type="(Ljava/lang/String;)[Ljava/net/InetAddress;" class_method="true"/>
<method name="getByName" type="(Ljava/lang/String;)Ljava/net/InetAddress;" class_method="true"/>
<method name="getHostAddress" type="()Ljava/lang/String;"/>
<method name="getHostName" type="()Ljava/lang/String;"/>
<method name="getCanonicalHostName" type="()Ljava/lang/String;"/>
<method name="getLocalHost" type="()Ljava/net/InetAddress;" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="isMulticastAddress" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isLoopbackAddress" type="()Z"/>
<method name="isLinkLocalAddress" type="()Z"/>
<method name="isSiteLocalAddress" type="()Z"/>
<method name="isMCGlobal" type="()Z"/>
<method name="isMCNodeLocal" type="()Z"/>
<method name="isMCLinkLocal" type="()Z"/>
<method name="isMCSiteLocal" type="()Z"/>
<method name="isMCOrgLocal" type="()Z"/>
<method name="isAnyLocalAddress" type="()Z"/>
<method name="isReachable" type="(I)Z"/>
<method name="isReachable" type="(Ljava/net/NetworkInterface;II)Z"/>
<method name="getByAddress" type="([B)Ljava/net/InetAddress;" class_method="true"/>
<method name="getByAddress" type="(Ljava/lang/String;[B)Ljava/net/InetAddress;" class_method="true"/>
</class>
<class name="java/net/InetSocketAddress">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="createUnresolved" type="(Ljava/lang/String;I)Ljava/net/InetSocketAddress;" class_method="true"/>
<method name="getPort" type="()I"/>
<method name="getAddress" type="()Ljava/net/InetAddress;"/>
<method name="getHostName" type="()Ljava/lang/String;"/>
<method name="isUnresolved" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/net/InterfaceAddress">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getAddress" type="()Ljava/net/InetAddress;"/>
<method name="getBroadcast" type="()Ljava/net/InetAddress;"/>
<method name="getNetworkPrefixLength" type="()S"/>
</class>
<class name="java/net/JarURLConnection">
<method name="&lt;init&gt;" type="(Ljava/net/URL;)V"/>
<method name="getAttributes" type="()Ljava/util/jar/Attributes;"/>
<method name="getCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getEntryName" type="()Ljava/lang/String;"/>
<method name="getJarEntry" type="()Ljava/util/jar/JarEntry;"/>
<method name="getManifest" type="()Ljava/util/jar/Manifest;"/>
<method name="getJarFile" type="()Ljava/util/jar/JarFile;"/>
<method name="getJarFileURL" type="()Ljava/net/URL;"/>
<method name="getMainAttributes" type="()Ljava/util/jar/Attributes;"/>
</class>
<class name="java/net/MalformedURLException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/MulticastSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/SocketAddress;)V"/>
<method name="getInterface" type="()Ljava/net/InetAddress;"/>
<method name="getNetworkInterface" type="()Ljava/net/NetworkInterface;"/>
<method name="getTimeToLive" type="()I"/>
<method name="getTTL" type="()B"/>
<method name="joinGroup" type="(Ljava/net/InetAddress;)V"/>
<method name="joinGroup" type="(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"/>
<method name="leaveGroup" type="(Ljava/net/InetAddress;)V"/>
<method name="leaveGroup" type="(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"/>
<method name="send" type="(Ljava/net/DatagramPacket;B)V"/>
<method name="setInterface" type="(Ljava/net/InetAddress;)V"/>
<method name="setNetworkInterface" type="(Ljava/net/NetworkInterface;)V"/>
<method name="setTimeToLive" type="(I)V"/>
<method name="setTTL" type="(B)V"/>
<method name="getLoopbackMode" type="()Z"/>
<method name="setLoopbackMode" type="(Z)V"/>
</class>
<class name="java/net/NetPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/net/NetworkInterface">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getInetAddresses" type="()Ljava/util/Enumeration;"/>
<method name="getDisplayName" type="()Ljava/lang/String;"/>
<method name="getByName" type="(Ljava/lang/String;)Ljava/net/NetworkInterface;" class_method="true"/>
<method name="getByInetAddress" type="(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;" class_method="true"/>
<method name="getNetworkInterfaces" type="()Ljava/util/Enumeration;" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getInterfaceAddresses" type="()Ljava/util/List;"/>
<method name="getSubInterfaces" type="()Ljava/util/Enumeration;"/>
<method name="getParent" type="()Ljava/net/NetworkInterface;"/>
<method name="isUp" type="()Z"/>
<method name="isLoopback" type="()Z"/>
<method name="isPointToPoint" type="()Z"/>
<method name="supportsMulticast" type="()Z"/>
<method name="getHardwareAddress" type="()[B"/>
<method name="getMTU" type="()I"/>
<method name="isVirtual" type="()Z"/>
</class>
<class name="java/net/NoRouteToHostException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/PasswordAuthentication">
<method name="&lt;init&gt;" type="(Ljava/lang/String;[C)V"/>
<method name="getPassword" type="()[C"/>
<method name="getUserName" type="()Ljava/lang/String;"/>
</class>
<class name="java/net/PortUnreachableException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/ProtocolException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/Proxy$Type">
<method name="values" type="()[Ljava/net/Proxy$Type;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/net/Proxy$Type;" class_method="true"/>
</class>
<class name="java/net/Proxy">
<method name="&lt;init&gt;" type="(Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V"/>
<method name="type" type="()Ljava/net/Proxy$Type;"/>
<method name="address" type="()Ljava/net/SocketAddress;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/net/ProxySelector">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljava/net/ProxySelector;" class_method="true"/>
<method name="setDefault" type="(Ljava/net/ProxySelector;)V" class_method="true"/>
<method name="select" type="(Ljava/net/URI;)Ljava/util/List;"/>
<method name="connectFailed" type="(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V"/>
</class>
<class name="java/net/ResponseCache">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljava/net/ResponseCache;" class_method="true"/>
<method name="setDefault" type="(Ljava/net/ResponseCache;)V" class_method="true"/>
<method name="get" type="(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;)Ljava/net/CacheResponse;"/>
<method name="put" type="(Ljava/net/URI;Ljava/net/URLConnection;)Ljava/net/CacheRequest;"/>
</class>
<class name="java/net/SecureCacheResponse">
<method name="&lt;init&gt;" type="()V"/>
<method name="getCipherSuite" type="()Ljava/lang/String;"/>
<method name="getLocalCertificateChain" type="()Ljava/util/List;"/>
<method name="getServerCertificateChain" type="()Ljava/util/List;"/>
<method name="getPeerPrincipal" type="()Ljava/security/Principal;"/>
<method name="getLocalPrincipal" type="()Ljava/security/Principal;"/>
</class>
<class name="java/net/ServerSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IILjava/net/InetAddress;)V"/>
<method name="accept" type="()Ljava/net/Socket;"/>
<method name="close" type="()V"/>
<method name="getInetAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getSoTimeout" type="()I"/>
<method name="implAccept" type="(Ljava/net/Socket;)V"/>
<method name="setSocketFactory" type="(Ljava/net/SocketImplFactory;)V" class_method="true"/>
<method name="setSoTimeout" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="bind" type="(Ljava/net/SocketAddress;)V"/>
<method name="bind" type="(Ljava/net/SocketAddress;I)V"/>
<method name="getLocalSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="isBound" type="()Z"/>
<method name="isClosed" type="()Z"/>
<method name="setReuseAddress" type="(Z)V"/>
<method name="getReuseAddress" type="()Z"/>
<method name="setReceiveBufferSize" type="(I)V"/>
<method name="getReceiveBufferSize" type="()I"/>
<method name="getChannel" type="()Ljava/nio/channels/ServerSocketChannel;"/>
<method name="setPerformancePreferences" type="(III)V"/>
</class>
<class name="java/net/Socket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/Proxy;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;IZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;IZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/SocketImpl;)V"/>
<method name="close" type="()V"/>
<method name="getInetAddress" type="()Ljava/net/InetAddress;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getKeepAlive" type="()Z"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="getPort" type="()I"/>
<method name="getSoLinger" type="()I"/>
<method name="getReceiveBufferSize" type="()I"/>
<method name="getSendBufferSize" type="()I"/>
<method name="getSoTimeout" type="()I"/>
<method name="getTcpNoDelay" type="()Z"/>
<method name="setKeepAlive" type="(Z)V"/>
<method name="setSocketImplFactory" type="(Ljava/net/SocketImplFactory;)V" class_method="true"/>
<method name="setSendBufferSize" type="(I)V"/>
<method name="setReceiveBufferSize" type="(I)V"/>
<method name="setSoLinger" type="(ZI)V"/>
<method name="setSoTimeout" type="(I)V"/>
<method name="setTcpNoDelay" type="(Z)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="shutdownInput" type="()V"/>
<method name="shutdownOutput" type="()V"/>
<method name="getLocalSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="getRemoteSocketAddress" type="()Ljava/net/SocketAddress;"/>
<method name="isBound" type="()Z"/>
<method name="isConnected" type="()Z"/>
<method name="isClosed" type="()Z"/>
<method name="bind" type="(Ljava/net/SocketAddress;)V"/>
<method name="connect" type="(Ljava/net/SocketAddress;)V"/>
<method name="connect" type="(Ljava/net/SocketAddress;I)V"/>
<method name="isInputShutdown" type="()Z"/>
<method name="isOutputShutdown" type="()Z"/>
<method name="setReuseAddress" type="(Z)V"/>
<method name="getReuseAddress" type="()Z"/>
<method name="setOOBInline" type="(Z)V"/>
<method name="getOOBInline" type="()Z"/>
<method name="setTrafficClass" type="(I)V"/>
<method name="getTrafficClass" type="()I"/>
<method name="sendUrgentData" type="(I)V"/>
<method name="getChannel" type="()Ljava/nio/channels/SocketChannel;"/>
<method name="setPerformancePreferences" type="(III)V"/>
</class>
<class name="java/net/SocketAddress">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/net/SocketException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/SocketImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="accept" type="(Ljava/net/SocketImpl;)V"/>
<method name="available" type="()I"/>
<method name="bind" type="(Ljava/net/InetAddress;I)V"/>
<method name="close" type="()V"/>
<method name="connect" type="(Ljava/lang/String;I)V"/>
<method name="connect" type="(Ljava/net/InetAddress;I)V"/>
<method name="create" type="(Z)V"/>
<method name="getFileDescriptor" type="()Ljava/io/FileDescriptor;"/>
<method name="getInetAddress" type="()Ljava/net/InetAddress;"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getLocalPort" type="()I"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="getPort" type="()I"/>
<method name="listen" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="shutdownInput" type="()V"/>
<method name="shutdownOutput" type="()V"/>
<method name="connect" type="(Ljava/net/SocketAddress;I)V"/>
<method name="supportsUrgentData" type="()Z"/>
<method name="sendUrgentData" type="(I)V"/>
<method name="setPerformancePreferences" type="(III)V"/>
</class>
<class name="java/net/SocketPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="java/net/SocketTimeoutException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/UnknownHostException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/UnknownServiceException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/net/URI">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="compareTo" type="(Ljava/net/URI;)I"/>
<method name="create" type="(Ljava/lang/String;)Ljava/net/URI;" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getAuthority" type="()Ljava/lang/String;"/>
<method name="getFragment" type="()Ljava/lang/String;"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getQuery" type="()Ljava/lang/String;"/>
<method name="getRawAuthority" type="()Ljava/lang/String;"/>
<method name="getRawFragment" type="()Ljava/lang/String;"/>
<method name="getRawPath" type="()Ljava/lang/String;"/>
<method name="getRawQuery" type="()Ljava/lang/String;"/>
<method name="getRawSchemeSpecificPart" type="()Ljava/lang/String;"/>
<method name="getRawUserInfo" type="()Ljava/lang/String;"/>
<method name="getScheme" type="()Ljava/lang/String;"/>
<method name="getSchemeSpecificPart" type="()Ljava/lang/String;"/>
<method name="getUserInfo" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="isAbsolute" type="()Z"/>
<method name="isOpaque" type="()Z"/>
<method name="normalize" type="()Ljava/net/URI;"/>
<method name="parseServerAuthority" type="()Ljava/net/URI;"/>
<method name="relativize" type="(Ljava/net/URI;)Ljava/net/URI;"/>
<method name="resolve" type="(Ljava/net/URI;)Ljava/net/URI;"/>
<method name="resolve" type="(Ljava/lang/String;)Ljava/net/URI;"/>
<method name="toASCIIString" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toURL" type="()Ljava/net/URL;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/net/URISyntaxException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getIndex" type="()I"/>
<method name="getReason" type="()Ljava/lang/String;"/>
<method name="getInput" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/net/URL">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URL;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V"/>
<method name="setURLStreamHandlerFactory" type="(Ljava/net/URLStreamHandlerFactory;)V" class_method="true"/>
<method name="set" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="sameFile" type="(Ljava/net/URL;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getContent" type="()Ljava/lang/Object;"/>
<method name="getContent" type="([Ljava/lang/Class;)Ljava/lang/Object;"/>
<method name="openStream" type="()Ljava/io/InputStream;"/>
<method name="openConnection" type="()Ljava/net/URLConnection;"/>
<method name="toURI" type="()Ljava/net/URI;"/>
<method name="openConnection" type="(Ljava/net/Proxy;)Ljava/net/URLConnection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toExternalForm" type="()Ljava/lang/String;"/>
<method name="getFile" type="()Ljava/lang/String;"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getProtocol" type="()Ljava/lang/String;"/>
<method name="getRef" type="()Ljava/lang/String;"/>
<method name="getQuery" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getUserInfo" type="()Ljava/lang/String;"/>
<method name="getAuthority" type="()Ljava/lang/String;"/>
<method name="set" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getDefaultPort" type="()I"/>
</class>
<class name="java/net/URLClassLoader">
<method name="&lt;init&gt;" type="([Ljava/net/URL;)V"/>
<method name="&lt;init&gt;" type="([Ljava/net/URL;Ljava/lang/ClassLoader;)V"/>
<method name="&lt;init&gt;" type="([Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/net/URLStreamHandlerFactory;)V"/>
<method name="addURL" type="(Ljava/net/URL;)V"/>
<method name="findResources" type="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
<method name="getPermissions" type="(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;"/>
<method name="getURLs" type="()[Ljava/net/URL;"/>
<method name="newInstance" type="([Ljava/net/URL;)Ljava/net/URLClassLoader;" class_method="true"/>
<method name="newInstance" type="([Ljava/net/URL;Ljava/lang/ClassLoader;)Ljava/net/URLClassLoader;" class_method="true"/>
<method name="findClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="findResource" type="(Ljava/lang/String;)Ljava/net/URL;"/>
<method name="definePackage" type="(Ljava/lang/String;Ljava/util/jar/Manifest;Ljava/net/URL;)Ljava/lang/Package;"/>
</class>
<class name="java/net/URLConnection">
<method name="&lt;init&gt;" type="(Ljava/net/URL;)V"/>
<method name="connect" type="()V"/>
<method name="getAllowUserInteraction" type="()Z"/>
<method name="getContent" type="()Ljava/lang/Object;"/>
<method name="getContent" type="([Ljava/lang/Class;)Ljava/lang/Object;"/>
<method name="getContentEncoding" type="()Ljava/lang/String;"/>
<method name="getContentLength" type="()I"/>
<method name="getContentType" type="()Ljava/lang/String;"/>
<method name="getDate" type="()J"/>
<method name="getDefaultAllowUserInteraction" type="()Z" class_method="true"/>
<method name="getDefaultRequestProperty" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getDefaultUseCaches" type="()Z"/>
<method name="getDoInput" type="()Z"/>
<method name="getDoOutput" type="()Z"/>
<method name="getExpiration" type="()J"/>
<method name="getFileNameMap" type="()Ljava/net/FileNameMap;" class_method="true"/>
<method name="getHeaderField" type="(I)Ljava/lang/String;"/>
<method name="getHeaderFields" type="()Ljava/util/Map;"/>
<method name="getRequestProperties" type="()Ljava/util/Map;"/>
<method name="addRequestProperty" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getHeaderField" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getHeaderFieldDate" type="(Ljava/lang/String;J)J"/>
<method name="getHeaderFieldInt" type="(Ljava/lang/String;I)I"/>
<method name="getHeaderFieldKey" type="(I)Ljava/lang/String;"/>
<method name="getIfModifiedSince" type="()J"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="getLastModified" type="()J"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="getPermission" type="()Ljava/security/Permission;"/>
<method name="getRequestProperty" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getURL" type="()Ljava/net/URL;"/>
<method name="getUseCaches" type="()Z"/>
<method name="guessContentTypeFromName" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="guessContentTypeFromStream" type="(Ljava/io/InputStream;)Ljava/lang/String;" class_method="true"/>
<method name="setAllowUserInteraction" type="(Z)V"/>
<method name="setContentHandlerFactory" type="(Ljava/net/ContentHandlerFactory;)V" class_method="true"/>
<method name="setDefaultAllowUserInteraction" type="(Z)V" class_method="true"/>
<method name="setDefaultRequestProperty" type="(Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="setDefaultUseCaches" type="(Z)V"/>
<method name="setDoInput" type="(Z)V"/>
<method name="setDoOutput" type="(Z)V"/>
<method name="setFileNameMap" type="(Ljava/net/FileNameMap;)V" class_method="true"/>
<method name="setIfModifiedSince" type="(J)V"/>
<method name="setRequestProperty" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setUseCaches" type="(Z)V"/>
<method name="setConnectTimeout" type="(I)V"/>
<method name="getConnectTimeout" type="()I"/>
<method name="setReadTimeout" type="(I)V"/>
<method name="getReadTimeout" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/net/URLDecoder">
<method name="&lt;init&gt;" type="()V"/>
<method name="decode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="decode" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/net/URLEncoder">
<method name="encode" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="encode" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/net/URLStreamHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="openConnection" type="(Ljava/net/URL;)Ljava/net/URLConnection;"/>
<method name="openConnection" type="(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/URLConnection;"/>
<method name="parseURL" type="(Ljava/net/URL;Ljava/lang/String;II)V"/>
<method name="setURL" type="(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="setURL" type="(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="toExternalForm" type="(Ljava/net/URL;)Ljava/lang/String;"/>
<method name="equals" type="(Ljava/net/URL;Ljava/net/URL;)Z"/>
<method name="getDefaultPort" type="()I"/>
<method name="getHostAddress" type="(Ljava/net/URL;)Ljava/net/InetAddress;"/>
<method name="hashCode" type="(Ljava/net/URL;)I"/>
<method name="hostsEqual" type="(Ljava/net/URL;Ljava/net/URL;)Z"/>
<method name="sameFile" type="(Ljava/net/URL;Ljava/net/URL;)Z"/>
</class>
<class name="java/nio/Buffer">
<method name="array" type="()Ljava/lang/Object;"/>
<method name="arrayOffset" type="()I"/>
<method name="capacity" type="()I"/>
<method name="clear" type="()Ljava/nio/Buffer;"/>
<method name="flip" type="()Ljava/nio/Buffer;"/>
<method name="hasArray" type="()Z"/>
<method name="hasRemaining" type="()Z"/>
<method name="isDirect" type="()Z"/>
<method name="isReadOnly" type="()Z"/>
<method name="limit" type="()I"/>
<method name="limit" type="(I)Ljava/nio/Buffer;"/>
<method name="mark" type="()Ljava/nio/Buffer;"/>
<method name="position" type="()I"/>
<method name="position" type="(I)Ljava/nio/Buffer;"/>
<method name="remaining" type="()I"/>
<method name="reset" type="()Ljava/nio/Buffer;"/>
<method name="rewind" type="()Ljava/nio/Buffer;"/>
</class>
<class name="java/nio/BufferOverflowException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/BufferUnderflowException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/ByteBuffer">
<method name="allocate" type="(I)Ljava/nio/ByteBuffer;" class_method="true"/>
<method name="allocateDirect" type="(I)Ljava/nio/ByteBuffer;" class_method="true"/>
<method name="wrap" type="([B)Ljava/nio/ByteBuffer;" class_method="true"/>
<method name="wrap" type="([BII)Ljava/nio/ByteBuffer;" class_method="true"/>
<method name="array" type="()[B"/>
<method name="arrayOffset" type="()I"/>
<method name="asCharBuffer" type="()Ljava/nio/CharBuffer;"/>
<method name="asDoubleBuffer" type="()Ljava/nio/DoubleBuffer;"/>
<method name="asFloatBuffer" type="()Ljava/nio/FloatBuffer;"/>
<method name="asIntBuffer" type="()Ljava/nio/IntBuffer;"/>
<method name="asLongBuffer" type="()Ljava/nio/LongBuffer;"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/ByteBuffer;"/>
<method name="asShortBuffer" type="()Ljava/nio/ShortBuffer;"/>
<method name="compact" type="()Ljava/nio/ByteBuffer;"/>
<method name="compareTo" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/ByteBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()B"/>
<method name="get" type="([B)Ljava/nio/ByteBuffer;"/>
<method name="get" type="([BII)Ljava/nio/ByteBuffer;"/>
<method name="get" type="(I)B"/>
<method name="getChar" type="()C"/>
<method name="getChar" type="(I)C"/>
<method name="getDouble" type="()D"/>
<method name="getDouble" type="(I)D"/>
<method name="getFloat" type="()F"/>
<method name="getFloat" type="(I)F"/>
<method name="getInt" type="()I"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="()J"/>
<method name="getLong" type="(I)J"/>
<method name="getShort" type="()S"/>
<method name="getShort" type="(I)S"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="order" type="(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;"/>
<method name="put" type="(B)Ljava/nio/ByteBuffer;"/>
<method name="put" type="([B)Ljava/nio/ByteBuffer;"/>
<method name="put" type="([BII)Ljava/nio/ByteBuffer;"/>
<method name="put" type="(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;"/>
<method name="put" type="(IB)Ljava/nio/ByteBuffer;"/>
<method name="putChar" type="(C)Ljava/nio/ByteBuffer;"/>
<method name="putChar" type="(IC)Ljava/nio/ByteBuffer;"/>
<method name="putDouble" type="(D)Ljava/nio/ByteBuffer;"/>
<method name="putDouble" type="(ID)Ljava/nio/ByteBuffer;"/>
<method name="putFloat" type="(F)Ljava/nio/ByteBuffer;"/>
<method name="putFloat" type="(IF)Ljava/nio/ByteBuffer;"/>
<method name="putInt" type="(I)Ljava/nio/ByteBuffer;"/>
<method name="putInt" type="(II)Ljava/nio/ByteBuffer;"/>
<method name="putLong" type="(J)Ljava/nio/ByteBuffer;"/>
<method name="putLong" type="(IJ)Ljava/nio/ByteBuffer;"/>
<method name="putShort" type="(S)Ljava/nio/ByteBuffer;"/>
<method name="putShort" type="(IS)Ljava/nio/ByteBuffer;"/>
<method name="slice" type="()Ljava/nio/ByteBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/ByteOrder">
<method name="nativeOrder" type="()Ljava/nio/ByteOrder;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/channels/AlreadyConnectedException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/AsynchronousCloseException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/CancelledKeyException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/Channels">
<method name="newInputStream" type="(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;" class_method="true"/>
<method name="newOutputStream" type="(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;" class_method="true"/>
<method name="newChannel" type="(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;" class_method="true"/>
<method name="newChannel" type="(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;" class_method="true"/>
<method name="newReader" type="(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;" class_method="true"/>
<method name="newReader" type="(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;" class_method="true"/>
<method name="newWriter" type="(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;" class_method="true"/>
<method name="newWriter" type="(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;" class_method="true"/>
</class>
<class name="java/nio/channels/ClosedByInterruptException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/ClosedChannelException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/ClosedSelectorException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/ConnectionPendingException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/DatagramChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="open" type="()Ljava/nio/channels/DatagramChannel;" class_method="true"/>
<method name="validOps" type="()I"/>
<method name="socket" type="()Ljava/net/DatagramSocket;"/>
<method name="isConnected" type="()Z"/>
<method name="connect" type="(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;"/>
<method name="disconnect" type="()Ljava/nio/channels/DatagramChannel;"/>
<method name="receive" type="(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;"/>
<method name="send" type="(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I"/>
<method name="read" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="read" type="([Ljava/nio/ByteBuffer;II)J"/>
<method name="read" type="([Ljava/nio/ByteBuffer;)J"/>
<method name="write" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="write" type="([Ljava/nio/ByteBuffer;II)J"/>
<method name="write" type="([Ljava/nio/ByteBuffer;)J"/>
</class>
<class name="java/nio/channels/FileChannel$MapMode">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/channels/FileChannel">
<method name="&lt;init&gt;" type="()V"/>
<method name="force" type="(Z)V"/>
<method name="lock" type="()Ljava/nio/channels/FileLock;"/>
<method name="lock" type="(JJZ)Ljava/nio/channels/FileLock;"/>
<method name="map" type="(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;"/>
<method name="position" type="()J"/>
<method name="position" type="(J)Ljava/nio/channels/FileChannel;"/>
<method name="read" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="read" type="(Ljava/nio/ByteBuffer;J)I"/>
<method name="read" type="([Ljava/nio/ByteBuffer;)J"/>
<method name="read" type="([Ljava/nio/ByteBuffer;II)J"/>
<method name="size" type="()J"/>
<method name="transferFrom" type="(Ljava/nio/channels/ReadableByteChannel;JJ)J"/>
<method name="transferTo" type="(JJLjava/nio/channels/WritableByteChannel;)J"/>
<method name="truncate" type="(J)Ljava/nio/channels/FileChannel;"/>
<method name="tryLock" type="()Ljava/nio/channels/FileLock;"/>
<method name="tryLock" type="(JJZ)Ljava/nio/channels/FileLock;"/>
<method name="write" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="write" type="(Ljava/nio/ByteBuffer;J)I"/>
<method name="write" type="([Ljava/nio/ByteBuffer;)J"/>
<method name="write" type="([Ljava/nio/ByteBuffer;II)J"/>
</class>
<class name="java/nio/channels/FileLock">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/FileChannel;JJZ)V"/>
<method name="channel" type="()Ljava/nio/channels/FileChannel;"/>
<method name="position" type="()J"/>
<method name="size" type="()J"/>
<method name="isShared" type="()Z"/>
<method name="overlaps" type="(JJ)Z"/>
<method name="isValid" type="()Z"/>
<method name="release" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/channels/FileLockInterruptionException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/IllegalBlockingModeException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/IllegalSelectorException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/NoConnectionPendingException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/NonReadableChannelException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/NonWritableChannelException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/NotYetBoundException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/NotYetConnectedException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/OverlappingFileLockException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/Pipe$SinkChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="validOps" type="()I"/>
</class>
<class name="java/nio/channels/Pipe$SourceChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="validOps" type="()I"/>
</class>
<class name="java/nio/channels/Pipe">
<method name="&lt;init&gt;" type="()V"/>
<method name="open" type="()Ljava/nio/channels/Pipe;" class_method="true"/>
<method name="sink" type="()Ljava/nio/channels/Pipe$SinkChannel;"/>
<method name="source" type="()Ljava/nio/channels/Pipe$SourceChannel;"/>
</class>
<class name="java/nio/channels/SelectableChannel">
<method name="&lt;init&gt;" type="()V"/>
<method name="blockingLock" type="()Ljava/lang/Object;"/>
<method name="configureBlocking" type="(Z)Ljava/nio/channels/SelectableChannel;"/>
<method name="isBlocking" type="()Z"/>
<method name="isRegistered" type="()Z"/>
<method name="keyFor" type="(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;"/>
<method name="provider" type="()Ljava/nio/channels/spi/SelectorProvider;"/>
<method name="register" type="(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;"/>
<method name="register" type="(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;"/>
<method name="validOps" type="()I"/>
</class>
<class name="java/nio/channels/SelectionKey">
<method name="&lt;init&gt;" type="()V"/>
<method name="attach" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="attachment" type="()Ljava/lang/Object;"/>
<method name="cancel" type="()V"/>
<method name="channel" type="()Ljava/nio/channels/SelectableChannel;"/>
<method name="interestOps" type="()I"/>
<method name="interestOps" type="(I)Ljava/nio/channels/SelectionKey;"/>
<method name="isAcceptable" type="()Z"/>
<method name="isConnectable" type="()Z"/>
<method name="isReadable" type="()Z"/>
<method name="isValid" type="()Z"/>
<method name="isWritable" type="()Z"/>
<method name="readyOps" type="()I"/>
<method name="selector" type="()Ljava/nio/channels/Selector;"/>
</class>
<class name="java/nio/channels/Selector">
<method name="&lt;init&gt;" type="()V"/>
<method name="open" type="()Ljava/nio/channels/Selector;" class_method="true"/>
<method name="close" type="()V"/>
<method name="isOpen" type="()Z"/>
<method name="keys" type="()Ljava/util/Set;"/>
<method name="provider" type="()Ljava/nio/channels/spi/SelectorProvider;"/>
<method name="select" type="()I"/>
<method name="select" type="(J)I"/>
<method name="selectedKeys" type="()Ljava/util/Set;"/>
<method name="selectNow" type="()I"/>
<method name="wakeup" type="()Ljava/nio/channels/Selector;"/>
</class>
<class name="java/nio/channels/ServerSocketChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="open" type="()Ljava/nio/channels/ServerSocketChannel;" class_method="true"/>
<method name="validOps" type="()I"/>
<method name="socket" type="()Ljava/net/ServerSocket;"/>
<method name="accept" type="()Ljava/nio/channels/SocketChannel;"/>
</class>
<class name="java/nio/channels/SocketChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="open" type="()Ljava/nio/channels/SocketChannel;" class_method="true"/>
<method name="open" type="(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;" class_method="true"/>
<method name="validOps" type="()I"/>
<method name="socket" type="()Ljava/net/Socket;"/>
<method name="isConnected" type="()Z"/>
<method name="isConnectionPending" type="()Z"/>
<method name="connect" type="(Ljava/net/SocketAddress;)Z"/>
<method name="finishConnect" type="()Z"/>
<method name="read" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="read" type="([Ljava/nio/ByteBuffer;II)J"/>
<method name="read" type="([Ljava/nio/ByteBuffer;)J"/>
<method name="write" type="(Ljava/nio/ByteBuffer;)I"/>
<method name="write" type="([Ljava/nio/ByteBuffer;II)J"/>
<method name="write" type="([Ljava/nio/ByteBuffer;)J"/>
</class>
<class name="java/nio/channels/spi/AbstractInterruptibleChannel">
<method name="&lt;init&gt;" type="()V"/>
<method name="isOpen" type="()Z"/>
<method name="close" type="()V"/>
<method name="begin" type="()V"/>
<method name="end" type="(Z)V"/>
<method name="implCloseChannel" type="()V"/>
</class>
<class name="java/nio/channels/spi/AbstractSelectableChannel">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="provider" type="()Ljava/nio/channels/spi/SelectorProvider;"/>
<method name="isRegistered" type="()Z"/>
<method name="keyFor" type="(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;"/>
<method name="register" type="(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;"/>
<method name="implCloseChannel" type="()V"/>
<method name="implCloseSelectableChannel" type="()V"/>
<method name="isBlocking" type="()Z"/>
<method name="blockingLock" type="()Ljava/lang/Object;"/>
<method name="configureBlocking" type="(Z)Ljava/nio/channels/SelectableChannel;"/>
<method name="implConfigureBlocking" type="(Z)V"/>
</class>
<class name="java/nio/channels/spi/AbstractSelectionKey">
<method name="&lt;init&gt;" type="()V"/>
<method name="isValid" type="()Z"/>
<method name="cancel" type="()V"/>
</class>
<class name="java/nio/channels/spi/AbstractSelector">
<method name="&lt;init&gt;" type="(Ljava/nio/channels/spi/SelectorProvider;)V"/>
<method name="close" type="()V"/>
<method name="implCloseSelector" type="()V"/>
<method name="isOpen" type="()Z"/>
<method name="provider" type="()Ljava/nio/channels/spi/SelectorProvider;"/>
<method name="cancelledKeys" type="()Ljava/util/Set;"/>
<method name="register" type="(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;"/>
<method name="deregister" type="(Ljava/nio/channels/spi/AbstractSelectionKey;)V"/>
<method name="begin" type="()V"/>
<method name="end" type="()V"/>
</class>
<class name="java/nio/channels/spi/SelectorProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="provider" type="()Ljava/nio/channels/spi/SelectorProvider;" class_method="true"/>
<method name="openDatagramChannel" type="()Ljava/nio/channels/DatagramChannel;"/>
<method name="openPipe" type="()Ljava/nio/channels/Pipe;"/>
<method name="openSelector" type="()Ljava/nio/channels/spi/AbstractSelector;"/>
<method name="openServerSocketChannel" type="()Ljava/nio/channels/ServerSocketChannel;"/>
<method name="openSocketChannel" type="()Ljava/nio/channels/SocketChannel;"/>
<method name="inheritedChannel" type="()Ljava/nio/channels/Channel;"/>
</class>
<class name="java/nio/channels/UnresolvedAddressException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/channels/UnsupportedAddressTypeException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/CharBuffer">
<method name="allocate" type="(I)Ljava/nio/CharBuffer;" class_method="true"/>
<method name="wrap" type="([C)Ljava/nio/CharBuffer;" class_method="true"/>
<method name="wrap" type="([CII)Ljava/nio/CharBuffer;" class_method="true"/>
<method name="wrap" type="(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;" class_method="true"/>
<method name="wrap" type="(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;" class_method="true"/>
<method name="array" type="()[C"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/CharBuffer;"/>
<method name="charAt" type="(I)C"/>
<method name="compact" type="()Ljava/nio/CharBuffer;"/>
<method name="compareTo" type="(Ljava/nio/CharBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/CharBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()C"/>
<method name="get" type="([C)Ljava/nio/CharBuffer;"/>
<method name="get" type="([CII)Ljava/nio/CharBuffer;"/>
<method name="get" type="(I)C"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="length" type="()I"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(C)Ljava/nio/CharBuffer;"/>
<method name="put" type="([C)Ljava/nio/CharBuffer;"/>
<method name="put" type="([CII)Ljava/nio/CharBuffer;"/>
<method name="put" type="(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;"/>
<method name="put" type="(IC)Ljava/nio/CharBuffer;"/>
<method name="put" type="(Ljava/lang/String;)Ljava/nio/CharBuffer;"/>
<method name="put" type="(Ljava/lang/String;II)Ljava/nio/CharBuffer;"/>
<method name="slice" type="()Ljava/nio/CharBuffer;"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="append" type="(C)Ljava/nio/CharBuffer;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;"/>
<method name="read" type="(Ljava/nio/CharBuffer;)I"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(C)Ljava/lang/Appendable;"/>
</class>
<class name="java/nio/charset/CharacterCodingException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/charset/Charset">
<method name="&lt;init&gt;" type="(Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="availableCharsets" type="()Ljava/util/SortedMap;" class_method="true"/>
<method name="forName" type="(Ljava/lang/String;)Ljava/nio/charset/Charset;" class_method="true"/>
<method name="isSupported" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="contains" type="(Ljava/nio/charset/Charset;)Z"/>
<method name="newEncoder" type="()Ljava/nio/charset/CharsetEncoder;"/>
<method name="newDecoder" type="()Ljava/nio/charset/CharsetDecoder;"/>
<method name="name" type="()Ljava/lang/String;"/>
<method name="aliases" type="()Ljava/util/Set;"/>
<method name="displayName" type="()Ljava/lang/String;"/>
<method name="displayName" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="isRegistered" type="()Z"/>
<method name="canEncode" type="()Z"/>
<method name="encode" type="(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;"/>
<method name="encode" type="(Ljava/lang/String;)Ljava/nio/ByteBuffer;"/>
<method name="decode" type="(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;"/>
<method name="compareTo" type="(Ljava/nio/charset/Charset;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="defaultCharset" type="()Ljava/nio/charset/Charset;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/charset/CharsetDecoder">
<method name="&lt;init&gt;" type="(Ljava/nio/charset/Charset;FF)V"/>
<method name="averageCharsPerByte" type="()F"/>
<method name="charset" type="()Ljava/nio/charset/Charset;"/>
<method name="decode" type="(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;"/>
<method name="decode" type="(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;"/>
<method name="decodeLoop" type="(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="detectedCharset" type="()Ljava/nio/charset/Charset;"/>
<method name="flush" type="(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="implFlush" type="(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="implOnMalformedInput" type="(Ljava/nio/charset/CodingErrorAction;)V"/>
<method name="implOnUnmappableCharacter" type="(Ljava/nio/charset/CodingErrorAction;)V"/>
<method name="implReplaceWith" type="(Ljava/lang/String;)V"/>
<method name="implReset" type="()V"/>
<method name="isAutoDetecting" type="()Z"/>
<method name="isCharsetDetected" type="()Z"/>
<method name="malformedInputAction" type="()Ljava/nio/charset/CodingErrorAction;"/>
<method name="maxCharsPerByte" type="()F"/>
<method name="onMalformedInput" type="(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;"/>
<method name="onUnmappableCharacter" type="(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;"/>
<method name="replacement" type="()Ljava/lang/String;"/>
<method name="replaceWith" type="(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;"/>
<method name="reset" type="()Ljava/nio/charset/CharsetDecoder;"/>
<method name="unmappableCharacterAction" type="()Ljava/nio/charset/CodingErrorAction;"/>
</class>
<class name="java/nio/charset/CharsetEncoder">
<method name="&lt;init&gt;" type="(Ljava/nio/charset/Charset;FF)V"/>
<method name="&lt;init&gt;" type="(Ljava/nio/charset/Charset;FF[B)V"/>
<method name="averageBytesPerChar" type="()F"/>
<method name="canEncode" type="(C)Z"/>
<method name="canEncode" type="(Ljava/lang/CharSequence;)Z"/>
<method name="charset" type="()Ljava/nio/charset/Charset;"/>
<method name="encode" type="(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;"/>
<method name="encode" type="(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;"/>
<method name="encodeLoop" type="(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="flush" type="(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="implFlush" type="(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;"/>
<method name="implOnMalformedInput" type="(Ljava/nio/charset/CodingErrorAction;)V"/>
<method name="implOnUnmappableCharacter" type="(Ljava/nio/charset/CodingErrorAction;)V"/>
<method name="implReplaceWith" type="([B)V"/>
<method name="implReset" type="()V"/>
<method name="isLegalReplacement" type="([B)Z"/>
<method name="malformedInputAction" type="()Ljava/nio/charset/CodingErrorAction;"/>
<method name="maxBytesPerChar" type="()F"/>
<method name="onMalformedInput" type="(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;"/>
<method name="onUnmappableCharacter" type="(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;"/>
<method name="replacement" type="()[B"/>
<method name="replaceWith" type="([B)Ljava/nio/charset/CharsetEncoder;"/>
<method name="reset" type="()Ljava/nio/charset/CharsetEncoder;"/>
<method name="unmappableCharacterAction" type="()Ljava/nio/charset/CodingErrorAction;"/>
</class>
<class name="java/nio/charset/CoderMalfunctionError">
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
</class>
<class name="java/nio/charset/CoderResult">
<method name="malformedForLength" type="(I)Ljava/nio/charset/CoderResult;" class_method="true"/>
<method name="unmappableForLength" type="(I)Ljava/nio/charset/CoderResult;" class_method="true"/>
<method name="isUnderflow" type="()Z"/>
<method name="isError" type="()Z"/>
<method name="isMalformed" type="()Z"/>
<method name="isOverflow" type="()Z"/>
<method name="isUnmappable" type="()Z"/>
<method name="length" type="()I"/>
<method name="throwException" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/charset/CodingErrorAction">
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/charset/IllegalCharsetNameException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getCharsetName" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/charset/MalformedInputException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getInputLength" type="()I"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/charset/spi/CharsetProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="charsets" type="()Ljava/util/Iterator;"/>
<method name="charsetForName" type="(Ljava/lang/String;)Ljava/nio/charset/Charset;"/>
</class>
<class name="java/nio/charset/UnmappableCharacterException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getInputLength" type="()I"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/charset/UnsupportedCharsetException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getCharsetName" type="()Ljava/lang/String;"/>
</class>
<class name="java/nio/DoubleBuffer">
<method name="allocate" type="(I)Ljava/nio/DoubleBuffer;" class_method="true"/>
<method name="wrap" type="([D)Ljava/nio/DoubleBuffer;" class_method="true"/>
<method name="wrap" type="([DII)Ljava/nio/DoubleBuffer;" class_method="true"/>
<method name="array" type="()[D"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/DoubleBuffer;"/>
<method name="compact" type="()Ljava/nio/DoubleBuffer;"/>
<method name="compareTo" type="(Ljava/nio/DoubleBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/DoubleBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()D"/>
<method name="get" type="([D)Ljava/nio/DoubleBuffer;"/>
<method name="get" type="([DII)Ljava/nio/DoubleBuffer;"/>
<method name="get" type="(I)D"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(D)Ljava/nio/DoubleBuffer;"/>
<method name="put" type="([D)Ljava/nio/DoubleBuffer;"/>
<method name="put" type="([DII)Ljava/nio/DoubleBuffer;"/>
<method name="put" type="(Ljava/nio/DoubleBuffer;)Ljava/nio/DoubleBuffer;"/>
<method name="put" type="(ID)Ljava/nio/DoubleBuffer;"/>
<method name="slice" type="()Ljava/nio/DoubleBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/FloatBuffer">
<method name="allocate" type="(I)Ljava/nio/FloatBuffer;" class_method="true"/>
<method name="wrap" type="([F)Ljava/nio/FloatBuffer;" class_method="true"/>
<method name="wrap" type="([FII)Ljava/nio/FloatBuffer;" class_method="true"/>
<method name="array" type="()[F"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/FloatBuffer;"/>
<method name="compact" type="()Ljava/nio/FloatBuffer;"/>
<method name="compareTo" type="(Ljava/nio/FloatBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/FloatBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()F"/>
<method name="get" type="([F)Ljava/nio/FloatBuffer;"/>
<method name="get" type="([FII)Ljava/nio/FloatBuffer;"/>
<method name="get" type="(I)F"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(F)Ljava/nio/FloatBuffer;"/>
<method name="put" type="([F)Ljava/nio/FloatBuffer;"/>
<method name="put" type="([FII)Ljava/nio/FloatBuffer;"/>
<method name="put" type="(Ljava/nio/FloatBuffer;)Ljava/nio/FloatBuffer;"/>
<method name="put" type="(IF)Ljava/nio/FloatBuffer;"/>
<method name="slice" type="()Ljava/nio/FloatBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/IntBuffer">
<method name="allocate" type="(I)Ljava/nio/IntBuffer;" class_method="true"/>
<method name="wrap" type="([I)Ljava/nio/IntBuffer;" class_method="true"/>
<method name="wrap" type="([III)Ljava/nio/IntBuffer;" class_method="true"/>
<method name="array" type="()[I"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/IntBuffer;"/>
<method name="compact" type="()Ljava/nio/IntBuffer;"/>
<method name="compareTo" type="(Ljava/nio/IntBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/IntBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()I"/>
<method name="get" type="([I)Ljava/nio/IntBuffer;"/>
<method name="get" type="([III)Ljava/nio/IntBuffer;"/>
<method name="get" type="(I)I"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(I)Ljava/nio/IntBuffer;"/>
<method name="put" type="([I)Ljava/nio/IntBuffer;"/>
<method name="put" type="([III)Ljava/nio/IntBuffer;"/>
<method name="put" type="(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;"/>
<method name="put" type="(II)Ljava/nio/IntBuffer;"/>
<method name="slice" type="()Ljava/nio/IntBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/InvalidMarkException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/LongBuffer">
<method name="allocate" type="(I)Ljava/nio/LongBuffer;" class_method="true"/>
<method name="wrap" type="([J)Ljava/nio/LongBuffer;" class_method="true"/>
<method name="wrap" type="([JII)Ljava/nio/LongBuffer;" class_method="true"/>
<method name="array" type="()[J"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/LongBuffer;"/>
<method name="compact" type="()Ljava/nio/LongBuffer;"/>
<method name="compareTo" type="(Ljava/nio/LongBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/LongBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()J"/>
<method name="get" type="([J)Ljava/nio/LongBuffer;"/>
<method name="get" type="([JII)Ljava/nio/LongBuffer;"/>
<method name="get" type="(I)J"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(J)Ljava/nio/LongBuffer;"/>
<method name="put" type="([J)Ljava/nio/LongBuffer;"/>
<method name="put" type="([JII)Ljava/nio/LongBuffer;"/>
<method name="put" type="(Ljava/nio/LongBuffer;)Ljava/nio/LongBuffer;"/>
<method name="put" type="(IJ)Ljava/nio/LongBuffer;"/>
<method name="slice" type="()Ljava/nio/LongBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/nio/MappedByteBuffer">
<method name="isLoaded" type="()Z"/>
<method name="load" type="()Ljava/nio/MappedByteBuffer;"/>
<method name="force" type="()Ljava/nio/MappedByteBuffer;"/>
</class>
<class name="java/nio/ReadOnlyBufferException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/nio/ShortBuffer">
<method name="allocate" type="(I)Ljava/nio/ShortBuffer;" class_method="true"/>
<method name="wrap" type="([S)Ljava/nio/ShortBuffer;" class_method="true"/>
<method name="wrap" type="([SII)Ljava/nio/ShortBuffer;" class_method="true"/>
<method name="array" type="()[S"/>
<method name="arrayOffset" type="()I"/>
<method name="asReadOnlyBuffer" type="()Ljava/nio/ShortBuffer;"/>
<method name="compact" type="()Ljava/nio/ShortBuffer;"/>
<method name="compareTo" type="(Ljava/nio/ShortBuffer;)I"/>
<method name="duplicate" type="()Ljava/nio/ShortBuffer;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="()S"/>
<method name="get" type="([S)Ljava/nio/ShortBuffer;"/>
<method name="get" type="([SII)Ljava/nio/ShortBuffer;"/>
<method name="get" type="(I)S"/>
<method name="hasArray" type="()Z"/>
<method name="hashCode" type="()I"/>
<method name="isDirect" type="()Z"/>
<method name="order" type="()Ljava/nio/ByteOrder;"/>
<method name="put" type="(S)Ljava/nio/ShortBuffer;"/>
<method name="put" type="([S)Ljava/nio/ShortBuffer;"/>
<method name="put" type="([SII)Ljava/nio/ShortBuffer;"/>
<method name="put" type="(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;"/>
<method name="put" type="(IS)Ljava/nio/ShortBuffer;"/>
<method name="slice" type="()Ljava/nio/ShortBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="array" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/security/AccessControlContext">
<method name="&lt;init&gt;" type="(Ljava/security/AccessControlContext;Ljava/security/DomainCombiner;)V"/>
<method name="&lt;init&gt;" type="([Ljava/security/ProtectionDomain;)V"/>
<method name="checkPermission" type="(Ljava/security/Permission;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getDomainCombiner" type="()Ljava/security/DomainCombiner;"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/security/AccessControlException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/Permission;)V"/>
<method name="getPermission" type="()Ljava/security/Permission;"/>
</class>
<class name="java/security/AccessController">
<method name="doPrivileged" type="(Ljava/security/PrivilegedAction;)Ljava/lang/Object;" class_method="true"/>
<method name="doPrivileged" type="(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" class_method="true"/>
<method name="doPrivileged" type="(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;" class_method="true"/>
<method name="doPrivileged" type="(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" class_method="true"/>
<method name="doPrivilegedWithCombiner" type="(Ljava/security/PrivilegedAction;)Ljava/lang/Object;" class_method="true"/>
<method name="doPrivilegedWithCombiner" type="(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;" class_method="true"/>
<method name="checkPermission" type="(Ljava/security/Permission;)V" class_method="true"/>
<method name="getContext" type="()Ljava/security/AccessControlContext;" class_method="true"/>
</class>
<class name="java/security/acl/AclNotFoundException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/acl/LastOwnerException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/acl/NotOwnerException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/AlgorithmParameterGenerator">
<method name="&lt;init&gt;" type="(Ljava/security/AlgorithmParameterGeneratorSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/AlgorithmParameterGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/AlgorithmParameterGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/AlgorithmParameterGenerator;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="init" type="(I)V"/>
<method name="init" type="(ILjava/security/SecureRandom;)V"/>
<method name="init" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="generateParameters" type="()Ljava/security/AlgorithmParameters;"/>
</class>
<class name="java/security/AlgorithmParameterGeneratorSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInit" type="(ILjava/security/SecureRandom;)V"/>
<method name="engineInit" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="engineGenerateParameters" type="()Ljava/security/AlgorithmParameters;"/>
</class>
<class name="java/security/AlgorithmParameters">
<method name="&lt;init&gt;" type="(Ljava/security/AlgorithmParametersSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/AlgorithmParameters;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/AlgorithmParameters;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/AlgorithmParameters;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="init" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="([B)V"/>
<method name="init" type="([BLjava/lang/String;)V"/>
<method name="getParameterSpec" type="(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;"/>
<method name="getEncoded" type="()[B"/>
<method name="getEncoded" type="(Ljava/lang/String;)[B"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/AlgorithmParametersSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInit" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="engineInit" type="([B)V"/>
<method name="engineInit" type="([BLjava/lang/String;)V"/>
<method name="engineGetParameterSpec" type="(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;"/>
<method name="engineGetEncoded" type="()[B"/>
<method name="engineGetEncoded" type="(Ljava/lang/String;)[B"/>
<method name="engineToString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/AllPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="java/security/AuthProvider">
<method name="&lt;init&gt;" type="(Ljava/lang/String;DLjava/lang/String;)V"/>
<method name="login" type="(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;)V"/>
<method name="logout" type="()V"/>
<method name="setCallbackHandler" type="(Ljavax/security/auth/callback/CallbackHandler;)V"/>
</class>
<class name="java/security/BasicPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="java/security/cert/Certificate$CertificateRep">
<method name="&lt;init&gt;" type="(Ljava/lang/String;[B)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/cert/Certificate">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getEncoded" type="()[B"/>
<method name="verify" type="(Ljava/security/PublicKey;)V"/>
<method name="verify" type="(Ljava/security/PublicKey;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="writeReplace" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/cert/CertificateEncodingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/cert/CertificateException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/cert/CertificateExpiredException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/cert/CertificateFactory">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertificateFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertificateFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertificateFactory;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="generateCertificate" type="(Ljava/io/InputStream;)Ljava/security/cert/Certificate;"/>
<method name="getCertPathEncodings" type="()Ljava/util/Iterator;"/>
<method name="generateCertPath" type="(Ljava/io/InputStream;)Ljava/security/cert/CertPath;"/>
<method name="generateCertPath" type="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;"/>
<method name="generateCertPath" type="(Ljava/util/List;)Ljava/security/cert/CertPath;"/>
<method name="generateCertificates" type="(Ljava/io/InputStream;)Ljava/util/Collection;"/>
<method name="generateCRL" type="(Ljava/io/InputStream;)Ljava/security/cert/CRL;"/>
<method name="generateCRLs" type="(Ljava/io/InputStream;)Ljava/util/Collection;"/>
</class>
<class name="java/security/cert/CertificateFactorySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGenerateCertificate" type="(Ljava/io/InputStream;)Ljava/security/cert/Certificate;"/>
<method name="engineGenerateCertificates" type="(Ljava/io/InputStream;)Ljava/util/Collection;"/>
<method name="engineGenerateCRL" type="(Ljava/io/InputStream;)Ljava/security/cert/CRL;"/>
<method name="engineGenerateCRLs" type="(Ljava/io/InputStream;)Ljava/util/Collection;"/>
<method name="engineGenerateCertPath" type="(Ljava/io/InputStream;)Ljava/security/cert/CertPath;"/>
<method name="engineGenerateCertPath" type="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;"/>
<method name="engineGenerateCertPath" type="(Ljava/util/List;)Ljava/security/cert/CertPath;"/>
<method name="engineGetCertPathEncodings" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/security/cert/CertificateNotYetValidException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/cert/CertificateParsingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/cert/CertPath$CertPathRep">
<method name="&lt;init&gt;" type="(Ljava/lang/String;[B)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/cert/CertPath">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getCertificates" type="()Ljava/util/List;"/>
<method name="getEncoded" type="()[B"/>
<method name="getEncoded" type="(Ljava/lang/String;)[B"/>
<method name="getEncodings" type="()Ljava/util/Iterator;"/>
<method name="writeReplace" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/cert/CertPathBuilder">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertPathBuilderSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/cert/CertPathBuilder;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertPathBuilder;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertPathBuilder;" class_method="true"/>
<method name="build" type="(Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathBuilderResult;"/>
<method name="getDefaultType" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/security/cert/CertPathBuilderException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/cert/CertPathBuilderSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineBuild" type="(Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathBuilderResult;"/>
</class>
<class name="java/security/cert/CertPathValidator">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertPathValidatorSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/cert/CertPathValidator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertPathValidator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertPathValidator;" class_method="true"/>
<method name="validate" type="(Ljava/security/cert/CertPath;Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathValidatorResult;"/>
<method name="getDefaultType" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/security/cert/CertPathValidatorException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;Ljava/security/cert/CertPath;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="getCertPath" type="()Ljava/security/cert/CertPath;"/>
<method name="getIndex" type="()I"/>
</class>
<class name="java/security/cert/CertPathValidatorSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineValidate" type="(Ljava/security/cert/CertPath;Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathValidatorResult;"/>
</class>
<class name="java/security/cert/CertStore">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertStoreSpi;Ljava/security/Provider;Ljava/lang/String;Ljava/security/cert/CertStoreParameters;)V"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/cert/CertStoreParameters;)Ljava/security/cert/CertStore;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/cert/CertStoreParameters;Ljava/lang/String;)Ljava/security/cert/CertStore;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/cert/CertStoreParameters;Ljava/security/Provider;)Ljava/security/cert/CertStore;" class_method="true"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getCertStoreParameters" type="()Ljava/security/cert/CertStoreParameters;"/>
<method name="getCertificates" type="(Ljava/security/cert/CertSelector;)Ljava/util/Collection;"/>
<method name="getCRLs" type="(Ljava/security/cert/CRLSelector;)Ljava/util/Collection;"/>
<method name="getDefaultType" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/security/cert/CertStoreException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/cert/CertStoreSpi">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertStoreParameters;)V"/>
<method name="engineGetCertificates" type="(Ljava/security/cert/CertSelector;)Ljava/util/Collection;"/>
<method name="engineGetCRLs" type="(Ljava/security/cert/CRLSelector;)Ljava/util/Collection;"/>
</class>
<class name="java/security/cert/CollectionCertStoreParameters">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getCollection" type="()Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/CRL">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="isRevoked" type="(Ljava/security/cert/Certificate;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/CRLException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/cert/LDAPCertStoreParameters">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getPort" type="()I"/>
<method name="getServerName" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/PKIXBuilderParameters">
<method name="&lt;init&gt;" type="(Ljava/util/Set;Ljava/security/cert/CertSelector;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore;Ljava/security/cert/CertSelector;)V"/>
<method name="getMaxPathLength" type="()I"/>
<method name="setMaxPathLength" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/PKIXCertPathBuilderResult">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertPath;Ljava/security/cert/TrustAnchor;Ljava/security/cert/PolicyNode;Ljava/security/PublicKey;)V"/>
<method name="getCertPath" type="()Ljava/security/cert/CertPath;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/PKIXCertPathChecker">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="init" type="(Z)V"/>
<method name="isForwardCheckingSupported" type="()Z"/>
<method name="getSupportedExtensions" type="()Ljava/util/Set;"/>
<method name="check" type="(Ljava/security/cert/Certificate;Ljava/util/Collection;)V"/>
</class>
<class name="java/security/cert/PKIXCertPathValidatorResult">
<method name="&lt;init&gt;" type="(Ljava/security/cert/TrustAnchor;Ljava/security/cert/PolicyNode;Ljava/security/PublicKey;)V"/>
<method name="getPolicyTree" type="()Ljava/security/cert/PolicyNode;"/>
<method name="getPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="getTrustAnchor" type="()Ljava/security/cert/TrustAnchor;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/PKIXParameters">
<method name="&lt;init&gt;" type="(Ljava/util/Set;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore;)V"/>
<method name="getTrustAnchors" type="()Ljava/util/Set;"/>
<method name="setTrustAnchors" type="(Ljava/util/Set;)V"/>
<method name="isAnyPolicyInhibited" type="()Z"/>
<method name="setAnyPolicyInhibited" type="(Z)V"/>
<method name="getCertPathCheckers" type="()Ljava/util/List;"/>
<method name="setCertPathCheckers" type="(Ljava/util/List;)V"/>
<method name="addCertPathChecker" type="(Ljava/security/cert/PKIXCertPathChecker;)V"/>
<method name="getCertStores" type="()Ljava/util/List;"/>
<method name="setCertStores" type="(Ljava/util/List;)V"/>
<method name="addCertStore" type="(Ljava/security/cert/CertStore;)V"/>
<method name="getDate" type="()Ljava/util/Date;"/>
<method name="setDate" type="(Ljava/util/Date;)V"/>
<method name="isExplicitPolicyRequired" type="()Z"/>
<method name="setExplicitPolicyRequired" type="(Z)V"/>
<method name="getInitialPolicies" type="()Ljava/util/Set;"/>
<method name="setInitialPolicies" type="(Ljava/util/Set;)V"/>
<method name="isPolicyMappingInhibited" type="()Z"/>
<method name="setPolicyMappingInhibited" type="(Z)V"/>
<method name="getPolicyQualifiersRejected" type="()Z"/>
<method name="setPolicyQualifiersRejected" type="(Z)V"/>
<method name="isRevocationEnabled" type="()Z"/>
<method name="setRevocationEnabled" type="(Z)V"/>
<method name="getSigProvider" type="()Ljava/lang/String;"/>
<method name="setSigProvider" type="(Ljava/lang/String;)V"/>
<method name="getTargetCertConstraints" type="()Ljava/security/cert/CertSelector;"/>
<method name="setTargetCertConstraints" type="(Ljava/security/cert/CertSelector;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/PolicyQualifierInfo">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getEncoded" type="()[B"/>
<method name="getPolicyQualifierId" type="()Ljava/lang/String;"/>
<method name="getPolicyQualifier" type="()[B"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/TrustAnchor">
<method name="&lt;init&gt;" type="(Ljava/security/cert/X509Certificate;[B)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/PublicKey;[B)V"/>
<method name="&lt;init&gt;" type="(Ljavax/security/auth/x500/X500Principal;Ljava/security/PublicKey;[B)V"/>
<method name="getNameConstraints" type="()[B"/>
<method name="getTrustedCert" type="()Ljava/security/cert/X509Certificate;"/>
<method name="getCA" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="getCAName" type="()Ljava/lang/String;"/>
<method name="getCAPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/X509Certificate">
<method name="&lt;init&gt;" type="()V"/>
<method name="checkValidity" type="()V"/>
<method name="checkValidity" type="(Ljava/util/Date;)V"/>
<method name="getVersion" type="()I"/>
<method name="getSerialNumber" type="()Ljava/math/BigInteger;"/>
<method name="getIssuerDN" type="()Ljava/security/Principal;"/>
<method name="getIssuerX500Principal" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="getSubjectDN" type="()Ljava/security/Principal;"/>
<method name="getSubjectX500Principal" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="getNotBefore" type="()Ljava/util/Date;"/>
<method name="getNotAfter" type="()Ljava/util/Date;"/>
<method name="getTBSCertificate" type="()[B"/>
<method name="getSignature" type="()[B"/>
<method name="getSigAlgName" type="()Ljava/lang/String;"/>
<method name="getSigAlgOID" type="()Ljava/lang/String;"/>
<method name="getSigAlgParams" type="()[B"/>
<method name="getIssuerUniqueID" type="()[Z"/>
<method name="getSubjectUniqueID" type="()[Z"/>
<method name="getKeyUsage" type="()[Z"/>
<method name="getExtendedKeyUsage" type="()Ljava/util/List;"/>
<method name="getBasicConstraints" type="()I"/>
<method name="getSubjectAlternativeNames" type="()Ljava/util/Collection;"/>
<method name="getIssuerAlternativeNames" type="()Ljava/util/Collection;"/>
</class>
<class name="java/security/cert/X509CertSelector">
<method name="&lt;init&gt;" type="()V"/>
<method name="setCertificate" type="(Ljava/security/cert/X509Certificate;)V"/>
<method name="getCertificate" type="()Ljava/security/cert/X509Certificate;"/>
<method name="setSerialNumber" type="(Ljava/math/BigInteger;)V"/>
<method name="getSerialNumber" type="()Ljava/math/BigInteger;"/>
<method name="setIssuer" type="(Ljavax/security/auth/x500/X500Principal;)V"/>
<method name="getIssuer" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="setIssuer" type="(Ljava/lang/String;)V"/>
<method name="getIssuerAsString" type="()Ljava/lang/String;"/>
<method name="setIssuer" type="([B)V"/>
<method name="getIssuerAsBytes" type="()[B"/>
<method name="setSubject" type="(Ljavax/security/auth/x500/X500Principal;)V"/>
<method name="getSubject" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="setSubject" type="(Ljava/lang/String;)V"/>
<method name="getSubjectAsString" type="()Ljava/lang/String;"/>
<method name="setSubject" type="([B)V"/>
<method name="getSubjectAsBytes" type="()[B"/>
<method name="setSubjectKeyIdentifier" type="([B)V"/>
<method name="getSubjectKeyIdentifier" type="()[B"/>
<method name="setAuthorityKeyIdentifier" type="([B)V"/>
<method name="getAuthorityKeyIdentifier" type="()[B"/>
<method name="setCertificateValid" type="(Ljava/util/Date;)V"/>
<method name="getCertificateValid" type="()Ljava/util/Date;"/>
<method name="setPrivateKeyValid" type="(Ljava/util/Date;)V"/>
<method name="getPrivateKeyValid" type="()Ljava/util/Date;"/>
<method name="setSubjectPublicKeyAlgID" type="(Ljava/lang/String;)V"/>
<method name="getSubjectPublicKeyAlgID" type="()Ljava/lang/String;"/>
<method name="setSubjectPublicKey" type="(Ljava/security/PublicKey;)V"/>
<method name="setSubjectPublicKey" type="([B)V"/>
<method name="getSubjectPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="setKeyUsage" type="([Z)V"/>
<method name="getKeyUsage" type="()[Z"/>
<method name="setExtendedKeyUsage" type="(Ljava/util/Set;)V"/>
<method name="getExtendedKeyUsage" type="()Ljava/util/Set;"/>
<method name="setMatchAllSubjectAltNames" type="(Z)V"/>
<method name="getMatchAllSubjectAltNames" type="()Z"/>
<method name="setSubjectAlternativeNames" type="(Ljava/util/Collection;)V"/>
<method name="addSubjectAlternativeName" type="(ILjava/lang/String;)V"/>
<method name="addSubjectAlternativeName" type="(I[B)V"/>
<method name="getSubjectAlternativeNames" type="()Ljava/util/Collection;"/>
<method name="setNameConstraints" type="([B)V"/>
<method name="getNameConstraints" type="()[B"/>
<method name="setBasicConstraints" type="(I)V"/>
<method name="getBasicConstraints" type="()I"/>
<method name="setPolicy" type="(Ljava/util/Set;)V"/>
<method name="getPolicy" type="()Ljava/util/Set;"/>
<method name="setPathToNames" type="(Ljava/util/Collection;)V"/>
<method name="addPathToName" type="(ILjava/lang/String;)V"/>
<method name="addPathToName" type="(I[B)V"/>
<method name="getPathToNames" type="()Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="match" type="(Ljava/security/cert/Certificate;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/cert/X509CRL">
<method name="&lt;init&gt;" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getEncoded" type="()[B"/>
<method name="verify" type="(Ljava/security/PublicKey;)V"/>
<method name="verify" type="(Ljava/security/PublicKey;Ljava/lang/String;)V"/>
<method name="getVersion" type="()I"/>
<method name="getIssuerDN" type="()Ljava/security/Principal;"/>
<method name="getIssuerX500Principal" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="getThisUpdate" type="()Ljava/util/Date;"/>
<method name="getNextUpdate" type="()Ljava/util/Date;"/>
<method name="getRevokedCertificate" type="(Ljava/math/BigInteger;)Ljava/security/cert/X509CRLEntry;"/>
<method name="getRevokedCertificate" type="(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509CRLEntry;"/>
<method name="getRevokedCertificates" type="()Ljava/util/Set;"/>
<method name="getTBSCertList" type="()[B"/>
<method name="getSignature" type="()[B"/>
<method name="getSigAlgName" type="()Ljava/lang/String;"/>
<method name="getSigAlgOID" type="()Ljava/lang/String;"/>
<method name="getSigAlgParams" type="()[B"/>
</class>
<class name="java/security/cert/X509CRLEntry">
<method name="&lt;init&gt;" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getEncoded" type="()[B"/>
<method name="getSerialNumber" type="()Ljava/math/BigInteger;"/>
<method name="getCertificateIssuer" type="()Ljavax/security/auth/x500/X500Principal;"/>
<method name="getRevocationDate" type="()Ljava/util/Date;"/>
<method name="hasExtensions" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/cert/X509CRLSelector">
<method name="&lt;init&gt;" type="()V"/>
<method name="setIssuers" type="(Ljava/util/Collection;)V"/>
<method name="setIssuerNames" type="(Ljava/util/Collection;)V"/>
<method name="addIssuer" type="(Ljavax/security/auth/x500/X500Principal;)V"/>
<method name="addIssuerName" type="(Ljava/lang/String;)V"/>
<method name="addIssuerName" type="([B)V"/>
<method name="setMinCRLNumber" type="(Ljava/math/BigInteger;)V"/>
<method name="setMaxCRLNumber" type="(Ljava/math/BigInteger;)V"/>
<method name="setDateAndTime" type="(Ljava/util/Date;)V"/>
<method name="setCertificateChecking" type="(Ljava/security/cert/X509Certificate;)V"/>
<method name="getIssuers" type="()Ljava/util/Collection;"/>
<method name="getIssuerNames" type="()Ljava/util/Collection;"/>
<method name="getMinCRL" type="()Ljava/math/BigInteger;"/>
<method name="getMaxCRL" type="()Ljava/math/BigInteger;"/>
<method name="getDateAndTime" type="()Ljava/util/Date;"/>
<method name="getCertificateChecking" type="()Ljava/security/cert/X509Certificate;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="match" type="(Ljava/security/cert/CRL;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/CodeSigner">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertPath;Ljava/security/Timestamp;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getSignerCertPath" type="()Ljava/security/cert/CertPath;"/>
<method name="getTimestamp" type="()Ljava/security/Timestamp;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/CodeSource">
<method name="&lt;init&gt;" type="(Ljava/net/URL;[Ljava/security/cert/Certificate;)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URL;[Ljava/security/CodeSigner;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getCodeSigners" type="()[Ljava/security/CodeSigner;"/>
<method name="getLocation" type="()Ljava/net/URL;"/>
<method name="hashCode" type="()I"/>
<method name="implies" type="(Ljava/security/CodeSource;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/DigestException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/DigestInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/security/MessageDigest;)V"/>
<method name="getMessageDigest" type="()Ljava/security/MessageDigest;"/>
<method name="setMessageDigest" type="(Ljava/security/MessageDigest;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="on" type="(Z)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/DigestOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/security/MessageDigest;)V"/>
<method name="getMessageDigest" type="()Ljava/security/MessageDigest;"/>
<method name="setMessageDigest" type="(Ljava/security/MessageDigest;)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([BII)V"/>
<method name="on" type="(Z)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/GeneralSecurityException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/GuardedObject">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/security/Guard;)V"/>
<method name="getObject" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/Identity">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/IdentityScope;)V"/>
<method name="addCertificate" type="(Ljava/security/Certificate;)V"/>
<method name="removeCertificate" type="(Ljava/security/Certificate;)V"/>
<method name="certificates" type="()[Ljava/security/Certificate;"/>
<method name="identityEquals" type="(Ljava/security/Identity;)Z"/>
<method name="toString" type="(Z)Ljava/lang/String;"/>
<method name="getScope" type="()Ljava/security/IdentityScope;"/>
<method name="setPublicKey" type="(Ljava/security/PublicKey;)V"/>
<method name="getPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="setInfo" type="(Ljava/lang/String;)V"/>
<method name="getInfo" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/IdentityScope">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/IdentityScope;)V"/>
<method name="getSystemScope" type="()Ljava/security/IdentityScope;" class_method="true"/>
<method name="setSystemScope" type="(Ljava/security/IdentityScope;)V" class_method="true"/>
<method name="size" type="()I"/>
<method name="getIdentity" type="(Ljava/lang/String;)Ljava/security/Identity;"/>
<method name="getIdentity" type="(Ljava/security/Principal;)Ljava/security/Identity;"/>
<method name="getIdentity" type="(Ljava/security/PublicKey;)Ljava/security/Identity;"/>
<method name="addIdentity" type="(Ljava/security/Identity;)V"/>
<method name="removeIdentity" type="(Ljava/security/Identity;)V"/>
<method name="identities" type="()Ljava/util/Enumeration;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/InvalidAlgorithmParameterException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/InvalidKeyException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/InvalidParameterException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/KeyException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/KeyFactory">
<method name="&lt;init&gt;" type="(Ljava/security/KeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/KeyFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyFactory;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="generatePublic" type="(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;"/>
<method name="generatePrivate" type="(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;"/>
<method name="getKeySpec" type="(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"/>
<method name="translateKey" type="(Ljava/security/Key;)Ljava/security/Key;"/>
</class>
<class name="java/security/KeyFactorySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGeneratePublic" type="(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;"/>
<method name="engineGeneratePrivate" type="(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;"/>
<method name="engineGetKeySpec" type="(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"/>
<method name="engineTranslateKey" type="(Ljava/security/Key;)Ljava/security/Key;"/>
</class>
<class name="java/security/KeyManagementException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/KeyPair">
<method name="&lt;init&gt;" type="(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V"/>
<method name="getPrivate" type="()Ljava/security/PrivateKey;"/>
<method name="getPublic" type="()Ljava/security/PublicKey;"/>
</class>
<class name="java/security/KeyPairGenerator">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/KeyPairGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyPairGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyPairGenerator;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="initialize" type="(I)V"/>
<method name="initialize" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="genKeyPair" type="()Ljava/security/KeyPair;"/>
<method name="generateKeyPair" type="()Ljava/security/KeyPair;"/>
<method name="initialize" type="(ILjava/security/SecureRandom;)V"/>
<method name="initialize" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
</class>
<class name="java/security/KeyPairGeneratorSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="generateKeyPair" type="()Ljava/security/KeyPair;"/>
<method name="initialize" type="(ILjava/security/SecureRandom;)V"/>
<method name="initialize" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
</class>
<class name="java/security/KeyRep$Type">
<method name="values" type="()[Ljava/security/KeyRep$Type;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/security/KeyRep$Type;" class_method="true"/>
</class>
<class name="java/security/KeyRep">
<method name="&lt;init&gt;" type="(Ljava/security/KeyRep$Type;Ljava/lang/String;Ljava/lang/String;[B)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/KeyStore$Builder">
<method name="&lt;init&gt;" type="()V"/>
<method name="getKeyStore" type="()Ljava/security/KeyStore;"/>
<method name="getProtectionParameter" type="(Ljava/lang/String;)Ljava/security/KeyStore$ProtectionParameter;"/>
<method name="newInstance" type="(Ljava/security/KeyStore;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Builder;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/security/Provider;Ljava/io/File;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Builder;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/security/Provider;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Builder;" class_method="true"/>
</class>
<class name="java/security/KeyStore$CallbackHandlerProtection">
<method name="&lt;init&gt;" type="(Ljavax/security/auth/callback/CallbackHandler;)V"/>
<method name="getCallbackHandler" type="()Ljavax/security/auth/callback/CallbackHandler;"/>
</class>
<class name="java/security/KeyStore$PasswordProtection">
<method name="&lt;init&gt;" type="([C)V"/>
<method name="getPassword" type="()[C"/>
<method name="destroy" type="()V"/>
<method name="isDestroyed" type="()Z"/>
</class>
<class name="java/security/KeyStore$PrivateKeyEntry">
<method name="&lt;init&gt;" type="(Ljava/security/PrivateKey;[Ljava/security/cert/Certificate;)V"/>
<method name="getPrivateKey" type="()Ljava/security/PrivateKey;"/>
<method name="getCertificateChain" type="()[Ljava/security/cert/Certificate;"/>
<method name="getCertificate" type="()Ljava/security/cert/Certificate;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/KeyStore$SecretKeyEntry">
<method name="&lt;init&gt;" type="(Ljavax/crypto/SecretKey;)V"/>
<method name="getSecretKey" type="()Ljavax/crypto/SecretKey;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/KeyStore$TrustedCertificateEntry">
<method name="&lt;init&gt;" type="(Ljava/security/cert/Certificate;)V"/>
<method name="getTrustedCertificate" type="()Ljava/security/cert/Certificate;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/KeyStore">
<method name="&lt;init&gt;" type="(Ljava/security/KeyStoreSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/KeyStore;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyStore;" class_method="true"/>
<method name="getDefaultType" type="()Ljava/lang/String;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="getKey" type="(Ljava/lang/String;[C)Ljava/security/Key;"/>
<method name="getCertificateChain" type="(Ljava/lang/String;)[Ljava/security/cert/Certificate;"/>
<method name="getCertificate" type="(Ljava/lang/String;)Ljava/security/cert/Certificate;"/>
<method name="getCreationDate" type="(Ljava/lang/String;)Ljava/util/Date;"/>
<method name="setKeyEntry" type="(Ljava/lang/String;Ljava/security/Key;[C[Ljava/security/cert/Certificate;)V"/>
<method name="setKeyEntry" type="(Ljava/lang/String;[B[Ljava/security/cert/Certificate;)V"/>
<method name="setCertificateEntry" type="(Ljava/lang/String;Ljava/security/cert/Certificate;)V"/>
<method name="deleteEntry" type="(Ljava/lang/String;)V"/>
<method name="aliases" type="()Ljava/util/Enumeration;"/>
<method name="containsAlias" type="(Ljava/lang/String;)Z"/>
<method name="size" type="()I"/>
<method name="isKeyEntry" type="(Ljava/lang/String;)Z"/>
<method name="isCertificateEntry" type="(Ljava/lang/String;)Z"/>
<method name="getCertificateAlias" type="(Ljava/security/cert/Certificate;)Ljava/lang/String;"/>
<method name="store" type="(Ljava/io/OutputStream;[C)V"/>
<method name="store" type="(Ljava/security/KeyStore$LoadStoreParameter;)V"/>
<method name="load" type="(Ljava/io/InputStream;[C)V"/>
<method name="load" type="(Ljava/security/KeyStore$LoadStoreParameter;)V"/>
<method name="getEntry" type="(Ljava/lang/String;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Entry;"/>
<method name="setEntry" type="(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V"/>
<method name="entryInstanceOf" type="(Ljava/lang/String;Ljava/lang/Class;)Z"/>
</class>
<class name="java/security/KeyStoreException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/KeyStoreSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGetKey" type="(Ljava/lang/String;[C)Ljava/security/Key;"/>
<method name="engineGetCertificateChain" type="(Ljava/lang/String;)[Ljava/security/cert/Certificate;"/>
<method name="engineGetCertificate" type="(Ljava/lang/String;)Ljava/security/cert/Certificate;"/>
<method name="engineGetCreationDate" type="(Ljava/lang/String;)Ljava/util/Date;"/>
<method name="engineSetKeyEntry" type="(Ljava/lang/String;Ljava/security/Key;[C[Ljava/security/cert/Certificate;)V"/>
<method name="engineSetKeyEntry" type="(Ljava/lang/String;[B[Ljava/security/cert/Certificate;)V"/>
<method name="engineSetCertificateEntry" type="(Ljava/lang/String;Ljava/security/cert/Certificate;)V"/>
<method name="engineDeleteEntry" type="(Ljava/lang/String;)V"/>
<method name="engineAliases" type="()Ljava/util/Enumeration;"/>
<method name="engineContainsAlias" type="(Ljava/lang/String;)Z"/>
<method name="engineSize" type="()I"/>
<method name="engineIsKeyEntry" type="(Ljava/lang/String;)Z"/>
<method name="engineIsCertificateEntry" type="(Ljava/lang/String;)Z"/>
<method name="engineGetCertificateAlias" type="(Ljava/security/cert/Certificate;)Ljava/lang/String;"/>
<method name="engineStore" type="(Ljava/io/OutputStream;[C)V"/>
<method name="engineStore" type="(Ljava/security/KeyStore$LoadStoreParameter;)V"/>
<method name="engineLoad" type="(Ljava/io/InputStream;[C)V"/>
<method name="engineLoad" type="(Ljava/security/KeyStore$LoadStoreParameter;)V"/>
<method name="engineGetEntry" type="(Ljava/lang/String;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Entry;"/>
<method name="engineSetEntry" type="(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V"/>
<method name="engineEntryInstanceOf" type="(Ljava/lang/String;Ljava/lang/Class;)Z"/>
</class>
<class name="java/security/MessageDigest">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/MessageDigest;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;" class_method="true"/>
<method name="reset" type="()V"/>
<method name="update" type="(B)V"/>
<method name="update" type="([BII)V"/>
<method name="update" type="([B)V"/>
<method name="digest" type="()[B"/>
<method name="digest" type="([BII)I"/>
<method name="digest" type="([B)[B"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isEqual" type="([B[B)Z" class_method="true"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getDigestLength" type="()I"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="update" type="(Ljava/nio/ByteBuffer;)V"/>
</class>
<class name="java/security/MessageDigestSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGetDigestLength" type="()I"/>
<method name="engineUpdate" type="(B)V"/>
<method name="engineUpdate" type="([BII)V"/>
<method name="engineUpdate" type="(Ljava/nio/ByteBuffer;)V"/>
<method name="engineDigest" type="()[B"/>
<method name="engineDigest" type="([BII)I"/>
<method name="engineReset" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/NoSuchAlgorithmException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/NoSuchProviderException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/Permission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="checkGuard" type="(Ljava/lang/Object;)V"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/PermissionCollection">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(Ljava/security/Permission;)V"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="isReadOnly" type="()Z"/>
<method name="setReadOnly" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/Permissions">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(Ljava/security/Permission;)V"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
</class>
<class name="java/security/Policy">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Policy$Parameters;)Ljava/security/Policy;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Policy$Parameters;Ljava/lang/String;)Ljava/security/Policy;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Policy$Parameters;Ljava/security/Provider;)Ljava/security/Policy;" class_method="true"/>
<method name="getParameters" type="()Ljava/security/Policy$Parameters;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="getPermissions" type="(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;"/>
<method name="refresh" type="()V"/>
<method name="getPermissions" type="(Ljava/security/ProtectionDomain;)Ljava/security/PermissionCollection;"/>
<method name="implies" type="(Ljava/security/ProtectionDomain;Ljava/security/Permission;)Z"/>
<method name="getPolicy" type="()Ljava/security/Policy;" class_method="true"/>
<method name="setPolicy" type="(Ljava/security/Policy;)V" class_method="true"/>
</class>
<class name="java/security/PolicySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineImplies" type="(Ljava/security/ProtectionDomain;Ljava/security/Permission;)Z"/>
<method name="engineRefresh" type="()V"/>
<method name="engineGetPermissions" type="(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;"/>
<method name="engineGetPermissions" type="(Ljava/security/ProtectionDomain;)Ljava/security/PermissionCollection;"/>
</class>
<class name="java/security/PrivilegedActionException">
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="getException" type="()Ljava/lang/Exception;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/ProtectionDomain">
<method name="&lt;init&gt;" type="(Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V"/>
<method name="getClassLoader" type="()Ljava/lang/ClassLoader;"/>
<method name="getCodeSource" type="()Ljava/security/CodeSource;"/>
<method name="getPermissions" type="()Ljava/security/PermissionCollection;"/>
<method name="getPrincipals" type="()[Ljava/security/Principal;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/Provider$Service">
<method name="&lt;init&gt;" type="(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getClassName" type="()Ljava/lang/String;"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="newInstance" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="supportsParameter" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/Provider">
<method name="&lt;init&gt;" type="(Ljava/lang/String;DLjava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getVersion" type="()D"/>
<method name="getInfo" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="load" type="(Ljava/io/InputStream;)V"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="getService" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider$Service;"/>
<method name="getServices" type="()Ljava/util/Set;"/>
<method name="putService" type="(Ljava/security/Provider$Service;)V"/>
<method name="removeService" type="(Ljava/security/Provider$Service;)V"/>
</class>
<class name="java/security/ProviderException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/SecureClassLoader">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/ClassLoader;)V"/>
<method name="getPermissions" type="(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;"/>
<method name="defineClass" type="(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class;"/>
<method name="defineClass" type="(Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/security/CodeSource;)Ljava/lang/Class;"/>
</class>
<class name="java/security/SecureRandom">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/SecureRandomSpi;Ljava/security/Provider;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/SecureRandom;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/SecureRandom;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/SecureRandom;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="setSeed" type="([B)V"/>
<method name="setSeed" type="(J)V"/>
<method name="nextBytes" type="([B)V"/>
<method name="next" type="(I)I"/>
<method name="getSeed" type="(I)[B" class_method="true"/>
<method name="generateSeed" type="(I)[B"/>
</class>
<class name="java/security/SecureRandomSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineSetSeed" type="([B)V"/>
<method name="engineNextBytes" type="([B)V"/>
<method name="engineGenerateSeed" type="(I)[B"/>
</class>
<class name="java/security/Security">
<method name="getAlgorithmProperty" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="insertProviderAt" type="(Ljava/security/Provider;I)I" class_method="true"/>
<method name="addProvider" type="(Ljava/security/Provider;)I" class_method="true"/>
<method name="removeProvider" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="getProviders" type="()[Ljava/security/Provider;" class_method="true"/>
<method name="getProvider" type="(Ljava/lang/String;)Ljava/security/Provider;" class_method="true"/>
<method name="getProviders" type="(Ljava/lang/String;)[Ljava/security/Provider;" class_method="true"/>
<method name="getProviders" type="(Ljava/util/Map;)[Ljava/security/Provider;" class_method="true"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="getAlgorithms" type="(Ljava/lang/String;)Ljava/util/Set;" class_method="true"/>
</class>
<class name="java/security/SecurityPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/security/Signature">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljava/security/Signature;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Signature;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/Signature;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="initVerify" type="(Ljava/security/PublicKey;)V"/>
<method name="initVerify" type="(Ljava/security/cert/Certificate;)V"/>
<method name="initSign" type="(Ljava/security/PrivateKey;)V"/>
<method name="initSign" type="(Ljava/security/PrivateKey;Ljava/security/SecureRandom;)V"/>
<method name="sign" type="()[B"/>
<method name="sign" type="([BII)I"/>
<method name="verify" type="([B)Z"/>
<method name="verify" type="([BII)Z"/>
<method name="update" type="(B)V"/>
<method name="update" type="([B)V"/>
<method name="update" type="([BII)V"/>
<method name="update" type="(Ljava/nio/ByteBuffer;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="setParameter" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="getParameters" type="()Ljava/security/AlgorithmParameters;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/SignatureException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/SignatureSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInitVerify" type="(Ljava/security/PublicKey;)V"/>
<method name="engineInitSign" type="(Ljava/security/PrivateKey;)V"/>
<method name="engineInitSign" type="(Ljava/security/PrivateKey;Ljava/security/SecureRandom;)V"/>
<method name="engineUpdate" type="(B)V"/>
<method name="engineUpdate" type="([BII)V"/>
<method name="engineUpdate" type="(Ljava/nio/ByteBuffer;)V"/>
<method name="engineSign" type="()[B"/>
<method name="engineSign" type="([BII)I"/>
<method name="engineVerify" type="([B)Z"/>
<method name="engineVerify" type="([BII)Z"/>
<method name="engineSetParameter" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="engineSetParameter" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="engineGetParameters" type="()Ljava/security/AlgorithmParameters;"/>
<method name="engineGetParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/security/SignedObject">
<method name="&lt;init&gt;" type="(Ljava/io/Serializable;Ljava/security/PrivateKey;Ljava/security/Signature;)V"/>
<method name="getObject" type="()Ljava/lang/Object;"/>
<method name="getSignature" type="()[B"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="verify" type="(Ljava/security/PublicKey;Ljava/security/Signature;)Z"/>
</class>
<class name="java/security/Signer">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/IdentityScope;)V"/>
<method name="getPrivateKey" type="()Ljava/security/PrivateKey;"/>
<method name="setKeyPair" type="(Ljava/security/KeyPair;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/spec/DSAParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getQ" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/DSAPrivateKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getQ" type="()Ljava/math/BigInteger;"/>
<method name="getX" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/DSAPublicKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getQ" type="()Ljava/math/BigInteger;"/>
<method name="getY" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/ECFieldF2m">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/math/BigInteger;)V"/>
<method name="&lt;init&gt;" type="(I[I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getFieldSize" type="()I"/>
<method name="getM" type="()I"/>
<method name="getMidTermsOfReductionPolynomial" type="()[I"/>
<method name="getReductionPolynomial" type="()Ljava/math/BigInteger;"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/security/spec/ECFieldFp">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;)V"/>
<method name="getFieldSize" type="()I"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/security/spec/ECGenParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/spec/ECParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/security/spec/EllipticCurve;Ljava/security/spec/ECPoint;Ljava/math/BigInteger;I)V"/>
<method name="getCofactor" type="()I"/>
<method name="getCurve" type="()Ljava/security/spec/EllipticCurve;"/>
<method name="getGenerator" type="()Ljava/security/spec/ECPoint;"/>
<method name="getOrder" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/ECPoint">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getAffineX" type="()Ljava/math/BigInteger;"/>
<method name="getAffineY" type="()Ljava/math/BigInteger;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/security/spec/ECPrivateKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)V"/>
<method name="getParams" type="()Ljava/security/spec/ECParameterSpec;"/>
<method name="getS" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/ECPublicKeySpec">
<method name="&lt;init&gt;" type="(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V"/>
<method name="getParams" type="()Ljava/security/spec/ECParameterSpec;"/>
<method name="getW" type="()Ljava/security/spec/ECPoint;"/>
</class>
<class name="java/security/spec/EllipticCurve">
<method name="&lt;init&gt;" type="(Ljava/security/spec/ECField;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/spec/ECField;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getA" type="()Ljava/math/BigInteger;"/>
<method name="getB" type="()Ljava/math/BigInteger;"/>
<method name="getField" type="()Ljava/security/spec/ECField;"/>
<method name="getSeed" type="()[B"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/security/spec/EncodedKeySpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getEncoded" type="()[B"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/spec/InvalidKeySpecException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/security/spec/InvalidParameterSpecException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/spec/MGF1ParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getDigestAlgorithm" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/spec/PKCS8EncodedKeySpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getEncoded" type="()[B"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/spec/PSSParameterSpec">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;II)V"/>
<method name="getSaltLength" type="()I"/>
<method name="getDigestAlgorithm" type="()Ljava/lang/String;"/>
<method name="getMGFAlgorithm" type="()Ljava/lang/String;"/>
<method name="getMGFParameters" type="()Ljava/security/spec/AlgorithmParameterSpec;"/>
<method name="getTrailerField" type="()I"/>
</class>
<class name="java/security/spec/RSAKeyGenParameterSpec">
<method name="&lt;init&gt;" type="(ILjava/math/BigInteger;)V"/>
<method name="getKeysize" type="()I"/>
<method name="getPublicExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/RSAMultiPrimePrivateCrtKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;[Ljava/security/spec/RSAOtherPrimeInfo;)V"/>
<method name="getCrtCoefficient" type="()Ljava/math/BigInteger;"/>
<method name="getOtherPrimeInfo" type="()[Ljava/security/spec/RSAOtherPrimeInfo;"/>
<method name="getPrimeExponentP" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeExponentQ" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeP" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeQ" type="()Ljava/math/BigInteger;"/>
<method name="getPublicExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/RSAOtherPrimeInfo">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getCrtCoefficient" type="()Ljava/math/BigInteger;"/>
<method name="getPrime" type="()Ljava/math/BigInteger;"/>
<method name="getExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/RSAPrivateCrtKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getCrtCoefficient" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeExponentP" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeExponentQ" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeP" type="()Ljava/math/BigInteger;"/>
<method name="getPrimeQ" type="()Ljava/math/BigInteger;"/>
<method name="getPublicExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/RSAPrivateKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getModulus" type="()Ljava/math/BigInteger;"/>
<method name="getPrivateExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/RSAPublicKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getModulus" type="()Ljava/math/BigInteger;"/>
<method name="getPublicExponent" type="()Ljava/math/BigInteger;"/>
</class>
<class name="java/security/spec/X509EncodedKeySpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getEncoded" type="()[B"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/Timestamp">
<method name="&lt;init&gt;" type="(Ljava/util/Date;Ljava/security/cert/CertPath;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getSignerCertPath" type="()Ljava/security/cert/CertPath;"/>
<method name="getTimestamp" type="()Ljava/util/Date;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/security/UnrecoverableEntryException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/security/UnrecoverableKeyException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/security/UnresolvedPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/security/cert/Certificate;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="getUnresolvedName" type="()Ljava/lang/String;"/>
<method name="getUnresolvedActions" type="()Ljava/lang/String;"/>
<method name="getUnresolvedType" type="()Ljava/lang/String;"/>
<method name="getUnresolvedCerts" type="()[Ljava/security/cert/Certificate;"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="java/sql/BatchUpdateException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="([ILjava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;[ILjava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;[ILjava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I[ILjava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="([I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;[I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I[I)V"/>
<method name="getUpdateCounts" type="()[I"/>
</class>
<class name="java/sql/ClientInfoStatus">
<method name="values" type="()[Ljava/sql/ClientInfoStatus;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/sql/ClientInfoStatus;" class_method="true"/>
</class>
<class name="java/sql/DataTruncation">
<method name="&lt;init&gt;" type="(IZZII)V"/>
<method name="&lt;init&gt;" type="(IZZIILjava/lang/Throwable;)V"/>
<method name="getDataSize" type="()I"/>
<method name="getIndex" type="()I"/>
<method name="getParameter" type="()Z"/>
<method name="getRead" type="()Z"/>
<method name="getTransferSize" type="()I"/>
</class>
<class name="java/sql/Date">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="getHours" type="()I"/>
<method name="getMinutes" type="()I"/>
<method name="getSeconds" type="()I"/>
<method name="setHours" type="(I)V"/>
<method name="setMinutes" type="(I)V"/>
<method name="setSeconds" type="(I)V"/>
<method name="setTime" type="(J)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/sql/Date;" class_method="true"/>
</class>
<class name="java/sql/DriverManager">
<method name="deregisterDriver" type="(Ljava/sql/Driver;)V" class_method="true"/>
<method name="getConnection" type="(Ljava/lang/String;)Ljava/sql/Connection;" class_method="true"/>
<method name="getConnection" type="(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;" class_method="true"/>
<method name="getConnection" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;" class_method="true"/>
<method name="getDriver" type="(Ljava/lang/String;)Ljava/sql/Driver;" class_method="true"/>
<method name="getDrivers" type="()Ljava/util/Enumeration;" class_method="true"/>
<method name="getLoginTimeout" type="()I" class_method="true"/>
<method name="getLogStream" type="()Ljava/io/PrintStream;" class_method="true"/>
<method name="getLogWriter" type="()Ljava/io/PrintWriter;" class_method="true"/>
<method name="println" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="registerDriver" type="(Ljava/sql/Driver;)V" class_method="true"/>
<method name="setLoginTimeout" type="(I)V" class_method="true"/>
<method name="setLogStream" type="(Ljava/io/PrintStream;)V" class_method="true"/>
<method name="setLogWriter" type="(Ljava/io/PrintWriter;)V" class_method="true"/>
</class>
<class name="java/sql/DriverPropertyInfo">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/sql/RowIdLifetime">
<method name="values" type="()[Ljava/sql/RowIdLifetime;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/sql/RowIdLifetime;" class_method="true"/>
</class>
<class name="java/sql/SQLClientInfoException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V"/>
<method name="getFailedProperties" type="()Ljava/util/Map;"/>
</class>
<class name="java/sql/SQLDataException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
<method name="getErrorCode" type="()I"/>
<method name="getNextException" type="()Ljava/sql/SQLException;"/>
<method name="getSQLState" type="()Ljava/lang/String;"/>
<method name="setNextException" type="(Ljava/sql/SQLException;)V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/sql/SQLFeatureNotSupportedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLIntegrityConstraintViolationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLInvalidAuthorizationSpecException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLNonTransientConnectionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLNonTransientException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/sql/SQLRecoverableException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLSyntaxErrorException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLTimeoutException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLTransactionRollbackException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLTransientConnectionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLTransientException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
</class>
<class name="java/sql/SQLWarning">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V"/>
<method name="getNextWarning" type="()Ljava/sql/SQLWarning;"/>
<method name="setNextWarning" type="(Ljava/sql/SQLWarning;)V"/>
</class>
<class name="java/sql/Time">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="getDate" type="()I"/>
<method name="getDay" type="()I"/>
<method name="getMonth" type="()I"/>
<method name="getYear" type="()I"/>
<method name="setDate" type="(I)V"/>
<method name="setMonth" type="(I)V"/>
<method name="setYear" type="(I)V"/>
<method name="setTime" type="(J)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/sql/Time;" class_method="true"/>
</class>
<class name="java/sql/Timestamp">
<method name="&lt;init&gt;" type="(IIIIIII)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="after" type="(Ljava/sql/Timestamp;)Z"/>
<method name="before" type="(Ljava/sql/Timestamp;)Z"/>
<method name="compareTo" type="(Ljava/util/Date;)I"/>
<method name="compareTo" type="(Ljava/sql/Timestamp;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="equals" type="(Ljava/sql/Timestamp;)Z"/>
<method name="getNanos" type="()I"/>
<method name="getTime" type="()J"/>
<method name="setNanos" type="(I)V"/>
<method name="setTime" type="(J)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/sql/Timestamp;" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/sql/Types">
</class>
<class name="java/text/Annotation">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="getValue" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/AttributedCharacterIterator$Attribute">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/AttributedString">
<method name="&lt;init&gt;" type="(Ljava/text/AttributedCharacterIterator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/text/AttributedCharacterIterator;II)V"/>
<method name="&lt;init&gt;" type="(Ljava/text/AttributedCharacterIterator;II[Ljava/text/AttributedCharacterIterator$Attribute;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Map;)V"/>
<method name="addAttribute" type="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V"/>
<method name="addAttribute" type="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V"/>
<method name="addAttributes" type="(Ljava/util/Map;II)V"/>
<method name="getIterator" type="()Ljava/text/AttributedCharacterIterator;"/>
<method name="getIterator" type="([Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/text/AttributedCharacterIterator;"/>
<method name="getIterator" type="([Ljava/text/AttributedCharacterIterator$Attribute;II)Ljava/text/AttributedCharacterIterator;"/>
</class>
<class name="java/text/Bidi">
<method name="&lt;init&gt;" type="(Ljava/text/AttributedCharacterIterator;)V"/>
<method name="&lt;init&gt;" type="([CI[BIII)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="baseIsLeftToRight" type="()Z"/>
<method name="createLineBidi" type="(II)Ljava/text/Bidi;"/>
<method name="getBaseLevel" type="()I"/>
<method name="getLength" type="()I"/>
<method name="getLevelAt" type="(I)I"/>
<method name="getRunCount" type="()I"/>
<method name="getRunLevel" type="(I)I"/>
<method name="getRunLimit" type="(I)I"/>
<method name="getRunStart" type="(I)I"/>
<method name="isLeftToRight" type="()Z"/>
<method name="isMixed" type="()Z"/>
<method name="isRightToLeft" type="()Z"/>
<method name="reorderVisually" type="([BI[Ljava/lang/Object;II)V" class_method="true"/>
<method name="requiresBidi" type="([CII)Z" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/BreakIterator">
<method name="&lt;init&gt;" type="()V"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getCharacterInstance" type="()Ljava/text/BreakIterator;" class_method="true"/>
<method name="getCharacterInstance" type="(Ljava/util/Locale;)Ljava/text/BreakIterator;" class_method="true"/>
<method name="getLineInstance" type="()Ljava/text/BreakIterator;" class_method="true"/>
<method name="getLineInstance" type="(Ljava/util/Locale;)Ljava/text/BreakIterator;" class_method="true"/>
<method name="getSentenceInstance" type="()Ljava/text/BreakIterator;" class_method="true"/>
<method name="getSentenceInstance" type="(Ljava/util/Locale;)Ljava/text/BreakIterator;" class_method="true"/>
<method name="getWordInstance" type="()Ljava/text/BreakIterator;" class_method="true"/>
<method name="getWordInstance" type="(Ljava/util/Locale;)Ljava/text/BreakIterator;" class_method="true"/>
<method name="isBoundary" type="(I)Z"/>
<method name="preceding" type="(I)I"/>
<method name="setText" type="(Ljava/lang/String;)V"/>
<method name="current" type="()I"/>
<method name="first" type="()I"/>
<method name="following" type="(I)I"/>
<method name="getText" type="()Ljava/text/CharacterIterator;"/>
<method name="last" type="()I"/>
<method name="next" type="()I"/>
<method name="next" type="(I)I"/>
<method name="previous" type="()I"/>
<method name="setText" type="(Ljava/text/CharacterIterator;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/text/ChoiceFormat">
<method name="&lt;init&gt;" type="([D[Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="applyPattern" type="(Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="format" type="(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="getFormats" type="()[Ljava/lang/Object;"/>
<method name="getLimits" type="()[D"/>
<method name="hashCode" type="()I"/>
<method name="nextDouble" type="(D)D" class_method="true"/>
<method name="nextDouble" type="(DZ)D" class_method="true"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"/>
<method name="previousDouble" type="(D)D" class_method="true"/>
<method name="setChoices" type="([D[Ljava/lang/String;)V"/>
<method name="toPattern" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/CollationElementIterator">
<method name="getMaxExpansion" type="(I)I"/>
<method name="getOffset" type="()I"/>
<method name="next" type="()I"/>
<method name="previous" type="()I"/>
<method name="primaryOrder" type="(I)I" class_method="true"/>
<method name="reset" type="()V"/>
<method name="secondaryOrder" type="(I)S" class_method="true"/>
<method name="setOffset" type="(I)V"/>
<method name="setText" type="(Ljava/text/CharacterIterator;)V"/>
<method name="setText" type="(Ljava/lang/String;)V"/>
<method name="tertiaryOrder" type="(I)S" class_method="true"/>
</class>
<class name="java/text/CollationKey">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="compareTo" type="(Ljava/text/CollationKey;)I"/>
<method name="getSourceString" type="()Ljava/lang/String;"/>
<method name="toByteArray" type="()[B"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/text/Collator">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
<method name="compare" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="equals" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getCollationKey" type="(Ljava/lang/String;)Ljava/text/CollationKey;"/>
<method name="getDecomposition" type="()I"/>
<method name="getInstance" type="()Ljava/text/Collator;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/text/Collator;" class_method="true"/>
<method name="getStrength" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="setDecomposition" type="(I)V"/>
<method name="setStrength" type="(I)V"/>
</class>
<class name="java/text/DateFormat$Field">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="getCalendarField" type="()I"/>
<method name="ofCalendarField" type="(I)Ljava/text/DateFormat$Field;" class_method="true"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/text/DateFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="format" type="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(Ljava/util/Date;)Ljava/lang/String;"/>
<method name="format" type="(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getCalendar" type="()Ljava/util/Calendar;"/>
<method name="getDateInstance" type="()Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateInstance" type="(I)Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateInstance" type="(ILjava/util/Locale;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateTimeInstance" type="()Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateTimeInstance" type="(II)Ljava/text/DateFormat;" class_method="true"/>
<method name="getDateTimeInstance" type="(IILjava/util/Locale;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getInstance" type="()Ljava/text/DateFormat;" class_method="true"/>
<method name="getNumberFormat" type="()Ljava/text/NumberFormat;"/>
<method name="getTimeInstance" type="()Ljava/text/DateFormat;" class_method="true"/>
<method name="getTimeInstance" type="(I)Ljava/text/DateFormat;" class_method="true"/>
<method name="getTimeInstance" type="(ILjava/util/Locale;)Ljava/text/DateFormat;" class_method="true"/>
<method name="getTimeZone" type="()Ljava/util/TimeZone;"/>
<method name="hashCode" type="()I"/>
<method name="isLenient" type="()Z"/>
<method name="parse" type="(Ljava/lang/String;)Ljava/util/Date;"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"/>
<method name="parseObject" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"/>
<method name="setCalendar" type="(Ljava/util/Calendar;)V"/>
<method name="setLenient" type="(Z)V"/>
<method name="setNumberFormat" type="(Ljava/text/NumberFormat;)V"/>
<method name="setTimeZone" type="(Ljava/util/TimeZone;)V"/>
</class>
<class name="java/text/DateFormatSymbols">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Locale;)V"/>
<method name="getInstance" type="()Ljava/text/DateFormatSymbols;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;" class_method="true"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getAmPmStrings" type="()[Ljava/lang/String;"/>
<method name="getEras" type="()[Ljava/lang/String;"/>
<method name="getLocalPatternChars" type="()Ljava/lang/String;"/>
<method name="getMonths" type="()[Ljava/lang/String;"/>
<method name="getShortMonths" type="()[Ljava/lang/String;"/>
<method name="getShortWeekdays" type="()[Ljava/lang/String;"/>
<method name="getWeekdays" type="()[Ljava/lang/String;"/>
<method name="getZoneStrings" type="()[[Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="setAmPmStrings" type="([Ljava/lang/String;)V"/>
<method name="setEras" type="([Ljava/lang/String;)V"/>
<method name="setLocalPatternChars" type="(Ljava/lang/String;)V"/>
<method name="setMonths" type="([Ljava/lang/String;)V"/>
<method name="setShortMonths" type="([Ljava/lang/String;)V"/>
<method name="setShortWeekdays" type="([Ljava/lang/String;)V"/>
<method name="setWeekdays" type="([Ljava/lang/String;)V"/>
<method name="setZoneStrings" type="([[Ljava/lang/String;)V"/>
</class>
<class name="java/text/DecimalFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V"/>
<method name="applyLocalizedPattern" type="(Ljava/lang/String;)V"/>
<method name="applyPattern" type="(Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="formatToCharacterIterator" type="(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"/>
<method name="format" type="(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="getDecimalFormatSymbols" type="()Ljava/text/DecimalFormatSymbols;"/>
<method name="getCurrency" type="()Ljava/util/Currency;"/>
<method name="getGroupingSize" type="()I"/>
<method name="getMultiplier" type="()I"/>
<method name="getNegativePrefix" type="()Ljava/lang/String;"/>
<method name="getNegativeSuffix" type="()Ljava/lang/String;"/>
<method name="getPositivePrefix" type="()Ljava/lang/String;"/>
<method name="getPositiveSuffix" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="isDecimalSeparatorAlwaysShown" type="()Z"/>
<method name="isParseBigDecimal" type="()Z"/>
<method name="setParseIntegerOnly" type="(Z)V"/>
<method name="isParseIntegerOnly" type="()Z"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"/>
<method name="setDecimalFormatSymbols" type="(Ljava/text/DecimalFormatSymbols;)V"/>
<method name="setCurrency" type="(Ljava/util/Currency;)V"/>
<method name="setDecimalSeparatorAlwaysShown" type="(Z)V"/>
<method name="setGroupingSize" type="(I)V"/>
<method name="setGroupingUsed" type="(Z)V"/>
<method name="isGroupingUsed" type="()Z"/>
<method name="setMaximumFractionDigits" type="(I)V"/>
<method name="setMaximumIntegerDigits" type="(I)V"/>
<method name="setMinimumFractionDigits" type="(I)V"/>
<method name="setMinimumIntegerDigits" type="(I)V"/>
<method name="setMultiplier" type="(I)V"/>
<method name="setNegativePrefix" type="(Ljava/lang/String;)V"/>
<method name="setNegativeSuffix" type="(Ljava/lang/String;)V"/>
<method name="setPositivePrefix" type="(Ljava/lang/String;)V"/>
<method name="setPositiveSuffix" type="(Ljava/lang/String;)V"/>
<method name="setParseBigDecimal" type="(Z)V"/>
<method name="toLocalizedPattern" type="()Ljava/lang/String;"/>
<method name="toPattern" type="()Ljava/lang/String;"/>
<method name="getRoundingMode" type="()Ljava/math/RoundingMode;"/>
<method name="setRoundingMode" type="(Ljava/math/RoundingMode;)V"/>
</class>
<class name="java/text/DecimalFormatSymbols">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Locale;)V"/>
<method name="getInstance" type="()Ljava/text/DecimalFormatSymbols;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;" class_method="true"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getCurrency" type="()Ljava/util/Currency;"/>
<method name="getInternationalCurrencySymbol" type="()Ljava/lang/String;"/>
<method name="getCurrencySymbol" type="()Ljava/lang/String;"/>
<method name="getDecimalSeparator" type="()C"/>
<method name="getDigit" type="()C"/>
<method name="getGroupingSeparator" type="()C"/>
<method name="getInfinity" type="()Ljava/lang/String;"/>
<method name="getMinusSign" type="()C"/>
<method name="getMonetaryDecimalSeparator" type="()C"/>
<method name="getNaN" type="()Ljava/lang/String;"/>
<method name="getPatternSeparator" type="()C"/>
<method name="getPercent" type="()C"/>
<method name="getPerMill" type="()C"/>
<method name="getZeroDigit" type="()C"/>
<method name="getExponentSeparator" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="setCurrency" type="(Ljava/util/Currency;)V"/>
<method name="setInternationalCurrencySymbol" type="(Ljava/lang/String;)V"/>
<method name="setCurrencySymbol" type="(Ljava/lang/String;)V"/>
<method name="setDecimalSeparator" type="(C)V"/>
<method name="setDigit" type="(C)V"/>
<method name="setGroupingSeparator" type="(C)V"/>
<method name="setInfinity" type="(Ljava/lang/String;)V"/>
<method name="setMinusSign" type="(C)V"/>
<method name="setMonetaryDecimalSeparator" type="(C)V"/>
<method name="setNaN" type="(Ljava/lang/String;)V"/>
<method name="setPatternSeparator" type="(C)V"/>
<method name="setPercent" type="(C)V"/>
<method name="setPerMill" type="(C)V"/>
<method name="setZeroDigit" type="(C)V"/>
<method name="setExponentSeparator" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/text/FieldPosition">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/text/Format$Field;)V"/>
<method name="&lt;init&gt;" type="(Ljava/text/Format$Field;I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getBeginIndex" type="()I"/>
<method name="getEndIndex" type="()I"/>
<method name="getField" type="()I"/>
<method name="getFieldAttribute" type="()Ljava/text/Format$Field;"/>
<method name="hashCode" type="()I"/>
<method name="setBeginIndex" type="(I)V"/>
<method name="setEndIndex" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/Format$Field">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/text/Format">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="format" type="(Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="format" type="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="formatToCharacterIterator" type="(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"/>
<method name="parseObject" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="parseObject" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"/>
</class>
<class name="java/text/MessageFormat$Field">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/text/MessageFormat">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="applyPattern" type="(Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="formatToCharacterIterator" type="(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"/>
<method name="format" type="([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="getFormats" type="()[Ljava/text/Format;"/>
<method name="getFormatsByArgumentIndex" type="()[Ljava/text/Format;"/>
<method name="setFormatByArgumentIndex" type="(ILjava/text/Format;)V"/>
<method name="setFormatsByArgumentIndex" type="([Ljava/text/Format;)V"/>
<method name="getLocale" type="()Ljava/util/Locale;"/>
<method name="hashCode" type="()I"/>
<method name="parse" type="(Ljava/lang/String;)[Ljava/lang/Object;"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;"/>
<method name="parseObject" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"/>
<method name="setFormat" type="(ILjava/text/Format;)V"/>
<method name="setFormats" type="([Ljava/text/Format;)V"/>
<method name="setLocale" type="(Ljava/util/Locale;)V"/>
<method name="toPattern" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/Normalizer$Form">
<method name="values" type="()[Ljava/text/Normalizer$Form;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/text/Normalizer$Form;" class_method="true"/>
</class>
<class name="java/text/Normalizer">
<method name="isNormalized" type="(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Z" class_method="true"/>
<method name="normalize" type="(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="java/text/NumberFormat$Field">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="readResolve" type="()Ljava/lang/Object;"/>
</class>
<class name="java/text/NumberFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="format" type="(D)Ljava/lang/String;"/>
<method name="format" type="(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(J)Ljava/lang/String;"/>
<method name="format" type="(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="format" type="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getCurrency" type="()Ljava/util/Currency;"/>
<method name="getCurrencyInstance" type="()Ljava/text/NumberFormat;" class_method="true"/>
<method name="getCurrencyInstance" type="(Ljava/util/Locale;)Ljava/text/NumberFormat;" class_method="true"/>
<method name="getIntegerInstance" type="()Ljava/text/NumberFormat;" class_method="true"/>
<method name="getIntegerInstance" type="(Ljava/util/Locale;)Ljava/text/NumberFormat;" class_method="true"/>
<method name="getInstance" type="()Ljava/text/NumberFormat;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/text/NumberFormat;" class_method="true"/>
<method name="getMaximumFractionDigits" type="()I"/>
<method name="getMaximumIntegerDigits" type="()I"/>
<method name="getMinimumFractionDigits" type="()I"/>
<method name="getMinimumIntegerDigits" type="()I"/>
<method name="getNumberInstance" type="()Ljava/text/NumberFormat;" class_method="true"/>
<method name="getNumberInstance" type="(Ljava/util/Locale;)Ljava/text/NumberFormat;" class_method="true"/>
<method name="getPercentInstance" type="()Ljava/text/NumberFormat;" class_method="true"/>
<method name="getPercentInstance" type="(Ljava/util/Locale;)Ljava/text/NumberFormat;" class_method="true"/>
<method name="hashCode" type="()I"/>
<method name="isGroupingUsed" type="()Z"/>
<method name="isParseIntegerOnly" type="()Z"/>
<method name="parse" type="(Ljava/lang/String;)Ljava/lang/Number;"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"/>
<method name="parseObject" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"/>
<method name="setCurrency" type="(Ljava/util/Currency;)V"/>
<method name="setGroupingUsed" type="(Z)V"/>
<method name="setMaximumFractionDigits" type="(I)V"/>
<method name="setMaximumIntegerDigits" type="(I)V"/>
<method name="setMinimumFractionDigits" type="(I)V"/>
<method name="setMinimumIntegerDigits" type="(I)V"/>
<method name="setParseIntegerOnly" type="(Z)V"/>
<method name="getRoundingMode" type="()Ljava/math/RoundingMode;"/>
<method name="setRoundingMode" type="(Ljava/math/RoundingMode;)V"/>
</class>
<class name="java/text/ParseException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="getErrorOffset" type="()I"/>
</class>
<class name="java/text/ParsePosition">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getErrorIndex" type="()I"/>
<method name="getIndex" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="setErrorIndex" type="(I)V"/>
<method name="setIndex" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/RuleBasedCollator">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getCollationElementIterator" type="(Ljava/text/CharacterIterator;)Ljava/text/CollationElementIterator;"/>
<method name="getCollationElementIterator" type="(Ljava/lang/String;)Ljava/text/CollationElementIterator;"/>
<method name="getRules" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="compare" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getCollationKey" type="(Ljava/lang/String;)Ljava/text/CollationKey;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="java/text/SimpleDateFormat">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Locale;)V"/>
<method name="applyLocalizedPattern" type="(Ljava/lang/String;)V"/>
<method name="applyPattern" type="(Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="formatToCharacterIterator" type="(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"/>
<method name="format" type="(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"/>
<method name="get2DigitYearStart" type="()Ljava/util/Date;"/>
<method name="getDateFormatSymbols" type="()Ljava/text/DateFormatSymbols;"/>
<method name="hashCode" type="()I"/>
<method name="parse" type="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"/>
<method name="set2DigitYearStart" type="(Ljava/util/Date;)V"/>
<method name="setDateFormatSymbols" type="(Ljava/text/DateFormatSymbols;)V"/>
<method name="toLocalizedPattern" type="()Ljava/lang/String;"/>
<method name="toPattern" type="()Ljava/lang/String;"/>
</class>
<class name="java/text/StringCharacterIterator">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;III)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="current" type="()C"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="first" type="()C"/>
<method name="getBeginIndex" type="()I"/>
<method name="getEndIndex" type="()I"/>
<method name="getIndex" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="last" type="()C"/>
<method name="next" type="()C"/>
<method name="previous" type="()C"/>
<method name="setIndex" type="(I)C"/>
<method name="setText" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/AbstractCollection">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="clear" type="()V"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="containsAll" type="(Ljava/util/Collection;)Z"/>
<method name="isEmpty" type="()Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="retainAll" type="(Ljava/util/Collection;)Z"/>
<method name="size" type="()I"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/AbstractList">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="clear" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="indexOf" type="(Ljava/lang/Object;)I"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;)I"/>
<method name="listIterator" type="()Ljava/util/ListIterator;"/>
<method name="listIterator" type="(I)Ljava/util/ListIterator;"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="removeRange" type="(II)V"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="subList" type="(II)Ljava/util/List;"/>
</class>
<class name="java/util/AbstractMap$SimpleEntry">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map$Entry;)V"/>
<method name="getKey" type="()Ljava/lang/Object;"/>
<method name="getValue" type="()Ljava/lang/Object;"/>
<method name="setValue" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/AbstractMap$SimpleImmutableEntry">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map$Entry;)V"/>
<method name="getKey" type="()Ljava/lang/Object;"/>
<method name="getValue" type="()Ljava/lang/Object;"/>
<method name="setValue" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/AbstractMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/util/AbstractQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="remove" type="()Ljava/lang/Object;"/>
<method name="element" type="()Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
</class>
<class name="java/util/AbstractSequentialList">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="listIterator" type="(I)Ljava/util/ListIterator;"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/util/AbstractSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
</class>
<class name="java/util/ArrayDeque">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="addFirst" type="(Ljava/lang/Object;)V"/>
<method name="addLast" type="(Ljava/lang/Object;)V"/>
<method name="offerFirst" type="(Ljava/lang/Object;)Z"/>
<method name="offerLast" type="(Ljava/lang/Object;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="push" type="(Ljava/lang/Object;)V"/>
<method name="removeFirst" type="()Ljava/lang/Object;"/>
<method name="remove" type="()Ljava/lang/Object;"/>
<method name="pop" type="()Ljava/lang/Object;"/>
<method name="removeLast" type="()Ljava/lang/Object;"/>
<method name="pollFirst" type="()Ljava/lang/Object;"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="pollLast" type="()Ljava/lang/Object;"/>
<method name="getFirst" type="()Ljava/lang/Object;"/>
<method name="element" type="()Ljava/lang/Object;"/>
<method name="getLast" type="()Ljava/lang/Object;"/>
<method name="peekFirst" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="peekLast" type="()Ljava/lang/Object;"/>
<method name="removeFirstOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeLastOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/util/ArrayDeque;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="descendingIterator" type="()Ljava/util/Iterator;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/util/ArrayList">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="indexOf" type="(Ljava/lang/Object;)I"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;)I"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeRange" type="(II)V"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="trimToSize" type="()V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="java/util/Arrays">
<method name="asList" type="([Ljava/lang/Object;)Ljava/util/List;" class_method="true"/>
<method name="binarySearch" type="([BB)I" class_method="true"/>
<method name="binarySearch" type="([BIIB)I" class_method="true"/>
<method name="binarySearch" type="([CC)I" class_method="true"/>
<method name="binarySearch" type="([CIIC)I" class_method="true"/>
<method name="binarySearch" type="([DD)I" class_method="true"/>
<method name="binarySearch" type="([DIID)I" class_method="true"/>
<method name="binarySearch" type="([FF)I" class_method="true"/>
<method name="binarySearch" type="([FIIF)I" class_method="true"/>
<method name="binarySearch" type="([II)I" class_method="true"/>
<method name="binarySearch" type="([IIII)I" class_method="true"/>
<method name="binarySearch" type="([JJ)I" class_method="true"/>
<method name="binarySearch" type="([JIIJ)I" class_method="true"/>
<method name="binarySearch" type="([Ljava/lang/Object;Ljava/lang/Object;)I" class_method="true"/>
<method name="binarySearch" type="([Ljava/lang/Object;IILjava/lang/Object;)I" class_method="true"/>
<method name="binarySearch" type="([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I" class_method="true"/>
<method name="binarySearch" type="([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I" class_method="true"/>
<method name="binarySearch" type="([SS)I" class_method="true"/>
<method name="binarySearch" type="([SIIS)I" class_method="true"/>
<method name="fill" type="([BB)V" class_method="true"/>
<method name="fill" type="([BIIB)V" class_method="true"/>
<method name="fill" type="([SS)V" class_method="true"/>
<method name="fill" type="([SIIS)V" class_method="true"/>
<method name="fill" type="([CC)V" class_method="true"/>
<method name="fill" type="([CIIC)V" class_method="true"/>
<method name="fill" type="([II)V" class_method="true"/>
<method name="fill" type="([IIII)V" class_method="true"/>
<method name="fill" type="([JJ)V" class_method="true"/>
<method name="fill" type="([JIIJ)V" class_method="true"/>
<method name="fill" type="([FF)V" class_method="true"/>
<method name="fill" type="([FIIF)V" class_method="true"/>
<method name="fill" type="([DD)V" class_method="true"/>
<method name="fill" type="([DIID)V" class_method="true"/>
<method name="fill" type="([ZZ)V" class_method="true"/>
<method name="fill" type="([ZIIZ)V" class_method="true"/>
<method name="fill" type="([Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="fill" type="([Ljava/lang/Object;IILjava/lang/Object;)V" class_method="true"/>
<method name="hashCode" type="([Z)I" class_method="true"/>
<method name="hashCode" type="([I)I" class_method="true"/>
<method name="hashCode" type="([S)I" class_method="true"/>
<method name="hashCode" type="([C)I" class_method="true"/>
<method name="hashCode" type="([B)I" class_method="true"/>
<method name="hashCode" type="([J)I" class_method="true"/>
<method name="hashCode" type="([F)I" class_method="true"/>
<method name="hashCode" type="([D)I" class_method="true"/>
<method name="hashCode" type="([Ljava/lang/Object;)I" class_method="true"/>
<method name="deepHashCode" type="([Ljava/lang/Object;)I" class_method="true"/>
<method name="equals" type="([B[B)Z" class_method="true"/>
<method name="equals" type="([S[S)Z" class_method="true"/>
<method name="equals" type="([C[C)Z" class_method="true"/>
<method name="equals" type="([I[I)Z" class_method="true"/>
<method name="equals" type="([J[J)Z" class_method="true"/>
<method name="equals" type="([F[F)Z" class_method="true"/>
<method name="equals" type="([D[D)Z" class_method="true"/>
<method name="equals" type="([Z[Z)Z" class_method="true"/>
<method name="equals" type="([Ljava/lang/Object;[Ljava/lang/Object;)Z" class_method="true"/>
<method name="deepEquals" type="([Ljava/lang/Object;[Ljava/lang/Object;)Z" class_method="true"/>
<method name="sort" type="([B)V" class_method="true"/>
<method name="sort" type="([BII)V" class_method="true"/>
<method name="sort" type="([C)V" class_method="true"/>
<method name="sort" type="([CII)V" class_method="true"/>
<method name="sort" type="([D)V" class_method="true"/>
<method name="sort" type="([DII)V" class_method="true"/>
<method name="sort" type="([F)V" class_method="true"/>
<method name="sort" type="([FII)V" class_method="true"/>
<method name="sort" type="([I)V" class_method="true"/>
<method name="sort" type="([III)V" class_method="true"/>
<method name="sort" type="([J)V" class_method="true"/>
<method name="sort" type="([JII)V" class_method="true"/>
<method name="sort" type="([S)V" class_method="true"/>
<method name="sort" type="([SII)V" class_method="true"/>
<method name="sort" type="([Ljava/lang/Object;)V" class_method="true"/>
<method name="sort" type="([Ljava/lang/Object;II)V" class_method="true"/>
<method name="sort" type="([Ljava/lang/Object;IILjava/util/Comparator;)V" class_method="true"/>
<method name="sort" type="([Ljava/lang/Object;Ljava/util/Comparator;)V" class_method="true"/>
<method name="toString" type="([Z)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([B)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([C)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([D)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([F)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([I)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([J)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([S)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="([Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="deepToString" type="([Ljava/lang/Object;)Ljava/lang/String;" class_method="true"/>
<method name="copyOf" type="([ZI)[Z" class_method="true"/>
<method name="copyOf" type="([BI)[B" class_method="true"/>
<method name="copyOf" type="([CI)[C" class_method="true"/>
<method name="copyOf" type="([DI)[D" class_method="true"/>
<method name="copyOf" type="([FI)[F" class_method="true"/>
<method name="copyOf" type="([II)[I" class_method="true"/>
<method name="copyOf" type="([JI)[J" class_method="true"/>
<method name="copyOf" type="([SI)[S" class_method="true"/>
<method name="copyOf" type="([Ljava/lang/Object;I)[Ljava/lang/Object;" class_method="true"/>
<method name="copyOf" type="([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;" class_method="true"/>
<method name="copyOfRange" type="([ZII)[Z" class_method="true"/>
<method name="copyOfRange" type="([BII)[B" class_method="true"/>
<method name="copyOfRange" type="([CII)[C" class_method="true"/>
<method name="copyOfRange" type="([DII)[D" class_method="true"/>
<method name="copyOfRange" type="([FII)[F" class_method="true"/>
<method name="copyOfRange" type="([III)[I" class_method="true"/>
<method name="copyOfRange" type="([JII)[J" class_method="true"/>
<method name="copyOfRange" type="([SII)[S" class_method="true"/>
<method name="copyOfRange" type="([Ljava/lang/Object;II)[Ljava/lang/Object;" class_method="true"/>
<method name="copyOfRange" type="([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;" class_method="true"/>
</class>
<class name="java/util/BitSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="get" type="(I)Z"/>
<method name="get" type="(II)Ljava/util/BitSet;"/>
<method name="set" type="(I)V"/>
<method name="set" type="(IZ)V"/>
<method name="set" type="(II)V"/>
<method name="set" type="(IIZ)V"/>
<method name="clear" type="()V"/>
<method name="clear" type="(I)V"/>
<method name="clear" type="(II)V"/>
<method name="flip" type="(I)V"/>
<method name="flip" type="(II)V"/>
<method name="intersects" type="(Ljava/util/BitSet;)Z"/>
<method name="and" type="(Ljava/util/BitSet;)V"/>
<method name="andNot" type="(Ljava/util/BitSet;)V"/>
<method name="or" type="(Ljava/util/BitSet;)V"/>
<method name="xor" type="(Ljava/util/BitSet;)V"/>
<method name="size" type="()I"/>
<method name="length" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="nextSetBit" type="(I)I"/>
<method name="nextClearBit" type="(I)I"/>
<method name="isEmpty" type="()Z"/>
<method name="cardinality" type="()I"/>
</class>
<class name="java/util/Calendar">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/TimeZone;Ljava/util/Locale;)V"/>
<method name="add" type="(II)V"/>
<method name="after" type="(Ljava/lang/Object;)Z"/>
<method name="before" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="clear" type="(I)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="complete" type="()V"/>
<method name="computeFields" type="()V"/>
<method name="computeTime" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(I)I"/>
<method name="getActualMaximum" type="(I)I"/>
<method name="getActualMinimum" type="(I)I"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getFirstDayOfWeek" type="()I"/>
<method name="getGreatestMinimum" type="(I)I"/>
<method name="getInstance" type="()Ljava/util/Calendar;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/util/Calendar;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/TimeZone;)Ljava/util/Calendar;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;" class_method="true"/>
<method name="getLeastMaximum" type="(I)I"/>
<method name="getMaximum" type="(I)I"/>
<method name="getMinimalDaysInFirstWeek" type="()I"/>
<method name="getMinimum" type="(I)I"/>
<method name="getTime" type="()Ljava/util/Date;"/>
<method name="getTimeInMillis" type="()J"/>
<method name="getTimeZone" type="()Ljava/util/TimeZone;"/>
<method name="hashCode" type="()I"/>
<method name="internalGet" type="(I)I"/>
<method name="isLenient" type="()Z"/>
<method name="isSet" type="(I)Z"/>
<method name="roll" type="(II)V"/>
<method name="roll" type="(IZ)V"/>
<method name="set" type="(II)V"/>
<method name="set" type="(III)V"/>
<method name="set" type="(IIIII)V"/>
<method name="set" type="(IIIIII)V"/>
<method name="setFirstDayOfWeek" type="(I)V"/>
<method name="setLenient" type="(Z)V"/>
<method name="setMinimalDaysInFirstWeek" type="(I)V"/>
<method name="setTime" type="(Ljava/util/Date;)V"/>
<method name="setTimeInMillis" type="(J)V"/>
<method name="setTimeZone" type="(Ljava/util/TimeZone;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="compareTo" type="(Ljava/util/Calendar;)I"/>
<method name="getDisplayName" type="(IILjava/util/Locale;)Ljava/lang/String;"/>
<method name="getDisplayNames" type="(IILjava/util/Locale;)Ljava/util/Map;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/util/Collections">
<method name="binarySearch" type="(Ljava/util/List;Ljava/lang/Object;)I" class_method="true"/>
<method name="binarySearch" type="(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I" class_method="true"/>
<method name="copy" type="(Ljava/util/List;Ljava/util/List;)V" class_method="true"/>
<method name="enumeration" type="(Ljava/util/Collection;)Ljava/util/Enumeration;" class_method="true"/>
<method name="fill" type="(Ljava/util/List;Ljava/lang/Object;)V" class_method="true"/>
<method name="max" type="(Ljava/util/Collection;)Ljava/lang/Object;" class_method="true"/>
<method name="max" type="(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;" class_method="true"/>
<method name="min" type="(Ljava/util/Collection;)Ljava/lang/Object;" class_method="true"/>
<method name="min" type="(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;" class_method="true"/>
<method name="nCopies" type="(ILjava/lang/Object;)Ljava/util/List;" class_method="true"/>
<method name="reverse" type="(Ljava/util/List;)V" class_method="true"/>
<method name="reverseOrder" type="()Ljava/util/Comparator;" class_method="true"/>
<method name="reverseOrder" type="(Ljava/util/Comparator;)Ljava/util/Comparator;" class_method="true"/>
<method name="shuffle" type="(Ljava/util/List;)V" class_method="true"/>
<method name="shuffle" type="(Ljava/util/List;Ljava/util/Random;)V" class_method="true"/>
<method name="singleton" type="(Ljava/lang/Object;)Ljava/util/Set;" class_method="true"/>
<method name="singletonList" type="(Ljava/lang/Object;)Ljava/util/List;" class_method="true"/>
<method name="singletonMap" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;" class_method="true"/>
<method name="sort" type="(Ljava/util/List;)V" class_method="true"/>
<method name="sort" type="(Ljava/util/List;Ljava/util/Comparator;)V" class_method="true"/>
<method name="swap" type="(Ljava/util/List;II)V" class_method="true"/>
<method name="replaceAll" type="(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)Z" class_method="true"/>
<method name="rotate" type="(Ljava/util/List;I)V" class_method="true"/>
<method name="indexOfSubList" type="(Ljava/util/List;Ljava/util/List;)I" class_method="true"/>
<method name="lastIndexOfSubList" type="(Ljava/util/List;Ljava/util/List;)I" class_method="true"/>
<method name="list" type="(Ljava/util/Enumeration;)Ljava/util/ArrayList;" class_method="true"/>
<method name="synchronizedCollection" type="(Ljava/util/Collection;)Ljava/util/Collection;" class_method="true"/>
<method name="synchronizedList" type="(Ljava/util/List;)Ljava/util/List;" class_method="true"/>
<method name="synchronizedMap" type="(Ljava/util/Map;)Ljava/util/Map;" class_method="true"/>
<method name="synchronizedSet" type="(Ljava/util/Set;)Ljava/util/Set;" class_method="true"/>
<method name="synchronizedSortedMap" type="(Ljava/util/SortedMap;)Ljava/util/SortedMap;" class_method="true"/>
<method name="synchronizedSortedSet" type="(Ljava/util/SortedSet;)Ljava/util/SortedSet;" class_method="true"/>
<method name="unmodifiableCollection" type="(Ljava/util/Collection;)Ljava/util/Collection;" class_method="true"/>
<method name="unmodifiableList" type="(Ljava/util/List;)Ljava/util/List;" class_method="true"/>
<method name="unmodifiableMap" type="(Ljava/util/Map;)Ljava/util/Map;" class_method="true"/>
<method name="unmodifiableSet" type="(Ljava/util/Set;)Ljava/util/Set;" class_method="true"/>
<method name="unmodifiableSortedMap" type="(Ljava/util/SortedMap;)Ljava/util/SortedMap;" class_method="true"/>
<method name="unmodifiableSortedSet" type="(Ljava/util/SortedSet;)Ljava/util/SortedSet;" class_method="true"/>
<method name="frequency" type="(Ljava/util/Collection;Ljava/lang/Object;)I" class_method="true"/>
<method name="emptyList" type="()Ljava/util/List;" class_method="true"/>
<method name="emptySet" type="()Ljava/util/Set;" class_method="true"/>
<method name="emptyMap" type="()Ljava/util/Map;" class_method="true"/>
<method name="checkedCollection" type="(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;" class_method="true"/>
<method name="checkedMap" type="(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;" class_method="true"/>
<method name="checkedList" type="(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;" class_method="true"/>
<method name="checkedSet" type="(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;" class_method="true"/>
<method name="checkedSortedMap" type="(Ljava/util/SortedMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/SortedMap;" class_method="true"/>
<method name="checkedSortedSet" type="(Ljava/util/SortedSet;Ljava/lang/Class;)Ljava/util/SortedSet;" class_method="true"/>
<method name="addAll" type="(Ljava/util/Collection;[Ljava/lang/Object;)Z" class_method="true"/>
<method name="disjoint" type="(Ljava/util/Collection;Ljava/util/Collection;)Z" class_method="true"/>
<method name="newSetFromMap" type="(Ljava/util/Map;)Ljava/util/Set;" class_method="true"/>
<method name="asLifoQueue" type="(Ljava/util/Deque;)Ljava/util/Queue;" class_method="true"/>
</class>
<class name="java/util/concurrent/AbstractExecutorService">
<method name="&lt;init&gt;" type="()V"/>
<method name="newTaskFor" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;"/>
<method name="newTaskFor" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;"/>
<method name="submit" type="(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"/>
<method name="invokeAny" type="(Ljava/util/Collection;)Ljava/lang/Object;"/>
<method name="invokeAny" type="(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="invokeAll" type="(Ljava/util/Collection;)Ljava/util/List;"/>
<method name="invokeAll" type="(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;"/>
</class>
<class name="java/util/concurrent/ArrayBlockingQueue">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IZ)V"/>
<method name="&lt;init&gt;" type="(IZLjava/util/Collection;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="remainingCapacity" type="()I"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicBoolean">
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="()Z"/>
<method name="compareAndSet" type="(ZZ)Z"/>
<method name="weakCompareAndSet" type="(ZZ)Z"/>
<method name="set" type="(Z)V"/>
<method name="lazySet" type="(Z)V"/>
<method name="getAndSet" type="(Z)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicInteger">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="()I"/>
<method name="set" type="(I)V"/>
<method name="lazySet" type="(I)V"/>
<method name="getAndSet" type="(I)I"/>
<method name="compareAndSet" type="(II)Z"/>
<method name="weakCompareAndSet" type="(II)Z"/>
<method name="getAndIncrement" type="()I"/>
<method name="getAndDecrement" type="()I"/>
<method name="getAndAdd" type="(I)I"/>
<method name="incrementAndGet" type="()I"/>
<method name="decrementAndGet" type="()I"/>
<method name="addAndGet" type="(I)I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="floatValue" type="()F"/>
<method name="doubleValue" type="()D"/>
</class>
<class name="java/util/concurrent/atomic/AtomicIntegerArray">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="([I)V"/>
<method name="length" type="()I"/>
<method name="get" type="(I)I"/>
<method name="set" type="(II)V"/>
<method name="lazySet" type="(II)V"/>
<method name="getAndSet" type="(II)I"/>
<method name="compareAndSet" type="(III)Z"/>
<method name="weakCompareAndSet" type="(III)Z"/>
<method name="getAndIncrement" type="(I)I"/>
<method name="getAndDecrement" type="(I)I"/>
<method name="getAndAdd" type="(II)I"/>
<method name="incrementAndGet" type="(I)I"/>
<method name="decrementAndGet" type="(I)I"/>
<method name="addAndGet" type="(II)I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicIntegerFieldUpdater">
<method name="&lt;init&gt;" type="()V"/>
<method name="newUpdater" type="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;" class_method="true"/>
<method name="compareAndSet" type="(Ljava/lang/Object;II)Z"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;II)Z"/>
<method name="set" type="(Ljava/lang/Object;I)V"/>
<method name="lazySet" type="(Ljava/lang/Object;I)V"/>
<method name="get" type="(Ljava/lang/Object;)I"/>
<method name="getAndSet" type="(Ljava/lang/Object;I)I"/>
<method name="getAndIncrement" type="(Ljava/lang/Object;)I"/>
<method name="getAndDecrement" type="(Ljava/lang/Object;)I"/>
<method name="getAndAdd" type="(Ljava/lang/Object;I)I"/>
<method name="incrementAndGet" type="(Ljava/lang/Object;)I"/>
<method name="decrementAndGet" type="(Ljava/lang/Object;)I"/>
<method name="addAndGet" type="(Ljava/lang/Object;I)I"/>
</class>
<class name="java/util/concurrent/atomic/AtomicLong">
<method name="&lt;init&gt;" type="(J)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="()J"/>
<method name="set" type="(J)V"/>
<method name="lazySet" type="(J)V"/>
<method name="getAndSet" type="(J)J"/>
<method name="compareAndSet" type="(JJ)Z"/>
<method name="weakCompareAndSet" type="(JJ)Z"/>
<method name="getAndIncrement" type="()J"/>
<method name="getAndDecrement" type="()J"/>
<method name="getAndAdd" type="(J)J"/>
<method name="incrementAndGet" type="()J"/>
<method name="decrementAndGet" type="()J"/>
<method name="addAndGet" type="(J)J"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="intValue" type="()I"/>
<method name="longValue" type="()J"/>
<method name="floatValue" type="()F"/>
<method name="doubleValue" type="()D"/>
</class>
<class name="java/util/concurrent/atomic/AtomicLongArray">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="([J)V"/>
<method name="length" type="()I"/>
<method name="get" type="(I)J"/>
<method name="set" type="(IJ)V"/>
<method name="lazySet" type="(IJ)V"/>
<method name="getAndSet" type="(IJ)J"/>
<method name="compareAndSet" type="(IJJ)Z"/>
<method name="weakCompareAndSet" type="(IJJ)Z"/>
<method name="getAndIncrement" type="(I)J"/>
<method name="getAndDecrement" type="(I)J"/>
<method name="getAndAdd" type="(IJ)J"/>
<method name="incrementAndGet" type="(I)J"/>
<method name="decrementAndGet" type="(I)J"/>
<method name="addAndGet" type="(IJ)J"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicLongFieldUpdater">
<method name="&lt;init&gt;" type="()V"/>
<method name="newUpdater" type="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;" class_method="true"/>
<method name="compareAndSet" type="(Ljava/lang/Object;JJ)Z"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;JJ)Z"/>
<method name="set" type="(Ljava/lang/Object;J)V"/>
<method name="lazySet" type="(Ljava/lang/Object;J)V"/>
<method name="get" type="(Ljava/lang/Object;)J"/>
<method name="getAndSet" type="(Ljava/lang/Object;J)J"/>
<method name="getAndIncrement" type="(Ljava/lang/Object;)J"/>
<method name="getAndDecrement" type="(Ljava/lang/Object;)J"/>
<method name="getAndAdd" type="(Ljava/lang/Object;J)J"/>
<method name="incrementAndGet" type="(Ljava/lang/Object;)J"/>
<method name="decrementAndGet" type="(Ljava/lang/Object;)J"/>
<method name="addAndGet" type="(Ljava/lang/Object;J)J"/>
</class>
<class name="java/util/concurrent/atomic/AtomicMarkableReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;Z)V"/>
<method name="getReference" type="()Ljava/lang/Object;"/>
<method name="isMarked" type="()Z"/>
<method name="get" type="([Z)Ljava/lang/Object;"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z"/>
<method name="compareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z"/>
<method name="set" type="(Ljava/lang/Object;Z)V"/>
<method name="attemptMark" type="(Ljava/lang/Object;Z)Z"/>
</class>
<class name="java/util/concurrent/atomic/AtomicReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="set" type="(Ljava/lang/Object;)V"/>
<method name="lazySet" type="(Ljava/lang/Object;)V"/>
<method name="compareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="getAndSet" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicReferenceArray">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/Object;)V"/>
<method name="length" type="()I"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="set" type="(ILjava/lang/Object;)V"/>
<method name="lazySet" type="(ILjava/lang/Object;)V"/>
<method name="getAndSet" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="compareAndSet" type="(ILjava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="weakCompareAndSet" type="(ILjava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicReferenceFieldUpdater">
<method name="&lt;init&gt;" type="()V"/>
<method name="newUpdater" type="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;" class_method="true"/>
<method name="compareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="set" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="lazySet" type="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="getAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/util/concurrent/atomic/AtomicStampedReference">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;I)V"/>
<method name="getReference" type="()Ljava/lang/Object;"/>
<method name="getStamp" type="()I"/>
<method name="get" type="([I)Ljava/lang/Object;"/>
<method name="weakCompareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;II)Z"/>
<method name="compareAndSet" type="(Ljava/lang/Object;Ljava/lang/Object;II)Z"/>
<method name="set" type="(Ljava/lang/Object;I)V"/>
<method name="attemptStamp" type="(Ljava/lang/Object;I)Z"/>
</class>
<class name="java/util/concurrent/BrokenBarrierException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/concurrent/CancellationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/concurrent/ConcurrentHashMap">
<method name="&lt;init&gt;" type="(IFI)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putIfAbsent" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="replace" type="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="replace" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keys" type="()Ljava/util/Enumeration;"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
</class>
<class name="java/util/concurrent/ConcurrentLinkedQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/util/concurrent/ConcurrentSkipListMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/SortedMap;)V"/>
<method name="clone" type="()Ljava/util/concurrent/ConcurrentSkipListMap;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="clear" type="()V"/>
<method name="keySet" type="()Ljava/util/NavigableSet;"/>
<method name="navigableKeySet" type="()Ljava/util/NavigableSet;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="descendingMap" type="()Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="descendingKeySet" type="()Ljava/util/NavigableSet;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="putIfAbsent" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="replace" type="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"/>
<method name="replace" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="firstKey" type="()Ljava/lang/Object;"/>
<method name="lastKey" type="()Ljava/lang/Object;"/>
<method name="subMap" type="(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="headMap" type="(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="tailMap" type="(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="subMap" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="headMap" type="(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="tailMap" type="(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;"/>
<method name="lowerEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="lowerKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="floorEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="floorKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="ceilingEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="ceilingKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="higherEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="higherKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="firstEntry" type="()Ljava/util/Map$Entry;"/>
<method name="lastEntry" type="()Ljava/util/Map$Entry;"/>
<method name="pollFirstEntry" type="()Ljava/util/Map$Entry;"/>
<method name="pollLastEntry" type="()Ljava/util/Map$Entry;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="tailMap" type="(Ljava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="headMap" type="(Ljava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="subMap" type="(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="descendingMap" type="()Ljava/util/NavigableMap;"/>
<method name="tailMap" type="(Ljava/lang/Object;)Ljava/util/SortedMap;"/>
<method name="subMap" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;"/>
<method name="headMap" type="(Ljava/lang/Object;)Ljava/util/SortedMap;"/>
</class>
<class name="java/util/concurrent/ConcurrentSkipListSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/SortedSet;)V"/>
<method name="clone" type="()Ljava/util/concurrent/ConcurrentSkipListSet;"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="descendingIterator" type="()Ljava/util/Iterator;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="lower" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="floor" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="ceiling" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="higher" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="pollFirst" type="()Ljava/lang/Object;"/>
<method name="pollLast" type="()Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="first" type="()Ljava/lang/Object;"/>
<method name="last" type="()Ljava/lang/Object;"/>
<method name="subSet" type="(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="headSet" type="(Ljava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="tailSet" type="(Ljava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="subSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;"/>
<method name="headSet" type="(Ljava/lang/Object;)Ljava/util/NavigableSet;"/>
<method name="tailSet" type="(Ljava/lang/Object;)Ljava/util/NavigableSet;"/>
<method name="descendingSet" type="()Ljava/util/NavigableSet;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="tailSet" type="(Ljava/lang/Object;)Ljava/util/SortedSet;"/>
<method name="subSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;"/>
<method name="headSet" type="(Ljava/lang/Object;)Ljava/util/SortedSet;"/>
</class>
<class name="java/util/concurrent/CopyOnWriteArrayList">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/Object;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="addAllAbsent" type="(Ljava/util/Collection;)I"/>
<method name="addIfAbsent" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="containsAll" type="(Ljava/util/Collection;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="indexOf" type="(Ljava/lang/Object;I)I"/>
<method name="indexOf" type="(Ljava/lang/Object;)I"/>
<method name="isEmpty" type="()Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;I)I"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;)I"/>
<method name="listIterator" type="()Ljava/util/ListIterator;"/>
<method name="listIterator" type="(I)Ljava/util/ListIterator;"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="retainAll" type="(Ljava/util/Collection;)Z"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="subList" type="(II)Ljava/util/List;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/CopyOnWriteArraySet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="containsAll" type="(Ljava/util/Collection;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="retainAll" type="(Ljava/util/Collection;)Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="java/util/concurrent/CountDownLatch">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="await" type="()V"/>
<method name="await" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="countDown" type="()V"/>
<method name="getCount" type="()J"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/CyclicBarrier">
<method name="&lt;init&gt;" type="(ILjava/lang/Runnable;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getParties" type="()I"/>
<method name="await" type="()I"/>
<method name="await" type="(JLjava/util/concurrent/TimeUnit;)I"/>
<method name="isBroken" type="()Z"/>
<method name="reset" type="()V"/>
<method name="getNumberWaiting" type="()I"/>
</class>
<class name="java/util/concurrent/DelayQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(Ljava/util/concurrent/Delayed;)Z"/>
<method name="offer" type="(Ljava/util/concurrent/Delayed;)Z"/>
<method name="put" type="(Ljava/util/concurrent/Delayed;)V"/>
<method name="offer" type="(Ljava/util/concurrent/Delayed;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="poll" type="()Ljava/util/concurrent/Delayed;"/>
<method name="take" type="()Ljava/util/concurrent/Delayed;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Delayed;"/>
<method name="peek" type="()Ljava/util/concurrent/Delayed;"/>
<method name="size" type="()I"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
<method name="clear" type="()V"/>
<method name="remainingCapacity" type="()I"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
</class>
<class name="java/util/concurrent/Exchanger">
<method name="&lt;init&gt;" type="()V"/>
<method name="exchange" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="exchange" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
</class>
<class name="java/util/concurrent/ExecutionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/concurrent/ExecutorCompletionService">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/Executor;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/Executor;Ljava/util/concurrent/BlockingQueue;)V"/>
<method name="submit" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;"/>
<method name="take" type="()Ljava/util/concurrent/Future;"/>
<method name="poll" type="()Ljava/util/concurrent/Future;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;"/>
</class>
<class name="java/util/concurrent/Executors">
<method name="newFixedThreadPool" type="(I)Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newFixedThreadPool" type="(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newSingleThreadExecutor" type="()Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newSingleThreadExecutor" type="(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newCachedThreadPool" type="()Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newCachedThreadPool" type="(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="newSingleThreadScheduledExecutor" type="()Ljava/util/concurrent/ScheduledExecutorService;" class_method="true"/>
<method name="newSingleThreadScheduledExecutor" type="(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;" class_method="true"/>
<method name="newScheduledThreadPool" type="(I)Ljava/util/concurrent/ScheduledExecutorService;" class_method="true"/>
<method name="newScheduledThreadPool" type="(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;" class_method="true"/>
<method name="unconfigurableExecutorService" type="(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;" class_method="true"/>
<method name="unconfigurableScheduledExecutorService" type="(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;" class_method="true"/>
<method name="defaultThreadFactory" type="()Ljava/util/concurrent/ThreadFactory;" class_method="true"/>
<method name="privilegedThreadFactory" type="()Ljava/util/concurrent/ThreadFactory;" class_method="true"/>
<method name="callable" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;" class_method="true"/>
<method name="callable" type="(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;" class_method="true"/>
<method name="callable" type="(Ljava/security/PrivilegedAction;)Ljava/util/concurrent/Callable;" class_method="true"/>
<method name="callable" type="(Ljava/security/PrivilegedExceptionAction;)Ljava/util/concurrent/Callable;" class_method="true"/>
<method name="privilegedCallable" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" class_method="true"/>
<method name="privilegedCallableUsingCurrentClassLoader" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" class_method="true"/>
</class>
<class name="java/util/concurrent/FutureTask">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/Callable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Runnable;Ljava/lang/Object;)V"/>
<method name="isCancelled" type="()Z"/>
<method name="isDone" type="()Z"/>
<method name="cancel" type="(Z)Z"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="get" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="done" type="()V"/>
<method name="set" type="(Ljava/lang/Object;)V"/>
<method name="setException" type="(Ljava/lang/Throwable;)V"/>
<method name="run" type="()V"/>
<method name="runAndReset" type="()Z"/>
</class>
<class name="java/util/concurrent/LinkedBlockingDeque">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="addFirst" type="(Ljava/lang/Object;)V"/>
<method name="addLast" type="(Ljava/lang/Object;)V"/>
<method name="offerFirst" type="(Ljava/lang/Object;)Z"/>
<method name="offerLast" type="(Ljava/lang/Object;)Z"/>
<method name="putFirst" type="(Ljava/lang/Object;)V"/>
<method name="putLast" type="(Ljava/lang/Object;)V"/>
<method name="offerFirst" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="offerLast" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="removeFirst" type="()Ljava/lang/Object;"/>
<method name="removeLast" type="()Ljava/lang/Object;"/>
<method name="pollFirst" type="()Ljava/lang/Object;"/>
<method name="pollLast" type="()Ljava/lang/Object;"/>
<method name="takeFirst" type="()Ljava/lang/Object;"/>
<method name="takeLast" type="()Ljava/lang/Object;"/>
<method name="pollFirst" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="pollLast" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="getFirst" type="()Ljava/lang/Object;"/>
<method name="getLast" type="()Ljava/lang/Object;"/>
<method name="peekFirst" type="()Ljava/lang/Object;"/>
<method name="peekLast" type="()Ljava/lang/Object;"/>
<method name="removeFirstOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="removeLastOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="remove" type="()Ljava/lang/Object;"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="element" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="remainingCapacity" type="()I"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
<method name="push" type="(Ljava/lang/Object;)V"/>
<method name="pop" type="()Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="size" type="()I"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="descendingIterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/util/concurrent/LinkedBlockingQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="size" type="()I"/>
<method name="remainingCapacity" type="()I"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/util/concurrent/locks/AbstractOwnableSynchronizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="setExclusiveOwnerThread" type="(Ljava/lang/Thread;)V"/>
<method name="getExclusiveOwnerThread" type="()Ljava/lang/Thread;"/>
</class>
<class name="java/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;)V"/>
<method name="signal" type="()V"/>
<method name="signalAll" type="()V"/>
<method name="awaitUninterruptibly" type="()V"/>
<method name="await" type="()V"/>
<method name="awaitNanos" type="(J)J"/>
<method name="awaitUntil" type="(Ljava/util/Date;)Z"/>
<method name="await" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="hasWaiters" type="()Z"/>
<method name="getWaitQueueLength" type="()I"/>
<method name="getWaitingThreads" type="()Ljava/util/Collection;"/>
</class>
<class name="java/util/concurrent/locks/AbstractQueuedLongSynchronizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="getState" type="()J"/>
<method name="setState" type="(J)V"/>
<method name="compareAndSetState" type="(JJ)Z"/>
<method name="tryAcquire" type="(J)Z"/>
<method name="tryRelease" type="(J)Z"/>
<method name="tryAcquireShared" type="(J)J"/>
<method name="tryReleaseShared" type="(J)Z"/>
<method name="isHeldExclusively" type="()Z"/>
<method name="acquire" type="(J)V"/>
<method name="acquireInterruptibly" type="(J)V"/>
<method name="tryAcquireNanos" type="(JJ)Z"/>
<method name="release" type="(J)Z"/>
<method name="acquireShared" type="(J)V"/>
<method name="acquireSharedInterruptibly" type="(J)V"/>
<method name="tryAcquireSharedNanos" type="(JJ)Z"/>
<method name="releaseShared" type="(J)Z"/>
<method name="hasQueuedThreads" type="()Z"/>
<method name="hasContended" type="()Z"/>
<method name="getFirstQueuedThread" type="()Ljava/lang/Thread;"/>
<method name="isQueued" type="(Ljava/lang/Thread;)Z"/>
<method name="getQueueLength" type="()I"/>
<method name="getQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="getExclusiveQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="getSharedQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="owns" type="(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z"/>
<method name="hasWaiters" type="(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z"/>
<method name="getWaitQueueLength" type="(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)I"/>
<method name="getWaitingThreads" type="(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Ljava/util/Collection;"/>
</class>
<class name="java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)V"/>
<method name="signal" type="()V"/>
<method name="signalAll" type="()V"/>
<method name="awaitUninterruptibly" type="()V"/>
<method name="await" type="()V"/>
<method name="awaitNanos" type="(J)J"/>
<method name="awaitUntil" type="(Ljava/util/Date;)Z"/>
<method name="await" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="hasWaiters" type="()Z"/>
<method name="getWaitQueueLength" type="()I"/>
<method name="getWaitingThreads" type="()Ljava/util/Collection;"/>
</class>
<class name="java/util/concurrent/locks/AbstractQueuedSynchronizer">
<method name="&lt;init&gt;" type="()V"/>
<method name="getState" type="()I"/>
<method name="setState" type="(I)V"/>
<method name="compareAndSetState" type="(II)Z"/>
<method name="tryAcquire" type="(I)Z"/>
<method name="tryRelease" type="(I)Z"/>
<method name="tryAcquireShared" type="(I)I"/>
<method name="tryReleaseShared" type="(I)Z"/>
<method name="isHeldExclusively" type="()Z"/>
<method name="acquire" type="(I)V"/>
<method name="acquireInterruptibly" type="(I)V"/>
<method name="tryAcquireNanos" type="(IJ)Z"/>
<method name="release" type="(I)Z"/>
<method name="acquireShared" type="(I)V"/>
<method name="acquireSharedInterruptibly" type="(I)V"/>
<method name="tryAcquireSharedNanos" type="(IJ)Z"/>
<method name="releaseShared" type="(I)Z"/>
<method name="hasQueuedThreads" type="()Z"/>
<method name="hasContended" type="()Z"/>
<method name="getFirstQueuedThread" type="()Ljava/lang/Thread;"/>
<method name="isQueued" type="(Ljava/lang/Thread;)Z"/>
<method name="getQueueLength" type="()I"/>
<method name="getQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="getExclusiveQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="getSharedQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="owns" type="(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z"/>
<method name="hasWaiters" type="(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z"/>
<method name="getWaitQueueLength" type="(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I"/>
<method name="getWaitingThreads" type="(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;"/>
</class>
<class name="java/util/concurrent/locks/LockSupport">
<method name="unpark" type="(Ljava/lang/Thread;)V" class_method="true"/>
<method name="park" type="(Ljava/lang/Object;)V" class_method="true"/>
<method name="parkNanos" type="(Ljava/lang/Object;J)V" class_method="true"/>
<method name="parkUntil" type="(Ljava/lang/Object;J)V" class_method="true"/>
<method name="getBlocker" type="(Ljava/lang/Thread;)Ljava/lang/Object;" class_method="true"/>
<method name="park" type="()V" class_method="true"/>
<method name="parkNanos" type="(J)V" class_method="true"/>
<method name="parkUntil" type="(J)V" class_method="true"/>
</class>
<class name="java/util/concurrent/locks/ReentrantLock">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="lock" type="()V"/>
<method name="lockInterruptibly" type="()V"/>
<method name="tryLock" type="()Z"/>
<method name="tryLock" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="unlock" type="()V"/>
<method name="newCondition" type="()Ljava/util/concurrent/locks/Condition;"/>
<method name="getHoldCount" type="()I"/>
<method name="isHeldByCurrentThread" type="()Z"/>
<method name="isLocked" type="()Z"/>
<method name="isFair" type="()Z"/>
<method name="getOwner" type="()Ljava/lang/Thread;"/>
<method name="hasQueuedThreads" type="()Z"/>
<method name="hasQueuedThread" type="(Ljava/lang/Thread;)Z"/>
<method name="getQueueLength" type="()I"/>
<method name="getQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="hasWaiters" type="(Ljava/util/concurrent/locks/Condition;)Z"/>
<method name="getWaitQueueLength" type="(Ljava/util/concurrent/locks/Condition;)I"/>
<method name="getWaitingThreads" type="(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V"/>
<method name="lock" type="()V"/>
<method name="lockInterruptibly" type="()V"/>
<method name="tryLock" type="()Z"/>
<method name="tryLock" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="unlock" type="()V"/>
<method name="newCondition" type="()Ljava/util/concurrent/locks/Condition;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V"/>
<method name="lock" type="()V"/>
<method name="lockInterruptibly" type="()V"/>
<method name="tryLock" type="()Z"/>
<method name="tryLock" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="unlock" type="()V"/>
<method name="newCondition" type="()Ljava/util/concurrent/locks/Condition;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isHeldByCurrentThread" type="()Z"/>
<method name="getHoldCount" type="()I"/>
</class>
<class name="java/util/concurrent/locks/ReentrantReadWriteLock">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="writeLock" type="()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;"/>
<method name="readLock" type="()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;"/>
<method name="isFair" type="()Z"/>
<method name="getOwner" type="()Ljava/lang/Thread;"/>
<method name="getReadLockCount" type="()I"/>
<method name="isWriteLocked" type="()Z"/>
<method name="isWriteLockedByCurrentThread" type="()Z"/>
<method name="getWriteHoldCount" type="()I"/>
<method name="getReadHoldCount" type="()I"/>
<method name="getQueuedWriterThreads" type="()Ljava/util/Collection;"/>
<method name="getQueuedReaderThreads" type="()Ljava/util/Collection;"/>
<method name="hasQueuedThreads" type="()Z"/>
<method name="hasQueuedThread" type="(Ljava/lang/Thread;)Z"/>
<method name="getQueueLength" type="()I"/>
<method name="getQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="hasWaiters" type="(Ljava/util/concurrent/locks/Condition;)Z"/>
<method name="getWaitQueueLength" type="(Ljava/util/concurrent/locks/Condition;)I"/>
<method name="getWaitingThreads" type="(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="writeLock" type="()Ljava/util/concurrent/locks/Lock;"/>
<method name="readLock" type="()Ljava/util/concurrent/locks/Lock;"/>
</class>
<class name="java/util/concurrent/PriorityBlockingQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="size" type="()I"/>
<method name="remainingCapacity" type="()I"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
<method name="clear" type="()V"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
</class>
<class name="java/util/concurrent/RejectedExecutionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/concurrent/ScheduledThreadPoolExecutor">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/util/concurrent/ThreadFactory;)V"/>
<method name="&lt;init&gt;" type="(ILjava/util/concurrent/RejectedExecutionHandler;)V"/>
<method name="&lt;init&gt;" type="(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V"/>
<method name="decorateTask" type="(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;"/>
<method name="decorateTask" type="(Ljava/util/concurrent/Callable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;"/>
<method name="schedule" type="(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;"/>
<method name="schedule" type="(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;"/>
<method name="scheduleAtFixedRate" type="(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;"/>
<method name="scheduleWithFixedDelay" type="(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;"/>
<method name="execute" type="(Ljava/lang/Runnable;)V"/>
<method name="submit" type="(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"/>
<method name="setContinueExistingPeriodicTasksAfterShutdownPolicy" type="(Z)V"/>
<method name="getContinueExistingPeriodicTasksAfterShutdownPolicy" type="()Z"/>
<method name="setExecuteExistingDelayedTasksAfterShutdownPolicy" type="(Z)V"/>
<method name="getExecuteExistingDelayedTasksAfterShutdownPolicy" type="()Z"/>
<method name="shutdown" type="()V"/>
<method name="shutdownNow" type="()Ljava/util/List;"/>
<method name="getQueue" type="()Ljava/util/concurrent/BlockingQueue;"/>
</class>
<class name="java/util/concurrent/Semaphore">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IZ)V"/>
<method name="acquire" type="()V"/>
<method name="acquireUninterruptibly" type="()V"/>
<method name="tryAcquire" type="()Z"/>
<method name="tryAcquire" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="release" type="()V"/>
<method name="acquire" type="(I)V"/>
<method name="acquireUninterruptibly" type="(I)V"/>
<method name="tryAcquire" type="(I)Z"/>
<method name="tryAcquire" type="(IJLjava/util/concurrent/TimeUnit;)Z"/>
<method name="release" type="(I)V"/>
<method name="availablePermits" type="()I"/>
<method name="drainPermits" type="()I"/>
<method name="reducePermits" type="(I)V"/>
<method name="isFair" type="()Z"/>
<method name="hasQueuedThreads" type="()Z"/>
<method name="getQueueLength" type="()I"/>
<method name="getQueuedThreads" type="()Ljava/util/Collection;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/concurrent/SynchronousQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="put" type="(Ljava/lang/Object;)V"/>
<method name="offer" type="(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="take" type="()Ljava/lang/Object;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
<method name="remainingCapacity" type="()I"/>
<method name="clear" type="()V"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="containsAll" type="(Ljava/util/Collection;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="retainAll" type="(Ljava/util/Collection;)Z"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="drainTo" type="(Ljava/util/Collection;)I"/>
<method name="drainTo" type="(Ljava/util/Collection;I)I"/>
</class>
<class name="java/util/concurrent/ThreadPoolExecutor$AbortPolicy">
<method name="&lt;init&gt;" type="()V"/>
<method name="rejectedExecution" type="(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"/>
</class>
<class name="java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy">
<method name="&lt;init&gt;" type="()V"/>
<method name="rejectedExecution" type="(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"/>
</class>
<class name="java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy">
<method name="&lt;init&gt;" type="()V"/>
<method name="rejectedExecution" type="(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"/>
</class>
<class name="java/util/concurrent/ThreadPoolExecutor$DiscardPolicy">
<method name="&lt;init&gt;" type="()V"/>
<method name="rejectedExecution" type="(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"/>
</class>
<class name="java/util/concurrent/ThreadPoolExecutor">
<method name="&lt;init&gt;" type="(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V"/>
<method name="&lt;init&gt;" type="(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V"/>
<method name="&lt;init&gt;" type="(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V"/>
<method name="&lt;init&gt;" type="(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V"/>
<method name="execute" type="(Ljava/lang/Runnable;)V"/>
<method name="shutdown" type="()V"/>
<method name="shutdownNow" type="()Ljava/util/List;"/>
<method name="isShutdown" type="()Z"/>
<method name="isTerminating" type="()Z"/>
<method name="isTerminated" type="()Z"/>
<method name="awaitTermination" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="finalize" type="()V"/>
<method name="setThreadFactory" type="(Ljava/util/concurrent/ThreadFactory;)V"/>
<method name="getThreadFactory" type="()Ljava/util/concurrent/ThreadFactory;"/>
<method name="setRejectedExecutionHandler" type="(Ljava/util/concurrent/RejectedExecutionHandler;)V"/>
<method name="getRejectedExecutionHandler" type="()Ljava/util/concurrent/RejectedExecutionHandler;"/>
<method name="setCorePoolSize" type="(I)V"/>
<method name="getCorePoolSize" type="()I"/>
<method name="prestartCoreThread" type="()Z"/>
<method name="prestartAllCoreThreads" type="()I"/>
<method name="allowsCoreThreadTimeOut" type="()Z"/>
<method name="allowCoreThreadTimeOut" type="(Z)V"/>
<method name="setMaximumPoolSize" type="(I)V"/>
<method name="getMaximumPoolSize" type="()I"/>
<method name="setKeepAliveTime" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="getKeepAliveTime" type="(Ljava/util/concurrent/TimeUnit;)J"/>
<method name="getQueue" type="()Ljava/util/concurrent/BlockingQueue;"/>
<method name="remove" type="(Ljava/lang/Runnable;)Z"/>
<method name="purge" type="()V"/>
<method name="getPoolSize" type="()I"/>
<method name="getActiveCount" type="()I"/>
<method name="getLargestPoolSize" type="()I"/>
<method name="getTaskCount" type="()J"/>
<method name="getCompletedTaskCount" type="()J"/>
<method name="beforeExecute" type="(Ljava/lang/Thread;Ljava/lang/Runnable;)V"/>
<method name="afterExecute" type="(Ljava/lang/Runnable;Ljava/lang/Throwable;)V"/>
<method name="terminated" type="()V"/>
</class>
<class name="java/util/concurrent/TimeoutException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/concurrent/TimeUnit">
<method name="values" type="()[Ljava/util/concurrent/TimeUnit;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/util/concurrent/TimeUnit;" class_method="true"/>
<method name="convert" type="(JLjava/util/concurrent/TimeUnit;)J"/>
<method name="toNanos" type="(J)J"/>
<method name="toMicros" type="(J)J"/>
<method name="toMillis" type="(J)J"/>
<method name="toSeconds" type="(J)J"/>
<method name="toMinutes" type="(J)J"/>
<method name="toHours" type="(J)J"/>
<method name="toDays" type="(J)J"/>
<method name="timedWait" type="(Ljava/lang/Object;J)V"/>
<method name="timedJoin" type="(Ljava/lang/Thread;J)V"/>
<method name="sleep" type="(J)V"/>
</class>
<class name="java/util/ConcurrentModificationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/Currency">
<method name="getInstance" type="(Ljava/lang/String;)Ljava/util/Currency;" class_method="true"/>
<method name="getInstance" type="(Ljava/util/Locale;)Ljava/util/Currency;" class_method="true"/>
<method name="getCurrencyCode" type="()Ljava/lang/String;"/>
<method name="getSymbol" type="()Ljava/lang/String;"/>
<method name="getSymbol" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getDefaultFractionDigits" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/Date">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(IIIII)V"/>
<method name="&lt;init&gt;" type="(IIIIII)V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="after" type="(Ljava/util/Date;)Z"/>
<method name="before" type="(Ljava/util/Date;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="compareTo" type="(Ljava/util/Date;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getDate" type="()I"/>
<method name="getDay" type="()I"/>
<method name="getHours" type="()I"/>
<method name="getMinutes" type="()I"/>
<method name="getMonth" type="()I"/>
<method name="getSeconds" type="()I"/>
<method name="getTime" type="()J"/>
<method name="getTimezoneOffset" type="()I"/>
<method name="getYear" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="parse" type="(Ljava/lang/String;)J" class_method="true"/>
<method name="setDate" type="(I)V"/>
<method name="setHours" type="(I)V"/>
<method name="setMinutes" type="(I)V"/>
<method name="setMonth" type="(I)V"/>
<method name="setSeconds" type="(I)V"/>
<method name="setTime" type="(J)V"/>
<method name="setYear" type="(I)V"/>
<method name="toGMTString" type="()Ljava/lang/String;"/>
<method name="toLocaleString" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="UTC" type="(IIIIII)J" class_method="true"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/util/Dictionary">
<method name="&lt;init&gt;" type="()V"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="keys" type="()Ljava/util/Enumeration;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
</class>
<class name="java/util/DuplicateFormatFlagsException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getFlags" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/EmptyStackException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/util/EnumMap">
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/EnumMap;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/util/EnumMap;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="put" type="(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
</class>
<class name="java/util/EnumSet">
<method name="noneOf" type="(Ljava/lang/Class;)Ljava/util/EnumSet;" class_method="true"/>
<method name="allOf" type="(Ljava/lang/Class;)Ljava/util/EnumSet;" class_method="true"/>
<method name="copyOf" type="(Ljava/util/EnumSet;)Ljava/util/EnumSet;" class_method="true"/>
<method name="copyOf" type="(Ljava/util/Collection;)Ljava/util/EnumSet;" class_method="true"/>
<method name="complementOf" type="(Ljava/util/EnumSet;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="of" type="(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="range" type="(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;" class_method="true"/>
<method name="clone" type="()Ljava/util/EnumSet;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="java/util/EventListenerProxy">
<method name="&lt;init&gt;" type="(Ljava/util/EventListener;)V"/>
<method name="getListener" type="()Ljava/util/EventListener;"/>
</class>
<class name="java/util/EventObject">
<method name="&lt;init&gt;" type="(Ljava/lang/Object;)V"/>
<method name="getSource" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/FormatFlagsConversionMismatchException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;C)V"/>
<method name="getFlags" type="()Ljava/lang/String;"/>
<method name="getConversion" type="()C"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/FormattableFlags">
</class>
<class name="java/util/Formatter$BigDecimalLayoutForm">
<method name="values" type="()[Ljava/util/Formatter$BigDecimalLayoutForm;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljava/util/Formatter$BigDecimalLayoutForm;" class_method="true"/>
</class>
<class name="java/util/Formatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Appendable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Appendable;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/lang/String;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/PrintStream;)V"/>
<method name="locale" type="()Ljava/util/Locale;"/>
<method name="out" type="()Ljava/lang/Appendable;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="flush" type="()V"/>
<method name="close" type="()V"/>
<method name="ioException" type="()Ljava/io/IOException;"/>
<method name="format" type="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;"/>
<method name="format" type="(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;"/>
</class>
<class name="java/util/FormatterClosedException">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="java/util/GregorianCalendar">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(IIIII)V"/>
<method name="&lt;init&gt;" type="(IIIIII)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/TimeZone;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/TimeZone;Ljava/util/Locale;)V"/>
<method name="add" type="(II)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="computeFields" type="()V"/>
<method name="computeTime" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getActualMaximum" type="(I)I"/>
<method name="getActualMinimum" type="(I)I"/>
<method name="getGreatestMinimum" type="(I)I"/>
<method name="getGregorianChange" type="()Ljava/util/Date;"/>
<method name="getLeastMaximum" type="(I)I"/>
<method name="getMaximum" type="(I)I"/>
<method name="getMinimum" type="(I)I"/>
<method name="hashCode" type="()I"/>
<method name="isLeapYear" type="(I)Z"/>
<method name="roll" type="(II)V"/>
<method name="roll" type="(IZ)V"/>
<method name="setGregorianChange" type="(Ljava/util/Date;)V"/>
<method name="setFirstDayOfWeek" type="(I)V"/>
<method name="setMinimalDaysInFirstWeek" type="(I)V"/>
</class>
<class name="java/util/HashMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
</class>
<class name="java/util/HashSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="isEmpty" type="()Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="size" type="()I"/>
</class>
<class name="java/util/Hashtable">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="rehash" type="()V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keys" type="()Ljava/util/Enumeration;"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/IdentityHashMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="size" type="()I"/>
</class>
<class name="java/util/IllegalFormatCodePointException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getCodePoint" type="()I"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/IllegalFormatConversionException">
<method name="&lt;init&gt;" type="(CLjava/lang/Class;)V"/>
<method name="getArgumentClass" type="()Ljava/lang/Class;"/>
<method name="getConversion" type="()C"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/IllegalFormatException">
</class>
<class name="java/util/IllegalFormatFlagsException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getFlags" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/IllegalFormatPrecisionException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getPrecision" type="()I"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/IllegalFormatWidthException">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="getWidth" type="()I"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/InputMismatchException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/InvalidPropertiesFormatException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/jar/Attributes$Name">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/util/jar/Attributes">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/jar/Attributes;)V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="isEmpty" type="()Z"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getValue" type="(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="putValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="java/util/jar/JarEntry">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/zip/ZipEntry;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/jar/JarEntry;)V"/>
<method name="getAttributes" type="()Ljava/util/jar/Attributes;"/>
<method name="getCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getCodeSigners" type="()[Ljava/security/CodeSigner;"/>
</class>
<class name="java/util/jar/JarException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/jar/JarFile">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;ZI)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
<method name="entries" type="()Ljava/util/Enumeration;"/>
<method name="getJarEntry" type="(Ljava/lang/String;)Ljava/util/jar/JarEntry;"/>
<method name="getManifest" type="()Ljava/util/jar/Manifest;"/>
<method name="getInputStream" type="(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;"/>
<method name="getEntry" type="(Ljava/lang/String;)Ljava/util/zip/ZipEntry;"/>
<method name="close" type="()V"/>
</class>
<class name="java/util/jar/JarInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="getManifest" type="()Ljava/util/jar/Manifest;"/>
<method name="getNextJarEntry" type="()Ljava/util/jar/JarEntry;"/>
<method name="read" type="([BII)I"/>
<method name="getNextEntry" type="()Ljava/util/zip/ZipEntry;"/>
<method name="createZipEntry" type="(Ljava/lang/String;)Ljava/util/zip/ZipEntry;"/>
</class>
<class name="java/util/jar/JarOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/jar/Manifest;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="putNextEntry" type="(Ljava/util/zip/ZipEntry;)V"/>
</class>
<class name="java/util/jar/Manifest">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/jar/Manifest;)V"/>
<method name="clear" type="()V"/>
<method name="getAttributes" type="(Ljava/lang/String;)Ljava/util/jar/Attributes;"/>
<method name="getEntries" type="()Ljava/util/Map;"/>
<method name="getMainAttributes" type="()Ljava/util/jar/Attributes;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="write" type="(Ljava/io/OutputStream;)V"/>
<method name="read" type="(Ljava/io/InputStream;)V"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="java/util/jar/Pack200">
<method name="newPacker" type="()Ljava/util/jar/Pack200$Packer;" class_method="true"/>
<method name="newUnpacker" type="()Ljava/util/jar/Pack200$Unpacker;" class_method="true"/>
</class>
<class name="java/util/LinkedHashMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(IFZ)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="clear" type="()V"/>
<method name="removeEldestEntry" type="(Ljava/util/Map$Entry;)Z"/>
</class>
<class name="java/util/LinkedHashSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
</class>
<class name="java/util/LinkedList">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="addFirst" type="(Ljava/lang/Object;)V"/>
<method name="addLast" type="(Ljava/lang/Object;)V"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="getFirst" type="()Ljava/lang/Object;"/>
<method name="getLast" type="()Ljava/lang/Object;"/>
<method name="indexOf" type="(Ljava/lang/Object;)I"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;)I"/>
<method name="listIterator" type="(I)Ljava/util/ListIterator;"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeFirst" type="()Ljava/lang/Object;"/>
<method name="removeLast" type="()Ljava/lang/Object;"/>
<method name="descendingIterator" type="()Ljava/util/Iterator;"/>
<method name="offerFirst" type="(Ljava/lang/Object;)Z"/>
<method name="offerLast" type="(Ljava/lang/Object;)Z"/>
<method name="peekFirst" type="()Ljava/lang/Object;"/>
<method name="peekLast" type="()Ljava/lang/Object;"/>
<method name="pollFirst" type="()Ljava/lang/Object;"/>
<method name="pollLast" type="()Ljava/lang/Object;"/>
<method name="pop" type="()Ljava/lang/Object;"/>
<method name="push" type="(Ljava/lang/Object;)V"/>
<method name="removeFirstOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="removeLastOccurrence" type="(Ljava/lang/Object;)Z"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="remove" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="element" type="()Ljava/lang/Object;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
</class>
<class name="java/util/ListResourceBundle">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContents" type="()[[Ljava/lang/Object;"/>
<method name="getKeys" type="()Ljava/util/Enumeration;"/>
<method name="handleGetObject" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="handleKeySet" type="()Ljava/util/Set;"/>
</class>
<class name="java/util/Locale">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getAvailableLocales" type="()[Ljava/util/Locale;" class_method="true"/>
<method name="getCountry" type="()Ljava/lang/String;"/>
<method name="getDefault" type="()Ljava/util/Locale;" class_method="true"/>
<method name="getDisplayCountry" type="()Ljava/lang/String;"/>
<method name="getDisplayCountry" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getDisplayLanguage" type="()Ljava/lang/String;"/>
<method name="getDisplayLanguage" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getDisplayName" type="()Ljava/lang/String;"/>
<method name="getDisplayName" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getDisplayVariant" type="()Ljava/lang/String;"/>
<method name="getDisplayVariant" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getISO3Country" type="()Ljava/lang/String;"/>
<method name="getISO3Language" type="()Ljava/lang/String;"/>
<method name="getISOCountries" type="()[Ljava/lang/String;" class_method="true"/>
<method name="getISOLanguages" type="()[Ljava/lang/String;" class_method="true"/>
<method name="getLanguage" type="()Ljava/lang/String;"/>
<method name="getVariant" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="setDefault" type="(Ljava/util/Locale;)V" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/logging/ConsoleHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="close" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
</class>
<class name="java/util/logging/ErrorManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="error" type="(Ljava/lang/String;Ljava/lang/Exception;I)V"/>
</class>
<class name="java/util/logging/FileHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;II)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;IIZ)V"/>
<method name="close" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
</class>
<class name="java/util/logging/Formatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="format" type="(Ljava/util/logging/LogRecord;)Ljava/lang/String;"/>
<method name="formatMessage" type="(Ljava/util/logging/LogRecord;)Ljava/lang/String;"/>
<method name="getHead" type="(Ljava/util/logging/Handler;)Ljava/lang/String;"/>
<method name="getTail" type="(Ljava/util/logging/Handler;)Ljava/lang/String;"/>
</class>
<class name="java/util/logging/Handler">
<method name="&lt;init&gt;" type="()V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="getErrorManager" type="()Ljava/util/logging/ErrorManager;"/>
<method name="getFilter" type="()Ljava/util/logging/Filter;"/>
<method name="getFormatter" type="()Ljava/util/logging/Formatter;"/>
<method name="getLevel" type="()Ljava/util/logging/Level;"/>
<method name="isLoggable" type="(Ljava/util/logging/LogRecord;)Z"/>
<method name="reportError" type="(Ljava/lang/String;Ljava/lang/Exception;I)V"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
<method name="setErrorManager" type="(Ljava/util/logging/ErrorManager;)V"/>
<method name="setFilter" type="(Ljava/util/logging/Filter;)V"/>
<method name="setFormatter" type="(Ljava/util/logging/Formatter;)V"/>
<method name="setLevel" type="(Ljava/util/logging/Level;)V"/>
</class>
<class name="java/util/logging/Level">
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="parse" type="(Ljava/lang/String;)Ljava/util/logging/Level;" class_method="true"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getResourceBundleName" type="()Ljava/lang/String;"/>
<method name="intValue" type="()I"/>
<method name="getLocalizedName" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/logging/Logger">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getAnonymousLogger" type="()Ljava/util/logging/Logger;" class_method="true"/>
<method name="getAnonymousLogger" type="(Ljava/lang/String;)Ljava/util/logging/Logger;" class_method="true"/>
<method name="getLogger" type="(Ljava/lang/String;)Ljava/util/logging/Logger;" class_method="true"/>
<method name="getLogger" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;" class_method="true"/>
<method name="addHandler" type="(Ljava/util/logging/Handler;)V"/>
<method name="getHandlers" type="()[Ljava/util/logging/Handler;"/>
<method name="removeHandler" type="(Ljava/util/logging/Handler;)V"/>
<method name="getFilter" type="()Ljava/util/logging/Filter;"/>
<method name="setFilter" type="(Ljava/util/logging/Filter;)V"/>
<method name="getLevel" type="()Ljava/util/logging/Level;"/>
<method name="setLevel" type="(Ljava/util/logging/Level;)V"/>
<method name="getUseParentHandlers" type="()Z"/>
<method name="setUseParentHandlers" type="(Z)V"/>
<method name="getParent" type="()Ljava/util/logging/Logger;"/>
<method name="setParent" type="(Ljava/util/logging/Logger;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getResourceBundle" type="()Ljava/util/ResourceBundle;"/>
<method name="getResourceBundleName" type="()Ljava/lang/String;"/>
<method name="isLoggable" type="(Ljava/util/logging/Level;)Z"/>
<method name="entering" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="entering" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="entering" type="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"/>
<method name="exiting" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="exiting" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="throwing" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="severe" type="(Ljava/lang/String;)V"/>
<method name="warning" type="(Ljava/lang/String;)V"/>
<method name="info" type="(Ljava/lang/String;)V"/>
<method name="config" type="(Ljava/lang/String;)V"/>
<method name="fine" type="(Ljava/lang/String;)V"/>
<method name="finer" type="(Ljava/lang/String;)V"/>
<method name="finest" type="(Ljava/lang/String;)V"/>
<method name="log" type="(Ljava/util/logging/Level;Ljava/lang/String;)V"/>
<method name="log" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="log" type="(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V"/>
<method name="log" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="log" type="(Ljava/util/logging/LogRecord;)V"/>
<method name="logp" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="logp" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="logp" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"/>
<method name="logp" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="logrb" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="logrb" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="logrb" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"/>
<method name="logrb" type="(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/logging/LoggingPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/util/logging/LogManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="getLoggingMXBean" type="()Ljava/util/logging/LoggingMXBean;" class_method="true"/>
<method name="checkAccess" type="()V"/>
<method name="addLogger" type="(Ljava/util/logging/Logger;)Z"/>
<method name="getLogger" type="(Ljava/lang/String;)Ljava/util/logging/Logger;"/>
<method name="getLoggerNames" type="()Ljava/util/Enumeration;"/>
<method name="getLogManager" type="()Ljava/util/logging/LogManager;" class_method="true"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="readConfiguration" type="()V"/>
<method name="readConfiguration" type="(Ljava/io/InputStream;)V"/>
<method name="reset" type="()V"/>
<method name="addPropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
<method name="removePropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
</class>
<class name="java/util/logging/LogRecord">
<method name="&lt;init&gt;" type="(Ljava/util/logging/Level;Ljava/lang/String;)V"/>
<method name="getLevel" type="()Ljava/util/logging/Level;"/>
<method name="setLevel" type="(Ljava/util/logging/Level;)V"/>
<method name="getLoggerName" type="()Ljava/lang/String;"/>
<method name="setLoggerName" type="(Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="setMessage" type="(Ljava/lang/String;)V"/>
<method name="getMillis" type="()J"/>
<method name="setMillis" type="(J)V"/>
<method name="getParameters" type="()[Ljava/lang/Object;"/>
<method name="setParameters" type="([Ljava/lang/Object;)V"/>
<method name="getResourceBundle" type="()Ljava/util/ResourceBundle;"/>
<method name="setResourceBundle" type="(Ljava/util/ResourceBundle;)V"/>
<method name="getResourceBundleName" type="()Ljava/lang/String;"/>
<method name="setResourceBundleName" type="(Ljava/lang/String;)V"/>
<method name="getSequenceNumber" type="()J"/>
<method name="setSequenceNumber" type="(J)V"/>
<method name="getSourceClassName" type="()Ljava/lang/String;"/>
<method name="setSourceClassName" type="(Ljava/lang/String;)V"/>
<method name="getSourceMethodName" type="()Ljava/lang/String;"/>
<method name="setSourceMethodName" type="(Ljava/lang/String;)V"/>
<method name="getThreadID" type="()I"/>
<method name="setThreadID" type="(I)V"/>
<method name="getThrown" type="()Ljava/lang/Throwable;"/>
<method name="setThrown" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/logging/MemoryHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/logging/Handler;ILjava/util/logging/Level;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
<method name="getPushLevel" type="()Ljava/util/logging/Level;"/>
<method name="isLoggable" type="(Ljava/util/logging/LogRecord;)Z"/>
<method name="push" type="()V"/>
<method name="setPushLevel" type="(Ljava/util/logging/Level;)V"/>
</class>
<class name="java/util/logging/SimpleFormatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="format" type="(Ljava/util/logging/LogRecord;)Ljava/lang/String;"/>
</class>
<class name="java/util/logging/SocketHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="close" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
</class>
<class name="java/util/logging/StreamHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/logging/Formatter;)V"/>
<method name="setOutputStream" type="(Ljava/io/OutputStream;)V"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="publish" type="(Ljava/util/logging/LogRecord;)V"/>
<method name="isLoggable" type="(Ljava/util/logging/LogRecord;)Z"/>
</class>
<class name="java/util/logging/XMLFormatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="format" type="(Ljava/util/logging/LogRecord;)Ljava/lang/String;"/>
<method name="getHead" type="(Ljava/util/logging/Handler;)Ljava/lang/String;"/>
<method name="getTail" type="(Ljava/util/logging/Handler;)Ljava/lang/String;"/>
</class>
<class name="java/util/MissingFormatArgumentException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getFormatSpecifier" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/MissingFormatWidthException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getFormatSpecifier" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/MissingResourceException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getClassName" type="()Ljava/lang/String;"/>
<method name="getKey" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/NoSuchElementException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/Observable">
<method name="&lt;init&gt;" type="()V"/>
<method name="addObserver" type="(Ljava/util/Observer;)V"/>
<method name="clearChanged" type="()V"/>
<method name="countObservers" type="()I"/>
<method name="deleteObserver" type="(Ljava/util/Observer;)V"/>
<method name="deleteObservers" type="()V"/>
<method name="hasChanged" type="()Z"/>
<method name="notifyObservers" type="()V"/>
<method name="notifyObservers" type="(Ljava/lang/Object;)V"/>
<method name="setChanged" type="()V"/>
</class>
<class name="java/util/prefs/AbstractPreferences">
<method name="&lt;init&gt;" type="(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V"/>
<method name="cachedChildren" type="()[Ljava/util/prefs/AbstractPreferences;"/>
<method name="getChild" type="(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;"/>
<method name="isRemoved" type="()Z"/>
<method name="flushSpi" type="()V"/>
<method name="childrenNamesSpi" type="()[Ljava/lang/String;"/>
<method name="childSpi" type="(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;"/>
<method name="putSpi" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getSpi" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="keysSpi" type="()[Ljava/lang/String;"/>
<method name="removeNodeSpi" type="()V"/>
<method name="removeSpi" type="(Ljava/lang/String;)V"/>
<method name="syncSpi" type="()V"/>
<method name="absolutePath" type="()Ljava/lang/String;"/>
<method name="childrenNames" type="()[Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="exportNode" type="(Ljava/io/OutputStream;)V"/>
<method name="exportSubtree" type="(Ljava/io/OutputStream;)V"/>
<method name="flush" type="()V"/>
<method name="get" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getBoolean" type="(Ljava/lang/String;Z)Z"/>
<method name="getByteArray" type="(Ljava/lang/String;[B)[B"/>
<method name="getDouble" type="(Ljava/lang/String;D)D"/>
<method name="getFloat" type="(Ljava/lang/String;F)F"/>
<method name="getInt" type="(Ljava/lang/String;I)I"/>
<method name="getLong" type="(Ljava/lang/String;J)J"/>
<method name="isUserNode" type="()Z"/>
<method name="keys" type="()[Ljava/lang/String;"/>
<method name="name" type="()Ljava/lang/String;"/>
<method name="node" type="(Ljava/lang/String;)Ljava/util/prefs/Preferences;"/>
<method name="nodeExists" type="(Ljava/lang/String;)Z"/>
<method name="parent" type="()Ljava/util/prefs/Preferences;"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="putBoolean" type="(Ljava/lang/String;Z)V"/>
<method name="putByteArray" type="(Ljava/lang/String;[B)V"/>
<method name="putDouble" type="(Ljava/lang/String;D)V"/>
<method name="putFloat" type="(Ljava/lang/String;F)V"/>
<method name="putInt" type="(Ljava/lang/String;I)V"/>
<method name="putLong" type="(Ljava/lang/String;J)V"/>
<method name="remove" type="(Ljava/lang/String;)V"/>
<method name="removeNode" type="()V"/>
<method name="addNodeChangeListener" type="(Ljava/util/prefs/NodeChangeListener;)V"/>
<method name="addPreferenceChangeListener" type="(Ljava/util/prefs/PreferenceChangeListener;)V"/>
<method name="removeNodeChangeListener" type="(Ljava/util/prefs/NodeChangeListener;)V"/>
<method name="removePreferenceChangeListener" type="(Ljava/util/prefs/PreferenceChangeListener;)V"/>
<method name="sync" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/prefs/BackingStoreException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/prefs/InvalidPreferencesFormatException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/prefs/NodeChangeEvent">
<method name="&lt;init&gt;" type="(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V"/>
<method name="getParent" type="()Ljava/util/prefs/Preferences;"/>
<method name="getChild" type="()Ljava/util/prefs/Preferences;"/>
</class>
<class name="java/util/prefs/PreferenceChangeEvent">
<method name="&lt;init&gt;" type="(Ljava/util/prefs/Preferences;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getKey" type="()Ljava/lang/String;"/>
<method name="getNewValue" type="()Ljava/lang/String;"/>
<method name="getNode" type="()Ljava/util/prefs/Preferences;"/>
</class>
<class name="java/util/prefs/Preferences">
<method name="&lt;init&gt;" type="()V"/>
<method name="absolutePath" type="()Ljava/lang/String;"/>
<method name="childrenNames" type="()[Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="exportNode" type="(Ljava/io/OutputStream;)V"/>
<method name="exportSubtree" type="(Ljava/io/OutputStream;)V"/>
<method name="flush" type="()V"/>
<method name="get" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getBoolean" type="(Ljava/lang/String;Z)Z"/>
<method name="getByteArray" type="(Ljava/lang/String;[B)[B"/>
<method name="getDouble" type="(Ljava/lang/String;D)D"/>
<method name="getFloat" type="(Ljava/lang/String;F)F"/>
<method name="getInt" type="(Ljava/lang/String;I)I"/>
<method name="getLong" type="(Ljava/lang/String;J)J"/>
<method name="importPreferences" type="(Ljava/io/InputStream;)V" class_method="true"/>
<method name="isUserNode" type="()Z"/>
<method name="keys" type="()[Ljava/lang/String;"/>
<method name="name" type="()Ljava/lang/String;"/>
<method name="node" type="(Ljava/lang/String;)Ljava/util/prefs/Preferences;"/>
<method name="nodeExists" type="(Ljava/lang/String;)Z"/>
<method name="parent" type="()Ljava/util/prefs/Preferences;"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="putBoolean" type="(Ljava/lang/String;Z)V"/>
<method name="putByteArray" type="(Ljava/lang/String;[B)V"/>
<method name="putDouble" type="(Ljava/lang/String;D)V"/>
<method name="putFloat" type="(Ljava/lang/String;F)V"/>
<method name="putInt" type="(Ljava/lang/String;I)V"/>
<method name="putLong" type="(Ljava/lang/String;J)V"/>
<method name="remove" type="(Ljava/lang/String;)V"/>
<method name="removeNode" type="()V"/>
<method name="addNodeChangeListener" type="(Ljava/util/prefs/NodeChangeListener;)V"/>
<method name="addPreferenceChangeListener" type="(Ljava/util/prefs/PreferenceChangeListener;)V"/>
<method name="removeNodeChangeListener" type="(Ljava/util/prefs/NodeChangeListener;)V"/>
<method name="removePreferenceChangeListener" type="(Ljava/util/prefs/PreferenceChangeListener;)V"/>
<method name="sync" type="()V"/>
<method name="systemNodeForPackage" type="(Ljava/lang/Class;)Ljava/util/prefs/Preferences;" class_method="true"/>
<method name="systemRoot" type="()Ljava/util/prefs/Preferences;" class_method="true"/>
<method name="userNodeForPackage" type="(Ljava/lang/Class;)Ljava/util/prefs/Preferences;" class_method="true"/>
<method name="userRoot" type="()Ljava/util/prefs/Preferences;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/PriorityQueue">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(ILjava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/PriorityQueue;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/SortedSet;)V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="size" type="()I"/>
<method name="clear" type="()V"/>
<method name="offer" type="(Ljava/lang/Object;)Z"/>
<method name="poll" type="()Ljava/lang/Object;"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="java/util/Properties">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Properties;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getProperty" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="list" type="(Ljava/io/PrintStream;)V"/>
<method name="list" type="(Ljava/io/PrintWriter;)V"/>
<method name="load" type="(Ljava/io/InputStream;)V"/>
<method name="load" type="(Ljava/io/Reader;)V"/>
<method name="propertyNames" type="()Ljava/util/Enumeration;"/>
<method name="stringPropertyNames" type="()Ljava/util/Set;"/>
<method name="save" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="store" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="store" type="(Ljava/io/Writer;Ljava/lang/String;)V"/>
<method name="loadFromXML" type="(Ljava/io/InputStream;)V"/>
<method name="storeToXML" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="storeToXML" type="(Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="java/util/PropertyPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="java/util/PropertyResourceBundle">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="handleKeySet" type="()Ljava/util/Set;"/>
<method name="getKeys" type="()Ljava/util/Enumeration;"/>
<method name="handleGetObject" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="java/util/Random">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(J)V"/>
<method name="next" type="(I)I"/>
<method name="nextBoolean" type="()Z"/>
<method name="nextBytes" type="([B)V"/>
<method name="nextDouble" type="()D"/>
<method name="nextFloat" type="()F"/>
<method name="nextGaussian" type="()D"/>
<method name="nextInt" type="()I"/>
<method name="nextInt" type="(I)I"/>
<method name="nextLong" type="()J"/>
<method name="setSeed" type="(J)V"/>
</class>
<class name="java/util/regex/Matcher">
<method name="appendReplacement" type="(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;"/>
<method name="reset" type="()Ljava/util/regex/Matcher;"/>
<method name="reset" type="(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;"/>
<method name="usePattern" type="(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;"/>
<method name="region" type="(II)Ljava/util/regex/Matcher;"/>
<method name="appendTail" type="(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"/>
<method name="replaceFirst" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="replaceAll" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="pattern" type="()Ljava/util/regex/Pattern;"/>
<method name="group" type="(I)Ljava/lang/String;"/>
<method name="group" type="()Ljava/lang/String;"/>
<method name="find" type="(I)Z"/>
<method name="find" type="()Z"/>
<method name="lookingAt" type="()Z"/>
<method name="matches" type="()Z"/>
<method name="start" type="(I)I"/>
<method name="end" type="(I)I"/>
<method name="quoteReplacement" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="start" type="()I"/>
<method name="groupCount" type="()I"/>
<method name="end" type="()I"/>
<method name="toMatchResult" type="()Ljava/util/regex/MatchResult;"/>
<method name="useAnchoringBounds" type="(Z)Ljava/util/regex/Matcher;"/>
<method name="hasAnchoringBounds" type="()Z"/>
<method name="useTransparentBounds" type="(Z)Ljava/util/regex/Matcher;"/>
<method name="hasTransparentBounds" type="()Z"/>
<method name="regionStart" type="()I"/>
<method name="regionEnd" type="()I"/>
<method name="requireEnd" type="()Z"/>
<method name="hitEnd" type="()Z"/>
<method name="finalize" type="()V"/>
</class>
<class name="java/util/regex/Pattern">
<method name="matcher" type="(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;"/>
<method name="split" type="(Ljava/lang/CharSequence;I)[Ljava/lang/String;"/>
<method name="split" type="(Ljava/lang/CharSequence;)[Ljava/lang/String;"/>
<method name="pattern" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="flags" type="()I"/>
<method name="compile" type="(Ljava/lang/String;I)Ljava/util/regex/Pattern;" class_method="true"/>
<method name="compile" type="(Ljava/lang/String;)Ljava/util/regex/Pattern;" class_method="true"/>
<method name="matches" type="(Ljava/lang/String;Ljava/lang/CharSequence;)Z" class_method="true"/>
<method name="quote" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="finalize" type="()V"/>
</class>
<class name="java/util/regex/PatternSyntaxException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="getPattern" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getDescription" type="()Ljava/lang/String;"/>
<method name="getIndex" type="()I"/>
</class>
<class name="java/util/ResourceBundle$Control">
<method name="&lt;init&gt;" type="()V"/>
<method name="getControl" type="(Ljava/util/List;)Ljava/util/ResourceBundle$Control;" class_method="true"/>
<method name="getNoFallbackControl" type="(Ljava/util/List;)Ljava/util/ResourceBundle$Control;" class_method="true"/>
<method name="getCandidateLocales" type="(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/List;"/>
<method name="getFormats" type="(Ljava/lang/String;)Ljava/util/List;"/>
<method name="getFallbackLocale" type="(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Locale;"/>
<method name="newBundle" type="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/util/ResourceBundle;"/>
<method name="getTimeToLive" type="(Ljava/lang/String;Ljava/util/Locale;)J"/>
<method name="needsReload" type="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle;J)Z"/>
<method name="toBundleName" type="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="toResourceName" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="java/util/ResourceBundle">
<method name="&lt;init&gt;" type="()V"/>
<method name="getBundle" type="(Ljava/lang/String;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getBundle" type="(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getBundle" type="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getBundle" type="(Ljava/lang/String;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getBundle" type="(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getBundle" type="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;" class_method="true"/>
<method name="getKeys" type="()Ljava/util/Enumeration;"/>
<method name="getLocale" type="()Ljava/util/Locale;"/>
<method name="getObject" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getStringArray" type="(Ljava/lang/String;)[Ljava/lang/String;"/>
<method name="handleGetObject" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setParent" type="(Ljava/util/ResourceBundle;)V"/>
<method name="clearCache" type="()V" class_method="true"/>
<method name="clearCache" type="(Ljava/lang/ClassLoader;)V" class_method="true"/>
<method name="containsKey" type="(Ljava/lang/String;)Z"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="handleKeySet" type="()Ljava/util/Set;"/>
</class>
<class name="java/util/Scanner">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Readable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/nio/channels/ReadableByteChannel;)V"/>
<method name="&lt;init&gt;" type="(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)V"/>
<method name="close" type="()V"/>
<method name="delimiter" type="()Ljava/util/regex/Pattern;"/>
<method name="findInLine" type="(Ljava/util/regex/Pattern;)Ljava/lang/String;"/>
<method name="findInLine" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="findWithinHorizon" type="(Ljava/util/regex/Pattern;I)Ljava/lang/String;"/>
<method name="findWithinHorizon" type="(Ljava/lang/String;I)Ljava/lang/String;"/>
<method name="hasNext" type="()Z"/>
<method name="hasNext" type="(Ljava/util/regex/Pattern;)Z"/>
<method name="hasNext" type="(Ljava/lang/String;)Z"/>
<method name="hasNextBigDecimal" type="()Z"/>
<method name="hasNextBigInteger" type="()Z"/>
<method name="hasNextBigInteger" type="(I)Z"/>
<method name="hasNextBoolean" type="()Z"/>
<method name="hasNextByte" type="()Z"/>
<method name="hasNextByte" type="(I)Z"/>
<method name="hasNextDouble" type="()Z"/>
<method name="hasNextFloat" type="()Z"/>
<method name="hasNextInt" type="()Z"/>
<method name="hasNextInt" type="(I)Z"/>
<method name="hasNextLine" type="()Z"/>
<method name="hasNextLong" type="()Z"/>
<method name="hasNextLong" type="(I)Z"/>
<method name="hasNextShort" type="()Z"/>
<method name="hasNextShort" type="(I)Z"/>
<method name="ioException" type="()Ljava/io/IOException;"/>
<method name="locale" type="()Ljava/util/Locale;"/>
<method name="match" type="()Ljava/util/regex/MatchResult;"/>
<method name="next" type="()Ljava/lang/String;"/>
<method name="next" type="(Ljava/util/regex/Pattern;)Ljava/lang/String;"/>
<method name="next" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="nextBigDecimal" type="()Ljava/math/BigDecimal;"/>
<method name="nextBigInteger" type="()Ljava/math/BigInteger;"/>
<method name="nextBigInteger" type="(I)Ljava/math/BigInteger;"/>
<method name="nextBoolean" type="()Z"/>
<method name="nextByte" type="()B"/>
<method name="nextByte" type="(I)B"/>
<method name="nextDouble" type="()D"/>
<method name="nextFloat" type="()F"/>
<method name="nextInt" type="()I"/>
<method name="nextInt" type="(I)I"/>
<method name="nextLine" type="()Ljava/lang/String;"/>
<method name="nextLong" type="()J"/>
<method name="nextLong" type="(I)J"/>
<method name="nextShort" type="()S"/>
<method name="nextShort" type="(I)S"/>
<method name="radix" type="()I"/>
<method name="skip" type="(Ljava/util/regex/Pattern;)Ljava/util/Scanner;"/>
<method name="skip" type="(Ljava/lang/String;)Ljava/util/Scanner;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="useDelimiter" type="(Ljava/util/regex/Pattern;)Ljava/util/Scanner;"/>
<method name="useDelimiter" type="(Ljava/lang/String;)Ljava/util/Scanner;"/>
<method name="useLocale" type="(Ljava/util/Locale;)Ljava/util/Scanner;"/>
<method name="useRadix" type="(I)Ljava/util/Scanner;"/>
<method name="remove" type="()V"/>
<method name="reset" type="()Ljava/util/Scanner;"/>
<method name="next" type="()Ljava/lang/Object;"/>
</class>
<class name="java/util/ServiceConfigurationError">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="java/util/ServiceLoader">
<method name="reload" type="()V"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="load" type="(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;" class_method="true"/>
<method name="load" type="(Ljava/lang/Class;)Ljava/util/ServiceLoader;" class_method="true"/>
<method name="loadInstalled" type="(Ljava/lang/Class;)Ljava/util/ServiceLoader;" class_method="true"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/SimpleTimeZone">
<method name="&lt;init&gt;" type="(ILjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/String;IIIIIIII)V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/String;IIIIIIIII)V"/>
<method name="&lt;init&gt;" type="(ILjava/lang/String;IIIIIIIIIII)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getDSTSavings" type="()I"/>
<method name="getOffset" type="(IIIIII)I"/>
<method name="getOffset" type="(J)I"/>
<method name="getRawOffset" type="()I"/>
<method name="hashCode" type="()I"/>
<method name="hasSameRules" type="(Ljava/util/TimeZone;)Z"/>
<method name="inDaylightTime" type="(Ljava/util/Date;)Z"/>
<method name="setDSTSavings" type="(I)V"/>
<method name="setEndRule" type="(III)V"/>
<method name="setEndRule" type="(IIII)V"/>
<method name="setEndRule" type="(IIIIZ)V"/>
<method name="setRawOffset" type="(I)V"/>
<method name="setStartRule" type="(III)V"/>
<method name="setStartRule" type="(IIII)V"/>
<method name="setStartRule" type="(IIIIZ)V"/>
<method name="setStartYear" type="(I)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="useDaylightTime" type="()Z"/>
</class>
<class name="java/util/Stack">
<method name="&lt;init&gt;" type="()V"/>
<method name="empty" type="()Z"/>
<method name="peek" type="()Ljava/lang/Object;"/>
<method name="pop" type="()Ljava/lang/Object;"/>
<method name="push" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="search" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/util/StringTokenizer">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Z)V"/>
<method name="countTokens" type="()I"/>
<method name="hasMoreElements" type="()Z"/>
<method name="hasMoreTokens" type="()Z"/>
<method name="nextElement" type="()Ljava/lang/Object;"/>
<method name="nextToken" type="()Ljava/lang/String;"/>
<method name="nextToken" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="java/util/Timer">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="cancel" type="()V"/>
<method name="purge" type="()I"/>
<method name="schedule" type="(Ljava/util/TimerTask;Ljava/util/Date;)V"/>
<method name="schedule" type="(Ljava/util/TimerTask;J)V"/>
<method name="schedule" type="(Ljava/util/TimerTask;JJ)V"/>
<method name="schedule" type="(Ljava/util/TimerTask;Ljava/util/Date;J)V"/>
<method name="scheduleAtFixedRate" type="(Ljava/util/TimerTask;JJ)V"/>
<method name="scheduleAtFixedRate" type="(Ljava/util/TimerTask;Ljava/util/Date;J)V"/>
</class>
<class name="java/util/TimerTask">
<method name="&lt;init&gt;" type="()V"/>
<method name="cancel" type="()Z"/>
<method name="scheduledExecutionTime" type="()J"/>
<method name="run" type="()V"/>
</class>
<class name="java/util/TimeZone">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="getAvailableIDs" type="()[Ljava/lang/String;" class_method="true"/>
<method name="getAvailableIDs" type="(I)[Ljava/lang/String;" class_method="true"/>
<method name="getDefault" type="()Ljava/util/TimeZone;" class_method="true"/>
<method name="getDisplayName" type="()Ljava/lang/String;"/>
<method name="getDisplayName" type="(Ljava/util/Locale;)Ljava/lang/String;"/>
<method name="getDisplayName" type="(ZI)Ljava/lang/String;"/>
<method name="getDisplayName" type="(ZILjava/util/Locale;)Ljava/lang/String;"/>
<method name="getID" type="()Ljava/lang/String;"/>
<method name="getDSTSavings" type="()I"/>
<method name="getOffset" type="(J)I"/>
<method name="getOffset" type="(IIIIII)I"/>
<method name="getRawOffset" type="()I"/>
<method name="getTimeZone" type="(Ljava/lang/String;)Ljava/util/TimeZone;" class_method="true"/>
<method name="hasSameRules" type="(Ljava/util/TimeZone;)Z"/>
<method name="inDaylightTime" type="(Ljava/util/Date;)Z"/>
<method name="setDefault" type="(Ljava/util/TimeZone;)V" class_method="true"/>
<method name="setID" type="(Ljava/lang/String;)V"/>
<method name="setRawOffset" type="(I)V"/>
<method name="useDaylightTime" type="()Z"/>
</class>
<class name="java/util/TooManyListenersException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/TreeMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/SortedMap;)V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="clear" type="()V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="firstEntry" type="()Ljava/util/Map$Entry;"/>
<method name="pollFirstEntry" type="()Ljava/util/Map$Entry;"/>
<method name="firstKey" type="()Ljava/lang/Object;"/>
<method name="lastEntry" type="()Ljava/util/Map$Entry;"/>
<method name="pollLastEntry" type="()Ljava/util/Map$Entry;"/>
<method name="lastKey" type="()Ljava/lang/Object;"/>
<method name="lowerEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="lowerKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="floorEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="floorKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="ceilingEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="ceilingKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="higherEntry" type="(Ljava/lang/Object;)Ljava/util/Map$Entry;"/>
<method name="higherKey" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="navigableKeySet" type="()Ljava/util/NavigableSet;"/>
<method name="subMap" type="(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="subMap" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;"/>
<method name="headMap" type="(Ljava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="headMap" type="(Ljava/lang/Object;)Ljava/util/SortedMap;"/>
<method name="tailMap" type="(Ljava/lang/Object;Z)Ljava/util/NavigableMap;"/>
<method name="tailMap" type="(Ljava/lang/Object;)Ljava/util/SortedMap;"/>
<method name="descendingMap" type="()Ljava/util/NavigableMap;"/>
<method name="descendingKeySet" type="()Ljava/util/NavigableSet;"/>
</class>
<class name="java/util/TreeSet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Comparator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/SortedSet;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="comparator" type="()Ljava/util/Comparator;"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="isEmpty" type="()Z"/>
<method name="iterator" type="()Ljava/util/Iterator;"/>
<method name="descendingIterator" type="()Ljava/util/Iterator;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="size" type="()I"/>
<method name="first" type="()Ljava/lang/Object;"/>
<method name="last" type="()Ljava/lang/Object;"/>
<method name="pollFirst" type="()Ljava/lang/Object;"/>
<method name="pollLast" type="()Ljava/lang/Object;"/>
<method name="higher" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="lower" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="ceiling" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="floor" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="descendingSet" type="()Ljava/util/NavigableSet;"/>
<method name="subSet" type="(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="headSet" type="(Ljava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="tailSet" type="(Ljava/lang/Object;Z)Ljava/util/NavigableSet;"/>
<method name="subSet" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;"/>
<method name="headSet" type="(Ljava/lang/Object;)Ljava/util/SortedSet;"/>
<method name="tailSet" type="(Ljava/lang/Object;)Ljava/util/SortedSet;"/>
</class>
<class name="java/util/UnknownFormatConversionException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getConversion" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/UnknownFormatFlagsException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getFlags" type="()Ljava/lang/String;"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="java/util/UUID">
<method name="&lt;init&gt;" type="(JJ)V"/>
<method name="randomUUID" type="()Ljava/util/UUID;" class_method="true"/>
<method name="nameUUIDFromBytes" type="([B)Ljava/util/UUID;" class_method="true"/>
<method name="fromString" type="(Ljava/lang/String;)Ljava/util/UUID;" class_method="true"/>
<method name="getLeastSignificantBits" type="()J"/>
<method name="getMostSignificantBits" type="()J"/>
<method name="version" type="()I"/>
<method name="variant" type="()I"/>
<method name="timestamp" type="()J"/>
<method name="clockSequence" type="()I"/>
<method name="node" type="()J"/>
<method name="compareTo" type="(Ljava/util/UUID;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</class>
<class name="java/util/Vector">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="add" type="(ILjava/lang/Object;)V"/>
<method name="add" type="(Ljava/lang/Object;)Z"/>
<method name="addAll" type="(ILjava/util/Collection;)Z"/>
<method name="addAll" type="(Ljava/util/Collection;)Z"/>
<method name="addElement" type="(Ljava/lang/Object;)V"/>
<method name="capacity" type="()I"/>
<method name="clear" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="contains" type="(Ljava/lang/Object;)Z"/>
<method name="containsAll" type="(Ljava/util/Collection;)Z"/>
<method name="copyInto" type="([Ljava/lang/Object;)V"/>
<method name="elementAt" type="(I)Ljava/lang/Object;"/>
<method name="elements" type="()Ljava/util/Enumeration;"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="firstElement" type="()Ljava/lang/Object;"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="indexOf" type="(Ljava/lang/Object;)I"/>
<method name="indexOf" type="(Ljava/lang/Object;I)I"/>
<method name="insertElementAt" type="(Ljava/lang/Object;I)V"/>
<method name="isEmpty" type="()Z"/>
<method name="lastElement" type="()Ljava/lang/Object;"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;)I"/>
<method name="lastIndexOf" type="(Ljava/lang/Object;I)I"/>
<method name="remove" type="(I)Ljava/lang/Object;"/>
<method name="remove" type="(Ljava/lang/Object;)Z"/>
<method name="removeAll" type="(Ljava/util/Collection;)Z"/>
<method name="removeAllElements" type="()V"/>
<method name="removeElement" type="(Ljava/lang/Object;)Z"/>
<method name="removeElementAt" type="(I)V"/>
<method name="removeRange" type="(II)V"/>
<method name="retainAll" type="(Ljava/util/Collection;)Z"/>
<method name="set" type="(ILjava/lang/Object;)Ljava/lang/Object;"/>
<method name="setElementAt" type="(Ljava/lang/Object;I)V"/>
<method name="setSize" type="(I)V"/>
<method name="size" type="()I"/>
<method name="subList" type="(II)Ljava/util/List;"/>
<method name="toArray" type="()[Ljava/lang/Object;"/>
<method name="toArray" type="([Ljava/lang/Object;)[Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="trimToSize" type="()V"/>
</class>
<class name="java/util/WeakHashMap">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IF)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="values" type="()Ljava/util/Collection;"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="isEmpty" type="()Z"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
</class>
<class name="java/util/zip/Adler32">
<method name="&lt;init&gt;" type="()V"/>
<method name="getValue" type="()J"/>
<method name="reset" type="()V"/>
<method name="update" type="(I)V"/>
<method name="update" type="([B)V"/>
<method name="update" type="([BII)V"/>
</class>
<class name="java/util/zip/CheckedInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/util/zip/Checksum;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="getChecksum" type="()Ljava/util/zip/Checksum;"/>
<method name="skip" type="(J)J"/>
</class>
<class name="java/util/zip/CheckedOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/zip/Checksum;)V"/>
<method name="getChecksum" type="()Ljava/util/zip/Checksum;"/>
<method name="write" type="(I)V"/>
<method name="write" type="([BII)V"/>
</class>
<class name="java/util/zip/CRC32">
<method name="&lt;init&gt;" type="()V"/>
<method name="getValue" type="()J"/>
<method name="reset" type="()V"/>
<method name="update" type="(I)V"/>
<method name="update" type="([B)V"/>
<method name="update" type="([BII)V"/>
</class>
<class name="java/util/zip/DataFormatException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/zip/Deflater">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(IZ)V"/>
<method name="deflate" type="([B)I"/>
<method name="deflate" type="([BII)I"/>
<method name="end" type="()V"/>
<method name="finalize" type="()V"/>
<method name="finish" type="()V"/>
<method name="finished" type="()Z"/>
<method name="getAdler" type="()I"/>
<method name="getTotalIn" type="()I"/>
<method name="getTotalOut" type="()I"/>
<method name="needsInput" type="()Z"/>
<method name="reset" type="()V"/>
<method name="setDictionary" type="([B)V"/>
<method name="setDictionary" type="([BII)V"/>
<method name="setInput" type="([B)V"/>
<method name="setInput" type="([BII)V"/>
<method name="setLevel" type="(I)V"/>
<method name="setStrategy" type="(I)V"/>
<method name="getBytesRead" type="()J"/>
<method name="getBytesWritten" type="()J"/>
</class>
<class name="java/util/zip/DeflaterInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/util/zip/Deflater;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/util/zip/Deflater;I)V"/>
<method name="close" type="()V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
<method name="available" type="()I"/>
<method name="markSupported" type="()Z"/>
<method name="mark" type="(I)V"/>
<method name="reset" type="()V"/>
</class>
<class name="java/util/zip/DeflaterOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/zip/Deflater;I)V"/>
<method name="deflate" type="()V"/>
<method name="close" type="()V"/>
<method name="finish" type="()V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([BII)V"/>
<method name="flush" type="()V"/>
</class>
<class name="java/util/zip/GZIPInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;I)V"/>
<method name="close" type="()V"/>
<method name="read" type="([BII)I"/>
</class>
<class name="java/util/zip/GZIPOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;I)V"/>
<method name="finish" type="()V"/>
<method name="write" type="([BII)V"/>
</class>
<class name="java/util/zip/Inflater">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Z)V"/>
<method name="end" type="()V"/>
<method name="finalize" type="()V"/>
<method name="finished" type="()Z"/>
<method name="getAdler" type="()I"/>
<method name="getBytesRead" type="()J"/>
<method name="getBytesWritten" type="()J"/>
<method name="getRemaining" type="()I"/>
<method name="getTotalIn" type="()I"/>
<method name="getTotalOut" type="()I"/>
<method name="inflate" type="([B)I"/>
<method name="inflate" type="([BII)I"/>
<method name="needsDictionary" type="()Z"/>
<method name="needsInput" type="()Z"/>
<method name="reset" type="()V"/>
<method name="setDictionary" type="([B)V"/>
<method name="setDictionary" type="([BII)V"/>
<method name="setInput" type="([B)V"/>
<method name="setInput" type="([BII)V"/>
</class>
<class name="java/util/zip/InflaterInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="fill" type="()V"/>
<method name="skip" type="(J)J"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="mark" type="(I)V"/>
<method name="reset" type="()V"/>
<method name="markSupported" type="()Z"/>
</class>
<class name="java/util/zip/InflaterOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/zip/Inflater;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljava/util/zip/Inflater;I)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="finish" type="()V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([BII)V"/>
</class>
<class name="java/util/zip/ZipEntry">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/zip/ZipEntry;)V"/>
<method name="getComment" type="()Ljava/lang/String;"/>
<method name="getCompressedSize" type="()J"/>
<method name="getCrc" type="()J"/>
<method name="getExtra" type="()[B"/>
<method name="getMethod" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getSize" type="()J"/>
<method name="getTime" type="()J"/>
<method name="isDirectory" type="()Z"/>
<method name="setComment" type="(Ljava/lang/String;)V"/>
<method name="setCompressedSize" type="(J)V"/>
<method name="setCrc" type="(J)V"/>
<method name="setExtra" type="([B)V"/>
<method name="setMethod" type="(I)V"/>
<method name="setSize" type="(J)V"/>
<method name="setTime" type="(J)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
</class>
<class name="java/util/zip/ZipError">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/zip/ZipException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="java/util/zip/ZipFile">
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="finalize" type="()V"/>
<method name="close" type="()V"/>
<method name="entries" type="()Ljava/util/Enumeration;"/>
<method name="getEntry" type="(Ljava/lang/String;)Ljava/util/zip/ZipEntry;"/>
<method name="getInputStream" type="(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="size" type="()I"/>
</class>
<class name="java/util/zip/ZipInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="close" type="()V"/>
<method name="closeEntry" type="()V"/>
<method name="getNextEntry" type="()Ljava/util/zip/ZipEntry;"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
<method name="available" type="()I"/>
<method name="createZipEntry" type="(Ljava/lang/String;)Ljava/util/zip/ZipEntry;"/>
</class>
<class name="java/util/zip/ZipOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="close" type="()V"/>
<method name="closeEntry" type="()V"/>
<method name="finish" type="()V"/>
<method name="putNextEntry" type="(Ljava/util/zip/ZipEntry;)V"/>
<method name="setComment" type="(Ljava/lang/String;)V"/>
<method name="setLevel" type="(I)V"/>
<method name="setMethod" type="(I)V"/>
<method name="write" type="([BII)V"/>
</class>
<class name="javax/crypto/BadPaddingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/Cipher">
<method name="&lt;init&gt;" type="(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/Cipher;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getBlockSize" type="()I"/>
<method name="getOutputSize" type="(I)I"/>
<method name="getIV" type="()[B"/>
<method name="getParameters" type="()Ljava/security/AlgorithmParameters;"/>
<method name="getExemptionMechanism" type="()Ljavax/crypto/ExemptionMechanism;"/>
<method name="init" type="(ILjava/security/Key;)V"/>
<method name="init" type="(ILjava/security/Key;Ljava/security/SecureRandom;)V"/>
<method name="init" type="(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="init" type="(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V"/>
<method name="init" type="(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V"/>
<method name="init" type="(ILjava/security/cert/Certificate;)V"/>
<method name="init" type="(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V"/>
<method name="update" type="([B)[B"/>
<method name="update" type="([BII)[B"/>
<method name="update" type="([BII[B)I"/>
<method name="update" type="([BII[BI)I"/>
<method name="update" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I"/>
<method name="doFinal" type="()[B"/>
<method name="doFinal" type="([BI)I"/>
<method name="doFinal" type="([B)[B"/>
<method name="doFinal" type="([BII)[B"/>
<method name="doFinal" type="([BII[B)I"/>
<method name="doFinal" type="([BII[BI)I"/>
<method name="doFinal" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I"/>
<method name="wrap" type="(Ljava/security/Key;)[B"/>
<method name="unwrap" type="([BLjava/lang/String;I)Ljava/security/Key;"/>
<method name="getMaxAllowedKeyLength" type="(Ljava/lang/String;)I" class_method="true"/>
<method name="getMaxAllowedParameterSpec" type="(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;" class_method="true"/>
</class>
<class name="javax/crypto/CipherInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="read" type="([BII)I"/>
<method name="skip" type="(J)J"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="markSupported" type="()Z"/>
</class>
<class name="javax/crypto/CipherOutputStream">
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="flush" type="()V"/>
<method name="close" type="()V"/>
</class>
<class name="javax/crypto/CipherSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineSetMode" type="(Ljava/lang/String;)V"/>
<method name="engineSetPadding" type="(Ljava/lang/String;)V"/>
<method name="engineGetBlockSize" type="()I"/>
<method name="engineGetOutputSize" type="(I)I"/>
<method name="engineGetIV" type="()[B"/>
<method name="engineGetParameters" type="()Ljava/security/AlgorithmParameters;"/>
<method name="engineInit" type="(ILjava/security/Key;Ljava/security/SecureRandom;)V"/>
<method name="engineInit" type="(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="engineInit" type="(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V"/>
<method name="engineUpdate" type="([BII)[B"/>
<method name="engineUpdate" type="([BII[BI)I"/>
<method name="engineUpdate" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I"/>
<method name="engineDoFinal" type="([BII)[B"/>
<method name="engineDoFinal" type="([BII[BI)I"/>
<method name="engineDoFinal" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I"/>
<method name="engineWrap" type="(Ljava/security/Key;)[B"/>
<method name="engineUnwrap" type="([BLjava/lang/String;I)Ljava/security/Key;"/>
<method name="engineGetKeySize" type="(Ljava/security/Key;)I"/>
</class>
<class name="javax/crypto/EncryptedPrivateKeyInfo">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;[B)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/AlgorithmParameters;[B)V"/>
<method name="getAlgName" type="()Ljava/lang/String;"/>
<method name="getAlgParameters" type="()Ljava/security/AlgorithmParameters;"/>
<method name="getEncryptedData" type="()[B"/>
<method name="getKeySpec" type="(Ljavax/crypto/Cipher;)Ljava/security/spec/PKCS8EncodedKeySpec;"/>
<method name="getKeySpec" type="(Ljava/security/Key;)Ljava/security/spec/PKCS8EncodedKeySpec;"/>
<method name="getKeySpec" type="(Ljava/security/Key;Ljava/lang/String;)Ljava/security/spec/PKCS8EncodedKeySpec;"/>
<method name="getKeySpec" type="(Ljava/security/Key;Ljava/security/Provider;)Ljava/security/spec/PKCS8EncodedKeySpec;"/>
<method name="getEncoded" type="()[B"/>
</class>
<class name="javax/crypto/ExemptionMechanism">
<method name="&lt;init&gt;" type="(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/ExemptionMechanism;" class_method="true"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="isCryptoAllowed" type="(Ljava/security/Key;)Z"/>
<method name="getOutputSize" type="(I)I"/>
<method name="init" type="(Ljava/security/Key;)V"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="genExemptionBlob" type="()[B"/>
<method name="genExemptionBlob" type="([B)I"/>
<method name="genExemptionBlob" type="([BI)I"/>
<method name="finalize" type="()V"/>
</class>
<class name="javax/crypto/ExemptionMechanismException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/ExemptionMechanismSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGenExemptionBlob" type="()[B"/>
<method name="engineGenExemptionBlob" type="([BI)I"/>
<method name="engineGetOutputSize" type="(I)I"/>
<method name="engineInit" type="(Ljava/security/Key;)V"/>
<method name="engineInit" type="(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V"/>
<method name="engineInit" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
</class>
<class name="javax/crypto/IllegalBlockSizeException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/KeyAgreement">
<method name="&lt;init&gt;" type="(Ljavax/crypto/KeyAgreementSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/KeyAgreement;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/KeyAgreement;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;" class_method="true"/>
<method name="init" type="(Ljava/security/Key;)V"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/SecureRandom;)V"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="doPhase" type="(Ljava/security/Key;Z)Ljava/security/Key;"/>
<method name="generateSecret" type="()[B"/>
<method name="generateSecret" type="([BI)I"/>
<method name="generateSecret" type="(Ljava/lang/String;)Ljavax/crypto/SecretKey;"/>
</class>
<class name="javax/crypto/KeyAgreementSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineDoPhase" type="(Ljava/security/Key;Z)Ljava/security/Key;"/>
<method name="engineGenerateSecret" type="()[B"/>
<method name="engineGenerateSecret" type="([BI)I"/>
<method name="engineGenerateSecret" type="(Ljava/lang/String;)Ljavax/crypto/SecretKey;"/>
<method name="engineInit" type="(Ljava/security/Key;Ljava/security/SecureRandom;)V"/>
<method name="engineInit" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
</class>
<class name="javax/crypto/KeyGenerator">
<method name="&lt;init&gt;" type="(Ljavax/crypto/KeyGeneratorSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/KeyGenerator;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator;" class_method="true"/>
<method name="generateKey" type="()Ljavax/crypto/SecretKey;"/>
<method name="init" type="(Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="init" type="(I)V"/>
<method name="init" type="(ILjava/security/SecureRandom;)V"/>
<method name="init" type="(Ljava/security/SecureRandom;)V"/>
</class>
<class name="javax/crypto/KeyGeneratorSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGenerateKey" type="()Ljavax/crypto/SecretKey;"/>
<method name="engineInit" type="(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"/>
<method name="engineInit" type="(ILjava/security/SecureRandom;)V"/>
<method name="engineInit" type="(Ljava/security/SecureRandom;)V"/>
</class>
<class name="javax/crypto/Mac">
<method name="&lt;init&gt;" type="(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/Mac;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Mac;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;" class_method="true"/>
<method name="getMacLength" type="()I"/>
<method name="init" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="init" type="(Ljava/security/Key;)V"/>
<method name="update" type="(B)V"/>
<method name="update" type="([BII)V"/>
<method name="update" type="([B)V"/>
<method name="update" type="(Ljava/nio/ByteBuffer;)V"/>
<method name="doFinal" type="()[B"/>
<method name="doFinal" type="([BI)V"/>
<method name="doFinal" type="([B)[B"/>
<method name="reset" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="javax/crypto/MacSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGetMacLength" type="()I"/>
<method name="engineInit" type="(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"/>
<method name="engineUpdate" type="(B)V"/>
<method name="engineUpdate" type="([BII)V"/>
<method name="engineUpdate" type="(Ljava/nio/ByteBuffer;)V"/>
<method name="engineDoFinal" type="()[B"/>
<method name="engineReset" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="javax/crypto/NoSuchPaddingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/NullCipher">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/SealedObject">
<method name="&lt;init&gt;" type="(Ljava/io/Serializable;Ljavax/crypto/Cipher;)V"/>
<method name="&lt;init&gt;" type="(Ljavax/crypto/SealedObject;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getObject" type="(Ljava/security/Key;)Ljava/lang/Object;"/>
<method name="getObject" type="(Ljavax/crypto/Cipher;)Ljava/lang/Object;"/>
<method name="getObject" type="(Ljava/security/Key;Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="javax/crypto/SecretKeyFactory">
<method name="&lt;init&gt;" type="(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/SecretKeyFactory;" class_method="true"/>
<method name="generateSecret" type="(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;"/>
<method name="getKeySpec" type="(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"/>
<method name="translateKey" type="(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;"/>
</class>
<class name="javax/crypto/SecretKeyFactorySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineGenerateSecret" type="(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;"/>
<method name="engineGetKeySpec" type="(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"/>
<method name="engineTranslateKey" type="(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;"/>
</class>
<class name="javax/crypto/ShortBufferException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/crypto/spec/DESedeKeySpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([BI)V"/>
<method name="getKey" type="()[B"/>
<method name="isParityAdjusted" type="([BI)Z" class_method="true"/>
</class>
<class name="javax/crypto/spec/DESKeySpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([BI)V"/>
<method name="getKey" type="()[B"/>
<method name="isParityAdjusted" type="([BI)Z" class_method="true"/>
<method name="isWeak" type="([BI)Z" class_method="true"/>
</class>
<class name="javax/crypto/spec/DHGenParameterSpec">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getPrimeSize" type="()I"/>
<method name="getExponentSize" type="()I"/>
</class>
<class name="javax/crypto/spec/DHParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;I)V"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
<method name="getL" type="()I"/>
</class>
<class name="javax/crypto/spec/DHPrivateKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getX" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
</class>
<class name="javax/crypto/spec/DHPublicKeySpec">
<method name="&lt;init&gt;" type="(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V"/>
<method name="getY" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getG" type="()Ljava/math/BigInteger;"/>
</class>
<class name="javax/crypto/spec/IvParameterSpec">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="([BII)V"/>
<method name="getIV" type="()[B"/>
</class>
<class name="javax/crypto/spec/OAEPParameterSpec">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;Ljavax/crypto/spec/PSource;)V"/>
<method name="getDigestAlgorithm" type="()Ljava/lang/String;"/>
<method name="getMGFAlgorithm" type="()Ljava/lang/String;"/>
<method name="getMGFParameters" type="()Ljava/security/spec/AlgorithmParameterSpec;"/>
<method name="getPSource" type="()Ljavax/crypto/spec/PSource;"/>
</class>
<class name="javax/crypto/spec/PBEKeySpec">
<method name="&lt;init&gt;" type="([C)V"/>
<method name="&lt;init&gt;" type="([C[BII)V"/>
<method name="&lt;init&gt;" type="([C[BI)V"/>
<method name="clearPassword" type="()V"/>
<method name="getPassword" type="()[C"/>
<method name="getSalt" type="()[B"/>
<method name="getIterationCount" type="()I"/>
<method name="getKeyLength" type="()I"/>
</class>
<class name="javax/crypto/spec/PBEParameterSpec">
<method name="&lt;init&gt;" type="([BI)V"/>
<method name="getSalt" type="()[B"/>
<method name="getIterationCount" type="()I"/>
</class>
<class name="javax/crypto/spec/PSource$PSpecified">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="getValue" type="()[B"/>
</class>
<class name="javax/crypto/spec/PSource">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
</class>
<class name="javax/crypto/spec/RC2ParameterSpec">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(I[B)V"/>
<method name="&lt;init&gt;" type="(I[BI)V"/>
<method name="getEffectiveKeyBits" type="()I"/>
<method name="getIV" type="()[B"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="javax/crypto/spec/RC5ParameterSpec">
<method name="&lt;init&gt;" type="(III)V"/>
<method name="&lt;init&gt;" type="(III[B)V"/>
<method name="&lt;init&gt;" type="(III[BI)V"/>
<method name="getVersion" type="()I"/>
<method name="getRounds" type="()I"/>
<method name="getWordSize" type="()I"/>
<method name="getIV" type="()[B"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="javax/crypto/spec/SecretKeySpec">
<method name="&lt;init&gt;" type="([BLjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="([BIILjava/lang/String;)V"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
<method name="getEncoded" type="()[B"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</class>
<class name="javax/microedition/khronos/egl/EGLConfig">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/microedition/khronos/egl/EGLContext">
<method name="&lt;init&gt;" type="()V"/>
<method name="getEGL" type="()Ljavax/microedition/khronos/egl/EGL;" class_method="true"/>
<method name="getGL" type="()Ljavax/microedition/khronos/opengles/GL;"/>
</class>
<class name="javax/microedition/khronos/egl/EGLDisplay">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/microedition/khronos/egl/EGLSurface">
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/net/ServerSocketFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljavax/net/ServerSocketFactory;" class_method="true"/>
<method name="createServerSocket" type="()Ljava/net/ServerSocket;"/>
<method name="createServerSocket" type="(I)Ljava/net/ServerSocket;"/>
<method name="createServerSocket" type="(II)Ljava/net/ServerSocket;"/>
<method name="createServerSocket" type="(IILjava/net/InetAddress;)Ljava/net/ServerSocket;"/>
</class>
<class name="javax/net/SocketFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljavax/net/SocketFactory;" class_method="true"/>
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/lang/String;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/net/InetAddress;I)Ljava/net/Socket;"/>
<method name="createSocket" type="(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;"/>
</class>
<class name="javax/net/ssl/CertPathTrustManagerParameters">
<method name="&lt;init&gt;" type="(Ljava/security/cert/CertPathParameters;)V"/>
<method name="getParameters" type="()Ljava/security/cert/CertPathParameters;"/>
</class>
<class name="javax/net/ssl/HandshakeCompletedEvent">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/SSLSocket;Ljavax/net/ssl/SSLSession;)V"/>
<method name="getSession" type="()Ljavax/net/ssl/SSLSession;"/>
<method name="getCipherSuite" type="()Ljava/lang/String;"/>
<method name="getLocalCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getPeerCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getPeerCertificateChain" type="()[Ljavax/security/cert/X509Certificate;"/>
<method name="getPeerPrincipal" type="()Ljava/security/Principal;"/>
<method name="getLocalPrincipal" type="()Ljava/security/Principal;"/>
<method name="getSocket" type="()Ljavax/net/ssl/SSLSocket;"/>
</class>
<class name="javax/net/ssl/HttpsURLConnection">
<method name="&lt;init&gt;" type="(Ljava/net/URL;)V"/>
<method name="setDefaultHostnameVerifier" type="(Ljavax/net/ssl/HostnameVerifier;)V" class_method="true"/>
<method name="getDefaultHostnameVerifier" type="()Ljavax/net/ssl/HostnameVerifier;" class_method="true"/>
<method name="setDefaultSSLSocketFactory" type="(Ljavax/net/ssl/SSLSocketFactory;)V" class_method="true"/>
<method name="getDefaultSSLSocketFactory" type="()Ljavax/net/ssl/SSLSocketFactory;" class_method="true"/>
<method name="getCipherSuite" type="()Ljava/lang/String;"/>
<method name="getLocalCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getServerCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getPeerPrincipal" type="()Ljava/security/Principal;"/>
<method name="getLocalPrincipal" type="()Ljava/security/Principal;"/>
<method name="setHostnameVerifier" type="(Ljavax/net/ssl/HostnameVerifier;)V"/>
<method name="getHostnameVerifier" type="()Ljavax/net/ssl/HostnameVerifier;"/>
<method name="setSSLSocketFactory" type="(Ljavax/net/ssl/SSLSocketFactory;)V"/>
<method name="getSSLSocketFactory" type="()Ljavax/net/ssl/SSLSocketFactory;"/>
</class>
<class name="javax/net/ssl/KeyManagerFactory">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/KeyManagerFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getDefaultAlgorithm" type="()Ljava/lang/String;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/KeyManagerFactory;" class_method="true"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="init" type="(Ljava/security/KeyStore;[C)V"/>
<method name="init" type="(Ljavax/net/ssl/ManagerFactoryParameters;)V"/>
<method name="getKeyManagers" type="()[Ljavax/net/ssl/KeyManager;"/>
</class>
<class name="javax/net/ssl/KeyManagerFactorySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInit" type="(Ljava/security/KeyStore;[C)V"/>
<method name="engineInit" type="(Ljavax/net/ssl/ManagerFactoryParameters;)V"/>
<method name="engineGetKeyManagers" type="()[Ljavax/net/ssl/KeyManager;"/>
</class>
<class name="javax/net/ssl/KeyStoreBuilderParameters">
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore$Builder;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/List;)V"/>
<method name="getParameters" type="()Ljava/util/List;"/>
</class>
<class name="javax/net/ssl/SSLContext">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/SSLContextSpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getDefault" type="()Ljavax/net/ssl/SSLContext;" class_method="true"/>
<method name="setDefault" type="(Ljavax/net/ssl/SSLContext;)V" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLContext;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;" class_method="true"/>
<method name="getProtocol" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="init" type="([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V"/>
<method name="getSocketFactory" type="()Ljavax/net/ssl/SSLSocketFactory;"/>
<method name="getServerSocketFactory" type="()Ljavax/net/ssl/SSLServerSocketFactory;"/>
<method name="createSSLEngine" type="()Ljavax/net/ssl/SSLEngine;"/>
<method name="createSSLEngine" type="(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;"/>
<method name="getServerSessionContext" type="()Ljavax/net/ssl/SSLSessionContext;"/>
<method name="getClientSessionContext" type="()Ljavax/net/ssl/SSLSessionContext;"/>
<method name="getDefaultSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
<method name="getSupportedSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
</class>
<class name="javax/net/ssl/SSLContextSpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInit" type="([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V"/>
<method name="engineGetSocketFactory" type="()Ljavax/net/ssl/SSLSocketFactory;"/>
<method name="engineGetServerSocketFactory" type="()Ljavax/net/ssl/SSLServerSocketFactory;"/>
<method name="engineCreateSSLEngine" type="(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;"/>
<method name="engineCreateSSLEngine" type="()Ljavax/net/ssl/SSLEngine;"/>
<method name="engineGetServerSessionContext" type="()Ljavax/net/ssl/SSLSessionContext;"/>
<method name="engineGetClientSessionContext" type="()Ljavax/net/ssl/SSLSessionContext;"/>
<method name="engineGetDefaultSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
<method name="engineGetSupportedSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
</class>
<class name="javax/net/ssl/SSLEngine">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="getPeerHost" type="()Ljava/lang/String;"/>
<method name="getPeerPort" type="()I"/>
<method name="beginHandshake" type="()V"/>
<method name="closeInbound" type="()V"/>
<method name="closeOutbound" type="()V"/>
<method name="getDelegatedTask" type="()Ljava/lang/Runnable;"/>
<method name="getEnabledCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getEnabledProtocols" type="()[Ljava/lang/String;"/>
<method name="getEnableSessionCreation" type="()Z"/>
<method name="getHandshakeStatus" type="()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"/>
<method name="getNeedClientAuth" type="()Z"/>
<method name="getSession" type="()Ljavax/net/ssl/SSLSession;"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getSupportedProtocols" type="()[Ljava/lang/String;"/>
<method name="getUseClientMode" type="()Z"/>
<method name="getWantClientAuth" type="()Z"/>
<method name="isInboundDone" type="()Z"/>
<method name="isOutboundDone" type="()Z"/>
<method name="setEnabledCipherSuites" type="([Ljava/lang/String;)V"/>
<method name="setEnabledProtocols" type="([Ljava/lang/String;)V"/>
<method name="setEnableSessionCreation" type="(Z)V"/>
<method name="setNeedClientAuth" type="(Z)V"/>
<method name="setUseClientMode" type="(Z)V"/>
<method name="setWantClientAuth" type="(Z)V"/>
<method name="unwrap" type="(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="wrap" type="([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="unwrap" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="unwrap" type="(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="wrap" type="([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="wrap" type="(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;"/>
<method name="getSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
<method name="setSSLParameters" type="(Ljavax/net/ssl/SSLParameters;)V"/>
</class>
<class name="javax/net/ssl/SSLEngineResult$HandshakeStatus">
<method name="values" type="()[Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;" class_method="true"/>
</class>
<class name="javax/net/ssl/SSLEngineResult$Status">
<method name="values" type="()[Ljavax/net/ssl/SSLEngineResult$Status;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljavax/net/ssl/SSLEngineResult$Status;" class_method="true"/>
</class>
<class name="javax/net/ssl/SSLEngineResult">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V"/>
<method name="getStatus" type="()Ljavax/net/ssl/SSLEngineResult$Status;"/>
<method name="getHandshakeStatus" type="()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"/>
<method name="bytesConsumed" type="()I"/>
<method name="bytesProduced" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="javax/net/ssl/SSLException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="javax/net/ssl/SSLHandshakeException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/net/ssl/SSLKeyException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/net/ssl/SSLParameters">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="getCipherSuites" type="()[Ljava/lang/String;"/>
<method name="setCipherSuites" type="([Ljava/lang/String;)V"/>
<method name="getProtocols" type="()[Ljava/lang/String;"/>
<method name="setProtocols" type="([Ljava/lang/String;)V"/>
<method name="getNeedClientAuth" type="()Z"/>
<method name="setNeedClientAuth" type="(Z)V"/>
<method name="getWantClientAuth" type="()Z"/>
<method name="setWantClientAuth" type="(Z)V"/>
</class>
<class name="javax/net/ssl/SSLPeerUnverifiedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/net/ssl/SSLPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="javax/net/ssl/SSLProtocolException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/net/ssl/SSLServerSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="(II)V"/>
<method name="&lt;init&gt;" type="(IILjava/net/InetAddress;)V"/>
<method name="getEnabledCipherSuites" type="()[Ljava/lang/String;"/>
<method name="setEnabledCipherSuites" type="([Ljava/lang/String;)V"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getSupportedProtocols" type="()[Ljava/lang/String;"/>
<method name="getEnabledProtocols" type="()[Ljava/lang/String;"/>
<method name="setEnabledProtocols" type="([Ljava/lang/String;)V"/>
<method name="setNeedClientAuth" type="(Z)V"/>
<method name="getNeedClientAuth" type="()Z"/>
<method name="setWantClientAuth" type="(Z)V"/>
<method name="getWantClientAuth" type="()Z"/>
<method name="setUseClientMode" type="(Z)V"/>
<method name="getUseClientMode" type="()Z"/>
<method name="setEnableSessionCreation" type="(Z)V"/>
<method name="getEnableSessionCreation" type="()Z"/>
</class>
<class name="javax/net/ssl/SSLServerSocketFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljavax/net/ServerSocketFactory;" class_method="true"/>
<method name="getDefaultCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
</class>
<class name="javax/net/ssl/SSLSessionBindingEvent">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getSession" type="()Ljavax/net/ssl/SSLSession;"/>
</class>
<class name="javax/net/ssl/SSLSocket">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/net/InetAddress;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getEnabledCipherSuites" type="()[Ljava/lang/String;"/>
<method name="setEnabledCipherSuites" type="([Ljava/lang/String;)V"/>
<method name="getSupportedProtocols" type="()[Ljava/lang/String;"/>
<method name="getEnabledProtocols" type="()[Ljava/lang/String;"/>
<method name="setEnabledProtocols" type="([Ljava/lang/String;)V"/>
<method name="getSession" type="()Ljavax/net/ssl/SSLSession;"/>
<method name="addHandshakeCompletedListener" type="(Ljavax/net/ssl/HandshakeCompletedListener;)V"/>
<method name="removeHandshakeCompletedListener" type="(Ljavax/net/ssl/HandshakeCompletedListener;)V"/>
<method name="startHandshake" type="()V"/>
<method name="setUseClientMode" type="(Z)V"/>
<method name="getUseClientMode" type="()Z"/>
<method name="setNeedClientAuth" type="(Z)V"/>
<method name="getNeedClientAuth" type="()Z"/>
<method name="setWantClientAuth" type="(Z)V"/>
<method name="getWantClientAuth" type="()Z"/>
<method name="setEnableSessionCreation" type="(Z)V"/>
<method name="getEnableSessionCreation" type="()Z"/>
<method name="getSSLParameters" type="()Ljavax/net/ssl/SSLParameters;"/>
<method name="setSSLParameters" type="(Ljavax/net/ssl/SSLParameters;)V"/>
</class>
<class name="javax/net/ssl/SSLSocketFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefault" type="()Ljavax/net/SocketFactory;" class_method="true"/>
<method name="getDefaultCipherSuites" type="()[Ljava/lang/String;"/>
<method name="getSupportedCipherSuites" type="()[Ljava/lang/String;"/>
<method name="createSocket" type="(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;"/>
</class>
<class name="javax/net/ssl/TrustManagerFactory">
<method name="&lt;init&gt;" type="(Ljavax/net/ssl/TrustManagerFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V"/>
<method name="getDefaultAlgorithm" type="()Ljava/lang/String;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;" class_method="true"/>
<method name="getInstance" type="(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/TrustManagerFactory;" class_method="true"/>
<method name="getAlgorithm" type="()Ljava/lang/String;"/>
<method name="getProvider" type="()Ljava/security/Provider;"/>
<method name="init" type="(Ljava/security/KeyStore;)V"/>
<method name="init" type="(Ljavax/net/ssl/ManagerFactoryParameters;)V"/>
<method name="getTrustManagers" type="()[Ljavax/net/ssl/TrustManager;"/>
</class>
<class name="javax/net/ssl/TrustManagerFactorySpi">
<method name="&lt;init&gt;" type="()V"/>
<method name="engineInit" type="(Ljava/security/KeyStore;)V"/>
<method name="engineInit" type="(Ljavax/net/ssl/ManagerFactoryParameters;)V"/>
<method name="engineGetTrustManagers" type="()[Ljavax/net/ssl/TrustManager;"/>
</class>
<class name="javax/net/ssl/X509ExtendedKeyManager">
<method name="&lt;init&gt;" type="()V"/>
<method name="chooseEngineClientAlias" type="([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"/>
<method name="chooseEngineServerAlias" type="(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"/>
</class>
<class name="javax/security/auth/AuthPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="javax/security/auth/callback/PasswordCallback">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Z)V"/>
<method name="getPrompt" type="()Ljava/lang/String;"/>
<method name="isEchoOn" type="()Z"/>
<method name="setPassword" type="([C)V"/>
<method name="getPassword" type="()[C"/>
<method name="clearPassword" type="()V"/>
</class>
<class name="javax/security/auth/callback/UnsupportedCallbackException">
<method name="&lt;init&gt;" type="(Ljavax/security/auth/callback/Callback;)V"/>
<method name="&lt;init&gt;" type="(Ljavax/security/auth/callback/Callback;Ljava/lang/String;)V"/>
<method name="getCallback" type="()Ljavax/security/auth/callback/Callback;"/>
</class>
<class name="javax/security/auth/DestroyFailedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/security/auth/login/LoginException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/security/auth/PrivateCredentialPermission">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getPrincipals" type="()[[Ljava/lang/String;"/>
<method name="getActions" type="()Ljava/lang/String;"/>
<method name="getCredentialClass" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="implies" type="(Ljava/security/Permission;)Z"/>
<method name="newPermissionCollection" type="()Ljava/security/PermissionCollection;"/>
</class>
<class name="javax/security/auth/Subject">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(ZLjava/util/Set;Ljava/util/Set;Ljava/util/Set;)V"/>
<method name="doAs" type="(Ljavax/security/auth/Subject;Ljava/security/PrivilegedAction;)Ljava/lang/Object;" class_method="true"/>
<method name="doAsPrivileged" type="(Ljavax/security/auth/Subject;Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" class_method="true"/>
<method name="doAs" type="(Ljavax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;" class_method="true"/>
<method name="doAsPrivileged" type="(Ljavax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getPrincipals" type="()Ljava/util/Set;"/>
<method name="getPrincipals" type="(Ljava/lang/Class;)Ljava/util/Set;"/>
<method name="getPrivateCredentials" type="()Ljava/util/Set;"/>
<method name="getPrivateCredentials" type="(Ljava/lang/Class;)Ljava/util/Set;"/>
<method name="getPublicCredentials" type="()Ljava/util/Set;"/>
<method name="getPublicCredentials" type="(Ljava/lang/Class;)Ljava/util/Set;"/>
<method name="hashCode" type="()I"/>
<method name="setReadOnly" type="()V"/>
<method name="isReadOnly" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getSubject" type="(Ljava/security/AccessControlContext;)Ljavax/security/auth/Subject;" class_method="true"/>
</class>
<class name="javax/security/auth/SubjectDomainCombiner">
<method name="&lt;init&gt;" type="(Ljavax/security/auth/Subject;)V"/>
<method name="getSubject" type="()Ljavax/security/auth/Subject;"/>
<method name="combine" type="([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;"/>
</class>
<class name="javax/security/auth/x500/X500Principal">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/util/Map;)V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getEncoded" type="()[B"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getName" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getName" type="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="javax/security/cert/Certificate">
<method name="&lt;init&gt;" type="()V"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="getEncoded" type="()[B"/>
<method name="verify" type="(Ljava/security/PublicKey;)V"/>
<method name="verify" type="(Ljava/security/PublicKey;Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getPublicKey" type="()Ljava/security/PublicKey;"/>
</class>
<class name="javax/security/cert/CertificateEncodingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/security/cert/CertificateException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/security/cert/CertificateExpiredException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/security/cert/CertificateNotYetValidException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/security/cert/CertificateParsingException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
</class>
<class name="javax/security/cert/X509Certificate">
<method name="&lt;init&gt;" type="()V"/>
<method name="getInstance" type="(Ljava/io/InputStream;)Ljavax/security/cert/X509Certificate;" class_method="true"/>
<method name="getInstance" type="([B)Ljavax/security/cert/X509Certificate;" class_method="true"/>
<method name="checkValidity" type="()V"/>
<method name="checkValidity" type="(Ljava/util/Date;)V"/>
<method name="getVersion" type="()I"/>
<method name="getSerialNumber" type="()Ljava/math/BigInteger;"/>
<method name="getIssuerDN" type="()Ljava/security/Principal;"/>
<method name="getSubjectDN" type="()Ljava/security/Principal;"/>
<method name="getNotBefore" type="()Ljava/util/Date;"/>
<method name="getNotAfter" type="()Ljava/util/Date;"/>
<method name="getSigAlgName" type="()Ljava/lang/String;"/>
<method name="getSigAlgOID" type="()Ljava/lang/String;"/>
<method name="getSigAlgParams" type="()[B"/>
</class>
<class name="javax/sql/ConnectionEvent">
<method name="&lt;init&gt;" type="(Ljavax/sql/PooledConnection;)V"/>
<method name="&lt;init&gt;" type="(Ljavax/sql/PooledConnection;Ljava/sql/SQLException;)V"/>
<method name="getSQLException" type="()Ljava/sql/SQLException;"/>
</class>
<class name="javax/sql/RowSetEvent">
<method name="&lt;init&gt;" type="(Ljavax/sql/RowSet;)V"/>
</class>
<class name="javax/sql/StatementEvent">
<method name="&lt;init&gt;" type="(Ljavax/sql/PooledConnection;Ljava/sql/PreparedStatement;Ljava/sql/SQLException;)V"/>
<method name="&lt;init&gt;" type="(Ljavax/sql/PooledConnection;Ljava/sql/PreparedStatement;)V"/>
<method name="getStatement" type="()Ljava/sql/PreparedStatement;"/>
<method name="getSQLException" type="()Ljava/sql/SQLException;"/>
</class>
<class name="javax/xml/datatype/DatatypeConfigurationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="printStackTrace" type="()V"/>
<method name="printStackTrace" type="(Ljava/io/PrintStream;)V"/>
<method name="printStackTrace" type="(Ljava/io/PrintWriter;)V"/>
</class>
<class name="javax/xml/datatype/DatatypeConstants$Field">
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getId" type="()I"/>
</class>
<class name="javax/xml/datatype/DatatypeConstants">
</class>
<class name="javax/xml/datatype/DatatypeFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="()Ljavax/xml/datatype/DatatypeFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/datatype/DatatypeFactory;" class_method="true"/>
<method name="newDuration" type="(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"/>
<method name="newDuration" type="(J)Ljavax/xml/datatype/Duration;"/>
<method name="newDuration" type="(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;"/>
<method name="newDuration" type="(ZIIIIII)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationDayTime" type="(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationDayTime" type="(J)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationDayTime" type="(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationDayTime" type="(ZIIII)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationYearMonth" type="(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationYearMonth" type="(J)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationYearMonth" type="(ZLjava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;"/>
<method name="newDurationYearMonth" type="(ZII)Ljavax/xml/datatype/Duration;"/>
<method name="newXMLGregorianCalendar" type="()Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendar" type="(Ljava/lang/String;)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendar" type="(Ljava/util/GregorianCalendar;)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendar" type="(Ljava/math/BigInteger;IIIIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendar" type="(IIIIIIII)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendarDate" type="(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendarTime" type="(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendarTime" type="(IIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="newXMLGregorianCalendarTime" type="(IIIII)Ljavax/xml/datatype/XMLGregorianCalendar;"/>
</class>
<class name="javax/xml/datatype/Duration">
<method name="&lt;init&gt;" type="()V"/>
<method name="getXMLSchemaType" type="()Ljavax/xml/namespace/QName;"/>
<method name="getSign" type="()I"/>
<method name="getYears" type="()I"/>
<method name="getMonths" type="()I"/>
<method name="getDays" type="()I"/>
<method name="getHours" type="()I"/>
<method name="getMinutes" type="()I"/>
<method name="getSeconds" type="()I"/>
<method name="getTimeInMillis" type="(Ljava/util/Calendar;)J"/>
<method name="getTimeInMillis" type="(Ljava/util/Date;)J"/>
<method name="getField" type="(Ljavax/xml/datatype/DatatypeConstants$Field;)Ljava/lang/Number;"/>
<method name="isSet" type="(Ljavax/xml/datatype/DatatypeConstants$Field;)Z"/>
<method name="add" type="(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;"/>
<method name="addTo" type="(Ljava/util/Calendar;)V"/>
<method name="addTo" type="(Ljava/util/Date;)V"/>
<method name="subtract" type="(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;"/>
<method name="multiply" type="(I)Ljavax/xml/datatype/Duration;"/>
<method name="multiply" type="(Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;"/>
<method name="negate" type="()Ljavax/xml/datatype/Duration;"/>
<method name="normalizeWith" type="(Ljava/util/Calendar;)Ljavax/xml/datatype/Duration;"/>
<method name="compare" type="(Ljavax/xml/datatype/Duration;)I"/>
<method name="isLongerThan" type="(Ljavax/xml/datatype/Duration;)Z"/>
<method name="isShorterThan" type="(Ljavax/xml/datatype/Duration;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="javax/xml/datatype/XMLGregorianCalendar">
<method name="&lt;init&gt;" type="()V"/>
<method name="clear" type="()V"/>
<method name="reset" type="()V"/>
<method name="setYear" type="(Ljava/math/BigInteger;)V"/>
<method name="setYear" type="(I)V"/>
<method name="setMonth" type="(I)V"/>
<method name="setDay" type="(I)V"/>
<method name="setTimezone" type="(I)V"/>
<method name="setTime" type="(III)V"/>
<method name="setHour" type="(I)V"/>
<method name="setMinute" type="(I)V"/>
<method name="setSecond" type="(I)V"/>
<method name="setMillisecond" type="(I)V"/>
<method name="setFractionalSecond" type="(Ljava/math/BigDecimal;)V"/>
<method name="setTime" type="(IIILjava/math/BigDecimal;)V"/>
<method name="setTime" type="(IIII)V"/>
<method name="getEon" type="()Ljava/math/BigInteger;"/>
<method name="getYear" type="()I"/>
<method name="getEonAndYear" type="()Ljava/math/BigInteger;"/>
<method name="getMonth" type="()I"/>
<method name="getDay" type="()I"/>
<method name="getTimezone" type="()I"/>
<method name="getHour" type="()I"/>
<method name="getMinute" type="()I"/>
<method name="getSecond" type="()I"/>
<method name="getMillisecond" type="()I"/>
<method name="getFractionalSecond" type="()Ljava/math/BigDecimal;"/>
<method name="compare" type="(Ljavax/xml/datatype/XMLGregorianCalendar;)I"/>
<method name="normalize" type="()Ljavax/xml/datatype/XMLGregorianCalendar;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toXMLFormat" type="()Ljava/lang/String;"/>
<method name="getXMLSchemaType" type="()Ljavax/xml/namespace/QName;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="isValid" type="()Z"/>
<method name="add" type="(Ljavax/xml/datatype/Duration;)V"/>
<method name="toGregorianCalendar" type="()Ljava/util/GregorianCalendar;"/>
<method name="toGregorianCalendar" type="(Ljava/util/TimeZone;Ljava/util/Locale;Ljavax/xml/datatype/XMLGregorianCalendar;)Ljava/util/GregorianCalendar;"/>
<method name="getTimeZone" type="(I)Ljava/util/TimeZone;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="javax/xml/namespace/QName">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getNamespaceURI" type="()Ljava/lang/String;"/>
<method name="getLocalPart" type="()Ljava/lang/String;"/>
<method name="getPrefix" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="valueOf" type="(Ljava/lang/String;)Ljavax/xml/namespace/QName;" class_method="true"/>
</class>
<class name="javax/xml/parsers/DocumentBuilder">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="parse" type="(Ljava/io/InputStream;)Lorg/w3c/dom/Document;"/>
<method name="parse" type="(Ljava/io/InputStream;Ljava/lang/String;)Lorg/w3c/dom/Document;"/>
<method name="parse" type="(Ljava/lang/String;)Lorg/w3c/dom/Document;"/>
<method name="parse" type="(Ljava/io/File;)Lorg/w3c/dom/Document;"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;"/>
<method name="isNamespaceAware" type="()Z"/>
<method name="isValidating" type="()Z"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="newDocument" type="()Lorg/w3c/dom/Document;"/>
<method name="getDOMImplementation" type="()Lorg/w3c/dom/DOMImplementation;"/>
<method name="getSchema" type="()Ljavax/xml/validation/Schema;"/>
<method name="isXIncludeAware" type="()Z"/>
</class>
<class name="javax/xml/parsers/DocumentBuilderFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="()Ljavax/xml/parsers/DocumentBuilderFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/parsers/DocumentBuilderFactory;" class_method="true"/>
<method name="newDocumentBuilder" type="()Ljavax/xml/parsers/DocumentBuilder;"/>
<method name="setNamespaceAware" type="(Z)V"/>
<method name="setValidating" type="(Z)V"/>
<method name="setIgnoringElementContentWhitespace" type="(Z)V"/>
<method name="setExpandEntityReferences" type="(Z)V"/>
<method name="setIgnoringComments" type="(Z)V"/>
<method name="setCoalescing" type="(Z)V"/>
<method name="isNamespaceAware" type="()Z"/>
<method name="isValidating" type="()Z"/>
<method name="isIgnoringElementContentWhitespace" type="()Z"/>
<method name="isExpandEntityReferences" type="()Z"/>
<method name="isIgnoringComments" type="()Z"/>
<method name="isCoalescing" type="()Z"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="getSchema" type="()Ljavax/xml/validation/Schema;"/>
<method name="setSchema" type="(Ljavax/xml/validation/Schema;)V"/>
<method name="setXIncludeAware" type="(Z)V"/>
<method name="isXIncludeAware" type="()Z"/>
</class>
<class name="javax/xml/parsers/FactoryConfigurationError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getException" type="()Ljava/lang/Exception;"/>
</class>
<class name="javax/xml/parsers/ParserConfigurationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="javax/xml/parsers/SAXParser">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="parse" type="(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;)V"/>
<method name="parse" type="(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;Ljava/lang/String;)V"/>
<method name="parse" type="(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V"/>
<method name="parse" type="(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;Ljava/lang/String;)V"/>
<method name="parse" type="(Ljava/lang/String;Lorg/xml/sax/HandlerBase;)V"/>
<method name="parse" type="(Ljava/lang/String;Lorg/xml/sax/helpers/DefaultHandler;)V"/>
<method name="parse" type="(Ljava/io/File;Lorg/xml/sax/HandlerBase;)V"/>
<method name="parse" type="(Ljava/io/File;Lorg/xml/sax/helpers/DefaultHandler;)V"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;Lorg/xml/sax/HandlerBase;)V"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;Lorg/xml/sax/helpers/DefaultHandler;)V"/>
<method name="getParser" type="()Lorg/xml/sax/Parser;"/>
<method name="getXMLReader" type="()Lorg/xml/sax/XMLReader;"/>
<method name="isNamespaceAware" type="()Z"/>
<method name="isValidating" type="()Z"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getSchema" type="()Ljavax/xml/validation/Schema;"/>
<method name="isXIncludeAware" type="()Z"/>
</class>
<class name="javax/xml/parsers/SAXParserFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="()Ljavax/xml/parsers/SAXParserFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/parsers/SAXParserFactory;" class_method="true"/>
<method name="newSAXParser" type="()Ljavax/xml/parsers/SAXParser;"/>
<method name="setNamespaceAware" type="(Z)V"/>
<method name="setValidating" type="(Z)V"/>
<method name="isNamespaceAware" type="()Z"/>
<method name="isValidating" type="()Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="getSchema" type="()Ljavax/xml/validation/Schema;"/>
<method name="setSchema" type="(Ljavax/xml/validation/Schema;)V"/>
<method name="setXIncludeAware" type="(Z)V"/>
<method name="isXIncludeAware" type="()Z"/>
</class>
<class name="javax/xml/transform/dom/DOMResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;)V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;Ljava/lang/String;)V"/>
<method name="setNode" type="(Lorg/w3c/dom/Node;)V"/>
<method name="getNode" type="()Lorg/w3c/dom/Node;"/>
<method name="setNextSibling" type="(Lorg/w3c/dom/Node;)V"/>
<method name="getNextSibling" type="()Lorg/w3c/dom/Node;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</class>
<class name="javax/xml/transform/dom/DOMSource">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;)V"/>
<method name="&lt;init&gt;" type="(Lorg/w3c/dom/Node;Ljava/lang/String;)V"/>
<method name="setNode" type="(Lorg/w3c/dom/Node;)V"/>
<method name="getNode" type="()Lorg/w3c/dom/Node;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</class>
<class name="javax/xml/transform/OutputKeys">
</class>
<class name="javax/xml/transform/sax/SAXResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="setHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setLexicalHandler" type="(Lorg/xml/sax/ext/LexicalHandler;)V"/>
<method name="getLexicalHandler" type="()Lorg/xml/sax/ext/LexicalHandler;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</class>
<class name="javax/xml/transform/sax/SAXSource">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/XMLReader;Lorg/xml/sax/InputSource;)V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="setXMLReader" type="(Lorg/xml/sax/XMLReader;)V"/>
<method name="getXMLReader" type="()Lorg/xml/sax/XMLReader;"/>
<method name="setInputSource" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="getInputSource" type="()Lorg/xml/sax/InputSource;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="sourceToInputSource" type="(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;" class_method="true"/>
</class>
<class name="javax/xml/transform/sax/SAXTransformerFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newTransformerHandler" type="(Ljavax/xml/transform/Source;)Ljavax/xml/transform/sax/TransformerHandler;"/>
<method name="newTransformerHandler" type="(Ljavax/xml/transform/Templates;)Ljavax/xml/transform/sax/TransformerHandler;"/>
<method name="newTransformerHandler" type="()Ljavax/xml/transform/sax/TransformerHandler;"/>
<method name="newTemplatesHandler" type="()Ljavax/xml/transform/sax/TemplatesHandler;"/>
<method name="newXMLFilter" type="(Ljavax/xml/transform/Source;)Lorg/xml/sax/XMLFilter;"/>
<method name="newXMLFilter" type="(Ljavax/xml/transform/Templates;)Lorg/xml/sax/XMLFilter;"/>
</class>
<class name="javax/xml/transform/stream/StreamResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/OutputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Writer;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="setOutputStream" type="(Ljava/io/OutputStream;)V"/>
<method name="getOutputStream" type="()Ljava/io/OutputStream;"/>
<method name="setWriter" type="(Ljava/io/Writer;)V"/>
<method name="getWriter" type="()Ljava/io/Writer;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="setSystemId" type="(Ljava/io/File;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</class>
<class name="javax/xml/transform/stream/StreamSource">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/File;)V"/>
<method name="setInputStream" type="(Ljava/io/InputStream;)V"/>
<method name="getInputStream" type="()Ljava/io/InputStream;"/>
<method name="setReader" type="(Ljava/io/Reader;)V"/>
<method name="getReader" type="()Ljava/io/Reader;"/>
<method name="setPublicId" type="(Ljava/lang/String;)V"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="setSystemId" type="(Ljava/io/File;)V"/>
</class>
<class name="javax/xml/transform/Transformer">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="transform" type="(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="clearParameters" type="()V"/>
<method name="setURIResolver" type="(Ljavax/xml/transform/URIResolver;)V"/>
<method name="getURIResolver" type="()Ljavax/xml/transform/URIResolver;"/>
<method name="setOutputProperties" type="(Ljava/util/Properties;)V"/>
<method name="getOutputProperties" type="()Ljava/util/Properties;"/>
<method name="setOutputProperty" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getOutputProperty" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="setErrorListener" type="(Ljavax/xml/transform/ErrorListener;)V"/>
<method name="getErrorListener" type="()Ljavax/xml/transform/ErrorListener;"/>
</class>
<class name="javax/xml/transform/TransformerConfigurationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V"/>
</class>
<class name="javax/xml/transform/TransformerException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V"/>
<method name="getLocator" type="()Ljavax/xml/transform/SourceLocator;"/>
<method name="setLocator" type="(Ljavax/xml/transform/SourceLocator;)V"/>
<method name="getException" type="()Ljava/lang/Throwable;"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
<method name="initCause" type="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"/>
<method name="getMessageAndLocation" type="()Ljava/lang/String;"/>
<method name="getLocationAsString" type="()Ljava/lang/String;"/>
<method name="printStackTrace" type="()V"/>
<method name="printStackTrace" type="(Ljava/io/PrintStream;)V"/>
<method name="printStackTrace" type="(Ljava/io/PrintWriter;)V"/>
</class>
<class name="javax/xml/transform/TransformerFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="()Ljavax/xml/transform/TransformerFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/transform/TransformerFactory;" class_method="true"/>
<method name="newTransformer" type="(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Transformer;"/>
<method name="newTransformer" type="()Ljavax/xml/transform/Transformer;"/>
<method name="newTemplates" type="(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Templates;"/>
<method name="getAssociatedStylesheet" type="(Ljavax/xml/transform/Source;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;"/>
<method name="setURIResolver" type="(Ljavax/xml/transform/URIResolver;)V"/>
<method name="getURIResolver" type="()Ljavax/xml/transform/URIResolver;"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setErrorListener" type="(Ljavax/xml/transform/ErrorListener;)V"/>
<method name="getErrorListener" type="()Ljavax/xml/transform/ErrorListener;"/>
</class>
<class name="javax/xml/transform/TransformerFactoryConfigurationError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getException" type="()Ljava/lang/Exception;"/>
</class>
<class name="javax/xml/validation/Schema">
<method name="&lt;init&gt;" type="()V"/>
<method name="newValidator" type="()Ljavax/xml/validation/Validator;"/>
<method name="newValidatorHandler" type="()Ljavax/xml/validation/ValidatorHandler;"/>
</class>
<class name="javax/xml/validation/SchemaFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Ljava/lang/String;)Ljavax/xml/validation/SchemaFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/validation/SchemaFactory;" class_method="true"/>
<method name="isSchemaLanguageSupported" type="(Ljava/lang/String;)Z"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="setResourceResolver" type="(Lorg/w3c/dom/ls/LSResourceResolver;)V"/>
<method name="getResourceResolver" type="()Lorg/w3c/dom/ls/LSResourceResolver;"/>
<method name="newSchema" type="(Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;"/>
<method name="newSchema" type="(Ljava/io/File;)Ljavax/xml/validation/Schema;"/>
<method name="newSchema" type="(Ljava/net/URL;)Ljavax/xml/validation/Schema;"/>
<method name="newSchema" type="([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;"/>
<method name="newSchema" type="()Ljavax/xml/validation/Schema;"/>
</class>
<class name="javax/xml/validation/SchemaFactoryLoader">
<method name="&lt;init&gt;" type="()V"/>
<method name="newFactory" type="(Ljava/lang/String;)Ljavax/xml/validation/SchemaFactory;"/>
</class>
<class name="javax/xml/validation/TypeInfoProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="getElementTypeInfo" type="()Lorg/w3c/dom/TypeInfo;"/>
<method name="getAttributeTypeInfo" type="(I)Lorg/w3c/dom/TypeInfo;"/>
<method name="isIdAttribute" type="(I)Z"/>
<method name="isSpecified" type="(I)Z"/>
</class>
<class name="javax/xml/validation/Validator">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="validate" type="(Ljavax/xml/transform/Source;)V"/>
<method name="validate" type="(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="setResourceResolver" type="(Lorg/w3c/dom/ls/LSResourceResolver;)V"/>
<method name="getResourceResolver" type="()Lorg/w3c/dom/ls/LSResourceResolver;"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="javax/xml/validation/ValidatorHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="setContentHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="setResourceResolver" type="(Lorg/w3c/dom/ls/LSResourceResolver;)V"/>
<method name="getResourceResolver" type="()Lorg/w3c/dom/ls/LSResourceResolver;"/>
<method name="getTypeInfoProvider" type="()Ljavax/xml/validation/TypeInfoProvider;"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="javax/xml/XMLConstants">
</class>
<class name="javax/xml/xpath/XPathConstants">
</class>
<class name="javax/xml/xpath/XPathException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="getCause" type="()Ljava/lang/Throwable;"/>
<method name="printStackTrace" type="(Ljava/io/PrintStream;)V"/>
<method name="printStackTrace" type="()V"/>
<method name="printStackTrace" type="(Ljava/io/PrintWriter;)V"/>
</class>
<class name="javax/xml/xpath/XPathExpressionException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="javax/xml/xpath/XPathFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="()Ljavax/xml/xpath/XPathFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;)Ljavax/xml/xpath/XPathFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/xpath/XPathFactory;" class_method="true"/>
<method name="isObjectModelSupported" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setXPathVariableResolver" type="(Ljavax/xml/xpath/XPathVariableResolver;)V"/>
<method name="setXPathFunctionResolver" type="(Ljavax/xml/xpath/XPathFunctionResolver;)V"/>
<method name="newXPath" type="()Ljavax/xml/xpath/XPath;"/>
</class>
<class name="javax/xml/xpath/XPathFactoryConfigurationException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="javax/xml/xpath/XPathFunctionException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
</class>
<class name="junit/framework/Assert">
<method name="&lt;init&gt;" type="()V"/>
<method name="assertTrue" type="(Ljava/lang/String;Z)V" class_method="true"/>
<method name="assertTrue" type="(Z)V" class_method="true"/>
<method name="assertFalse" type="(Ljava/lang/String;Z)V" class_method="true"/>
<method name="assertFalse" type="(Z)V" class_method="true"/>
<method name="fail" type="(Ljava/lang/String;)V" class_method="true"/>
<method name="fail" type="()V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;Ljava/lang/String;)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;DDD)V" class_method="true"/>
<method name="assertEquals" type="(DDD)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;FFF)V" class_method="true"/>
<method name="assertEquals" type="(FFF)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;JJ)V" class_method="true"/>
<method name="assertEquals" type="(JJ)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;ZZ)V" class_method="true"/>
<method name="assertEquals" type="(ZZ)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;BB)V" class_method="true"/>
<method name="assertEquals" type="(BB)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;CC)V" class_method="true"/>
<method name="assertEquals" type="(CC)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;SS)V" class_method="true"/>
<method name="assertEquals" type="(SS)V" class_method="true"/>
<method name="assertEquals" type="(Ljava/lang/String;II)V" class_method="true"/>
<method name="assertEquals" type="(II)V" class_method="true"/>
<method name="assertNotNull" type="(Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNotNull" type="(Ljava/lang/String;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNull" type="(Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNull" type="(Ljava/lang/String;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertSame" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertSame" type="(Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNotSame" type="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
<method name="assertNotSame" type="(Ljava/lang/Object;Ljava/lang/Object;)V" class_method="true"/>
</class>
<class name="junit/framework/AssertionFailedError">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="junit/framework/ComparisonFailure">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
</class>
<class name="junit/framework/TestCase">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="countTestCases" type="()I"/>
<method name="createResult" type="()Ljunit/framework/TestResult;"/>
<method name="run" type="()Ljunit/framework/TestResult;"/>
<method name="run" type="(Ljunit/framework/TestResult;)V"/>
<method name="runBare" type="()V"/>
<method name="runTest" type="()V"/>
<method name="setUp" type="()V"/>
<method name="tearDown" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="setName" type="(Ljava/lang/String;)V"/>
</class>
<class name="junit/framework/TestFailure">
<method name="&lt;init&gt;" type="(Ljunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="failedTest" type="()Ljunit/framework/Test;"/>
<method name="thrownException" type="()Ljava/lang/Throwable;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="trace" type="()Ljava/lang/String;"/>
<method name="exceptionMessage" type="()Ljava/lang/String;"/>
<method name="isFailure" type="()Z"/>
</class>
<class name="junit/framework/TestResult">
<method name="&lt;init&gt;" type="()V"/>
<method name="addError" type="(Ljunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="addFailure" type="(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"/>
<method name="addListener" type="(Ljunit/framework/TestListener;)V"/>
<method name="removeListener" type="(Ljunit/framework/TestListener;)V"/>
<method name="endTest" type="(Ljunit/framework/Test;)V"/>
<method name="errorCount" type="()I"/>
<method name="errors" type="()Ljava/util/Enumeration;"/>
<method name="failureCount" type="()I"/>
<method name="failures" type="()Ljava/util/Enumeration;"/>
<method name="run" type="(Ljunit/framework/TestCase;)V"/>
<method name="runCount" type="()I"/>
<method name="runProtected" type="(Ljunit/framework/Test;Ljunit/framework/Protectable;)V"/>
<method name="shouldStop" type="()Z"/>
<method name="startTest" type="(Ljunit/framework/Test;)V"/>
<method name="stop" type="()V"/>
<method name="wasSuccessful" type="()Z"/>
</class>
<class name="junit/framework/TestSuite">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Class;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Class;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="addTest" type="(Ljunit/framework/Test;)V"/>
<method name="addTestSuite" type="(Ljava/lang/Class;)V"/>
<method name="createTest" type="(Ljava/lang/Class;Ljava/lang/String;)Ljunit/framework/Test;" class_method="true"/>
<method name="countTestCases" type="()I"/>
<method name="getTestConstructor" type="(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" class_method="true"/>
<method name="run" type="(Ljunit/framework/TestResult;)V"/>
<method name="runTest" type="(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"/>
<method name="testAt" type="(I)Ljunit/framework/Test;"/>
<method name="testCount" type="()I"/>
<method name="tests" type="()Ljava/util/Enumeration;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="setName" type="(Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
</class>
<class name="junit/runner/BaseTestRunner">
<method name="&lt;init&gt;" type="()V"/>
<method name="startTest" type="(Ljunit/framework/Test;)V"/>
<method name="setPreferences" type="(Ljava/util/Properties;)V" class_method="true"/>
<method name="getPreferences" type="()Ljava/util/Properties;" class_method="true"/>
<method name="savePreferences" type="()V" class_method="true"/>
<method name="setPreference" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endTest" type="(Ljunit/framework/Test;)V"/>
<method name="addError" type="(Ljunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="addFailure" type="(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"/>
<method name="testStarted" type="(Ljava/lang/String;)V"/>
<method name="testEnded" type="(Ljava/lang/String;)V"/>
<method name="testFailed" type="(ILjunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="getTest" type="(Ljava/lang/String;)Ljunit/framework/Test;"/>
<method name="elapsedTimeAsString" type="(J)Ljava/lang/String;"/>
<method name="processArguments" type="([Ljava/lang/String;)Ljava/lang/String;"/>
<method name="setLoading" type="(Z)V"/>
<method name="extractClassName" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="truncate" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="runFailed" type="(Ljava/lang/String;)V"/>
<method name="loadSuiteClass" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="clearStatus" type="()V"/>
<method name="getLoader" type="()Ljunit/runner/TestSuiteLoader;"/>
<method name="useReloadingTestSuiteLoader" type="()Z"/>
<method name="getPreference" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getPreference" type="(Ljava/lang/String;I)I" class_method="true"/>
<method name="inVAJava" type="()Z" class_method="true"/>
<method name="getFilteredTrace" type="(Ljava/lang/Throwable;)Ljava/lang/String;" class_method="true"/>
<method name="getFilteredTrace" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="showStackRaw" type="()Z" class_method="true"/>
</class>
<class name="junit/runner/Version">
<method name="id" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/auth/AUTH">
</class>
<class name="org/apache/http/auth/AuthenticationException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/auth/AuthSchemeRegistry">
<method name="&lt;init&gt;" type="()V"/>
<method name="register" type="(Ljava/lang/String;Lorg/apache/http/auth/AuthSchemeFactory;)V"/>
<method name="unregister" type="(Ljava/lang/String;)V"/>
<method name="getAuthScheme" type="(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;"/>
<method name="getSchemeNames" type="()Ljava/util/List;"/>
<method name="setItems" type="(Ljava/util/Map;)V"/>
</class>
<class name="org/apache/http/auth/AuthScope">
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/auth/AuthScope;)V"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getRealm" type="()Ljava/lang/String;"/>
<method name="getScheme" type="()Ljava/lang/String;"/>
<method name="match" type="(Lorg/apache/http/auth/AuthScope;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
</class>
<class name="org/apache/http/auth/AuthState">
<method name="&lt;init&gt;" type="()V"/>
<method name="invalidate" type="()V"/>
<method name="isValid" type="()Z"/>
<method name="setAuthScheme" type="(Lorg/apache/http/auth/AuthScheme;)V"/>
<method name="getAuthScheme" type="()Lorg/apache/http/auth/AuthScheme;"/>
<method name="getCredentials" type="()Lorg/apache/http/auth/Credentials;"/>
<method name="setCredentials" type="(Lorg/apache/http/auth/Credentials;)V"/>
<method name="getAuthScope" type="()Lorg/apache/http/auth/AuthScope;"/>
<method name="setAuthScope" type="(Lorg/apache/http/auth/AuthScope;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/auth/BasicUserPrincipal">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/auth/InvalidCredentialsException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/auth/MalformedChallengeException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/auth/NTCredentials">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getUserPrincipal" type="()Ljava/security/Principal;"/>
<method name="getUserName" type="()Ljava/lang/String;"/>
<method name="getPassword" type="()Ljava/lang/String;"/>
<method name="getDomain" type="()Ljava/lang/String;"/>
<method name="getWorkstation" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/auth/NTUserPrincipal">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getDomain" type="()Ljava/lang/String;"/>
<method name="getUsername" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/auth/params/AuthParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setCredentialCharset" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/auth/params/AuthParams">
<method name="getCredentialCharset" type="(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;" class_method="true"/>
<method name="setCredentialCharset" type="(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V" class_method="true"/>
</class>
<class name="org/apache/http/auth/UsernamePasswordCredentials">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getUserPrincipal" type="()Ljava/security/Principal;"/>
<method name="getUserName" type="()Ljava/lang/String;"/>
<method name="getPassword" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/CircularRedirectException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/client/ClientProtocolException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Throwable;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/client/entity/UrlEncodedFormEntity">
<method name="&lt;init&gt;" type="(Ljava/util/List;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/util/List;)V"/>
</class>
<class name="org/apache/http/client/HttpResponseException">
<method name="&lt;init&gt;" type="(ILjava/lang/String;)V"/>
<method name="getStatusCode" type="()I"/>
</class>
<class name="org/apache/http/client/methods/HttpDelete">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/methods/HttpEntityEnclosingRequestBase">
<method name="&lt;init&gt;" type="()V"/>
<method name="getEntity" type="()Lorg/apache/http/HttpEntity;"/>
<method name="setEntity" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="expectContinue" type="()Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/client/methods/HttpGet">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/methods/HttpHead">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/methods/HttpOptions">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
<method name="getAllowedMethods" type="(Lorg/apache/http/HttpResponse;)Ljava/util/Set;"/>
</class>
<class name="org/apache/http/client/methods/HttpPost">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/methods/HttpPut">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/methods/HttpRequestBase">
<method name="&lt;init&gt;" type="()V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getURI" type="()Ljava/net/URI;"/>
<method name="getRequestLine" type="()Lorg/apache/http/RequestLine;"/>
<method name="setURI" type="(Ljava/net/URI;)V"/>
<method name="setConnectionRequest" type="(Lorg/apache/http/conn/ClientConnectionRequest;)V"/>
<method name="setReleaseTrigger" type="(Lorg/apache/http/conn/ConnectionReleaseTrigger;)V"/>
<method name="abort" type="()V"/>
<method name="isAborted" type="()Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/client/methods/HttpTrace">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/net/URI;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/client/NonRepeatableRequestException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/client/params/AuthPolicy">
</class>
<class name="org/apache/http/client/params/ClientParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setConnectionManagerFactoryClassName" type="(Ljava/lang/String;)V"/>
<method name="setConnectionManagerFactory" type="(Lorg/apache/http/conn/ClientConnectionManagerFactory;)V"/>
<method name="setHandleRedirects" type="(Z)V"/>
<method name="setRejectRelativeRedirect" type="(Z)V"/>
<method name="setMaxRedirects" type="(I)V"/>
<method name="setAllowCircularRedirects" type="(Z)V"/>
<method name="setHandleAuthentication" type="(Z)V"/>
<method name="setCookiePolicy" type="(Ljava/lang/String;)V"/>
<method name="setVirtualHost" type="(Lorg/apache/http/HttpHost;)V"/>
<method name="setDefaultHeaders" type="(Ljava/util/Collection;)V"/>
<method name="setDefaultHost" type="(Lorg/apache/http/HttpHost;)V"/>
</class>
<class name="org/apache/http/client/params/CookiePolicy">
</class>
<class name="org/apache/http/client/params/HttpClientParams">
<method name="isRedirecting" type="(Lorg/apache/http/params/HttpParams;)Z" class_method="true"/>
<method name="setRedirecting" type="(Lorg/apache/http/params/HttpParams;Z)V" class_method="true"/>
<method name="isAuthenticating" type="(Lorg/apache/http/params/HttpParams;)Z" class_method="true"/>
<method name="setAuthenticating" type="(Lorg/apache/http/params/HttpParams;Z)V" class_method="true"/>
<method name="getCookiePolicy" type="(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;" class_method="true"/>
<method name="setCookiePolicy" type="(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V" class_method="true"/>
</class>
<class name="org/apache/http/client/protocol/ClientContextConfigurer">
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="setCookieSpecRegistry" type="(Lorg/apache/http/cookie/CookieSpecRegistry;)V"/>
<method name="setAuthSchemeRegistry" type="(Lorg/apache/http/auth/AuthSchemeRegistry;)V"/>
<method name="setCookieStore" type="(Lorg/apache/http/client/CookieStore;)V"/>
<method name="setCredentialsProvider" type="(Lorg/apache/http/client/CredentialsProvider;)V"/>
<method name="setAuthSchemePref" type="(Ljava/util/List;)V"/>
</class>
<class name="org/apache/http/client/protocol/RequestAddCookies">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/client/protocol/RequestDefaultHeaders">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/client/protocol/RequestProxyAuthentication">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/client/protocol/RequestTargetAuthentication">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/client/protocol/ResponseProcessCookies">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/client/RedirectException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/client/utils/CloneUtils">
<method name="clone" type="(Ljava/lang/Object;)Ljava/lang/Object;" class_method="true"/>
</class>
<class name="org/apache/http/client/utils/URIUtils">
<method name="createURI" type="(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URI;" class_method="true"/>
<method name="rewriteURI" type="(Ljava/net/URI;Lorg/apache/http/HttpHost;Z)Ljava/net/URI;" class_method="true"/>
<method name="rewriteURI" type="(Ljava/net/URI;Lorg/apache/http/HttpHost;)Ljava/net/URI;" class_method="true"/>
<method name="resolve" type="(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;" class_method="true"/>
<method name="resolve" type="(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;" class_method="true"/>
</class>
<class name="org/apache/http/client/utils/URLEncodedUtils">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Ljava/net/URI;Ljava/lang/String;)Ljava/util/List;" class_method="true"/>
<method name="parse" type="(Lorg/apache/http/HttpEntity;)Ljava/util/List;" class_method="true"/>
<method name="isEncoded" type="(Lorg/apache/http/HttpEntity;)Z" class_method="true"/>
<method name="parse" type="(Ljava/util/List;Ljava/util/Scanner;Ljava/lang/String;)V" class_method="true"/>
<method name="format" type="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/conn/BasicEofSensorWatcher">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ManagedClientConnection;Z)V"/>
<method name="eofDetected" type="(Ljava/io/InputStream;)Z"/>
<method name="streamClosed" type="(Ljava/io/InputStream;)Z"/>
<method name="streamAbort" type="(Ljava/io/InputStream;)Z"/>
</class>
<class name="org/apache/http/conn/BasicManagedEntity">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpEntity;Lorg/apache/http/conn/ManagedClientConnection;Z)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="consumeContent" type="()V"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="releaseConnection" type="()V"/>
<method name="abortConnection" type="()V"/>
<method name="eofDetected" type="(Ljava/io/InputStream;)Z"/>
<method name="streamClosed" type="(Ljava/io/InputStream;)Z"/>
<method name="streamAbort" type="(Ljava/io/InputStream;)Z"/>
<method name="releaseManagedConnection" type="()V"/>
</class>
<class name="org/apache/http/conn/ConnectionPoolTimeoutException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/conn/ConnectTimeoutException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/conn/EofSensorInputStream">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;Lorg/apache/http/conn/EofSensorWatcher;)V"/>
<method name="isReadAllowed" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="checkEOF" type="(I)V"/>
<method name="checkClose" type="()V"/>
<method name="checkAbort" type="()V"/>
<method name="releaseConnection" type="()V"/>
<method name="abortConnection" type="()V"/>
</class>
<class name="org/apache/http/conn/HttpHostConnectException">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/ConnectException;)V"/>
<method name="getHost" type="()Lorg/apache/http/HttpHost;"/>
</class>
<class name="org/apache/http/conn/MultihomePlainSocketFactory">
<method name="getSocketFactory" type="()Lorg/apache/http/conn/MultihomePlainSocketFactory;" class_method="true"/>
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="connectSocket" type="(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;"/>
<method name="isSecure" type="(Ljava/net/Socket;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="org/apache/http/conn/params/ConnConnectionParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setMaxStatusLineGarbage" type="(I)V"/>
</class>
<class name="org/apache/http/conn/params/ConnManagerParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setTimeout" type="(J)V"/>
<method name="setMaxTotalConnections" type="(I)V"/>
<method name="setConnectionsPerRoute" type="(Lorg/apache/http/conn/params/ConnPerRouteBean;)V"/>
</class>
<class name="org/apache/http/conn/params/ConnManagerParams">
<method name="&lt;init&gt;" type="()V"/>
<method name="getTimeout" type="(Lorg/apache/http/params/HttpParams;)J" class_method="true"/>
<method name="setTimeout" type="(Lorg/apache/http/params/HttpParams;J)V" class_method="true"/>
<method name="setMaxConnectionsPerRoute" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/params/ConnPerRoute;)V" class_method="true"/>
<method name="getMaxConnectionsPerRoute" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/params/ConnPerRoute;" class_method="true"/>
<method name="setMaxTotalConnections" type="(Lorg/apache/http/params/HttpParams;I)V" class_method="true"/>
<method name="getMaxTotalConnections" type="(Lorg/apache/http/params/HttpParams;)I" class_method="true"/>
</class>
<class name="org/apache/http/conn/params/ConnPerRouteBean">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefaultMax" type="()I"/>
<method name="setDefaultMaxPerRoute" type="(I)V"/>
<method name="setMaxForRoute" type="(Lorg/apache/http/conn/routing/HttpRoute;I)V"/>
<method name="getMaxForRoute" type="(Lorg/apache/http/conn/routing/HttpRoute;)I"/>
<method name="setMaxForRoutes" type="(Ljava/util/Map;)V"/>
</class>
<class name="org/apache/http/conn/params/ConnRouteParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setDefaultProxy" type="(Lorg/apache/http/HttpHost;)V"/>
<method name="setLocalAddress" type="(Ljava/net/InetAddress;)V"/>
<method name="setForcedRoute" type="(Lorg/apache/http/conn/routing/HttpRoute;)V"/>
</class>
<class name="org/apache/http/conn/params/ConnRouteParams">
<method name="getDefaultProxy" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/HttpHost;" class_method="true"/>
<method name="setDefaultProxy" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/HttpHost;)V" class_method="true"/>
<method name="getForcedRoute" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;" class_method="true"/>
<method name="setForcedRoute" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/routing/HttpRoute;)V" class_method="true"/>
<method name="getLocalAddress" type="(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;" class_method="true"/>
<method name="setLocalAddress" type="(Lorg/apache/http/params/HttpParams;Ljava/net/InetAddress;)V" class_method="true"/>
</class>
<class name="org/apache/http/conn/routing/BasicRouteDirector">
<method name="&lt;init&gt;" type="()V"/>
<method name="nextStep" type="(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I"/>
<method name="firstStep" type="(Lorg/apache/http/conn/routing/RouteInfo;)I"/>
<method name="directStep" type="(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I"/>
<method name="proxiedStep" type="(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I"/>
</class>
<class name="org/apache/http/conn/routing/HttpRoute">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Z)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;Z)V"/>
<method name="getTargetHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getHopCount" type="()I"/>
<method name="getHopTarget" type="(I)Lorg/apache/http/HttpHost;"/>
<method name="getProxyHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="getTunnelType" type="()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;"/>
<method name="isTunnelled" type="()Z"/>
<method name="getLayerType" type="()Lorg/apache/http/conn/routing/RouteInfo$LayerType;"/>
<method name="isLayered" type="()Z"/>
<method name="isSecure" type="()Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/conn/routing/RouteInfo$LayerType">
<method name="values" type="()[Lorg/apache/http/conn/routing/RouteInfo$LayerType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$LayerType;" class_method="true"/>
</class>
<class name="org/apache/http/conn/routing/RouteInfo$TunnelType">
<method name="values" type="()[Lorg/apache/http/conn/routing/RouteInfo$TunnelType;" class_method="true"/>
<method name="valueOf" type="(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$TunnelType;" class_method="true"/>
</class>
<class name="org/apache/http/conn/routing/RouteTracker">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="connectTarget" type="(Z)V"/>
<method name="connectProxy" type="(Lorg/apache/http/HttpHost;Z)V"/>
<method name="tunnelTarget" type="(Z)V"/>
<method name="tunnelProxy" type="(Lorg/apache/http/HttpHost;Z)V"/>
<method name="layerProtocol" type="(Z)V"/>
<method name="getTargetHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getHopCount" type="()I"/>
<method name="getHopTarget" type="(I)Lorg/apache/http/HttpHost;"/>
<method name="getProxyHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="isConnected" type="()Z"/>
<method name="getTunnelType" type="()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;"/>
<method name="isTunnelled" type="()Z"/>
<method name="getLayerType" type="()Lorg/apache/http/conn/routing/RouteInfo$LayerType;"/>
<method name="isLayered" type="()Z"/>
<method name="isSecure" type="()Z"/>
<method name="toRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/conn/scheme/PlainSocketFactory">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/scheme/HostNameResolver;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="getSocketFactory" type="()Lorg/apache/http/conn/scheme/PlainSocketFactory;" class_method="true"/>
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="connectSocket" type="(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;"/>
<method name="isSecure" type="(Ljava/net/Socket;)Z"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="org/apache/http/conn/scheme/Scheme">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V"/>
<method name="getDefaultPort" type="()I"/>
<method name="getSocketFactory" type="()Lorg/apache/http/conn/scheme/SocketFactory;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="isLayered" type="()Z"/>
<method name="resolvePort" type="(I)I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="org/apache/http/conn/scheme/SchemeRegistry">
<method name="&lt;init&gt;" type="()V"/>
<method name="getScheme" type="(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;"/>
<method name="getScheme" type="(Lorg/apache/http/HttpHost;)Lorg/apache/http/conn/scheme/Scheme;"/>
<method name="get" type="(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;"/>
<method name="register" type="(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;"/>
<method name="unregister" type="(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;"/>
<method name="getSchemeNames" type="()Ljava/util/List;"/>
<method name="setItems" type="(Ljava/util/Map;)V"/>
</class>
<class name="org/apache/http/conn/ssl/AbstractVerifier">
<method name="&lt;init&gt;" type="()V"/>
<method name="verify" type="(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V"/>
<method name="verify" type="(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"/>
<method name="verify" type="(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V"/>
<method name="verify" type="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V"/>
<method name="acceptableCountryWildcard" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="getCNs" type="(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;" class_method="true"/>
<method name="getDNSSubjectAlts" type="(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;" class_method="true"/>
<method name="countDots" type="(Ljava/lang/String;)I" class_method="true"/>
</class>
<class name="org/apache/http/conn/ssl/AllowAllHostnameVerifier">
<method name="&lt;init&gt;" type="()V"/>
<method name="verify" type="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/conn/ssl/BrowserCompatHostnameVerifier">
<method name="&lt;init&gt;" type="()V"/>
<method name="verify" type="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/conn/ssl/SSLSocketFactory">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/security/KeyStore;)V"/>
<method name="getSocketFactory" type="()Lorg/apache/http/conn/ssl/SSLSocketFactory;" class_method="true"/>
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="connectSocket" type="(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;"/>
<method name="isSecure" type="(Ljava/net/Socket;)Z"/>
<method name="createSocket" type="(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;"/>
<method name="setHostnameVerifier" type="(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V"/>
<method name="getHostnameVerifier" type="()Lorg/apache/http/conn/ssl/X509HostnameVerifier;"/>
</class>
<class name="org/apache/http/conn/ssl/StrictHostnameVerifier">
<method name="&lt;init&gt;" type="()V"/>
<method name="verify" type="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/conn/util/InetAddressUtils">
<method name="isIPv4Address" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isIPv6StdAddress" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isIPv6HexCompressedAddress" type="(Ljava/lang/String;)Z" class_method="true"/>
<method name="isIPv6Address" type="(Ljava/lang/String;)Z" class_method="true"/>
</class>
<class name="org/apache/http/ConnectionClosedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/cookie/CookieIdentityComparator">
<method name="&lt;init&gt;" type="()V"/>
<method name="compare" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
</class>
<class name="org/apache/http/cookie/CookieOrigin">
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;Z)V"/>
<method name="getHost" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="isSecure" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/cookie/CookiePathComparator">
<method name="&lt;init&gt;" type="()V"/>
<method name="compare" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I"/>
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
</class>
<class name="org/apache/http/cookie/CookieSpecRegistry">
<method name="&lt;init&gt;" type="()V"/>
<method name="register" type="(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V"/>
<method name="unregister" type="(Ljava/lang/String;)V"/>
<method name="getCookieSpec" type="(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
<method name="getCookieSpec" type="(Ljava/lang/String;)Lorg/apache/http/cookie/CookieSpec;"/>
<method name="getSpecNames" type="()Ljava/util/List;"/>
<method name="setItems" type="(Ljava/util/Map;)V"/>
</class>
<class name="org/apache/http/cookie/MalformedCookieException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/cookie/params/CookieSpecParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setDatePatterns" type="(Ljava/util/Collection;)V"/>
<method name="setSingleHeader" type="(Z)V"/>
</class>
<class name="org/apache/http/entity/AbstractHttpEntity">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentType" type="()Lorg/apache/http/Header;"/>
<method name="getContentEncoding" type="()Lorg/apache/http/Header;"/>
<method name="isChunked" type="()Z"/>
<method name="setContentType" type="(Lorg/apache/http/Header;)V"/>
<method name="setContentType" type="(Ljava/lang/String;)V"/>
<method name="setContentEncoding" type="(Lorg/apache/http/Header;)V"/>
<method name="setContentEncoding" type="(Ljava/lang/String;)V"/>
<method name="setChunked" type="(Z)V"/>
<method name="consumeContent" type="()V"/>
</class>
<class name="org/apache/http/entity/BasicHttpEntity">
<method name="&lt;init&gt;" type="()V"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="isRepeatable" type="()Z"/>
<method name="setContentLength" type="(J)V"/>
<method name="setContent" type="(Ljava/io/InputStream;)V"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="consumeContent" type="()V"/>
</class>
<class name="org/apache/http/entity/BufferedHttpEntity">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="isChunked" type="()Z"/>
<method name="isRepeatable" type="()Z"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
</class>
<class name="org/apache/http/entity/ByteArrayEntity">
<method name="&lt;init&gt;" type="([B)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/entity/EntityTemplate">
<method name="&lt;init&gt;" type="(Lorg/apache/http/entity/ContentProducer;)V"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="isRepeatable" type="()Z"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="consumeContent" type="()V"/>
</class>
<class name="org/apache/http/entity/FileEntity">
<method name="&lt;init&gt;" type="(Ljava/io/File;Ljava/lang/String;)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/entity/HttpEntityWrapper">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="isChunked" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContentType" type="()Lorg/apache/http/Header;"/>
<method name="getContentEncoding" type="()Lorg/apache/http/Header;"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="consumeContent" type="()V"/>
</class>
<class name="org/apache/http/entity/InputStreamEntity">
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;J)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="consumeContent" type="()V"/>
</class>
<class name="org/apache/http/entity/SerializableEntity">
<method name="&lt;init&gt;" type="(Ljava/io/Serializable;Z)V"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="getContentLength" type="()J"/>
<method name="isRepeatable" type="()Z"/>
<method name="isStreaming" type="()Z"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
</class>
<class name="org/apache/http/entity/StringEntity">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="isRepeatable" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/HttpException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/HttpHost">
<method name="&lt;init&gt;" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;I)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpHost;)V"/>
<method name="getHostName" type="()Ljava/lang/String;"/>
<method name="getPort" type="()I"/>
<method name="getSchemeName" type="()Ljava/lang/String;"/>
<method name="toURI" type="()Ljava/lang/String;"/>
<method name="toHostString" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/HttpVersion">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="forVersion" type="(II)Lorg/apache/http/ProtocolVersion;"/>
</class>
<class name="org/apache/http/impl/AbstractHttpClientConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="assertOpen" type="()V"/>
<method name="createEntityDeserializer" type="()Lorg/apache/http/impl/entity/EntityDeserializer;"/>
<method name="createEntitySerializer" type="()Lorg/apache/http/impl/entity/EntitySerializer;"/>
<method name="createHttpResponseFactory" type="()Lorg/apache/http/HttpResponseFactory;"/>
<method name="createResponseParser" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;"/>
<method name="createRequestWriter" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;"/>
<method name="init" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V"/>
<method name="isResponseAvailable" type="(I)Z"/>
<method name="sendRequestHeader" type="(Lorg/apache/http/HttpRequest;)V"/>
<method name="sendRequestEntity" type="(Lorg/apache/http/HttpEntityEnclosingRequest;)V"/>
<method name="doFlush" type="()V"/>
<method name="flush" type="()V"/>
<method name="receiveResponseHeader" type="()Lorg/apache/http/HttpResponse;"/>
<method name="receiveResponseEntity" type="(Lorg/apache/http/HttpResponse;)V"/>
<method name="isStale" type="()Z"/>
<method name="getMetrics" type="()Lorg/apache/http/HttpConnectionMetrics;"/>
</class>
<class name="org/apache/http/impl/AbstractHttpServerConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="assertOpen" type="()V"/>
<method name="createEntityDeserializer" type="()Lorg/apache/http/impl/entity/EntityDeserializer;"/>
<method name="createEntitySerializer" type="()Lorg/apache/http/impl/entity/EntitySerializer;"/>
<method name="createHttpRequestFactory" type="()Lorg/apache/http/HttpRequestFactory;"/>
<method name="createRequestParser" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;"/>
<method name="createResponseWriter" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;"/>
<method name="init" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V"/>
<method name="receiveRequestHeader" type="()Lorg/apache/http/HttpRequest;"/>
<method name="receiveRequestEntity" type="(Lorg/apache/http/HttpEntityEnclosingRequest;)V"/>
<method name="doFlush" type="()V"/>
<method name="flush" type="()V"/>
<method name="sendResponseHeader" type="(Lorg/apache/http/HttpResponse;)V"/>
<method name="sendResponseEntity" type="(Lorg/apache/http/HttpResponse;)V"/>
<method name="isStale" type="()Z"/>
<method name="getMetrics" type="()Lorg/apache/http/HttpConnectionMetrics;"/>
</class>
<class name="org/apache/http/impl/auth/AuthSchemeBase">
<method name="&lt;init&gt;" type="()V"/>
<method name="processChallenge" type="(Lorg/apache/http/Header;)V"/>
<method name="parseChallenge" type="(Lorg/apache/http/util/CharArrayBuffer;II)V"/>
<method name="isProxy" type="()Z"/>
</class>
<class name="org/apache/http/impl/auth/BasicScheme">
<method name="&lt;init&gt;" type="()V"/>
<method name="getSchemeName" type="()Ljava/lang/String;"/>
<method name="processChallenge" type="(Lorg/apache/http/Header;)V"/>
<method name="isComplete" type="()Z"/>
<method name="isConnectionBased" type="()Z"/>
<method name="authenticate" type="(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;"/>
<method name="authenticate" type="(Lorg/apache/http/auth/Credentials;Ljava/lang/String;Z)Lorg/apache/http/Header;" class_method="true"/>
</class>
<class name="org/apache/http/impl/auth/BasicSchemeFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;"/>
</class>
<class name="org/apache/http/impl/auth/DigestScheme">
<method name="&lt;init&gt;" type="()V"/>
<method name="processChallenge" type="(Lorg/apache/http/Header;)V"/>
<method name="isComplete" type="()Z"/>
<method name="getSchemeName" type="()Ljava/lang/String;"/>
<method name="isConnectionBased" type="()Z"/>
<method name="overrideParamter" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="authenticate" type="(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;"/>
<method name="createCnonce" type="()Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/impl/auth/DigestSchemeFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;"/>
</class>
<class name="org/apache/http/impl/auth/NTLMEngineException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/impl/auth/NTLMScheme">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/auth/NTLMEngine;)V"/>
<method name="getSchemeName" type="()Ljava/lang/String;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getRealm" type="()Ljava/lang/String;"/>
<method name="isConnectionBased" type="()Z"/>
<method name="parseChallenge" type="(Lorg/apache/http/util/CharArrayBuffer;II)V"/>
<method name="authenticate" type="(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;"/>
<method name="isComplete" type="()Z"/>
</class>
<class name="org/apache/http/impl/auth/RFC2617Scheme">
<method name="&lt;init&gt;" type="()V"/>
<method name="parseChallenge" type="(Lorg/apache/http/util/CharArrayBuffer;II)V"/>
<method name="getParameters" type="()Ljava/util/Map;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getRealm" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/auth/UnsupportedDigestAlgorithmException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/impl/client/AbstractAuthenticationHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parseChallenges" type="([Lorg/apache/http/Header;)Ljava/util/Map;"/>
<method name="getAuthPreferences" type="()Ljava/util/List;"/>
<method name="selectScheme" type="(Ljava/util/Map;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/auth/AuthScheme;"/>
</class>
<class name="org/apache/http/impl/client/AbstractHttpClient">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V"/>
<method name="createHttpParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="createHttpContext" type="()Lorg/apache/http/protocol/HttpContext;"/>
<method name="createRequestExecutor" type="()Lorg/apache/http/protocol/HttpRequestExecutor;"/>
<method name="createClientConnectionManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="createAuthSchemeRegistry" type="()Lorg/apache/http/auth/AuthSchemeRegistry;"/>
<method name="createCookieSpecRegistry" type="()Lorg/apache/http/cookie/CookieSpecRegistry;"/>
<method name="createConnectionReuseStrategy" type="()Lorg/apache/http/ConnectionReuseStrategy;"/>
<method name="createConnectionKeepAliveStrategy" type="()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;"/>
<method name="createHttpProcessor" type="()Lorg/apache/http/protocol/BasicHttpProcessor;"/>
<method name="createHttpRequestRetryHandler" type="()Lorg/apache/http/client/HttpRequestRetryHandler;"/>
<method name="createRedirectHandler" type="()Lorg/apache/http/client/RedirectHandler;"/>
<method name="createTargetAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="createProxyAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="createCookieStore" type="()Lorg/apache/http/client/CookieStore;"/>
<method name="createCredentialsProvider" type="()Lorg/apache/http/client/CredentialsProvider;"/>
<method name="createHttpRoutePlanner" type="()Lorg/apache/http/conn/routing/HttpRoutePlanner;"/>
<method name="createUserTokenHandler" type="()Lorg/apache/http/client/UserTokenHandler;"/>
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="setParams" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="getConnectionManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="getRequestExecutor" type="()Lorg/apache/http/protocol/HttpRequestExecutor;"/>
<method name="getAuthSchemes" type="()Lorg/apache/http/auth/AuthSchemeRegistry;"/>
<method name="setAuthSchemes" type="(Lorg/apache/http/auth/AuthSchemeRegistry;)V"/>
<method name="getCookieSpecs" type="()Lorg/apache/http/cookie/CookieSpecRegistry;"/>
<method name="setCookieSpecs" type="(Lorg/apache/http/cookie/CookieSpecRegistry;)V"/>
<method name="getConnectionReuseStrategy" type="()Lorg/apache/http/ConnectionReuseStrategy;"/>
<method name="setReuseStrategy" type="(Lorg/apache/http/ConnectionReuseStrategy;)V"/>
<method name="getConnectionKeepAliveStrategy" type="()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;"/>
<method name="setKeepAliveStrategy" type="(Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V"/>
<method name="getHttpRequestRetryHandler" type="()Lorg/apache/http/client/HttpRequestRetryHandler;"/>
<method name="setHttpRequestRetryHandler" type="(Lorg/apache/http/client/HttpRequestRetryHandler;)V"/>
<method name="getRedirectHandler" type="()Lorg/apache/http/client/RedirectHandler;"/>
<method name="setRedirectHandler" type="(Lorg/apache/http/client/RedirectHandler;)V"/>
<method name="getTargetAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="setTargetAuthenticationHandler" type="(Lorg/apache/http/client/AuthenticationHandler;)V"/>
<method name="getProxyAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="setProxyAuthenticationHandler" type="(Lorg/apache/http/client/AuthenticationHandler;)V"/>
<method name="getCookieStore" type="()Lorg/apache/http/client/CookieStore;"/>
<method name="setCookieStore" type="(Lorg/apache/http/client/CookieStore;)V"/>
<method name="getCredentialsProvider" type="()Lorg/apache/http/client/CredentialsProvider;"/>
<method name="setCredentialsProvider" type="(Lorg/apache/http/client/CredentialsProvider;)V"/>
<method name="getRoutePlanner" type="()Lorg/apache/http/conn/routing/HttpRoutePlanner;"/>
<method name="setRoutePlanner" type="(Lorg/apache/http/conn/routing/HttpRoutePlanner;)V"/>
<method name="getUserTokenHandler" type="()Lorg/apache/http/client/UserTokenHandler;"/>
<method name="setUserTokenHandler" type="(Lorg/apache/http/client/UserTokenHandler;)V"/>
<method name="getHttpProcessor" type="()Lorg/apache/http/protocol/BasicHttpProcessor;"/>
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;)V"/>
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;I)V"/>
<method name="getResponseInterceptor" type="(I)Lorg/apache/http/HttpResponseInterceptor;"/>
<method name="getResponseInterceptorCount" type="()I"/>
<method name="clearResponseInterceptors" type="()V"/>
<method name="removeResponseInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;)V"/>
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;I)V"/>
<method name="getRequestInterceptor" type="(I)Lorg/apache/http/HttpRequestInterceptor;"/>
<method name="getRequestInterceptorCount" type="()I"/>
<method name="clearRequestInterceptors" type="()V"/>
<method name="removeRequestInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="createClientRequestDirector" type="(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/client/RequestDirector;"/>
<method name="determineParams" type="(Lorg/apache/http/HttpRequest;)Lorg/apache/http/params/HttpParams;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/impl/client/BasicCookieStore">
<method name="&lt;init&gt;" type="()V"/>
<method name="addCookie" type="(Lorg/apache/http/cookie/Cookie;)V"/>
<method name="addCookies" type="([Lorg/apache/http/cookie/Cookie;)V"/>
<method name="getCookies" type="()Ljava/util/List;"/>
<method name="clearExpired" type="(Ljava/util/Date;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
</class>
<class name="org/apache/http/impl/client/BasicCredentialsProvider">
<method name="&lt;init&gt;" type="()V"/>
<method name="setCredentials" type="(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V"/>
<method name="getCredentials" type="(Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clear" type="()V"/>
</class>
<class name="org/apache/http/impl/client/BasicResponseHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="handleResponse" type="(Lorg/apache/http/HttpResponse;)Ljava/lang/String;"/>
<method name="handleResponse" type="(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/impl/client/ClientParamsStack">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/client/ClientParamsStack;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/client/ClientParamsStack;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V"/>
<method name="getApplicationParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getClientParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getRequestParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getOverrideParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;"/>
<method name="removeParameter" type="(Ljava/lang/String;)Z"/>
<method name="copy" type="()Lorg/apache/http/params/HttpParams;"/>
</class>
<class name="org/apache/http/impl/client/DefaultConnectionKeepAliveStrategy">
<method name="&lt;init&gt;" type="()V"/>
<method name="getKeepAliveDuration" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)J"/>
</class>
<class name="org/apache/http/impl/client/DefaultHttpClient">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="createHttpParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="createRequestExecutor" type="()Lorg/apache/http/protocol/HttpRequestExecutor;"/>
<method name="createClientConnectionManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="createHttpContext" type="()Lorg/apache/http/protocol/HttpContext;"/>
<method name="createConnectionReuseStrategy" type="()Lorg/apache/http/ConnectionReuseStrategy;"/>
<method name="createConnectionKeepAliveStrategy" type="()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;"/>
<method name="createAuthSchemeRegistry" type="()Lorg/apache/http/auth/AuthSchemeRegistry;"/>
<method name="createCookieSpecRegistry" type="()Lorg/apache/http/cookie/CookieSpecRegistry;"/>
<method name="createHttpProcessor" type="()Lorg/apache/http/protocol/BasicHttpProcessor;"/>
<method name="createHttpRequestRetryHandler" type="()Lorg/apache/http/client/HttpRequestRetryHandler;"/>
<method name="createRedirectHandler" type="()Lorg/apache/http/client/RedirectHandler;"/>
<method name="createTargetAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="createProxyAuthenticationHandler" type="()Lorg/apache/http/client/AuthenticationHandler;"/>
<method name="createCookieStore" type="()Lorg/apache/http/client/CookieStore;"/>
<method name="createCredentialsProvider" type="()Lorg/apache/http/client/CredentialsProvider;"/>
<method name="createHttpRoutePlanner" type="()Lorg/apache/http/conn/routing/HttpRoutePlanner;"/>
<method name="createUserTokenHandler" type="()Lorg/apache/http/client/UserTokenHandler;"/>
</class>
<class name="org/apache/http/impl/client/DefaultHttpRequestRetryHandler">
<method name="&lt;init&gt;" type="(IZ)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="retryRequest" type="(Ljava/io/IOException;ILorg/apache/http/protocol/HttpContext;)Z"/>
<method name="isRequestSentRetryEnabled" type="()Z"/>
<method name="getRetryCount" type="()I"/>
</class>
<class name="org/apache/http/impl/client/DefaultProxyAuthenticationHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="isAuthenticationRequested" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="getChallenges" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;"/>
</class>
<class name="org/apache/http/impl/client/DefaultRedirectHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="isRedirectRequested" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="getLocationURI" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/net/URI;"/>
</class>
<class name="org/apache/http/impl/client/DefaultRequestDirector">
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)V"/>
<method name="rewriteRequestURI" type="(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="releaseConnection" type="()V"/>
<method name="determineRoute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="establishRoute" type="(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="createTunnelToTarget" type="(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="createTunnelToProxy" type="(Lorg/apache/http/conn/routing/HttpRoute;ILorg/apache/http/protocol/HttpContext;)Z"/>
<method name="createConnectRequest" type="(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpRequest;"/>
<method name="handleResponse" type="(Lorg/apache/http/impl/client/RoutedRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/impl/client/RoutedRequest;"/>
</class>
<class name="org/apache/http/impl/client/DefaultTargetAuthenticationHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="isAuthenticationRequested" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="getChallenges" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;"/>
</class>
<class name="org/apache/http/impl/client/DefaultUserTokenHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="getUserToken" type="(Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/impl/client/EntityEnclosingRequestWrapper">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpEntityEnclosingRequest;)V"/>
<method name="getEntity" type="()Lorg/apache/http/HttpEntity;"/>
<method name="setEntity" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="expectContinue" type="()Z"/>
<method name="isRepeatable" type="()Z"/>
</class>
<class name="org/apache/http/impl/client/RedirectLocations">
<method name="&lt;init&gt;" type="()V"/>
<method name="contains" type="(Ljava/net/URI;)Z"/>
<method name="add" type="(Ljava/net/URI;)V"/>
<method name="remove" type="(Ljava/net/URI;)Z"/>
</class>
<class name="org/apache/http/impl/client/RequestWrapper">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HttpRequest;)V"/>
<method name="resetHeaders" type="()V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
<method name="setMethod" type="(Ljava/lang/String;)V"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="setProtocolVersion" type="(Lorg/apache/http/ProtocolVersion;)V"/>
<method name="getURI" type="()Ljava/net/URI;"/>
<method name="setURI" type="(Ljava/net/URI;)V"/>
<method name="getRequestLine" type="()Lorg/apache/http/RequestLine;"/>
<method name="abort" type="()V"/>
<method name="isAborted" type="()Z"/>
<method name="getOriginal" type="()Lorg/apache/http/HttpRequest;"/>
<method name="isRepeatable" type="()Z"/>
<method name="getExecCount" type="()I"/>
<method name="incrementExecCount" type="()V"/>
</class>
<class name="org/apache/http/impl/client/RoutedRequest">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="getRequest" type="()Lorg/apache/http/impl/client/RequestWrapper;"/>
<method name="getRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
</class>
<class name="org/apache/http/impl/client/TunnelRefusedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Lorg/apache/http/HttpResponse;)V"/>
<method name="getResponse" type="()Lorg/apache/http/HttpResponse;"/>
</class>
<class name="org/apache/http/impl/conn/AbstractClientConnAdapter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/conn/OperatedClientConnection;)V"/>
<method name="detach" type="()V"/>
<method name="getWrappedConnection" type="()Lorg/apache/http/conn/OperatedClientConnection;"/>
<method name="getManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="assertNotAborted" type="()V"/>
<method name="assertValid" type="(Lorg/apache/http/conn/OperatedClientConnection;)V"/>
<method name="isOpen" type="()Z"/>
<method name="isStale" type="()Z"/>
<method name="setSocketTimeout" type="(I)V"/>
<method name="getSocketTimeout" type="()I"/>
<method name="getMetrics" type="()Lorg/apache/http/HttpConnectionMetrics;"/>
<method name="flush" type="()V"/>
<method name="isResponseAvailable" type="(I)Z"/>
<method name="receiveResponseEntity" type="(Lorg/apache/http/HttpResponse;)V"/>
<method name="receiveResponseHeader" type="()Lorg/apache/http/HttpResponse;"/>
<method name="sendRequestEntity" type="(Lorg/apache/http/HttpEntityEnclosingRequest;)V"/>
<method name="sendRequestHeader" type="(Lorg/apache/http/HttpRequest;)V"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getRemoteAddress" type="()Ljava/net/InetAddress;"/>
<method name="getRemotePort" type="()I"/>
<method name="isSecure" type="()Z"/>
<method name="getSSLSession" type="()Ljavax/net/ssl/SSLSession;"/>
<method name="markReusable" type="()V"/>
<method name="unmarkReusable" type="()V"/>
<method name="isMarkedReusable" type="()Z"/>
<method name="setIdleDuration" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="releaseConnection" type="()V"/>
<method name="abortConnection" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/AbstractPooledConnAdapter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V"/>
<method name="assertAttached" type="()V"/>
<method name="detach" type="()V"/>
<method name="getRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="open" type="(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="tunnelTarget" type="(ZLorg/apache/http/params/HttpParams;)V"/>
<method name="tunnelProxy" type="(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V"/>
<method name="layerProtocol" type="(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="close" type="()V"/>
<method name="shutdown" type="()V"/>
<method name="getState" type="()Ljava/lang/Object;"/>
<method name="setState" type="(Ljava/lang/Object;)V"/>
</class>
<class name="org/apache/http/impl/conn/AbstractPoolEntry">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="getState" type="()Ljava/lang/Object;"/>
<method name="setState" type="(Ljava/lang/Object;)V"/>
<method name="open" type="(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="tunnelTarget" type="(ZLorg/apache/http/params/HttpParams;)V"/>
<method name="tunnelProxy" type="(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V"/>
<method name="layerProtocol" type="(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="shutdownEntry" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/DefaultClientConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="getTargetHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="isSecure" type="()Z"/>
<method name="getSocket" type="()Ljava/net/Socket;"/>
<method name="opening" type="(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V"/>
<method name="openCompleted" type="(ZLorg/apache/http/params/HttpParams;)V"/>
<method name="shutdown" type="()V"/>
<method name="close" type="()V"/>
<method name="createSessionInputBuffer" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;"/>
<method name="createSessionOutputBuffer" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;"/>
<method name="createResponseParser" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;"/>
<method name="update" type="(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V"/>
<method name="receiveResponseHeader" type="()Lorg/apache/http/HttpResponse;"/>
<method name="sendRequestHeader" type="(Lorg/apache/http/HttpRequest;)V"/>
</class>
<class name="org/apache/http/impl/conn/DefaultClientConnectionOperator">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/scheme/SchemeRegistry;)V"/>
<method name="createConnection" type="()Lorg/apache/http/conn/OperatedClientConnection;"/>
<method name="openConnection" type="(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="updateSecureConnection" type="(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="prepareSocket" type="(Ljava/net/Socket;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
</class>
<class name="org/apache/http/impl/conn/DefaultHttpRoutePlanner">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/scheme/SchemeRegistry;)V"/>
<method name="determineRoute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;"/>
</class>
<class name="org/apache/http/impl/conn/DefaultResponseParser">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)V"/>
<method name="parseHead" type="(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;"/>
</class>
<class name="org/apache/http/impl/conn/IdleConnectionHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="add" type="(Lorg/apache/http/HttpConnection;JLjava/util/concurrent/TimeUnit;)V"/>
<method name="remove" type="(Lorg/apache/http/HttpConnection;)Z"/>
<method name="removeAll" type="()V"/>
<method name="closeIdleConnections" type="(J)V"/>
<method name="closeExpiredConnections" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/LoggingSessionInputBuffer">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/impl/conn/Wire;)V"/>
<method name="isDataAvailable" type="(I)Z"/>
<method name="read" type="([BII)I"/>
<method name="read" type="()I"/>
<method name="read" type="([B)I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLine" type="(Lorg/apache/http/util/CharArrayBuffer;)I"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</class>
<class name="org/apache/http/impl/conn/LoggingSessionOutputBuffer">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/impl/conn/Wire;)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([B)V"/>
<method name="flush" type="()V"/>
<method name="writeLine" type="(Lorg/apache/http/util/CharArrayBuffer;)V"/>
<method name="writeLine" type="(Ljava/lang/String;)V"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</class>
<class name="org/apache/http/impl/conn/ProxySelectorRoutePlanner">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/scheme/SchemeRegistry;Ljava/net/ProxySelector;)V"/>
<method name="getProxySelector" type="()Ljava/net/ProxySelector;"/>
<method name="setProxySelector" type="(Ljava/net/ProxySelector;)V"/>
<method name="determineRoute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="determineProxy" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpHost;"/>
<method name="getHost" type="(Ljava/net/InetSocketAddress;)Ljava/lang/String;"/>
<method name="chooseProxy" type="(Ljava/util/List;Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Ljava/net/Proxy;"/>
</class>
<class name="org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;Lorg/apache/http/conn/routing/HttpRoute;)V"/>
</class>
<class name="org/apache/http/impl/conn/SingleClientConnManager$PoolEntry">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/conn/SingleClientConnManager;)V"/>
<method name="close" type="()V"/>
<method name="shutdown" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/SingleClientConnManager">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V"/>
<method name="finalize" type="()V"/>
<method name="getSchemeRegistry" type="()Lorg/apache/http/conn/scheme/SchemeRegistry;"/>
<method name="createConnectionOperator" type="(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;"/>
<method name="assertStillUp" type="()V"/>
<method name="requestConnection" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;"/>
<method name="getConnection" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ManagedClientConnection;"/>
<method name="releaseConnection" type="(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V"/>
<method name="closeExpiredConnections" type="()V"/>
<method name="closeIdleConnections" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="shutdown" type="()V"/>
<method name="revokeConnection" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/AbstractConnPool">
<method name="&lt;init&gt;" type="()V"/>
<method name="enableConnectionGC" type="()V"/>
<method name="getEntry" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="requestPoolEntry" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;"/>
<method name="freeEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V"/>
<method name="handleReference" type="(Ljava/lang/ref/Reference;)V"/>
<method name="handleLostEntry" type="(Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="closeIdleConnections" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="closeExpiredConnections" type="()V"/>
<method name="deleteClosedConnections" type="()V"/>
<method name="shutdown" type="()V"/>
<method name="closeConnection" type="(Lorg/apache/http/conn/OperatedClientConnection;)V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/BasicPooledConnAdapter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V"/>
<method name="getManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="getPoolEntry" type="()Lorg/apache/http/impl/conn/AbstractPoolEntry;"/>
<method name="detach" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/BasicPoolEntry">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/ref/ReferenceQueue;)V"/>
<method name="getConnection" type="()Lorg/apache/http/conn/OperatedClientConnection;"/>
<method name="getPlannedRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="getWeakRef" type="()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/BasicPoolEntryRef">
<method name="&lt;init&gt;" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;Ljava/lang/ref/ReferenceQueue;)V"/>
<method name="getRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/ConnPoolByRoute">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/params/HttpParams;)V"/>
<method name="createFreeConnQueue" type="()Ljava/util/Queue;"/>
<method name="createWaitingThreadQueue" type="()Ljava/util/Queue;"/>
<method name="createRouteToPoolMap" type="()Ljava/util/Map;"/>
<method name="newRouteSpecificPool" type="(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;"/>
<method name="newWaitingThread" type="(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)Lorg/apache/http/impl/conn/tsccm/WaitingThread;"/>
<method name="getRoutePool" type="(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;"/>
<method name="getConnectionsInPool" type="(Lorg/apache/http/conn/routing/HttpRoute;)I"/>
<method name="requestPoolEntry" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;"/>
<method name="getEntryBlocking" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="freeEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V"/>
<method name="getFreeEntry" type="(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="createEntry" type="(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Lorg/apache/http/conn/ClientConnectionOperator;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="deleteEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V"/>
<method name="deleteLeastUsedEntry" type="()V"/>
<method name="handleLostEntry" type="(Lorg/apache/http/conn/routing/HttpRoute;)V"/>
<method name="notifyWaitingThread" type="(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V"/>
<method name="deleteClosedConnections" type="()V"/>
<method name="shutdown" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/RefQueueWorker">
<method name="&lt;init&gt;" type="(Ljava/lang/ref/ReferenceQueue;Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;)V"/>
<method name="run" type="()V"/>
<method name="shutdown" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/RouteSpecificPool">
<method name="&lt;init&gt;" type="(Lorg/apache/http/conn/routing/HttpRoute;I)V"/>
<method name="getRoute" type="()Lorg/apache/http/conn/routing/HttpRoute;"/>
<method name="getMaxEntries" type="()I"/>
<method name="isUnused" type="()Z"/>
<method name="getCapacity" type="()I"/>
<method name="getEntryCount" type="()I"/>
<method name="allocEntry" type="(Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="freeEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V"/>
<method name="createdEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V"/>
<method name="deleteEntry" type="(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)Z"/>
<method name="dropEntry" type="()V"/>
<method name="queueThread" type="(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V"/>
<method name="hasThread" type="()Z"/>
<method name="nextThread" type="()Lorg/apache/http/impl/conn/tsccm/WaitingThread;"/>
<method name="removeThread" type="(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V"/>
<method name="finalize" type="()V"/>
<method name="createConnectionPool" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;"/>
<method name="createConnectionOperator" type="(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;"/>
<method name="getSchemeRegistry" type="()Lorg/apache/http/conn/scheme/SchemeRegistry;"/>
<method name="requestConnection" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;"/>
<method name="releaseConnection" type="(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V"/>
<method name="shutdown" type="()V"/>
<method name="getConnectionsInPool" type="(Lorg/apache/http/conn/routing/HttpRoute;)I"/>
<method name="getConnectionsInPool" type="()I"/>
<method name="closeIdleConnections" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="closeExpiredConnections" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/WaitingThread">
<method name="&lt;init&gt;" type="(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V"/>
<method name="getCondition" type="()Ljava/util/concurrent/locks/Condition;"/>
<method name="getPool" type="()Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;"/>
<method name="getThread" type="()Ljava/lang/Thread;"/>
<method name="await" type="(Ljava/util/Date;)Z"/>
<method name="wakeup" type="()V"/>
<method name="interrupt" type="()V"/>
</class>
<class name="org/apache/http/impl/conn/tsccm/WaitingThreadAborter">
<method name="&lt;init&gt;" type="()V"/>
<method name="abort" type="()V"/>
<method name="setWaitingThread" type="(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V"/>
</class>
<class name="org/apache/http/impl/conn/Wire">
<method name="&lt;init&gt;" type="(Lorg/apache/commons/logging/Log;)V"/>
<method name="enabled" type="()Z"/>
<method name="output" type="(Ljava/io/InputStream;)V"/>
<method name="input" type="(Ljava/io/InputStream;)V"/>
<method name="output" type="([BII)V"/>
<method name="input" type="([BII)V"/>
<method name="output" type="([B)V"/>
<method name="input" type="([B)V"/>
<method name="output" type="(I)V"/>
<method name="input" type="(I)V"/>
<method name="output" type="(Ljava/lang/String;)V"/>
<method name="input" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/impl/cookie/AbstractCookieAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/AbstractCookieSpec">
<method name="&lt;init&gt;" type="()V"/>
<method name="registerAttribHandler" type="(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V"/>
<method name="findAttribHandler" type="(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;"/>
<method name="getAttribHandler" type="(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;"/>
<method name="getAttribHandlers" type="()Ljava/util/Collection;"/>
</class>
<class name="org/apache/http/impl/cookie/BasicClientCookie">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="setValue" type="(Ljava/lang/String;)V"/>
<method name="getComment" type="()Ljava/lang/String;"/>
<method name="setComment" type="(Ljava/lang/String;)V"/>
<method name="getCommentURL" type="()Ljava/lang/String;"/>
<method name="getExpiryDate" type="()Ljava/util/Date;"/>
<method name="setExpiryDate" type="(Ljava/util/Date;)V"/>
<method name="isPersistent" type="()Z"/>
<method name="getDomain" type="()Ljava/lang/String;"/>
<method name="setDomain" type="(Ljava/lang/String;)V"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="setPath" type="(Ljava/lang/String;)V"/>
<method name="isSecure" type="()Z"/>
<method name="setSecure" type="(Z)V"/>
<method name="getPorts" type="()[I"/>
<method name="getVersion" type="()I"/>
<method name="setVersion" type="(I)V"/>
<method name="isExpired" type="(Ljava/util/Date;)Z"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="containsAttribute" type="(Ljava/lang/String;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/cookie/BasicClientCookie2">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getPorts" type="()[I"/>
<method name="setPorts" type="([I)V"/>
<method name="getCommentURL" type="()Ljava/lang/String;"/>
<method name="setCommentURL" type="(Ljava/lang/String;)V"/>
<method name="setDiscard" type="(Z)V"/>
<method name="isPersistent" type="()Z"/>
<method name="isExpired" type="(Ljava/util/Date;)Z"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/impl/cookie/BasicCommentHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/impl/cookie/BasicDomainHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/BasicExpiresHandler">
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/impl/cookie/BasicMaxAgeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/impl/cookie/BasicPathHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/BasicSecureHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/BestMatchSpec">
<method name="&lt;init&gt;" type="([Ljava/lang/String;Z)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
<method name="formatCookies" type="(Ljava/util/List;)Ljava/util/List;"/>
<method name="getVersion" type="()I"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/cookie/BestMatchSpecFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</class>
<class name="org/apache/http/impl/cookie/BrowserCompatSpec">
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="formatCookies" type="(Ljava/util/List;)Ljava/util/List;"/>
<method name="getVersion" type="()I"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/cookie/BrowserCompatSpecFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</class>
<class name="org/apache/http/impl/cookie/CookieSpecBase">
<method name="&lt;init&gt;" type="()V"/>
<method name="getDefaultPath" type="(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;" class_method="true"/>
<method name="getDefaultDomain" type="(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;" class_method="true"/>
<method name="parse" type="([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/DateParseException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/impl/cookie/DateUtils">
<method name="parseDate" type="(Ljava/lang/String;)Ljava/util/Date;" class_method="true"/>
<method name="parseDate" type="(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;" class_method="true"/>
<method name="parseDate" type="(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;" class_method="true"/>
<method name="formatDate" type="(Ljava/util/Date;)Ljava/lang/String;" class_method="true"/>
<method name="formatDate" type="(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/impl/cookie/NetscapeDomainHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/NetscapeDraftHeaderParser">
<method name="&lt;init&gt;" type="()V"/>
<method name="parseHeader" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;"/>
</class>
<class name="org/apache/http/impl/cookie/NetscapeDraftSpec">
<method name="&lt;init&gt;" type="([Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="formatCookies" type="(Ljava/util/List;)Ljava/util/List;"/>
<method name="getVersion" type="()I"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/cookie/NetscapeDraftSpecFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2109DomainHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2109Spec">
<method name="&lt;init&gt;" type="([Ljava/lang/String;Z)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="formatCookies" type="(Ljava/util/List;)Ljava/util/List;"/>
<method name="formatParamAsVer" type="(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Ljava/lang/String;I)V"/>
<method name="formatCookieAsVer" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V"/>
<method name="getVersion" type="()I"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2109SpecFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2109VersionHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965DiscardAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965DomainAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="domainMatch" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965PortAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965Spec">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="([Ljava/lang/String;Z)V"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
<method name="formatCookieAsVer" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V"/>
<method name="getVersion" type="()I"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965SpecFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</class>
<class name="org/apache/http/impl/cookie/RFC2965VersionAttributeHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</class>
<class name="org/apache/http/impl/DefaultConnectionReuseStrategy">
<method name="&lt;init&gt;" type="()V"/>
<method name="keepAlive" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="createTokenIterator" type="(Lorg/apache/http/HeaderIterator;)Lorg/apache/http/TokenIterator;"/>
</class>
<class name="org/apache/http/impl/DefaultHttpClientConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="bind" type="(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/DefaultHttpRequestFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="newHttpRequest" type="(Lorg/apache/http/RequestLine;)Lorg/apache/http/HttpRequest;"/>
<method name="newHttpRequest" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/HttpRequest;"/>
</class>
<class name="org/apache/http/impl/DefaultHttpResponseFactory">
<method name="&lt;init&gt;" type="(Lorg/apache/http/ReasonPhraseCatalog;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="newHttpResponse" type="(Lorg/apache/http/ProtocolVersion;ILorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="newHttpResponse" type="(Lorg/apache/http/StatusLine;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="determineLocale" type="(Lorg/apache/http/protocol/HttpContext;)Ljava/util/Locale;"/>
</class>
<class name="org/apache/http/impl/DefaultHttpServerConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="bind" type="(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/EnglishReasonPhraseCatalog">
<method name="&lt;init&gt;" type="()V"/>
<method name="getReason" type="(ILjava/util/Locale;)Ljava/lang/String;"/>
</class>
<class name="org/apache/http/impl/entity/EntityDeserializer">
<method name="&lt;init&gt;" type="(Lorg/apache/http/entity/ContentLengthStrategy;)V"/>
<method name="doDeserialize" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/entity/BasicHttpEntity;"/>
<method name="deserialize" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/HttpEntity;"/>
</class>
<class name="org/apache/http/impl/entity/EntitySerializer">
<method name="&lt;init&gt;" type="(Lorg/apache/http/entity/ContentLengthStrategy;)V"/>
<method name="doSerialize" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;)Ljava/io/OutputStream;"/>
<method name="serialize" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;Lorg/apache/http/HttpEntity;)V"/>
</class>
<class name="org/apache/http/impl/entity/LaxContentLengthStrategy">
<method name="&lt;init&gt;" type="()V"/>
<method name="determineLength" type="(Lorg/apache/http/HttpMessage;)J"/>
</class>
<class name="org/apache/http/impl/entity/StrictContentLengthStrategy">
<method name="&lt;init&gt;" type="()V"/>
<method name="determineLength" type="(Lorg/apache/http/HttpMessage;)J"/>
</class>
<class name="org/apache/http/impl/HttpConnectionMetricsImpl">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/HttpTransportMetrics;Lorg/apache/http/io/HttpTransportMetrics;)V"/>
<method name="getReceivedBytesCount" type="()J"/>
<method name="getSentBytesCount" type="()J"/>
<method name="getRequestCount" type="()J"/>
<method name="incrementRequestCount" type="()V"/>
<method name="getResponseCount" type="()J"/>
<method name="incrementResponseCount" type="()V"/>
<method name="getMetric" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setMetric" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="reset" type="()V"/>
</class>
<class name="org/apache/http/impl/io/AbstractMessageParser">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/params/HttpParams;)V"/>
<method name="parseHeaders" type="(Lorg/apache/http/io/SessionInputBuffer;IILorg/apache/http/message/LineParser;)[Lorg/apache/http/Header;" class_method="true"/>
<method name="parseHead" type="(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;"/>
<method name="parse" type="()Lorg/apache/http/HttpMessage;"/>
</class>
<class name="org/apache/http/impl/io/AbstractMessageWriter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V"/>
<method name="writeHeadLine" type="(Lorg/apache/http/HttpMessage;)V"/>
<method name="write" type="(Lorg/apache/http/HttpMessage;)V"/>
</class>
<class name="org/apache/http/impl/io/AbstractSessionInputBuffer">
<method name="&lt;init&gt;" type="()V"/>
<method name="init" type="(Ljava/io/InputStream;ILorg/apache/http/params/HttpParams;)V"/>
<method name="fillBuffer" type="()I"/>
<method name="hasBufferedData" type="()Z"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="readLine" type="(Lorg/apache/http/util/CharArrayBuffer;)I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</class>
<class name="org/apache/http/impl/io/AbstractSessionOutputBuffer">
<method name="&lt;init&gt;" type="()V"/>
<method name="init" type="(Ljava/io/OutputStream;ILorg/apache/http/params/HttpParams;)V"/>
<method name="flushBuffer" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="(I)V"/>
<method name="writeLine" type="(Ljava/lang/String;)V"/>
<method name="writeLine" type="(Lorg/apache/http/util/CharArrayBuffer;)V"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</class>
<class name="org/apache/http/impl/io/ChunkedInputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;)V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="close" type="()V"/>
<method name="getFooters" type="()[Lorg/apache/http/Header;"/>
</class>
<class name="org/apache/http/impl/io/ChunkedOutputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;I)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;)V"/>
<method name="flushCache" type="()V"/>
<method name="flushCacheWithAppend" type="([BII)V"/>
<method name="writeClosingChunk" type="()V"/>
<method name="finish" type="()V"/>
<method name="write" type="(I)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="flush" type="()V"/>
<method name="close" type="()V"/>
</class>
<class name="org/apache/http/impl/io/ContentLengthInputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;J)V"/>
<method name="close" type="()V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="skip" type="(J)J"/>
</class>
<class name="org/apache/http/impl/io/ContentLengthOutputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;J)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="org/apache/http/impl/io/HttpRequestParser">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)V"/>
<method name="parseHead" type="(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;"/>
</class>
<class name="org/apache/http/impl/io/HttpRequestWriter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V"/>
<method name="writeHeadLine" type="(Lorg/apache/http/HttpMessage;)V"/>
</class>
<class name="org/apache/http/impl/io/HttpResponseParser">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)V"/>
<method name="parseHead" type="(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;"/>
</class>
<class name="org/apache/http/impl/io/HttpResponseWriter">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V"/>
<method name="writeHeadLine" type="(Lorg/apache/http/HttpMessage;)V"/>
</class>
<class name="org/apache/http/impl/io/HttpTransportMetricsImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="getBytesTransferred" type="()J"/>
<method name="setBytesTransferred" type="(J)V"/>
<method name="incrementBytesTransferred" type="(J)V"/>
<method name="reset" type="()V"/>
</class>
<class name="org/apache/http/impl/io/IdentityInputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionInputBuffer;)V"/>
<method name="available" type="()I"/>
<method name="close" type="()V"/>
<method name="read" type="()I"/>
<method name="read" type="([BII)I"/>
</class>
<class name="org/apache/http/impl/io/IdentityOutputStream">
<method name="&lt;init&gt;" type="(Lorg/apache/http/io/SessionOutputBuffer;)V"/>
<method name="close" type="()V"/>
<method name="flush" type="()V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="(I)V"/>
</class>
<class name="org/apache/http/impl/io/SocketInputBuffer">
<method name="&lt;init&gt;" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V"/>
<method name="isDataAvailable" type="(I)Z"/>
</class>
<class name="org/apache/http/impl/io/SocketOutputBuffer">
<method name="&lt;init&gt;" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V"/>
</class>
<class name="org/apache/http/impl/NoConnectionReuseStrategy">
<method name="&lt;init&gt;" type="()V"/>
<method name="keepAlive" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
</class>
<class name="org/apache/http/impl/SocketHttpClientConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="assertNotOpen" type="()V"/>
<method name="assertOpen" type="()V"/>
<method name="createSessionInputBuffer" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;"/>
<method name="createSessionOutputBuffer" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;"/>
<method name="bind" type="(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V"/>
<method name="isOpen" type="()Z"/>
<method name="getSocket" type="()Ljava/net/Socket;"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getRemoteAddress" type="()Ljava/net/InetAddress;"/>
<method name="getRemotePort" type="()I"/>
<method name="setSocketTimeout" type="(I)V"/>
<method name="getSocketTimeout" type="()I"/>
<method name="shutdown" type="()V"/>
<method name="close" type="()V"/>
</class>
<class name="org/apache/http/impl/SocketHttpServerConnection">
<method name="&lt;init&gt;" type="()V"/>
<method name="assertNotOpen" type="()V"/>
<method name="assertOpen" type="()V"/>
<method name="createHttpDataReceiver" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;"/>
<method name="createHttpDataTransmitter" type="(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;"/>
<method name="bind" type="(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V"/>
<method name="getSocket" type="()Ljava/net/Socket;"/>
<method name="isOpen" type="()Z"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getLocalPort" type="()I"/>
<method name="getRemoteAddress" type="()Ljava/net/InetAddress;"/>
<method name="getRemotePort" type="()I"/>
<method name="setSocketTimeout" type="(I)V"/>
<method name="getSocketTimeout" type="()I"/>
<method name="shutdown" type="()V"/>
<method name="close" type="()V"/>
</class>
<class name="org/apache/http/MalformedChunkCodingException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/message/AbstractHttpMessage">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="containsHeader" type="(Ljava/lang/String;)Z"/>
<method name="getHeaders" type="(Ljava/lang/String;)[Lorg/apache/http/Header;"/>
<method name="getFirstHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getLastHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getAllHeaders" type="()[Lorg/apache/http/Header;"/>
<method name="addHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="addHeader" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="setHeader" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setHeaders" type="([Lorg/apache/http/Header;)V"/>
<method name="removeHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="removeHeaders" type="(Ljava/lang/String;)V"/>
<method name="headerIterator" type="()Lorg/apache/http/HeaderIterator;"/>
<method name="headerIterator" type="(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;"/>
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="setParams" type="(Lorg/apache/http/params/HttpParams;)V"/>
</class>
<class name="org/apache/http/message/BasicHeader">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="getElements" type="()[Lorg/apache/http/HeaderElement;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/BasicHeaderElement">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/http/NameValuePair;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getParameters" type="()[Lorg/apache/http/NameValuePair;"/>
<method name="getParameterCount" type="()I"/>
<method name="getParameter" type="(I)Lorg/apache/http/NameValuePair;"/>
<method name="getParameterByName" type="(Ljava/lang/String;)Lorg/apache/http/NameValuePair;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/BasicHeaderElementIterator">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HeaderIterator;Lorg/apache/http/message/HeaderValueParser;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/HeaderIterator;)V"/>
<method name="hasNext" type="()Z"/>
<method name="nextElement" type="()Lorg/apache/http/HeaderElement;"/>
<method name="next" type="()Ljava/lang/Object;"/>
<method name="remove" type="()V"/>
</class>
<class name="org/apache/http/message/BasicHeaderIterator">
<method name="&lt;init&gt;" type="([Lorg/apache/http/Header;Ljava/lang/String;)V"/>
<method name="findNext" type="(I)I"/>
<method name="filterHeader" type="(I)Z"/>
<method name="hasNext" type="()Z"/>
<method name="nextHeader" type="()Lorg/apache/http/Header;"/>
<method name="next" type="()Ljava/lang/Object;"/>
<method name="remove" type="()V"/>
</class>
<class name="org/apache/http/message/BasicHeaderValueFormatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="formatElements" type="([Lorg/apache/http/HeaderElement;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatElements" type="(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="estimateElementsLen" type="([Lorg/apache/http/HeaderElement;)I"/>
<method name="formatHeaderElement" type="(Lorg/apache/http/HeaderElement;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatHeaderElement" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="estimateHeaderElementLen" type="(Lorg/apache/http/HeaderElement;)I"/>
<method name="formatParameters" type="([Lorg/apache/http/NameValuePair;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatParameters" type="(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="estimateParametersLen" type="([Lorg/apache/http/NameValuePair;)I"/>
<method name="formatNameValuePair" type="(Lorg/apache/http/NameValuePair;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatNameValuePair" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="estimateNameValuePairLen" type="(Lorg/apache/http/NameValuePair;)I"/>
<method name="doFormatValue" type="(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Z)V"/>
<method name="isSeparator" type="(C)Z"/>
<method name="isUnsafe" type="(C)Z"/>
</class>
<class name="org/apache/http/message/BasicHeaderValueParser">
<method name="&lt;init&gt;" type="()V"/>
<method name="parseElements" type="(Ljava/lang/String;Lorg/apache/http/message/HeaderValueParser;)[Lorg/apache/http/HeaderElement;" class_method="true"/>
<method name="parseElements" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/HeaderElement;"/>
<method name="parseHeaderElement" type="(Ljava/lang/String;Lorg/apache/http/message/HeaderValueParser;)Lorg/apache/http/HeaderElement;" class_method="true"/>
<method name="parseHeaderElement" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;"/>
<method name="createHeaderElement" type="(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/http/NameValuePair;)Lorg/apache/http/HeaderElement;"/>
<method name="parseParameters" type="(Ljava/lang/String;Lorg/apache/http/message/HeaderValueParser;)[Lorg/apache/http/NameValuePair;" class_method="true"/>
<method name="parseParameters" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/NameValuePair;"/>
<method name="parseNameValuePair" type="(Ljava/lang/String;Lorg/apache/http/message/HeaderValueParser;)Lorg/apache/http/NameValuePair;" class_method="true"/>
<method name="parseNameValuePair" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/NameValuePair;"/>
<method name="parseNameValuePair" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;[C)Lorg/apache/http/NameValuePair;"/>
<method name="createNameValuePair" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/NameValuePair;"/>
</class>
<class name="org/apache/http/message/BasicHttpEntityEnclosingRequest">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/RequestLine;)V"/>
<method name="getEntity" type="()Lorg/apache/http/HttpEntity;"/>
<method name="setEntity" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="expectContinue" type="()Z"/>
</class>
<class name="org/apache/http/message/BasicHttpRequest">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/RequestLine;)V"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getRequestLine" type="()Lorg/apache/http/RequestLine;"/>
</class>
<class name="org/apache/http/message/BasicHttpResponse">
<method name="&lt;init&gt;" type="(Lorg/apache/http/StatusLine;Lorg/apache/http/ReasonPhraseCatalog;Ljava/util/Locale;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/StatusLine;)V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getStatusLine" type="()Lorg/apache/http/StatusLine;"/>
<method name="getEntity" type="()Lorg/apache/http/HttpEntity;"/>
<method name="getLocale" type="()Ljava/util/Locale;"/>
<method name="setStatusLine" type="(Lorg/apache/http/StatusLine;)V"/>
<method name="setStatusLine" type="(Lorg/apache/http/ProtocolVersion;I)V"/>
<method name="setStatusLine" type="(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V"/>
<method name="setStatusCode" type="(I)V"/>
<method name="setReasonPhrase" type="(Ljava/lang/String;)V"/>
<method name="setEntity" type="(Lorg/apache/http/HttpEntity;)V"/>
<method name="setLocale" type="(Ljava/util/Locale;)V"/>
<method name="getReason" type="(I)Ljava/lang/String;"/>
</class>
<class name="org/apache/http/message/BasicLineFormatter">
<method name="&lt;init&gt;" type="()V"/>
<method name="initBuffer" type="(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatProtocolVersion" type="(Lorg/apache/http/ProtocolVersion;Lorg/apache/http/message/LineFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="appendProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/ProtocolVersion;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="estimateProtocolVersionLen" type="(Lorg/apache/http/ProtocolVersion;)I"/>
<method name="formatRequestLine" type="(Lorg/apache/http/RequestLine;Lorg/apache/http/message/LineFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatRequestLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/RequestLine;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="doFormatRequestLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/RequestLine;)V"/>
<method name="formatStatusLine" type="(Lorg/apache/http/StatusLine;Lorg/apache/http/message/LineFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatStatusLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/StatusLine;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="doFormatStatusLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/StatusLine;)V"/>
<method name="formatHeader" type="(Lorg/apache/http/Header;Lorg/apache/http/message/LineFormatter;)Ljava/lang/String;" class_method="true"/>
<method name="formatHeader" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/Header;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="doFormatHeader" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/Header;)V"/>
</class>
<class name="org/apache/http/message/BasicLineParser">
<method name="&lt;init&gt;" type="(Lorg/apache/http/ProtocolVersion;)V"/>
<method name="&lt;init&gt;" type="()V"/>
<method name="parseProtocolVersion" type="(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/ProtocolVersion;" class_method="true"/>
<method name="parseProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/ProtocolVersion;"/>
<method name="createProtocolVersion" type="(II)Lorg/apache/http/ProtocolVersion;"/>
<method name="hasProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z"/>
<method name="parseRequestLine" type="(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/RequestLine;" class_method="true"/>
<method name="parseRequestLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/RequestLine;"/>
<method name="createRequestLine" type="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)Lorg/apache/http/RequestLine;"/>
<method name="parseStatusLine" type="(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/StatusLine;" class_method="true"/>
<method name="parseStatusLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;"/>
<method name="createStatusLine" type="(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)Lorg/apache/http/StatusLine;"/>
<method name="parseHeader" type="(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/Header;" class_method="true"/>
<method name="parseHeader" type="(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;"/>
<method name="skipWhitespace" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)V"/>
</class>
<class name="org/apache/http/message/BasicListHeaderIterator">
<method name="&lt;init&gt;" type="(Ljava/util/List;Ljava/lang/String;)V"/>
<method name="findNext" type="(I)I"/>
<method name="filterHeader" type="(I)Z"/>
<method name="hasNext" type="()Z"/>
<method name="nextHeader" type="()Lorg/apache/http/Header;"/>
<method name="next" type="()Ljava/lang/Object;"/>
<method name="remove" type="()V"/>
</class>
<class name="org/apache/http/message/BasicNameValuePair">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/BasicRequestLine">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V"/>
<method name="getMethod" type="()Ljava/lang/String;"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getUri" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/BasicStatusLine">
<method name="&lt;init&gt;" type="(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V"/>
<method name="getStatusCode" type="()I"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getReasonPhrase" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/BasicTokenIterator">
<method name="&lt;init&gt;" type="(Lorg/apache/http/HeaderIterator;)V"/>
<method name="hasNext" type="()Z"/>
<method name="nextToken" type="()Ljava/lang/String;"/>
<method name="next" type="()Ljava/lang/Object;"/>
<method name="remove" type="()V"/>
<method name="findNext" type="(I)I"/>
<method name="createToken" type="(Ljava/lang/String;II)Ljava/lang/String;"/>
<method name="findTokenStart" type="(I)I"/>
<method name="findTokenSeparator" type="(I)I"/>
<method name="findTokenEnd" type="(I)I"/>
<method name="isTokenSeparator" type="(C)Z"/>
<method name="isWhitespace" type="(C)Z"/>
<method name="isTokenChar" type="(C)Z"/>
<method name="isHttpSeparator" type="(C)Z"/>
</class>
<class name="org/apache/http/message/BufferedHeader">
<method name="&lt;init&gt;" type="(Lorg/apache/http/util/CharArrayBuffer;)V"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getElements" type="()[Lorg/apache/http/HeaderElement;"/>
<method name="getValuePos" type="()I"/>
<method name="getBuffer" type="()Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/HeaderGroup">
<method name="&lt;init&gt;" type="()V"/>
<method name="clear" type="()V"/>
<method name="addHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="removeHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="updateHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="setHeaders" type="([Lorg/apache/http/Header;)V"/>
<method name="getCondensedHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getHeaders" type="(Ljava/lang/String;)[Lorg/apache/http/Header;"/>
<method name="getFirstHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getLastHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getAllHeaders" type="()[Lorg/apache/http/Header;"/>
<method name="containsHeader" type="(Ljava/lang/String;)Z"/>
<method name="iterator" type="()Lorg/apache/http/HeaderIterator;"/>
<method name="iterator" type="(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;"/>
<method name="copy" type="()Lorg/apache/http/message/HeaderGroup;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/message/ParserCursor">
<method name="&lt;init&gt;" type="(II)V"/>
<method name="getLowerBound" type="()I"/>
<method name="getUpperBound" type="()I"/>
<method name="getPos" type="()I"/>
<method name="updatePos" type="(I)V"/>
<method name="atEnd" type="()Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/MethodNotSupportedException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/NoHttpResponseException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/params/AbstractHttpParams">
<method name="&lt;init&gt;" type="()V"/>
<method name="getLongParameter" type="(Ljava/lang/String;J)J"/>
<method name="setLongParameter" type="(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;"/>
<method name="getIntParameter" type="(Ljava/lang/String;I)I"/>
<method name="setIntParameter" type="(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;"/>
<method name="getDoubleParameter" type="(Ljava/lang/String;D)D"/>
<method name="setDoubleParameter" type="(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;"/>
<method name="getBooleanParameter" type="(Ljava/lang/String;Z)Z"/>
<method name="setBooleanParameter" type="(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;"/>
<method name="isParameterTrue" type="(Ljava/lang/String;)Z"/>
<method name="isParameterFalse" type="(Ljava/lang/String;)Z"/>
</class>
<class name="org/apache/http/params/BasicHttpParams">
<method name="&lt;init&gt;" type="()V"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;"/>
<method name="removeParameter" type="(Ljava/lang/String;)Z"/>
<method name="setParameters" type="([Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="isParameterSet" type="(Ljava/lang/String;)Z"/>
<method name="isParameterSetLocally" type="(Ljava/lang/String;)Z"/>
<method name="clear" type="()V"/>
<method name="copy" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="copyParams" type="(Lorg/apache/http/params/HttpParams;)V"/>
</class>
<class name="org/apache/http/params/DefaultedHttpParams">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V"/>
<method name="copy" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="removeParameter" type="(Ljava/lang/String;)Z"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;"/>
<method name="getDefaults" type="()Lorg/apache/http/params/HttpParams;"/>
</class>
<class name="org/apache/http/params/HttpAbstractParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
</class>
<class name="org/apache/http/params/HttpConnectionParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setSoTimeout" type="(I)V"/>
<method name="setTcpNoDelay" type="(Z)V"/>
<method name="setSocketBufferSize" type="(I)V"/>
<method name="setLinger" type="(I)V"/>
<method name="setConnectionTimeout" type="(I)V"/>
<method name="setStaleCheckingEnabled" type="(Z)V"/>
</class>
<class name="org/apache/http/params/HttpConnectionParams">
<method name="getSoTimeout" type="(Lorg/apache/http/params/HttpParams;)I" class_method="true"/>
<method name="setSoTimeout" type="(Lorg/apache/http/params/HttpParams;I)V" class_method="true"/>
<method name="getTcpNoDelay" type="(Lorg/apache/http/params/HttpParams;)Z" class_method="true"/>
<method name="setTcpNoDelay" type="(Lorg/apache/http/params/HttpParams;Z)V" class_method="true"/>
<method name="getSocketBufferSize" type="(Lorg/apache/http/params/HttpParams;)I" class_method="true"/>
<method name="setSocketBufferSize" type="(Lorg/apache/http/params/HttpParams;I)V" class_method="true"/>
<method name="getLinger" type="(Lorg/apache/http/params/HttpParams;)I" class_method="true"/>
<method name="setLinger" type="(Lorg/apache/http/params/HttpParams;I)V" class_method="true"/>
<method name="getConnectionTimeout" type="(Lorg/apache/http/params/HttpParams;)I" class_method="true"/>
<method name="setConnectionTimeout" type="(Lorg/apache/http/params/HttpParams;I)V" class_method="true"/>
<method name="isStaleCheckingEnabled" type="(Lorg/apache/http/params/HttpParams;)Z" class_method="true"/>
<method name="setStaleCheckingEnabled" type="(Lorg/apache/http/params/HttpParams;Z)V" class_method="true"/>
</class>
<class name="org/apache/http/params/HttpProtocolParamBean">
<method name="&lt;init&gt;" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="setHttpElementCharset" type="(Ljava/lang/String;)V"/>
<method name="setContentCharset" type="(Ljava/lang/String;)V"/>
<method name="setVersion" type="(Lorg/apache/http/HttpVersion;)V"/>
<method name="setUserAgent" type="(Ljava/lang/String;)V"/>
<method name="setUseExpectContinue" type="(Z)V"/>
</class>
<class name="org/apache/http/params/HttpProtocolParams">
<method name="getHttpElementCharset" type="(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;" class_method="true"/>
<method name="setHttpElementCharset" type="(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V" class_method="true"/>
<method name="getContentCharset" type="(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;" class_method="true"/>
<method name="setContentCharset" type="(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V" class_method="true"/>
<method name="getVersion" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;" class_method="true"/>
<method name="setVersion" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/ProtocolVersion;)V" class_method="true"/>
<method name="getUserAgent" type="(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;" class_method="true"/>
<method name="setUserAgent" type="(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V" class_method="true"/>
<method name="useExpectContinue" type="(Lorg/apache/http/params/HttpParams;)Z" class_method="true"/>
<method name="setUseExpectContinue" type="(Lorg/apache/http/params/HttpParams;Z)V" class_method="true"/>
</class>
<class name="org/apache/http/ParseException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/protocol/BasicHttpContext">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="removeAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/protocol/BasicHttpProcessor">
<method name="&lt;init&gt;" type="()V"/>
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;)V"/>
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;I)V"/>
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;I)V"/>
<method name="removeRequestInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="removeResponseInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="addInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;)V"/>
<method name="addInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;I)V"/>
<method name="getRequestInterceptorCount" type="()I"/>
<method name="getRequestInterceptor" type="(I)Lorg/apache/http/HttpRequestInterceptor;"/>
<method name="clearRequestInterceptors" type="()V"/>
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;)V"/>
<method name="addInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;)V"/>
<method name="addInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;I)V"/>
<method name="getResponseInterceptorCount" type="()I"/>
<method name="getResponseInterceptor" type="(I)Lorg/apache/http/HttpResponseInterceptor;"/>
<method name="clearResponseInterceptors" type="()V"/>
<method name="setInterceptors" type="(Ljava/util/List;)V"/>
<method name="clearInterceptors" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="copyInterceptors" type="(Lorg/apache/http/protocol/BasicHttpProcessor;)V"/>
<method name="copy" type="()Lorg/apache/http/protocol/BasicHttpProcessor;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/protocol/DefaultedHttpContext">
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="removeAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getDefaults" type="()Lorg/apache/http/protocol/HttpContext;"/>
</class>
<class name="org/apache/http/protocol/HTTP">
<method name="isWhitespace" type="(C)Z" class_method="true"/>
</class>
<class name="org/apache/http/protocol/HttpDateGenerator">
<method name="&lt;init&gt;" type="()V"/>
<method name="getCurrentDate" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/protocol/HttpRequestExecutor">
<method name="&lt;init&gt;" type="()V"/>
<method name="canResponseHaveBody" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z"/>
<method name="execute" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="preProcess" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="doSendRequest" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="doReceiveResponse" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="postProcess" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/HttpRequestHandlerRegistry">
<method name="&lt;init&gt;" type="()V"/>
<method name="register" type="(Ljava/lang/String;Lorg/apache/http/protocol/HttpRequestHandler;)V"/>
<method name="unregister" type="(Ljava/lang/String;)V"/>
<method name="setHandlers" type="(Ljava/util/Map;)V"/>
<method name="lookup" type="(Ljava/lang/String;)Lorg/apache/http/protocol/HttpRequestHandler;"/>
<method name="matchUriRequestPattern" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
</class>
<class name="org/apache/http/protocol/HttpService">
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/HttpResponseFactory;)V"/>
<method name="setHttpProcessor" type="(Lorg/apache/http/protocol/HttpProcessor;)V"/>
<method name="setConnReuseStrategy" type="(Lorg/apache/http/ConnectionReuseStrategy;)V"/>
<method name="setResponseFactory" type="(Lorg/apache/http/HttpResponseFactory;)V"/>
<method name="setHandlerResolver" type="(Lorg/apache/http/protocol/HttpRequestHandlerResolver;)V"/>
<method name="setExpectationVerifier" type="(Lorg/apache/http/protocol/HttpExpectationVerifier;)V"/>
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="setParams" type="(Lorg/apache/http/params/HttpParams;)V"/>
<method name="handleRequest" type="(Lorg/apache/http/HttpServerConnection;Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="handleException" type="(Lorg/apache/http/HttpException;Lorg/apache/http/HttpResponse;)V"/>
<method name="doService" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestConnControl">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestContent">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestDate">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestExpectContinue">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestTargetHost">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/RequestUserAgent">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/ResponseConnControl">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/ResponseContent">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/ResponseDate">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/ResponseServer">
<method name="&lt;init&gt;" type="()V"/>
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</class>
<class name="org/apache/http/protocol/SyncBasicHttpContext">
<method name="&lt;init&gt;" type="(Lorg/apache/http/protocol/HttpContext;)V"/>
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="removeAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/protocol/UriPatternMatcher">
<method name="&lt;init&gt;" type="()V"/>
<method name="register" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="unregister" type="(Ljava/lang/String;)V"/>
<method name="setHandlers" type="(Ljava/util/Map;)V"/>
<method name="lookup" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="matchUriRequestPattern" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
</class>
<class name="org/apache/http/ProtocolException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Throwable;)V"/>
</class>
<class name="org/apache/http/ProtocolVersion">
<method name="&lt;init&gt;" type="(Ljava/lang/String;II)V"/>
<method name="getProtocol" type="()Ljava/lang/String;"/>
<method name="getMajor" type="()I"/>
<method name="getMinor" type="()I"/>
<method name="forVersion" type="(II)Lorg/apache/http/ProtocolVersion;"/>
<method name="hashCode" type="()I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="isComparable" type="(Lorg/apache/http/ProtocolVersion;)Z"/>
<method name="compareToVersion" type="(Lorg/apache/http/ProtocolVersion;)I"/>
<method name="greaterEquals" type="(Lorg/apache/http/ProtocolVersion;)Z"/>
<method name="lessEquals" type="(Lorg/apache/http/ProtocolVersion;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="clone" type="()Ljava/lang/Object;"/>
</class>
<class name="org/apache/http/UnsupportedHttpVersionException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/apache/http/util/ByteArrayBuffer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="append" type="([BII)V"/>
<method name="append" type="(I)V"/>
<method name="append" type="([CII)V"/>
<method name="append" type="(Lorg/apache/http/util/CharArrayBuffer;II)V"/>
<method name="clear" type="()V"/>
<method name="toByteArray" type="()[B"/>
<method name="byteAt" type="(I)I"/>
<method name="capacity" type="()I"/>
<method name="length" type="()I"/>
<method name="buffer" type="()[B"/>
<method name="setLength" type="(I)V"/>
<method name="isEmpty" type="()Z"/>
<method name="isFull" type="()Z"/>
</class>
<class name="org/apache/http/util/CharArrayBuffer">
<method name="&lt;init&gt;" type="(I)V"/>
<method name="append" type="([CII)V"/>
<method name="append" type="(Ljava/lang/String;)V"/>
<method name="append" type="(Lorg/apache/http/util/CharArrayBuffer;II)V"/>
<method name="append" type="(Lorg/apache/http/util/CharArrayBuffer;)V"/>
<method name="append" type="(C)V"/>
<method name="append" type="([BII)V"/>
<method name="append" type="(Lorg/apache/http/util/ByteArrayBuffer;II)V"/>
<method name="append" type="(Ljava/lang/Object;)V"/>
<method name="clear" type="()V"/>
<method name="toCharArray" type="()[C"/>
<method name="charAt" type="(I)C"/>
<method name="buffer" type="()[C"/>
<method name="capacity" type="()I"/>
<method name="length" type="()I"/>
<method name="ensureCapacity" type="(I)V"/>
<method name="setLength" type="(I)V"/>
<method name="isEmpty" type="()Z"/>
<method name="isFull" type="()Z"/>
<method name="indexOf" type="(III)I"/>
<method name="indexOf" type="(I)I"/>
<method name="substring" type="(II)Ljava/lang/String;"/>
<method name="substringTrimmed" type="(II)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/apache/http/util/EncodingUtils">
<method name="getString" type="([BIILjava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getString" type="([BLjava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="getBytes" type="(Ljava/lang/String;Ljava/lang/String;)[B" class_method="true"/>
<method name="getAsciiBytes" type="(Ljava/lang/String;)[B" class_method="true"/>
<method name="getAsciiString" type="([BII)Ljava/lang/String;" class_method="true"/>
<method name="getAsciiString" type="([B)Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/util/EntityUtils">
<method name="toByteArray" type="(Lorg/apache/http/HttpEntity;)[B" class_method="true"/>
<method name="getContentCharSet" type="(Lorg/apache/http/HttpEntity;)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="(Lorg/apache/http/HttpEntity;Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
<method name="toString" type="(Lorg/apache/http/HttpEntity;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/apache/http/util/ExceptionUtils">
<method name="initCause" type="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" class_method="true"/>
</class>
<class name="org/apache/http/util/LangUtils">
<method name="hashCode" type="(II)I" class_method="true"/>
<method name="hashCode" type="(IZ)I" class_method="true"/>
<method name="hashCode" type="(ILjava/lang/Object;)I" class_method="true"/>
<method name="equals" type="(Ljava/lang/Object;Ljava/lang/Object;)Z" class_method="true"/>
<method name="equals" type="([Ljava/lang/Object;[Ljava/lang/Object;)Z" class_method="true"/>
</class>
<class name="org/apache/http/util/VersionInfo">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getPackage" type="()Ljava/lang/String;"/>
<method name="getModule" type="()Ljava/lang/String;"/>
<method name="getRelease" type="()Ljava/lang/String;"/>
<method name="getTimestamp" type="()Ljava/lang/String;"/>
<method name="getClassloader" type="()Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="loadVersionInfo" type="([Ljava/lang/String;Ljava/lang/ClassLoader;)[Lorg/apache/http/util/VersionInfo;" class_method="true"/>
<method name="loadVersionInfo" type="(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;" class_method="true"/>
<method name="fromMap" type="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;" class_method="true"/>
</class>
<class name="org/json/JSONArray">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Collection;)V"/>
<method name="&lt;init&gt;" type="(Lorg/json/JSONTokener;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="length" type="()I"/>
<method name="put" type="(Z)Lorg/json/JSONArray;"/>
<method name="put" type="(D)Lorg/json/JSONArray;"/>
<method name="put" type="(I)Lorg/json/JSONArray;"/>
<method name="put" type="(J)Lorg/json/JSONArray;"/>
<method name="put" type="(Ljava/lang/Object;)Lorg/json/JSONArray;"/>
<method name="put" type="(IZ)Lorg/json/JSONArray;"/>
<method name="put" type="(ID)Lorg/json/JSONArray;"/>
<method name="put" type="(II)Lorg/json/JSONArray;"/>
<method name="put" type="(IJ)Lorg/json/JSONArray;"/>
<method name="put" type="(ILjava/lang/Object;)Lorg/json/JSONArray;"/>
<method name="isNull" type="(I)Z"/>
<method name="get" type="(I)Ljava/lang/Object;"/>
<method name="opt" type="(I)Ljava/lang/Object;"/>
<method name="getBoolean" type="(I)Z"/>
<method name="optBoolean" type="(I)Z"/>
<method name="optBoolean" type="(IZ)Z"/>
<method name="getDouble" type="(I)D"/>
<method name="optDouble" type="(I)D"/>
<method name="optDouble" type="(ID)D"/>
<method name="getInt" type="(I)I"/>
<method name="optInt" type="(I)I"/>
<method name="optInt" type="(II)I"/>
<method name="getLong" type="(I)J"/>
<method name="optLong" type="(I)J"/>
<method name="optLong" type="(IJ)J"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="optString" type="(I)Ljava/lang/String;"/>
<method name="optString" type="(ILjava/lang/String;)Ljava/lang/String;"/>
<method name="getJSONArray" type="(I)Lorg/json/JSONArray;"/>
<method name="optJSONArray" type="(I)Lorg/json/JSONArray;"/>
<method name="getJSONObject" type="(I)Lorg/json/JSONObject;"/>
<method name="optJSONObject" type="(I)Lorg/json/JSONObject;"/>
<method name="toJSONObject" type="(Lorg/json/JSONArray;)Lorg/json/JSONObject;"/>
<method name="join" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(I)Ljava/lang/String;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
</class>
<class name="org/json/JSONException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/json/JSONObject">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/util/Map;)V"/>
<method name="&lt;init&gt;" type="(Lorg/json/JSONTokener;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Lorg/json/JSONObject;[Ljava/lang/String;)V"/>
<method name="length" type="()I"/>
<method name="put" type="(Ljava/lang/String;Z)Lorg/json/JSONObject;"/>
<method name="put" type="(Ljava/lang/String;D)Lorg/json/JSONObject;"/>
<method name="put" type="(Ljava/lang/String;I)Lorg/json/JSONObject;"/>
<method name="put" type="(Ljava/lang/String;J)Lorg/json/JSONObject;"/>
<method name="put" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;"/>
<method name="putOpt" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;"/>
<method name="accumulate" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;"/>
<method name="remove" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="isNull" type="(Ljava/lang/String;)Z"/>
<method name="has" type="(Ljava/lang/String;)Z"/>
<method name="get" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="opt" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getBoolean" type="(Ljava/lang/String;)Z"/>
<method name="optBoolean" type="(Ljava/lang/String;)Z"/>
<method name="optBoolean" type="(Ljava/lang/String;Z)Z"/>
<method name="getDouble" type="(Ljava/lang/String;)D"/>
<method name="optDouble" type="(Ljava/lang/String;)D"/>
<method name="optDouble" type="(Ljava/lang/String;D)D"/>
<method name="getInt" type="(Ljava/lang/String;)I"/>
<method name="optInt" type="(Ljava/lang/String;)I"/>
<method name="optInt" type="(Ljava/lang/String;I)I"/>
<method name="getLong" type="(Ljava/lang/String;)J"/>
<method name="optLong" type="(Ljava/lang/String;)J"/>
<method name="optLong" type="(Ljava/lang/String;J)J"/>
<method name="getString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="optString" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="optString" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getJSONArray" type="(Ljava/lang/String;)Lorg/json/JSONArray;"/>
<method name="optJSONArray" type="(Ljava/lang/String;)Lorg/json/JSONArray;"/>
<method name="getJSONObject" type="(Ljava/lang/String;)Lorg/json/JSONObject;"/>
<method name="optJSONObject" type="(Ljava/lang/String;)Lorg/json/JSONObject;"/>
<method name="toJSONArray" type="(Lorg/json/JSONArray;)Lorg/json/JSONArray;"/>
<method name="keys" type="()Ljava/util/Iterator;"/>
<method name="names" type="()Lorg/json/JSONArray;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="toString" type="(I)Ljava/lang/String;"/>
<method name="numberToString" type="(Ljava/lang/Number;)Ljava/lang/String;" class_method="true"/>
<method name="quote" type="(Ljava/lang/String;)Ljava/lang/String;" class_method="true"/>
</class>
<class name="org/json/JSONStringer">
<method name="&lt;init&gt;" type="()V"/>
<method name="array" type="()Lorg/json/JSONStringer;"/>
<method name="endArray" type="()Lorg/json/JSONStringer;"/>
<method name="object" type="()Lorg/json/JSONStringer;"/>
<method name="endObject" type="()Lorg/json/JSONStringer;"/>
<method name="value" type="(Ljava/lang/Object;)Lorg/json/JSONStringer;"/>
<method name="value" type="(Z)Lorg/json/JSONStringer;"/>
<method name="value" type="(D)Lorg/json/JSONStringer;"/>
<method name="value" type="(J)Lorg/json/JSONStringer;"/>
<method name="key" type="(Ljava/lang/String;)Lorg/json/JSONStringer;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/json/JSONTokener">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="nextValue" type="()Ljava/lang/Object;"/>
<method name="nextString" type="(C)Ljava/lang/String;"/>
<method name="syntaxError" type="(Ljava/lang/String;)Lorg/json/JSONException;"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="more" type="()Z"/>
<method name="next" type="()C"/>
<method name="next" type="(C)C"/>
<method name="nextClean" type="()C"/>
<method name="next" type="(I)Ljava/lang/String;"/>
<method name="nextTo" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="nextTo" type="(C)Ljava/lang/String;"/>
<method name="skipPast" type="(Ljava/lang/String;)V"/>
<method name="skipTo" type="(C)C"/>
<method name="back" type="()V"/>
<method name="dehexchar" type="(C)I" class_method="true"/>
</class>
<class name="org/w3c/dom/DOMException">
<method name="&lt;init&gt;" type="(SLjava/lang/String;)V"/>
</class>
<class name="org/w3c/dom/ls/LSException">
<method name="&lt;init&gt;" type="(SLjava/lang/String;)V"/>
</class>
<class name="org/xml/sax/ext/Attributes2Impl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/Attributes;)V"/>
<method name="isDeclared" type="(I)Z"/>
<method name="isDeclared" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="isDeclared" type="(Ljava/lang/String;)Z"/>
<method name="isSpecified" type="(I)Z"/>
<method name="isSpecified" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="isSpecified" type="(Ljava/lang/String;)Z"/>
<method name="setAttributes" type="(Lorg/xml/sax/Attributes;)V"/>
<method name="addAttribute" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="removeAttribute" type="(I)V"/>
<method name="setDeclared" type="(IZ)V"/>
<method name="setSpecified" type="(IZ)V"/>
</class>
<class name="org/xml/sax/ext/DefaultHandler2">
<method name="&lt;init&gt;" type="()V"/>
<method name="startCDATA" type="()V"/>
<method name="endCDATA" type="()V"/>
<method name="startDTD" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endDTD" type="()V"/>
<method name="startEntity" type="(Ljava/lang/String;)V"/>
<method name="endEntity" type="(Ljava/lang/String;)V"/>
<method name="comment" type="([CII)V"/>
<method name="attributeDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="elementDecl" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="externalEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="internalEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getExternalSubset" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
</class>
<class name="org/xml/sax/ext/Locator2Impl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/Locator;)V"/>
<method name="getXMLVersion" type="()Ljava/lang/String;"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="setXMLVersion" type="(Ljava/lang/String;)V"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/xml/sax/HandlerBase">
<method name="&lt;init&gt;" type="()V"/>
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
<method name="notationDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="unparsedEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startElement" type="(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V"/>
<method name="endElement" type="(Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="warning" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="error" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="fatalError" type="(Lorg/xml/sax/SAXParseException;)V"/>
</class>
<class name="org/xml/sax/helpers/AttributeListImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/AttributeList;)V"/>
<method name="setAttributeList" type="(Lorg/xml/sax/AttributeList;)V"/>
<method name="addAttribute" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="removeAttribute" type="(Ljava/lang/String;)V"/>
<method name="clear" type="()V"/>
<method name="getLength" type="()I"/>
<method name="getName" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(I)Ljava/lang/String;"/>
<method name="getValue" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</class>
<class name="org/xml/sax/helpers/AttributesImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/Attributes;)V"/>
<method name="getLength" type="()I"/>
<method name="getURI" type="(I)Ljava/lang/String;"/>
<method name="getLocalName" type="(I)Ljava/lang/String;"/>
<method name="getQName" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(I)Ljava/lang/String;"/>
<method name="getValue" type="(I)Ljava/lang/String;"/>
<method name="getIndex" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getIndex" type="(Ljava/lang/String;)I"/>
<method name="getType" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="clear" type="()V"/>
<method name="setAttributes" type="(Lorg/xml/sax/Attributes;)V"/>
<method name="addAttribute" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setAttribute" type="(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="removeAttribute" type="(I)V"/>
<method name="setURI" type="(ILjava/lang/String;)V"/>
<method name="setLocalName" type="(ILjava/lang/String;)V"/>
<method name="setQName" type="(ILjava/lang/String;)V"/>
<method name="setType" type="(ILjava/lang/String;)V"/>
<method name="setValue" type="(ILjava/lang/String;)V"/>
</class>
<class name="org/xml/sax/helpers/DefaultHandler">
<method name="&lt;init&gt;" type="()V"/>
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
<method name="notationDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="unparsedEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startPrefixMapping" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endPrefixMapping" type="(Ljava/lang/String;)V"/>
<method name="startElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"/>
<method name="endElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="skippedEntity" type="(Ljava/lang/String;)V"/>
<method name="warning" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="error" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="fatalError" type="(Lorg/xml/sax/SAXParseException;)V"/>
</class>
<class name="org/xml/sax/helpers/LocatorImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/Locator;)V"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
<method name="setPublicId" type="(Ljava/lang/String;)V"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="setLineNumber" type="(I)V"/>
<method name="setColumnNumber" type="(I)V"/>
</class>
<class name="org/xml/sax/helpers/NamespaceSupport">
<method name="&lt;init&gt;" type="()V"/>
<method name="reset" type="()V"/>
<method name="pushContext" type="()V"/>
<method name="popContext" type="()V"/>
<method name="declarePrefix" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="processName" type="(Ljava/lang/String;[Ljava/lang/String;Z)[Ljava/lang/String;"/>
<method name="getURI" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPrefixes" type="()Ljava/util/Enumeration;"/>
<method name="getPrefix" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPrefixes" type="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
<method name="getDeclaredPrefixes" type="()Ljava/util/Enumeration;"/>
<method name="setNamespaceDeclUris" type="(Z)V"/>
<method name="isNamespaceDeclUris" type="()Z"/>
</class>
<class name="org/xml/sax/helpers/ParserAdapter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/Parser;)V"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="getEntityResolver" type="()Lorg/xml/sax/EntityResolver;"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="getDTDHandler" type="()Lorg/xml/sax/DTDHandler;"/>
<method name="setContentHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startElement" type="(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V"/>
<method name="endElement" type="(Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="org/xml/sax/helpers/ParserFactory">
<method name="makeParser" type="()Lorg/xml/sax/Parser;" class_method="true"/>
<method name="makeParser" type="(Ljava/lang/String;)Lorg/xml/sax/Parser;" class_method="true"/>
</class>
<class name="org/xml/sax/helpers/XMLFilterImpl">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/XMLReader;)V"/>
<method name="setParent" type="(Lorg/xml/sax/XMLReader;)V"/>
<method name="getParent" type="()Lorg/xml/sax/XMLReader;"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="getEntityResolver" type="()Lorg/xml/sax/EntityResolver;"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="getDTDHandler" type="()Lorg/xml/sax/DTDHandler;"/>
<method name="setContentHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
<method name="notationDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="unparsedEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startPrefixMapping" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endPrefixMapping" type="(Ljava/lang/String;)V"/>
<method name="startElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"/>
<method name="endElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="skippedEntity" type="(Ljava/lang/String;)V"/>
<method name="warning" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="error" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="fatalError" type="(Lorg/xml/sax/SAXParseException;)V"/>
</class>
<class name="org/xml/sax/helpers/XMLReaderAdapter">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xml/sax/XMLReader;)V"/>
<method name="setLocale" type="(Ljava/util/Locale;)V"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="setDocumentHandler" type="(Lorg/xml/sax/DocumentHandler;)V"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startPrefixMapping" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endPrefixMapping" type="(Ljava/lang/String;)V"/>
<method name="startElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"/>
<method name="endElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="skippedEntity" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/xml/sax/helpers/XMLReaderFactory">
<method name="createXMLReader" type="()Lorg/xml/sax/XMLReader;" class_method="true"/>
<method name="createXMLReader" type="(Ljava/lang/String;)Lorg/xml/sax/XMLReader;" class_method="true"/>
</class>
<class name="org/xml/sax/InputSource">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/InputStream;)V"/>
<method name="&lt;init&gt;" type="(Ljava/io/Reader;)V"/>
<method name="setPublicId" type="(Ljava/lang/String;)V"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="setByteStream" type="(Ljava/io/InputStream;)V"/>
<method name="getByteStream" type="()Ljava/io/InputStream;"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="setCharacterStream" type="(Ljava/io/Reader;)V"/>
<method name="getCharacterStream" type="()Ljava/io/Reader;"/>
</class>
<class name="org/xml/sax/SAXException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/Exception;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/Exception;)V"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getException" type="()Ljava/lang/Exception;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</class>
<class name="org/xml/sax/SAXNotRecognizedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/xml/sax/SAXNotSupportedException">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
</class>
<class name="org/xml/sax/SAXParseException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;Lorg/xml/sax/Locator;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Exception;)V"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
</class>
<class name="org/xmlpull/v1/sax2/Driver">
<method name="&lt;init&gt;" type="()V"/>
<method name="&lt;init&gt;" type="(Lorg/xmlpull/v1/XmlPullParser;)V"/>
<method name="getLength" type="()I"/>
<method name="getURI" type="(I)Ljava/lang/String;"/>
<method name="getLocalName" type="(I)Ljava/lang/String;"/>
<method name="getQName" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(I)Ljava/lang/String;"/>
<method name="getValue" type="(I)Ljava/lang/String;"/>
<method name="getIndex" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getIndex" type="(Ljava/lang/String;)I"/>
<method name="getType" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="getEntityResolver" type="()Lorg/xml/sax/EntityResolver;"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="getDTDHandler" type="()Lorg/xml/sax/DTDHandler;"/>
<method name="setContentHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
<method name="parseSubTree" type="(Lorg/xmlpull/v1/XmlPullParser;)V"/>
<method name="startElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
</class>
<class name="org/xmlpull/v1/XmlPullParserException">
<method name="&lt;init&gt;" type="(Ljava/lang/String;)V"/>
<method name="&lt;init&gt;" type="(Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/Throwable;)V"/>
<method name="getDetail" type="()Ljava/lang/Throwable;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
<method name="printStackTrace" type="()V"/>
</class>
<class name="org/xmlpull/v1/XmlPullParserFactory">
<method name="&lt;init&gt;" type="()V"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setNamespaceAware" type="(Z)V"/>
<method name="isNamespaceAware" type="()Z"/>
<method name="setValidating" type="(Z)V"/>
<method name="isValidating" type="()Z"/>
<method name="newPullParser" type="()Lorg/xmlpull/v1/XmlPullParser;"/>
<method name="newSerializer" type="()Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="newInstance" type="()Lorg/xmlpull/v1/XmlPullParserFactory;" class_method="true"/>
<method name="newInstance" type="(Ljava/lang/String;Ljava/lang/Class;)Lorg/xmlpull/v1/XmlPullParserFactory;" class_method="true"/>
</class>
<class name="java/lang/Object">
<method name="&lt;init&gt;" type="()V"/>
<method name="clone" type="()Ljava/lang/Object;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="finalize" type="()V"/>
<method name="getClass" type="()Ljava/lang/Class;"/>
<method name="hashCode" type="()I"/>
<method name="notify" type="()V"/>
<method name="notifyAll" type="()V"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="wait" type="()V"/>
<method name="wait" type="(J)V"/>
<method name="wait" type="(JI)V"/>
</class>
<interface name="android/accounts/AccountManagerCallback">
<method name="run" type="(Landroid/accounts/AccountManagerFuture;)V"/>
</interface>
<interface name="android/accounts/AccountManagerFuture">
<method name="cancel" type="(Z)Z"/>
<method name="isCancelled" type="()Z"/>
<method name="isDone" type="()Z"/>
<method name="getResult" type="()Ljava/lang/Object;"/>
<method name="getResult" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
</interface>
<interface name="android/accounts/OnAccountsUpdateListener">
<method name="onAccountsUpdated" type="([Landroid/accounts/Account;)V"/>
</interface>
<interface name="android/app/backup/BackupHelper">
<method name="performBackup" type="(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"/>
<method name="restoreEntity" type="(Landroid/app/backup/BackupDataInputStream;)V"/>
<method name="writeNewStateDescription" type="(Landroid/os/ParcelFileDescriptor;)V"/>
</interface>
<interface name="android/app/DatePickerDialog$OnDateSetListener">
<method name="onDateSet" type="(Landroid/widget/DatePicker;III)V"/>
</interface>
<interface name="android/app/KeyguardManager$OnKeyguardExitResult">
<method name="onKeyguardExitResult" type="(Z)V"/>
</interface>
<interface name="android/app/PendingIntent$OnFinished">
<method name="onSendFinished" type="(Landroid/app/PendingIntent;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;)V"/>
</interface>
<interface name="android/app/SearchManager$OnCancelListener">
<method name="onCancel" type="()V"/>
</interface>
<interface name="android/app/SearchManager$OnDismissListener">
<method name="onDismiss" type="()V"/>
</interface>
<interface name="android/app/TimePickerDialog$OnTimeSetListener">
<method name="onTimeSet" type="(Landroid/widget/TimePicker;II)V"/>
</interface>
<interface name="android/content/ComponentCallbacks">
<method name="onConfigurationChanged" type="(Landroid/content/res/Configuration;)V"/>
<method name="onLowMemory" type="()V"/>
</interface>
<interface name="android/content/DialogInterface$OnCancelListener">
<method name="onCancel" type="(Landroid/content/DialogInterface;)V"/>
</interface>
<interface name="android/content/DialogInterface$OnClickListener">
<method name="onClick" type="(Landroid/content/DialogInterface;I)V"/>
</interface>
<interface name="android/content/DialogInterface$OnDismissListener">
<method name="onDismiss" type="(Landroid/content/DialogInterface;)V"/>
</interface>
<interface name="android/content/DialogInterface$OnKeyListener">
<method name="onKey" type="(Landroid/content/DialogInterface;ILandroid/view/KeyEvent;)Z"/>
</interface>
<interface name="android/content/DialogInterface$OnMultiChoiceClickListener">
<method name="onClick" type="(Landroid/content/DialogInterface;IZ)V"/>
</interface>
<interface name="android/content/DialogInterface$OnShowListener">
<method name="onShow" type="(Landroid/content/DialogInterface;)V"/>
</interface>
<interface name="android/content/DialogInterface">
<method name="cancel" type="()V"/>
<method name="dismiss" type="()V"/>
</interface>
<interface name="android/content/IntentSender$OnFinished">
<method name="onSendFinished" type="(Landroid/content/IntentSender;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;)V"/>
</interface>
<interface name="android/content/ServiceConnection">
<method name="onServiceConnected" type="(Landroid/content/ComponentName;Landroid/os/IBinder;)V"/>
<method name="onServiceDisconnected" type="(Landroid/content/ComponentName;)V"/>
</interface>
<interface name="android/content/SharedPreferences$Editor">
<method name="putString" type="(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;"/>
<method name="putInt" type="(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;"/>
<method name="putLong" type="(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;"/>
<method name="putFloat" type="(Ljava/lang/String;F)Landroid/content/SharedPreferences$Editor;"/>
<method name="putBoolean" type="(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;"/>
<method name="remove" type="(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;"/>
<method name="clear" type="()Landroid/content/SharedPreferences$Editor;"/>
<method name="commit" type="()Z"/>
<method name="apply" type="()V"/>
</interface>
<interface name="android/content/SharedPreferences$OnSharedPreferenceChangeListener">
<method name="onSharedPreferenceChanged" type="(Landroid/content/SharedPreferences;Ljava/lang/String;)V"/>
</interface>
<interface name="android/content/SharedPreferences">
<method name="getAll" type="()Ljava/util/Map;"/>
<method name="getString" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getInt" type="(Ljava/lang/String;I)I"/>
<method name="getLong" type="(Ljava/lang/String;J)J"/>
<method name="getFloat" type="(Ljava/lang/String;F)F"/>
<method name="getBoolean" type="(Ljava/lang/String;Z)Z"/>
<method name="contains" type="(Ljava/lang/String;)Z"/>
<method name="edit" type="()Landroid/content/SharedPreferences$Editor;"/>
<method name="registerOnSharedPreferenceChangeListener" type="(Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;)V"/>
<method name="unregisterOnSharedPreferenceChangeListener" type="(Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;)V"/>
</interface>
<interface name="android/content/SyncStatusObserver">
<method name="onStatusChanged" type="(I)V"/>
</interface>
<interface name="android/database/Cursor">
<method name="getCount" type="()I"/>
<method name="getPosition" type="()I"/>
<method name="move" type="(I)Z"/>
<method name="moveToPosition" type="(I)Z"/>
<method name="moveToFirst" type="()Z"/>
<method name="moveToLast" type="()Z"/>
<method name="moveToNext" type="()Z"/>
<method name="moveToPrevious" type="()Z"/>
<method name="isFirst" type="()Z"/>
<method name="isLast" type="()Z"/>
<method name="isBeforeFirst" type="()Z"/>
<method name="isAfterLast" type="()Z"/>
<method name="getColumnIndex" type="(Ljava/lang/String;)I"/>
<method name="getColumnIndexOrThrow" type="(Ljava/lang/String;)I"/>
<method name="getColumnName" type="(I)Ljava/lang/String;"/>
<method name="getColumnNames" type="()[Ljava/lang/String;"/>
<method name="getColumnCount" type="()I"/>
<method name="getBlob" type="(I)[B"/>
<method name="getString" type="(I)Ljava/lang/String;"/>
<method name="copyStringToBuffer" type="(ILandroid/database/CharArrayBuffer;)V"/>
<method name="getShort" type="(I)S"/>
<method name="getInt" type="(I)I"/>
<method name="getLong" type="(I)J"/>
<method name="getFloat" type="(I)F"/>
<method name="getDouble" type="(I)D"/>
<method name="isNull" type="(I)Z"/>
<method name="deactivate" type="()V"/>
<method name="requery" type="()Z"/>
<method name="close" type="()V"/>
<method name="isClosed" type="()Z"/>
<method name="registerContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="unregisterContentObserver" type="(Landroid/database/ContentObserver;)V"/>
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="setNotificationUri" type="(Landroid/content/ContentResolver;Landroid/net/Uri;)V"/>
<method name="getWantsAllOnMoveCalls" type="()Z"/>
<method name="getExtras" type="()Landroid/os/Bundle;"/>
<method name="respond" type="(Landroid/os/Bundle;)Landroid/os/Bundle;"/>
</interface>
<interface name="android/database/sqlite/SQLiteCursorDriver">
<method name="query" type="(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;[Ljava/lang/String;)Landroid/database/Cursor;"/>
<method name="cursorDeactivated" type="()V"/>
<method name="cursorRequeried" type="(Landroid/database/Cursor;)V"/>
<method name="cursorClosed" type="()V"/>
<method name="setBindArguments" type="([Ljava/lang/String;)V"/>
</interface>
<interface name="android/database/sqlite/SQLiteDatabase$CursorFactory">
<method name="newCursor" type="(Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"/>
</interface>
<interface name="android/database/sqlite/SQLiteTransactionListener">
<method name="onBegin" type="()V"/>
<method name="onCommit" type="()V"/>
<method name="onRollback" type="()V"/>
</interface>
<interface name="android/gesture/GestureOverlayView$OnGestureListener">
<method name="onGestureStarted" type="(Landroid/gesture/GestureOverlayView;Landroid/view/MotionEvent;)V"/>
<method name="onGesture" type="(Landroid/gesture/GestureOverlayView;Landroid/view/MotionEvent;)V"/>
<method name="onGestureEnded" type="(Landroid/gesture/GestureOverlayView;Landroid/view/MotionEvent;)V"/>
<method name="onGestureCancelled" type="(Landroid/gesture/GestureOverlayView;Landroid/view/MotionEvent;)V"/>
</interface>
<interface name="android/gesture/GestureOverlayView$OnGesturePerformedListener">
<method name="onGesturePerformed" type="(Landroid/gesture/GestureOverlayView;Landroid/gesture/Gesture;)V"/>
</interface>
<interface name="android/gesture/GestureOverlayView$OnGesturingListener">
<method name="onGesturingStarted" type="(Landroid/gesture/GestureOverlayView;)V"/>
<method name="onGesturingEnded" type="(Landroid/gesture/GestureOverlayView;)V"/>
</interface>
<interface name="android/graphics/drawable/Animatable">
<method name="start" type="()V"/>
<method name="stop" type="()V"/>
<method name="isRunning" type="()Z"/>
</interface>
<interface name="android/graphics/drawable/Drawable$Callback">
<method name="invalidateDrawable" type="(Landroid/graphics/drawable/Drawable;)V"/>
<method name="scheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V"/>
<method name="unscheduleDrawable" type="(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V"/>
</interface>
<interface name="android/hardware/Camera$AutoFocusCallback">
<method name="onAutoFocus" type="(ZLandroid/hardware/Camera;)V"/>
</interface>
<interface name="android/hardware/Camera$ErrorCallback">
<method name="onError" type="(ILandroid/hardware/Camera;)V"/>
</interface>
<interface name="android/hardware/Camera$OnZoomChangeListener">
<method name="onZoomChange" type="(IZLandroid/hardware/Camera;)V"/>
</interface>
<interface name="android/hardware/Camera$PictureCallback">
<method name="onPictureTaken" type="([BLandroid/hardware/Camera;)V"/>
</interface>
<interface name="android/hardware/Camera$PreviewCallback">
<method name="onPreviewFrame" type="([BLandroid/hardware/Camera;)V"/>
</interface>
<interface name="android/hardware/Camera$ShutterCallback">
<method name="onShutter" type="()V"/>
</interface>
<interface name="android/hardware/SensorEventListener">
<method name="onSensorChanged" type="(Landroid/hardware/SensorEvent;)V"/>
<method name="onAccuracyChanged" type="(Landroid/hardware/Sensor;I)V"/>
</interface>
<interface name="android/hardware/SensorListener">
<method name="onSensorChanged" type="(I[F)V"/>
<method name="onAccuracyChanged" type="(II)V"/>
</interface>
<interface name="android/inputmethodservice/KeyboardView$OnKeyboardActionListener">
<method name="onPress" type="(I)V"/>
<method name="onRelease" type="(I)V"/>
<method name="onKey" type="(I[I)V"/>
<method name="onText" type="(Ljava/lang/CharSequence;)V"/>
<method name="swipeLeft" type="()V"/>
<method name="swipeRight" type="()V"/>
<method name="swipeDown" type="()V"/>
<method name="swipeUp" type="()V"/>
</interface>
<interface name="android/location/GpsStatus$Listener">
<method name="onGpsStatusChanged" type="(I)V"/>
</interface>
<interface name="android/location/GpsStatus$NmeaListener">
<method name="onNmeaReceived" type="(JLjava/lang/String;)V"/>
</interface>
<interface name="android/location/LocationListener">
<method name="onLocationChanged" type="(Landroid/location/Location;)V"/>
<method name="onStatusChanged" type="(Ljava/lang/String;ILandroid/os/Bundle;)V"/>
<method name="onProviderEnabled" type="(Ljava/lang/String;)V"/>
<method name="onProviderDisabled" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="android/media/audiofx/AudioEffect$OnControlStatusChangeListener">
<method name="onControlStatusChange" type="(Landroid/media/audiofx/AudioEffect;Z)V"/>
</interface>
<interface name="android/media/audiofx/AudioEffect$OnEnableStatusChangeListener">
<method name="onEnableStatusChange" type="(Landroid/media/audiofx/AudioEffect;Z)V"/>
</interface>
<interface name="android/media/audiofx/BassBoost$OnParameterChangeListener">
<method name="onParameterChange" type="(Landroid/media/audiofx/BassBoost;IIS)V"/>
</interface>
<interface name="android/media/audiofx/EnvironmentalReverb$OnParameterChangeListener">
<method name="onParameterChange" type="(Landroid/media/audiofx/EnvironmentalReverb;III)V"/>
</interface>
<interface name="android/media/audiofx/Equalizer$OnParameterChangeListener">
<method name="onParameterChange" type="(Landroid/media/audiofx/Equalizer;IIII)V"/>
</interface>
<interface name="android/media/audiofx/PresetReverb$OnParameterChangeListener">
<method name="onParameterChange" type="(Landroid/media/audiofx/PresetReverb;IIS)V"/>
</interface>
<interface name="android/media/audiofx/Virtualizer$OnParameterChangeListener">
<method name="onParameterChange" type="(Landroid/media/audiofx/Virtualizer;IIS)V"/>
</interface>
<interface name="android/media/audiofx/Visualizer$OnDataCaptureListener">
<method name="onWaveFormDataCapture" type="(Landroid/media/audiofx/Visualizer;[BI)V"/>
<method name="onFftDataCapture" type="(Landroid/media/audiofx/Visualizer;[BI)V"/>
</interface>
<interface name="android/media/AudioManager$OnAudioFocusChangeListener">
<method name="onAudioFocusChange" type="(I)V"/>
</interface>
<interface name="android/media/AudioRecord$OnRecordPositionUpdateListener">
<method name="onMarkerReached" type="(Landroid/media/AudioRecord;)V"/>
<method name="onPeriodicNotification" type="(Landroid/media/AudioRecord;)V"/>
</interface>
<interface name="android/media/AudioTrack$OnPlaybackPositionUpdateListener">
<method name="onMarkerReached" type="(Landroid/media/AudioTrack;)V"/>
<method name="onPeriodicNotification" type="(Landroid/media/AudioTrack;)V"/>
</interface>
<interface name="android/media/JetPlayer$OnJetEventListener">
<method name="onJetEvent" type="(Landroid/media/JetPlayer;SBBBB)V"/>
<method name="onJetUserIdUpdate" type="(Landroid/media/JetPlayer;II)V"/>
<method name="onJetNumQueuedSegmentUpdate" type="(Landroid/media/JetPlayer;I)V"/>
<method name="onJetPauseUpdate" type="(Landroid/media/JetPlayer;I)V"/>
</interface>
<interface name="android/media/MediaPlayer$OnBufferingUpdateListener">
<method name="onBufferingUpdate" type="(Landroid/media/MediaPlayer;I)V"/>
</interface>
<interface name="android/media/MediaPlayer$OnCompletionListener">
<method name="onCompletion" type="(Landroid/media/MediaPlayer;)V"/>
</interface>
<interface name="android/media/MediaPlayer$OnErrorListener">
<method name="onError" type="(Landroid/media/MediaPlayer;II)Z"/>
</interface>
<interface name="android/media/MediaPlayer$OnInfoListener">
<method name="onInfo" type="(Landroid/media/MediaPlayer;II)Z"/>
</interface>
<interface name="android/media/MediaPlayer$OnPreparedListener">
<method name="onPrepared" type="(Landroid/media/MediaPlayer;)V"/>
</interface>
<interface name="android/media/MediaPlayer$OnSeekCompleteListener">
<method name="onSeekComplete" type="(Landroid/media/MediaPlayer;)V"/>
</interface>
<interface name="android/media/MediaPlayer$OnVideoSizeChangedListener">
<method name="onVideoSizeChanged" type="(Landroid/media/MediaPlayer;II)V"/>
</interface>
<interface name="android/media/MediaRecorder$OnErrorListener">
<method name="onError" type="(Landroid/media/MediaRecorder;II)V"/>
</interface>
<interface name="android/media/MediaRecorder$OnInfoListener">
<method name="onInfo" type="(Landroid/media/MediaRecorder;II)V"/>
</interface>
<interface name="android/media/MediaScannerConnection$OnScanCompletedListener">
<method name="onScanCompleted" type="(Ljava/lang/String;Landroid/net/Uri;)V"/>
</interface>
<interface name="android/media/SoundPool$OnLoadCompleteListener">
<method name="onLoadComplete" type="(Landroid/media/SoundPool;II)V"/>
</interface>
<interface name="android/net/sip/SipRegistrationListener">
<method name="onRegistering" type="(Ljava/lang/String;)V"/>
<method name="onRegistrationDone" type="(Ljava/lang/String;J)V"/>
<method name="onRegistrationFailed" type="(Ljava/lang/String;ILjava/lang/String;)V"/>
</interface>
<interface name="android/net/UrlQuerySanitizer$ValueSanitizer">
<method name="sanitize" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="android/opengl/GLSurfaceView$EGLConfigChooser">
<method name="chooseConfig" type="(Ljavax/microedition/khronos/egl/EGL10;Ljavax/microedition/khronos/egl/EGLDisplay;)Ljavax/microedition/khronos/egl/EGLConfig;"/>
</interface>
<interface name="android/opengl/GLSurfaceView$EGLContextFactory">
<method name="createContext" type="(Ljavax/microedition/khronos/egl/EGL10;Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;)Ljavax/microedition/khronos/egl/EGLContext;"/>
<method name="destroyContext" type="(Ljavax/microedition/khronos/egl/EGL10;Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLContext;)V"/>
</interface>
<interface name="android/opengl/GLSurfaceView$EGLWindowSurfaceFactory">
<method name="createWindowSurface" type="(Ljavax/microedition/khronos/egl/EGL10;Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;Ljava/lang/Object;)Ljavax/microedition/khronos/egl/EGLSurface;"/>
<method name="destroySurface" type="(Ljavax/microedition/khronos/egl/EGL10;Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLSurface;)V"/>
</interface>
<interface name="android/opengl/GLSurfaceView$GLWrapper">
<method name="wrap" type="(Ljavax/microedition/khronos/opengles/GL;)Ljavax/microedition/khronos/opengles/GL;"/>
</interface>
<interface name="android/opengl/GLSurfaceView$Renderer">
<method name="onSurfaceCreated" type="(Ljavax/microedition/khronos/opengles/GL10;Ljavax/microedition/khronos/egl/EGLConfig;)V"/>
<method name="onSurfaceChanged" type="(Ljavax/microedition/khronos/opengles/GL10;II)V"/>
<method name="onDrawFrame" type="(Ljavax/microedition/khronos/opengles/GL10;)V"/>
</interface>
<interface name="android/os/Handler$Callback">
<method name="handleMessage" type="(Landroid/os/Message;)Z"/>
</interface>
<interface name="android/os/IBinder$DeathRecipient">
<method name="binderDied" type="()V"/>
</interface>
<interface name="android/os/IBinder">
<method name="getInterfaceDescriptor" type="()Ljava/lang/String;"/>
<method name="pingBinder" type="()Z"/>
<method name="isBinderAlive" type="()Z"/>
<method name="queryLocalInterface" type="(Ljava/lang/String;)Landroid/os/IInterface;"/>
<method name="dump" type="(Ljava/io/FileDescriptor;[Ljava/lang/String;)V"/>
<method name="transact" type="(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z"/>
<method name="linkToDeath" type="(Landroid/os/IBinder$DeathRecipient;I)V"/>
<method name="unlinkToDeath" type="(Landroid/os/IBinder$DeathRecipient;I)Z"/>
</interface>
<interface name="android/os/IInterface">
<method name="asBinder" type="()Landroid/os/IBinder;"/>
</interface>
<interface name="android/os/MessageQueue$IdleHandler">
<method name="queueIdle" type="()Z"/>
</interface>
<interface name="android/os/Parcelable$Creator">
<method name="createFromParcel" type="(Landroid/os/Parcel;)Ljava/lang/Object;"/>
<method name="newArray" type="(I)[Ljava/lang/Object;"/>
</interface>
<interface name="android/os/Parcelable">
<method name="describeContents" type="()I"/>
<method name="writeToParcel" type="(Landroid/os/Parcel;I)V"/>
</interface>
<interface name="android/os/RecoverySystem$ProgressListener">
<method name="onProgress" type="(I)V"/>
</interface>
<interface name="android/preference/Preference$OnPreferenceChangeListener">
<method name="onPreferenceChange" type="(Landroid/preference/Preference;Ljava/lang/Object;)Z"/>
</interface>
<interface name="android/preference/Preference$OnPreferenceClickListener">
<method name="onPreferenceClick" type="(Landroid/preference/Preference;)Z"/>
</interface>
<interface name="android/preference/PreferenceManager$OnActivityDestroyListener">
<method name="onActivityDestroy" type="()V"/>
</interface>
<interface name="android/preference/PreferenceManager$OnActivityResultListener">
<method name="onActivityResult" type="(IILandroid/content/Intent;)Z"/>
</interface>
<interface name="android/preference/PreferenceManager$OnActivityStopListener">
<method name="onActivityStop" type="()V"/>
</interface>
<interface name="android/provider/BaseColumns">
</interface>
<interface name="android/provider/Contacts$ContactMethodsColumns">
</interface>
<interface name="android/provider/Contacts$ExtensionsColumns">
</interface>
<interface name="android/provider/Contacts$GroupsColumns">
</interface>
<interface name="android/provider/Contacts$OrganizationColumns">
</interface>
<interface name="android/provider/Contacts$PeopleColumns">
</interface>
<interface name="android/provider/Contacts$PhonesColumns">
</interface>
<interface name="android/provider/Contacts$PhotosColumns">
</interface>
<interface name="android/provider/Contacts$PresenceColumns">
</interface>
<interface name="android/provider/Contacts$SettingsColumns">
</interface>
<interface name="android/provider/ContactsContract$BaseSyncColumns">
</interface>
<interface name="android/provider/ContactsContract$CommonDataKinds$BaseTypes">
</interface>
<interface name="android/provider/ContactsContract$ContactOptionsColumns">
</interface>
<interface name="android/provider/ContactsContract$ContactsColumns">
</interface>
<interface name="android/provider/ContactsContract$ContactStatusColumns">
</interface>
<interface name="android/provider/ContactsContract$DataColumns">
</interface>
<interface name="android/provider/ContactsContract$GroupsColumns">
</interface>
<interface name="android/provider/ContactsContract$PhoneLookupColumns">
</interface>
<interface name="android/provider/ContactsContract$PresenceColumns">
</interface>
<interface name="android/provider/ContactsContract$RawContactsColumns">
</interface>
<interface name="android/provider/ContactsContract$SettingsColumns">
</interface>
<interface name="android/provider/ContactsContract$StatusColumns">
</interface>
<interface name="android/provider/MediaStore$Audio$AlbumColumns">
</interface>
<interface name="android/provider/MediaStore$Audio$ArtistColumns">
</interface>
<interface name="android/provider/MediaStore$Audio$GenresColumns">
</interface>
<interface name="android/provider/MediaStore$Audio$PlaylistsColumns">
</interface>
<interface name="android/provider/OpenableColumns">
</interface>
<interface name="android/sax/EndElementListener">
<method name="end" type="()V"/>
</interface>
<interface name="android/sax/EndTextElementListener">
<method name="end" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="android/sax/StartElementListener">
<method name="start" type="(Lorg/xml/sax/Attributes;)V"/>
</interface>
<interface name="android/speech/RecognitionListener">
<method name="onReadyForSpeech" type="(Landroid/os/Bundle;)V"/>
<method name="onBeginningOfSpeech" type="()V"/>
<method name="onRmsChanged" type="(F)V"/>
<method name="onBufferReceived" type="([B)V"/>
<method name="onEndOfSpeech" type="()V"/>
<method name="onError" type="(I)V"/>
<method name="onResults" type="(Landroid/os/Bundle;)V"/>
<method name="onPartialResults" type="(Landroid/os/Bundle;)V"/>
<method name="onEvent" type="(ILandroid/os/Bundle;)V"/>
</interface>
<interface name="android/speech/tts/TextToSpeech$OnInitListener">
<method name="onInit" type="(I)V"/>
</interface>
<interface name="android/speech/tts/TextToSpeech$OnUtteranceCompletedListener">
<method name="onUtteranceCompleted" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="android/test/PerformanceTestCase$Intermediates">
<method name="setInternalIterations" type="(I)V"/>
<method name="startTiming" type="(Z)V"/>
<method name="addIntermediate" type="(Ljava/lang/String;)V"/>
<method name="addIntermediate" type="(Ljava/lang/String;J)V"/>
<method name="finishTiming" type="(Z)V"/>
</interface>
<interface name="android/test/PerformanceTestCase">
<method name="startPerformance" type="(Landroid/test/PerformanceTestCase$Intermediates;)I"/>
<method name="isPerformanceOnly" type="()Z"/>
</interface>
<interface name="android/test/TestSuiteProvider">
<method name="getTestSuite" type="()Ljunit/framework/TestSuite;"/>
</interface>
<interface name="android/text/Html$ImageGetter">
<method name="getDrawable" type="(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;"/>
</interface>
<interface name="android/text/Html$TagHandler">
<method name="handleTag" type="(ZLjava/lang/String;Landroid/text/Editable;Lorg/xml/sax/XMLReader;)V"/>
</interface>
<interface name="android/text/InputFilter">
<method name="filter" type="(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;"/>
</interface>
<interface name="android/text/InputType">
</interface>
<interface name="android/text/method/KeyListener">
<method name="getInputType" type="()I"/>
<method name="onKeyDown" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/view/View;Landroid/text/Editable;Landroid/view/KeyEvent;)Z"/>
<method name="clearMetaKeyState" type="(Landroid/view/View;Landroid/text/Editable;I)V"/>
</interface>
<interface name="android/text/method/MovementMethod">
<method name="initialize" type="(Landroid/widget/TextView;Landroid/text/Spannable;)V"/>
<method name="onKeyDown" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(Landroid/widget/TextView;Landroid/text/Spannable;ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyOther" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/KeyEvent;)Z"/>
<method name="onTakeFocus" type="(Landroid/widget/TextView;Landroid/text/Spannable;I)V"/>
<method name="onTrackballEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="onTouchEvent" type="(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z"/>
<method name="canSelectArbitrarily" type="()Z"/>
</interface>
<interface name="android/text/method/TransformationMethod">
<method name="getTransformation" type="(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;"/>
<method name="onFocusChanged" type="(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V"/>
</interface>
<interface name="android/text/NoCopySpan">
</interface>
<interface name="android/text/style/ParagraphStyle">
</interface>
<interface name="android/text/style/UpdateAppearance">
</interface>
<interface name="android/text/TextUtils$EllipsizeCallback">
<method name="ellipsized" type="(II)V"/>
</interface>
<interface name="android/text/util/Linkify$MatchFilter">
<method name="acceptMatch" type="(Ljava/lang/CharSequence;II)Z"/>
</interface>
<interface name="android/text/util/Linkify$TransformFilter">
<method name="transformUrl" type="(Ljava/util/regex/Matcher;Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="android/util/AttributeSet">
<method name="getAttributeCount" type="()I"/>
<method name="getAttributeName" type="(I)Ljava/lang/String;"/>
<method name="getAttributeValue" type="(I)Ljava/lang/String;"/>
<method name="getAttributeValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPositionDescription" type="()Ljava/lang/String;"/>
<method name="getAttributeNameResource" type="(I)I"/>
<method name="getAttributeListValue" type="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)I"/>
<method name="getAttributeBooleanValue" type="(Ljava/lang/String;Ljava/lang/String;Z)Z"/>
<method name="getAttributeResourceValue" type="(Ljava/lang/String;Ljava/lang/String;I)I"/>
<method name="getAttributeIntValue" type="(Ljava/lang/String;Ljava/lang/String;I)I"/>
<method name="getAttributeUnsignedIntValue" type="(Ljava/lang/String;Ljava/lang/String;I)I"/>
<method name="getAttributeFloatValue" type="(Ljava/lang/String;Ljava/lang/String;F)F"/>
<method name="getAttributeListValue" type="(I[Ljava/lang/String;I)I"/>
<method name="getAttributeBooleanValue" type="(IZ)Z"/>
<method name="getAttributeResourceValue" type="(II)I"/>
<method name="getAttributeIntValue" type="(II)I"/>
<method name="getAttributeUnsignedIntValue" type="(II)I"/>
<method name="getAttributeFloatValue" type="(IF)F"/>
<method name="getIdAttribute" type="()Ljava/lang/String;"/>
<method name="getClassAttribute" type="()Ljava/lang/String;"/>
<method name="getIdAttributeResourceValue" type="(I)I"/>
<method name="getStyleAttribute" type="()I"/>
</interface>
<interface name="android/util/Printer">
<method name="println" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="android/view/accessibility/AccessibilityEventSource">
<method name="sendAccessibilityEvent" type="(I)V"/>
<method name="sendAccessibilityEventUnchecked" type="(Landroid/view/accessibility/AccessibilityEvent;)V"/>
</interface>
<interface name="android/view/animation/Animation$AnimationListener">
<method name="onAnimationStart" type="(Landroid/view/animation/Animation;)V"/>
<method name="onAnimationEnd" type="(Landroid/view/animation/Animation;)V"/>
<method name="onAnimationRepeat" type="(Landroid/view/animation/Animation;)V"/>
</interface>
<interface name="android/view/animation/Interpolator">
<method name="getInterpolation" type="(F)F"/>
</interface>
<interface name="android/view/ContextMenu$ContextMenuInfo">
</interface>
<interface name="android/view/GestureDetector$OnDoubleTapListener">
<method name="onSingleTapConfirmed" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onDoubleTap" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onDoubleTapEvent" type="(Landroid/view/MotionEvent;)Z"/>
</interface>
<interface name="android/view/GestureDetector$OnGestureListener">
<method name="onDown" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onShowPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="onSingleTapUp" type="(Landroid/view/MotionEvent;)Z"/>
<method name="onScroll" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
<method name="onLongPress" type="(Landroid/view/MotionEvent;)V"/>
<method name="onFling" type="(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z"/>
</interface>
<interface name="android/view/inputmethod/InputConnection">
<method name="getTextBeforeCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="getTextAfterCursor" type="(II)Ljava/lang/CharSequence;"/>
<method name="getSelectedText" type="(I)Ljava/lang/CharSequence;"/>
<method name="getCursorCapsMode" type="(I)I"/>
<method name="getExtractedText" type="(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;"/>
<method name="deleteSurroundingText" type="(II)Z"/>
<method name="setComposingText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="setComposingRegion" type="(II)Z"/>
<method name="finishComposingText" type="()Z"/>
<method name="commitText" type="(Ljava/lang/CharSequence;I)Z"/>
<method name="commitCompletion" type="(Landroid/view/inputmethod/CompletionInfo;)Z"/>
<method name="setSelection" type="(II)Z"/>
<method name="performEditorAction" type="(I)Z"/>
<method name="performContextMenuAction" type="(I)Z"/>
<method name="beginBatchEdit" type="()Z"/>
<method name="endBatchEdit" type="()Z"/>
<method name="sendKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="clearMetaKeyStates" type="(I)Z"/>
<method name="reportFullscreenMode" type="(Z)Z"/>
<method name="performPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)Z"/>
</interface>
<interface name="android/view/inputmethod/InputMethod$SessionCallback">
<method name="sessionCreated" type="(Landroid/view/inputmethod/InputMethodSession;)V"/>
</interface>
<interface name="android/view/inputmethod/InputMethod">
<method name="attachToken" type="(Landroid/os/IBinder;)V"/>
<method name="bindInput" type="(Landroid/view/inputmethod/InputBinding;)V"/>
<method name="unbindInput" type="()V"/>
<method name="startInput" type="(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="restartInput" type="(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V"/>
<method name="createSession" type="(Landroid/view/inputmethod/InputMethod$SessionCallback;)V"/>
<method name="setSessionEnabled" type="(Landroid/view/inputmethod/InputMethodSession;Z)V"/>
<method name="revokeSession" type="(Landroid/view/inputmethod/InputMethodSession;)V"/>
<method name="showSoftInput" type="(ILandroid/os/ResultReceiver;)V"/>
<method name="hideSoftInput" type="(ILandroid/os/ResultReceiver;)V"/>
</interface>
<interface name="android/view/inputmethod/InputMethodSession$EventCallback">
<method name="finishedEvent" type="(IZ)V"/>
</interface>
<interface name="android/view/inputmethod/InputMethodSession">
<method name="finishInput" type="()V"/>
<method name="updateSelection" type="(IIIIII)V"/>
<method name="updateCursor" type="(Landroid/graphics/Rect;)V"/>
<method name="displayCompletions" type="([Landroid/view/inputmethod/CompletionInfo;)V"/>
<method name="updateExtractedText" type="(ILandroid/view/inputmethod/ExtractedText;)V"/>
<method name="dispatchKeyEvent" type="(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"/>
<method name="dispatchTrackballEvent" type="(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"/>
<method name="appPrivateCommand" type="(Ljava/lang/String;Landroid/os/Bundle;)V"/>
<method name="toggleSoftInput" type="(II)V"/>
</interface>
<interface name="android/view/InputQueue$Callback">
<method name="onInputQueueCreated" type="(Landroid/view/InputQueue;)V"/>
<method name="onInputQueueDestroyed" type="(Landroid/view/InputQueue;)V"/>
</interface>
<interface name="android/view/KeyEvent$Callback">
<method name="onKeyDown" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyLongPress" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyUp" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="onKeyMultiple" type="(IILandroid/view/KeyEvent;)Z"/>
</interface>
<interface name="android/view/LayoutInflater$Factory">
<method name="onCreateView" type="(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;"/>
</interface>
<interface name="android/view/LayoutInflater$Filter">
<method name="onLoadClass" type="(Ljava/lang/Class;)Z"/>
</interface>
<interface name="android/view/Menu">
<method name="add" type="(Ljava/lang/CharSequence;)Landroid/view/MenuItem;"/>
<method name="add" type="(I)Landroid/view/MenuItem;"/>
<method name="add" type="(IIILjava/lang/CharSequence;)Landroid/view/MenuItem;"/>
<method name="add" type="(IIII)Landroid/view/MenuItem;"/>
<method name="addSubMenu" type="(Ljava/lang/CharSequence;)Landroid/view/SubMenu;"/>
<method name="addSubMenu" type="(I)Landroid/view/SubMenu;"/>
<method name="addSubMenu" type="(IIILjava/lang/CharSequence;)Landroid/view/SubMenu;"/>
<method name="addSubMenu" type="(IIII)Landroid/view/SubMenu;"/>
<method name="addIntentOptions" type="(IIILandroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I[Landroid/view/MenuItem;)I"/>
<method name="removeItem" type="(I)V"/>
<method name="removeGroup" type="(I)V"/>
<method name="clear" type="()V"/>
<method name="setGroupCheckable" type="(IZZ)V"/>
<method name="setGroupVisible" type="(IZ)V"/>
<method name="setGroupEnabled" type="(IZ)V"/>
<method name="hasVisibleItems" type="()Z"/>
<method name="findItem" type="(I)Landroid/view/MenuItem;"/>
<method name="size" type="()I"/>
<method name="getItem" type="(I)Landroid/view/MenuItem;"/>
<method name="close" type="()V"/>
<method name="performShortcut" type="(ILandroid/view/KeyEvent;I)Z"/>
<method name="isShortcutKey" type="(ILandroid/view/KeyEvent;)Z"/>
<method name="performIdentifierAction" type="(II)Z"/>
<method name="setQwertyMode" type="(Z)V"/>
</interface>
<interface name="android/view/MenuItem$OnMenuItemClickListener">
<method name="onMenuItemClick" type="(Landroid/view/MenuItem;)Z"/>
</interface>
<interface name="android/view/MenuItem">
<method name="getItemId" type="()I"/>
<method name="getGroupId" type="()I"/>
<method name="getOrder" type="()I"/>
<method name="setTitle" type="(Ljava/lang/CharSequence;)Landroid/view/MenuItem;"/>
<method name="setTitle" type="(I)Landroid/view/MenuItem;"/>
<method name="getTitle" type="()Ljava/lang/CharSequence;"/>
<method name="setTitleCondensed" type="(Ljava/lang/CharSequence;)Landroid/view/MenuItem;"/>
<method name="getTitleCondensed" type="()Ljava/lang/CharSequence;"/>
<method name="setIcon" type="(Landroid/graphics/drawable/Drawable;)Landroid/view/MenuItem;"/>
<method name="setIcon" type="(I)Landroid/view/MenuItem;"/>
<method name="getIcon" type="()Landroid/graphics/drawable/Drawable;"/>
<method name="setIntent" type="(Landroid/content/Intent;)Landroid/view/MenuItem;"/>
<method name="getIntent" type="()Landroid/content/Intent;"/>
<method name="setShortcut" type="(CC)Landroid/view/MenuItem;"/>
<method name="setNumericShortcut" type="(C)Landroid/view/MenuItem;"/>
<method name="getNumericShortcut" type="()C"/>
<method name="setAlphabeticShortcut" type="(C)Landroid/view/MenuItem;"/>
<method name="getAlphabeticShortcut" type="()C"/>
<method name="setCheckable" type="(Z)Landroid/view/MenuItem;"/>
<method name="isCheckable" type="()Z"/>
<method name="setChecked" type="(Z)Landroid/view/MenuItem;"/>
<method name="isChecked" type="()Z"/>
<method name="setVisible" type="(Z)Landroid/view/MenuItem;"/>
<method name="isVisible" type="()Z"/>
<method name="setEnabled" type="(Z)Landroid/view/MenuItem;"/>
<method name="isEnabled" type="()Z"/>
<method name="hasSubMenu" type="()Z"/>
<method name="getSubMenu" type="()Landroid/view/SubMenu;"/>
<method name="setOnMenuItemClickListener" type="(Landroid/view/MenuItem$OnMenuItemClickListener;)Landroid/view/MenuItem;"/>
<method name="getMenuInfo" type="()Landroid/view/ContextMenu$ContextMenuInfo;"/>
</interface>
<interface name="android/view/ScaleGestureDetector$OnScaleGestureListener">
<method name="onScale" type="(Landroid/view/ScaleGestureDetector;)Z"/>
<method name="onScaleBegin" type="(Landroid/view/ScaleGestureDetector;)Z"/>
<method name="onScaleEnd" type="(Landroid/view/ScaleGestureDetector;)V"/>
</interface>
<interface name="android/view/SurfaceHolder$Callback">
<method name="surfaceCreated" type="(Landroid/view/SurfaceHolder;)V"/>
<method name="surfaceChanged" type="(Landroid/view/SurfaceHolder;III)V"/>
<method name="surfaceDestroyed" type="(Landroid/view/SurfaceHolder;)V"/>
</interface>
<interface name="android/view/SurfaceHolder">
<method name="addCallback" type="(Landroid/view/SurfaceHolder$Callback;)V"/>
<method name="removeCallback" type="(Landroid/view/SurfaceHolder$Callback;)V"/>
<method name="isCreating" type="()Z"/>
<method name="setType" type="(I)V"/>
<method name="setFixedSize" type="(II)V"/>
<method name="setSizeFromLayout" type="()V"/>
<method name="setFormat" type="(I)V"/>
<method name="setKeepScreenOn" type="(Z)V"/>
<method name="lockCanvas" type="()Landroid/graphics/Canvas;"/>
<method name="lockCanvas" type="(Landroid/graphics/Rect;)Landroid/graphics/Canvas;"/>
<method name="unlockCanvasAndPost" type="(Landroid/graphics/Canvas;)V"/>
<method name="getSurfaceFrame" type="()Landroid/graphics/Rect;"/>
<method name="getSurface" type="()Landroid/view/Surface;"/>
</interface>
<interface name="android/view/View$OnClickListener">
<method name="onClick" type="(Landroid/view/View;)V"/>
</interface>
<interface name="android/view/View$OnCreateContextMenuListener">
<method name="onCreateContextMenu" type="(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V"/>
</interface>
<interface name="android/view/View$OnFocusChangeListener">
<method name="onFocusChange" type="(Landroid/view/View;Z)V"/>
</interface>
<interface name="android/view/View$OnKeyListener">
<method name="onKey" type="(Landroid/view/View;ILandroid/view/KeyEvent;)Z"/>
</interface>
<interface name="android/view/View$OnLongClickListener">
<method name="onLongClick" type="(Landroid/view/View;)Z"/>
</interface>
<interface name="android/view/View$OnTouchListener">
<method name="onTouch" type="(Landroid/view/View;Landroid/view/MotionEvent;)Z"/>
</interface>
<interface name="android/view/ViewGroup$OnHierarchyChangeListener">
<method name="onChildViewAdded" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="onChildViewRemoved" type="(Landroid/view/View;Landroid/view/View;)V"/>
</interface>
<interface name="android/view/ViewManager">
<method name="addView" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="updateViewLayout" type="(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V"/>
<method name="removeView" type="(Landroid/view/View;)V"/>
</interface>
<interface name="android/view/ViewParent">
<method name="requestLayout" type="()V"/>
<method name="isLayoutRequested" type="()Z"/>
<method name="requestTransparentRegion" type="(Landroid/view/View;)V"/>
<method name="invalidateChild" type="(Landroid/view/View;Landroid/graphics/Rect;)V"/>
<method name="invalidateChildInParent" type="([ILandroid/graphics/Rect;)Landroid/view/ViewParent;"/>
<method name="getParent" type="()Landroid/view/ViewParent;"/>
<method name="requestChildFocus" type="(Landroid/view/View;Landroid/view/View;)V"/>
<method name="recomputeViewAttributes" type="(Landroid/view/View;)V"/>
<method name="clearChildFocus" type="(Landroid/view/View;)V"/>
<method name="getChildVisibleRect" type="(Landroid/view/View;Landroid/graphics/Rect;Landroid/graphics/Point;)Z"/>
<method name="focusSearch" type="(Landroid/view/View;I)Landroid/view/View;"/>
<method name="bringChildToFront" type="(Landroid/view/View;)V"/>
<method name="focusableViewAvailable" type="(Landroid/view/View;)V"/>
<method name="showContextMenuForChild" type="(Landroid/view/View;)Z"/>
<method name="createContextMenu" type="(Landroid/view/ContextMenu;)V"/>
<method name="childDrawableStateChanged" type="(Landroid/view/View;)V"/>
<method name="requestDisallowInterceptTouchEvent" type="(Z)V"/>
<method name="requestChildRectangleOnScreen" type="(Landroid/view/View;Landroid/graphics/Rect;Z)Z"/>
</interface>
<interface name="android/view/ViewStub$OnInflateListener">
<method name="onInflate" type="(Landroid/view/ViewStub;Landroid/view/View;)V"/>
</interface>
<interface name="android/view/ViewTreeObserver$OnGlobalFocusChangeListener">
<method name="onGlobalFocusChanged" type="(Landroid/view/View;Landroid/view/View;)V"/>
</interface>
<interface name="android/view/ViewTreeObserver$OnGlobalLayoutListener">
<method name="onGlobalLayout" type="()V"/>
</interface>
<interface name="android/view/ViewTreeObserver$OnPreDrawListener">
<method name="onPreDraw" type="()Z"/>
</interface>
<interface name="android/view/ViewTreeObserver$OnScrollChangedListener">
<method name="onScrollChanged" type="()V"/>
</interface>
<interface name="android/view/ViewTreeObserver$OnTouchModeChangeListener">
<method name="onTouchModeChanged" type="(Z)V"/>
</interface>
<interface name="android/view/Window$Callback">
<method name="dispatchKeyEvent" type="(Landroid/view/KeyEvent;)Z"/>
<method name="dispatchTouchEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchTrackballEvent" type="(Landroid/view/MotionEvent;)Z"/>
<method name="dispatchPopulateAccessibilityEvent" type="(Landroid/view/accessibility/AccessibilityEvent;)Z"/>
<method name="onCreatePanelView" type="(I)Landroid/view/View;"/>
<method name="onCreatePanelMenu" type="(ILandroid/view/Menu;)Z"/>
<method name="onPreparePanel" type="(ILandroid/view/View;Landroid/view/Menu;)Z"/>
<method name="onMenuOpened" type="(ILandroid/view/Menu;)Z"/>
<method name="onMenuItemSelected" type="(ILandroid/view/MenuItem;)Z"/>
<method name="onWindowAttributesChanged" type="(Landroid/view/WindowManager$LayoutParams;)V"/>
<method name="onContentChanged" type="()V"/>
<method name="onWindowFocusChanged" type="(Z)V"/>
<method name="onAttachedToWindow" type="()V"/>
<method name="onDetachedFromWindow" type="()V"/>
<method name="onPanelClosed" type="(ILandroid/view/Menu;)V"/>
<method name="onSearchRequested" type="()Z"/>
</interface>
<interface name="android/webkit/DownloadListener">
<method name="onDownloadStart" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V"/>
</interface>
<interface name="android/webkit/GeolocationPermissions$Callback">
<method name="invoke" type="(Ljava/lang/String;ZZ)V"/>
</interface>
<interface name="android/webkit/Plugin$PreferencesClickHandler">
<method name="handleClickEvent" type="(Landroid/content/Context;)V"/>
</interface>
<interface name="android/webkit/PluginStub">
<method name="getEmbeddedView" type="(ILandroid/content/Context;)Landroid/view/View;"/>
<method name="getFullScreenView" type="(ILandroid/content/Context;)Landroid/view/View;"/>
</interface>
<interface name="android/webkit/UrlInterceptHandler">
<method name="service" type="(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/CacheManager$CacheResult;"/>
<method name="getPluginData" type="(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/PluginData;"/>
</interface>
<interface name="android/webkit/ValueCallback">
<method name="onReceiveValue" type="(Ljava/lang/Object;)V"/>
</interface>
<interface name="android/webkit/WebChromeClient$CustomViewCallback">
<method name="onCustomViewHidden" type="()V"/>
</interface>
<interface name="android/webkit/WebIconDatabase$IconListener">
<method name="onReceivedIcon" type="(Ljava/lang/String;Landroid/graphics/Bitmap;)V"/>
</interface>
<interface name="android/webkit/WebStorage$QuotaUpdater">
<method name="updateQuota" type="(J)V"/>
</interface>
<interface name="android/webkit/WebView$PictureListener">
<method name="onNewPicture" type="(Landroid/webkit/WebView;Landroid/graphics/Picture;)V"/>
</interface>
<interface name="android/widget/AbsListView$OnScrollListener">
<method name="onScrollStateChanged" type="(Landroid/widget/AbsListView;I)V"/>
<method name="onScroll" type="(Landroid/widget/AbsListView;III)V"/>
</interface>
<interface name="android/widget/AbsListView$RecyclerListener">
<method name="onMovedToScrapHeap" type="(Landroid/view/View;)V"/>
</interface>
<interface name="android/widget/Adapter">
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="getCount" type="()I"/>
<method name="getItem" type="(I)Ljava/lang/Object;"/>
<method name="getItemId" type="(I)J"/>
<method name="hasStableIds" type="()Z"/>
<method name="getView" type="(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getItemViewType" type="(I)I"/>
<method name="getViewTypeCount" type="()I"/>
<method name="isEmpty" type="()Z"/>
</interface>
<interface name="android/widget/AdapterView$OnItemClickListener">
<method name="onItemClick" type="(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"/>
</interface>
<interface name="android/widget/AdapterView$OnItemLongClickListener">
<method name="onItemLongClick" type="(Landroid/widget/AdapterView;Landroid/view/View;IJ)Z"/>
</interface>
<interface name="android/widget/AdapterView$OnItemSelectedListener">
<method name="onItemSelected" type="(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"/>
<method name="onNothingSelected" type="(Landroid/widget/AdapterView;)V"/>
</interface>
<interface name="android/widget/AutoCompleteTextView$Validator">
<method name="isValid" type="(Ljava/lang/CharSequence;)Z"/>
<method name="fixText" type="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
</interface>
<interface name="android/widget/Checkable">
<method name="setChecked" type="(Z)V"/>
<method name="isChecked" type="()Z"/>
<method name="toggle" type="()V"/>
</interface>
<interface name="android/widget/Chronometer$OnChronometerTickListener">
<method name="onChronometerTick" type="(Landroid/widget/Chronometer;)V"/>
</interface>
<interface name="android/widget/CompoundButton$OnCheckedChangeListener">
<method name="onCheckedChanged" type="(Landroid/widget/CompoundButton;Z)V"/>
</interface>
<interface name="android/widget/DatePicker$OnDateChangedListener">
<method name="onDateChanged" type="(Landroid/widget/DatePicker;III)V"/>
</interface>
<interface name="android/widget/ExpandableListAdapter">
<method name="registerDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="unregisterDataSetObserver" type="(Landroid/database/DataSetObserver;)V"/>
<method name="getGroupCount" type="()I"/>
<method name="getChildrenCount" type="(I)I"/>
<method name="getGroup" type="(I)Ljava/lang/Object;"/>
<method name="getChild" type="(II)Ljava/lang/Object;"/>
<method name="getGroupId" type="(I)J"/>
<method name="getChildId" type="(II)J"/>
<method name="hasStableIds" type="()Z"/>
<method name="getGroupView" type="(IZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="getChildView" type="(IIZLandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"/>
<method name="isChildSelectable" type="(II)Z"/>
<method name="areAllItemsEnabled" type="()Z"/>
<method name="isEmpty" type="()Z"/>
<method name="onGroupExpanded" type="(I)V"/>
<method name="onGroupCollapsed" type="(I)V"/>
<method name="getCombinedChildId" type="(JJ)J"/>
<method name="getCombinedGroupId" type="(J)J"/>
</interface>
<interface name="android/widget/ExpandableListView$OnChildClickListener">
<method name="onChildClick" type="(Landroid/widget/ExpandableListView;Landroid/view/View;IIJ)Z"/>
</interface>
<interface name="android/widget/ExpandableListView$OnGroupClickListener">
<method name="onGroupClick" type="(Landroid/widget/ExpandableListView;Landroid/view/View;IJ)Z"/>
</interface>
<interface name="android/widget/ExpandableListView$OnGroupCollapseListener">
<method name="onGroupCollapse" type="(I)V"/>
</interface>
<interface name="android/widget/ExpandableListView$OnGroupExpandListener">
<method name="onGroupExpand" type="(I)V"/>
</interface>
<interface name="android/widget/Filter$FilterListener">
<method name="onFilterComplete" type="(I)V"/>
</interface>
<interface name="android/widget/Filterable">
<method name="getFilter" type="()Landroid/widget/Filter;"/>
</interface>
<interface name="android/widget/FilterQueryProvider">
<method name="runQuery" type="(Ljava/lang/CharSequence;)Landroid/database/Cursor;"/>
</interface>
<interface name="android/widget/HeterogeneousExpandableList">
<method name="getGroupType" type="(I)I"/>
<method name="getChildType" type="(II)I"/>
<method name="getGroupTypeCount" type="()I"/>
<method name="getChildTypeCount" type="()I"/>
</interface>
<interface name="android/widget/MediaController$MediaPlayerControl">
<method name="start" type="()V"/>
<method name="pause" type="()V"/>
<method name="getDuration" type="()I"/>
<method name="getCurrentPosition" type="()I"/>
<method name="seekTo" type="(I)V"/>
<method name="isPlaying" type="()Z"/>
<method name="getBufferPercentage" type="()I"/>
<method name="canPause" type="()Z"/>
<method name="canSeekBackward" type="()Z"/>
<method name="canSeekForward" type="()Z"/>
</interface>
<interface name="android/widget/MultiAutoCompleteTextView$Tokenizer">
<method name="findTokenStart" type="(Ljava/lang/CharSequence;I)I"/>
<method name="findTokenEnd" type="(Ljava/lang/CharSequence;I)I"/>
<method name="terminateToken" type="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"/>
</interface>
<interface name="android/widget/PopupWindow$OnDismissListener">
<method name="onDismiss" type="()V"/>
</interface>
<interface name="android/widget/RadioGroup$OnCheckedChangeListener">
<method name="onCheckedChanged" type="(Landroid/widget/RadioGroup;I)V"/>
</interface>
<interface name="android/widget/RatingBar$OnRatingBarChangeListener">
<method name="onRatingChanged" type="(Landroid/widget/RatingBar;FZ)V"/>
</interface>
<interface name="android/widget/SectionIndexer">
<method name="getSections" type="()[Ljava/lang/Object;"/>
<method name="getPositionForSection" type="(I)I"/>
<method name="getSectionForPosition" type="(I)I"/>
</interface>
<interface name="android/widget/SeekBar$OnSeekBarChangeListener">
<method name="onProgressChanged" type="(Landroid/widget/SeekBar;IZ)V"/>
<method name="onStartTrackingTouch" type="(Landroid/widget/SeekBar;)V"/>
<method name="onStopTrackingTouch" type="(Landroid/widget/SeekBar;)V"/>
</interface>
<interface name="android/widget/SimpleAdapter$ViewBinder">
<method name="setViewValue" type="(Landroid/view/View;Ljava/lang/Object;Ljava/lang/String;)Z"/>
</interface>
<interface name="android/widget/SimpleCursorAdapter$CursorToStringConverter">
<method name="convertToString" type="(Landroid/database/Cursor;)Ljava/lang/CharSequence;"/>
</interface>
<interface name="android/widget/SimpleCursorAdapter$ViewBinder">
<method name="setViewValue" type="(Landroid/view/View;Landroid/database/Cursor;I)Z"/>
</interface>
<interface name="android/widget/SimpleCursorTreeAdapter$ViewBinder">
<method name="setViewValue" type="(Landroid/view/View;Landroid/database/Cursor;I)Z"/>
</interface>
<interface name="android/widget/SlidingDrawer$OnDrawerCloseListener">
<method name="onDrawerClosed" type="()V"/>
</interface>
<interface name="android/widget/SlidingDrawer$OnDrawerOpenListener">
<method name="onDrawerOpened" type="()V"/>
</interface>
<interface name="android/widget/SlidingDrawer$OnDrawerScrollListener">
<method name="onScrollStarted" type="()V"/>
<method name="onScrollEnded" type="()V"/>
</interface>
<interface name="android/widget/TabHost$OnTabChangeListener">
<method name="onTabChanged" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="android/widget/TabHost$TabContentFactory">
<method name="createTabContent" type="(Ljava/lang/String;)Landroid/view/View;"/>
</interface>
<interface name="android/widget/TextView$OnEditorActionListener">
<method name="onEditorAction" type="(Landroid/widget/TextView;ILandroid/view/KeyEvent;)Z"/>
</interface>
<interface name="android/widget/TimePicker$OnTimeChangedListener">
<method name="onTimeChanged" type="(Landroid/widget/TimePicker;II)V"/>
</interface>
<interface name="android/widget/ViewSwitcher$ViewFactory">
<method name="makeView" type="()Landroid/view/View;"/>
</interface>
<interface name="android/widget/ZoomButtonsController$OnZoomListener">
<method name="onVisibilityChanged" type="(Z)V"/>
<method name="onZoom" type="(Z)V"/>
</interface>
<interface name="com/android/internal/util/Predicate">
<method name="apply" type="(Ljava/lang/Object;)Z"/>
</interface>
<interface name="dalvik/bytecode/Opcodes">
</interface>
<interface name="java/io/Closeable">
<method name="close" type="()V"/>
</interface>
<interface name="java/io/DataInput">
<method name="readBoolean" type="()Z"/>
<method name="readByte" type="()B"/>
<method name="readChar" type="()C"/>
<method name="readDouble" type="()D"/>
<method name="readFloat" type="()F"/>
<method name="readFully" type="([B)V"/>
<method name="readFully" type="([BII)V"/>
<method name="readInt" type="()I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="readLong" type="()J"/>
<method name="readShort" type="()S"/>
<method name="readUnsignedByte" type="()I"/>
<method name="readUnsignedShort" type="()I"/>
<method name="readUTF" type="()Ljava/lang/String;"/>
<method name="skipBytes" type="(I)I"/>
</interface>
<interface name="java/io/DataOutput">
<method name="write" type="([B)V"/>
<method name="write" type="([BII)V"/>
<method name="write" type="(I)V"/>
<method name="writeBoolean" type="(Z)V"/>
<method name="writeByte" type="(I)V"/>
<method name="writeBytes" type="(Ljava/lang/String;)V"/>
<method name="writeChar" type="(I)V"/>
<method name="writeChars" type="(Ljava/lang/String;)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeShort" type="(I)V"/>
<method name="writeUTF" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="java/io/FileFilter">
<method name="accept" type="(Ljava/io/File;)Z"/>
</interface>
<interface name="java/io/FilenameFilter">
<method name="accept" type="(Ljava/io/File;Ljava/lang/String;)Z"/>
</interface>
<interface name="java/io/Flushable">
<method name="flush" type="()V"/>
</interface>
<interface name="java/io/ObjectInputValidation">
<method name="validateObject" type="()V"/>
</interface>
<interface name="java/io/ObjectStreamConstants">
</interface>
<interface name="java/io/Serializable">
</interface>
<interface name="java/lang/annotation/Annotation">
<method name="annotationType" type="()Ljava/lang/Class;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</interface>
<interface name="java/lang/Appendable">
<method name="append" type="(C)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"/>
<method name="append" type="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"/>
</interface>
<interface name="java/lang/CharSequence">
<method name="length" type="()I"/>
<method name="charAt" type="(I)C"/>
<method name="subSequence" type="(II)Ljava/lang/CharSequence;"/>
<method name="toString" type="()Ljava/lang/String;"/>
</interface>
<interface name="java/lang/Cloneable">
</interface>
<interface name="java/lang/Comparable">
<method name="compareTo" type="(Ljava/lang/Object;)I"/>
</interface>
<interface name="java/lang/Iterable">
<method name="iterator" type="()Ljava/util/Iterator;"/>
</interface>
<interface name="java/lang/Readable">
<method name="read" type="(Ljava/nio/CharBuffer;)I"/>
</interface>
<interface name="java/lang/reflect/AnnotatedElement">
<method name="getAnnotation" type="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"/>
<method name="getAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="getDeclaredAnnotations" type="()[Ljava/lang/annotation/Annotation;"/>
<method name="isAnnotationPresent" type="(Ljava/lang/Class;)Z"/>
</interface>
<interface name="java/lang/reflect/GenericDeclaration">
<method name="getTypeParameters" type="()[Ljava/lang/reflect/TypeVariable;"/>
</interface>
<interface name="java/lang/reflect/InvocationHandler">
<method name="invoke" type="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;"/>
</interface>
<interface name="java/lang/reflect/Member">
<method name="getDeclaringClass" type="()Ljava/lang/Class;"/>
<method name="getModifiers" type="()I"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="isSynthetic" type="()Z"/>
</interface>
<interface name="java/lang/reflect/Type">
</interface>
<interface name="java/lang/Runnable">
<method name="run" type="()V"/>
</interface>
<interface name="java/lang/Thread$UncaughtExceptionHandler">
<method name="uncaughtException" type="(Ljava/lang/Thread;Ljava/lang/Throwable;)V"/>
</interface>
<interface name="java/net/ContentHandlerFactory">
<method name="createContentHandler" type="(Ljava/lang/String;)Ljava/net/ContentHandler;"/>
</interface>
<interface name="java/net/CookiePolicy">
<method name="shouldAccept" type="(Ljava/net/URI;Ljava/net/HttpCookie;)Z"/>
</interface>
<interface name="java/net/CookieStore">
<method name="add" type="(Ljava/net/URI;Ljava/net/HttpCookie;)V"/>
<method name="get" type="(Ljava/net/URI;)Ljava/util/List;"/>
<method name="getCookies" type="()Ljava/util/List;"/>
<method name="getURIs" type="()Ljava/util/List;"/>
<method name="remove" type="(Ljava/net/URI;Ljava/net/HttpCookie;)Z"/>
<method name="removeAll" type="()Z"/>
</interface>
<interface name="java/net/DatagramSocketImplFactory">
<method name="createDatagramSocketImpl" type="()Ljava/net/DatagramSocketImpl;"/>
</interface>
<interface name="java/net/FileNameMap">
<method name="getContentTypeFor" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="java/net/SocketImplFactory">
<method name="createSocketImpl" type="()Ljava/net/SocketImpl;"/>
</interface>
<interface name="java/net/SocketOptions">
<method name="getOption" type="(I)Ljava/lang/Object;"/>
<method name="setOption" type="(ILjava/lang/Object;)V"/>
</interface>
<interface name="java/net/URLStreamHandlerFactory">
<method name="createURLStreamHandler" type="(Ljava/lang/String;)Ljava/net/URLStreamHandler;"/>
</interface>
<interface name="java/security/acl/Owner">
<method name="addOwner" type="(Ljava/security/Principal;Ljava/security/Principal;)Z"/>
<method name="deleteOwner" type="(Ljava/security/Principal;Ljava/security/Principal;)Z"/>
<method name="isOwner" type="(Ljava/security/Principal;)Z"/>
</interface>
<interface name="java/security/acl/Permission">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="toString" type="()Ljava/lang/String;"/>
</interface>
<interface name="java/security/cert/PolicyNode">
<method name="getChildren" type="()Ljava/util/Iterator;"/>
<method name="getDepth" type="()I"/>
<method name="getExpectedPolicies" type="()Ljava/util/Set;"/>
<method name="getParent" type="()Ljava/security/cert/PolicyNode;"/>
<method name="getPolicyQualifiers" type="()Ljava/util/Set;"/>
<method name="getValidPolicy" type="()Ljava/lang/String;"/>
<method name="isCritical" type="()Z"/>
</interface>
<interface name="java/security/cert/X509Extension">
<method name="getCriticalExtensionOIDs" type="()Ljava/util/Set;"/>
<method name="getExtensionValue" type="(Ljava/lang/String;)[B"/>
<method name="getNonCriticalExtensionOIDs" type="()Ljava/util/Set;"/>
<method name="hasUnsupportedCriticalExtension" type="()Z"/>
</interface>
<interface name="java/security/Certificate">
<method name="decode" type="(Ljava/io/InputStream;)V"/>
<method name="encode" type="(Ljava/io/OutputStream;)V"/>
<method name="getFormat" type="()Ljava/lang/String;"/>
<method name="getGuarantor" type="()Ljava/security/Principal;"/>
<method name="getPrincipal" type="()Ljava/security/Principal;"/>
<method name="getPublicKey" type="()Ljava/security/PublicKey;"/>
<method name="toString" type="(Z)Ljava/lang/String;"/>
</interface>
<interface name="java/security/DomainCombiner">
<method name="combine" type="([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;"/>
</interface>
<interface name="java/security/Guard">
<method name="checkGuard" type="(Ljava/lang/Object;)V"/>
</interface>
<interface name="java/security/interfaces/DSAKey">
<method name="getParams" type="()Ljava/security/interfaces/DSAParams;"/>
</interface>
<interface name="java/security/interfaces/DSAKeyPairGenerator">
<method name="initialize" type="(Ljava/security/interfaces/DSAParams;Ljava/security/SecureRandom;)V"/>
<method name="initialize" type="(IZLjava/security/SecureRandom;)V"/>
</interface>
<interface name="java/security/interfaces/DSAParams">
<method name="getG" type="()Ljava/math/BigInteger;"/>
<method name="getP" type="()Ljava/math/BigInteger;"/>
<method name="getQ" type="()Ljava/math/BigInteger;"/>
</interface>
<interface name="java/security/interfaces/ECKey">
<method name="getParams" type="()Ljava/security/spec/ECParameterSpec;"/>
</interface>
<interface name="java/security/interfaces/RSAKey">
<method name="getModulus" type="()Ljava/math/BigInteger;"/>
</interface>
<interface name="java/security/KeyStore$Entry">
</interface>
<interface name="java/security/KeyStore$LoadStoreParameter">
<method name="getProtectionParameter" type="()Ljava/security/KeyStore$ProtectionParameter;"/>
</interface>
<interface name="java/security/KeyStore$ProtectionParameter">
</interface>
<interface name="java/security/Policy$Parameters">
</interface>
<interface name="java/security/Principal">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
<method name="toString" type="()Ljava/lang/String;"/>
</interface>
<interface name="java/security/PrivilegedAction">
<method name="run" type="()Ljava/lang/Object;"/>
</interface>
<interface name="java/security/PrivilegedExceptionAction">
<method name="run" type="()Ljava/lang/Object;"/>
</interface>
<interface name="java/security/spec/AlgorithmParameterSpec">
</interface>
<interface name="java/security/spec/ECField">
<method name="getFieldSize" type="()I"/>
</interface>
<interface name="java/security/spec/KeySpec">
</interface>
<interface name="java/sql/Array">
<method name="getArray" type="()Ljava/lang/Object;"/>
<method name="getArray" type="(JI)Ljava/lang/Object;"/>
<method name="getArray" type="(JILjava/util/Map;)Ljava/lang/Object;"/>
<method name="getArray" type="(Ljava/util/Map;)Ljava/lang/Object;"/>
<method name="getBaseType" type="()I"/>
<method name="getBaseTypeName" type="()Ljava/lang/String;"/>
<method name="getResultSet" type="()Ljava/sql/ResultSet;"/>
<method name="getResultSet" type="(JI)Ljava/sql/ResultSet;"/>
<method name="getResultSet" type="(JILjava/util/Map;)Ljava/sql/ResultSet;"/>
<method name="getResultSet" type="(Ljava/util/Map;)Ljava/sql/ResultSet;"/>
<method name="free" type="()V"/>
</interface>
<interface name="java/sql/Blob">
<method name="getBinaryStream" type="()Ljava/io/InputStream;"/>
<method name="getBinaryStream" type="(JJ)Ljava/io/InputStream;"/>
<method name="getBytes" type="(JI)[B"/>
<method name="length" type="()J"/>
<method name="position" type="(Ljava/sql/Blob;J)J"/>
<method name="position" type="([BJ)J"/>
<method name="setBinaryStream" type="(J)Ljava/io/OutputStream;"/>
<method name="setBytes" type="(J[B)I"/>
<method name="setBytes" type="(J[BII)I"/>
<method name="truncate" type="(J)V"/>
<method name="free" type="()V"/>
</interface>
<interface name="java/sql/Clob">
<method name="getAsciiStream" type="()Ljava/io/InputStream;"/>
<method name="getCharacterStream" type="()Ljava/io/Reader;"/>
<method name="getSubString" type="(JI)Ljava/lang/String;"/>
<method name="length" type="()J"/>
<method name="position" type="(Ljava/sql/Clob;J)J"/>
<method name="position" type="(Ljava/lang/String;J)J"/>
<method name="setAsciiStream" type="(J)Ljava/io/OutputStream;"/>
<method name="setCharacterStream" type="(J)Ljava/io/Writer;"/>
<method name="setString" type="(JLjava/lang/String;)I"/>
<method name="setString" type="(JLjava/lang/String;II)I"/>
<method name="truncate" type="(J)V"/>
<method name="free" type="()V"/>
<method name="getCharacterStream" type="(JJ)Ljava/io/Reader;"/>
</interface>
<interface name="java/sql/Driver">
<method name="acceptsURL" type="(Ljava/lang/String;)Z"/>
<method name="connect" type="(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;"/>
<method name="getMajorVersion" type="()I"/>
<method name="getMinorVersion" type="()I"/>
<method name="getPropertyInfo" type="(Ljava/lang/String;Ljava/util/Properties;)[Ljava/sql/DriverPropertyInfo;"/>
<method name="jdbcCompliant" type="()Z"/>
</interface>
<interface name="java/sql/Ref">
<method name="getBaseTypeName" type="()Ljava/lang/String;"/>
<method name="getObject" type="()Ljava/lang/Object;"/>
<method name="getObject" type="(Ljava/util/Map;)Ljava/lang/Object;"/>
<method name="setObject" type="(Ljava/lang/Object;)V"/>
</interface>
<interface name="java/sql/RowId">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getBytes" type="()[B"/>
<method name="toString" type="()Ljava/lang/String;"/>
<method name="hashCode" type="()I"/>
</interface>
<interface name="java/sql/Savepoint">
<method name="getSavepointId" type="()I"/>
<method name="getSavepointName" type="()Ljava/lang/String;"/>
</interface>
<interface name="java/sql/SQLData">
<method name="getSQLTypeName" type="()Ljava/lang/String;"/>
<method name="readSQL" type="(Ljava/sql/SQLInput;Ljava/lang/String;)V"/>
<method name="writeSQL" type="(Ljava/sql/SQLOutput;)V"/>
</interface>
<interface name="java/sql/SQLInput">
<method name="readString" type="()Ljava/lang/String;"/>
<method name="readBoolean" type="()Z"/>
<method name="readByte" type="()B"/>
<method name="readShort" type="()S"/>
<method name="readInt" type="()I"/>
<method name="readLong" type="()J"/>
<method name="readFloat" type="()F"/>
<method name="readDouble" type="()D"/>
<method name="readBigDecimal" type="()Ljava/math/BigDecimal;"/>
<method name="readBytes" type="()[B"/>
<method name="readDate" type="()Ljava/sql/Date;"/>
<method name="readTime" type="()Ljava/sql/Time;"/>
<method name="readTimestamp" type="()Ljava/sql/Timestamp;"/>
<method name="readCharacterStream" type="()Ljava/io/Reader;"/>
<method name="readAsciiStream" type="()Ljava/io/InputStream;"/>
<method name="readBinaryStream" type="()Ljava/io/InputStream;"/>
<method name="readObject" type="()Ljava/lang/Object;"/>
<method name="readRef" type="()Ljava/sql/Ref;"/>
<method name="readBlob" type="()Ljava/sql/Blob;"/>
<method name="readClob" type="()Ljava/sql/Clob;"/>
<method name="readArray" type="()Ljava/sql/Array;"/>
<method name="wasNull" type="()Z"/>
<method name="readURL" type="()Ljava/net/URL;"/>
<method name="readNClob" type="()Ljava/sql/NClob;"/>
<method name="readNString" type="()Ljava/lang/String;"/>
<method name="readSQLXML" type="()Ljava/sql/SQLXML;"/>
<method name="readRowId" type="()Ljava/sql/RowId;"/>
</interface>
<interface name="java/sql/SQLOutput">
<method name="writeString" type="(Ljava/lang/String;)V"/>
<method name="writeBoolean" type="(Z)V"/>
<method name="writeByte" type="(B)V"/>
<method name="writeShort" type="(S)V"/>
<method name="writeInt" type="(I)V"/>
<method name="writeLong" type="(J)V"/>
<method name="writeFloat" type="(F)V"/>
<method name="writeDouble" type="(D)V"/>
<method name="writeBigDecimal" type="(Ljava/math/BigDecimal;)V"/>
<method name="writeBytes" type="([B)V"/>
<method name="writeDate" type="(Ljava/sql/Date;)V"/>
<method name="writeTime" type="(Ljava/sql/Time;)V"/>
<method name="writeTimestamp" type="(Ljava/sql/Timestamp;)V"/>
<method name="writeCharacterStream" type="(Ljava/io/Reader;)V"/>
<method name="writeAsciiStream" type="(Ljava/io/InputStream;)V"/>
<method name="writeBinaryStream" type="(Ljava/io/InputStream;)V"/>
<method name="writeObject" type="(Ljava/sql/SQLData;)V"/>
<method name="writeRef" type="(Ljava/sql/Ref;)V"/>
<method name="writeBlob" type="(Ljava/sql/Blob;)V"/>
<method name="writeClob" type="(Ljava/sql/Clob;)V"/>
<method name="writeStruct" type="(Ljava/sql/Struct;)V"/>
<method name="writeArray" type="(Ljava/sql/Array;)V"/>
<method name="writeURL" type="(Ljava/net/URL;)V"/>
<method name="writeNString" type="(Ljava/lang/String;)V"/>
<method name="writeNClob" type="(Ljava/sql/NClob;)V"/>
<method name="writeRowId" type="(Ljava/sql/RowId;)V"/>
<method name="writeSQLXML" type="(Ljava/sql/SQLXML;)V"/>
</interface>
<interface name="java/sql/SQLXML">
<method name="free" type="()V"/>
<method name="getBinaryStream" type="()Ljava/io/InputStream;"/>
<method name="setBinaryStream" type="()Ljava/io/OutputStream;"/>
<method name="getCharacterStream" type="()Ljava/io/Reader;"/>
<method name="setCharacterStream" type="()Ljava/io/Writer;"/>
<method name="getString" type="()Ljava/lang/String;"/>
<method name="setString" type="(Ljava/lang/String;)V"/>
<method name="getSource" type="(Ljava/lang/Class;)Ljavax/xml/transform/Source;"/>
<method name="setResult" type="(Ljava/lang/Class;)Ljavax/xml/transform/Result;"/>
</interface>
<interface name="java/sql/Struct">
<method name="getSQLTypeName" type="()Ljava/lang/String;"/>
<method name="getAttributes" type="()[Ljava/lang/Object;"/>
<method name="getAttributes" type="(Ljava/util/Map;)[Ljava/lang/Object;"/>
</interface>
<interface name="java/sql/Wrapper">
<method name="unwrap" type="(Ljava/lang/Class;)Ljava/lang/Object;"/>
<method name="isWrapperFor" type="(Ljava/lang/Class;)Z"/>
</interface>
<interface name="java/util/Comparator">
<method name="compare" type="(Ljava/lang/Object;Ljava/lang/Object;)I"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
</interface>
<interface name="java/util/concurrent/Callable">
<method name="call" type="()Ljava/lang/Object;"/>
</interface>
<interface name="java/util/concurrent/CompletionService">
<method name="submit" type="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"/>
<method name="submit" type="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;"/>
<method name="take" type="()Ljava/util/concurrent/Future;"/>
<method name="poll" type="()Ljava/util/concurrent/Future;"/>
<method name="poll" type="(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;"/>
</interface>
<interface name="java/util/concurrent/Executor">
<method name="execute" type="(Ljava/lang/Runnable;)V"/>
</interface>
<interface name="java/util/concurrent/Future">
<method name="cancel" type="(Z)Z"/>
<method name="isCancelled" type="()Z"/>
<method name="isDone" type="()Z"/>
<method name="get" type="()Ljava/lang/Object;"/>
<method name="get" type="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"/>
</interface>
<interface name="java/util/concurrent/locks/Condition">
<method name="await" type="()V"/>
<method name="awaitUninterruptibly" type="()V"/>
<method name="awaitNanos" type="(J)J"/>
<method name="await" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="awaitUntil" type="(Ljava/util/Date;)Z"/>
<method name="signal" type="()V"/>
<method name="signalAll" type="()V"/>
</interface>
<interface name="java/util/concurrent/locks/Lock">
<method name="lock" type="()V"/>
<method name="lockInterruptibly" type="()V"/>
<method name="tryLock" type="()Z"/>
<method name="tryLock" type="(JLjava/util/concurrent/TimeUnit;)Z"/>
<method name="unlock" type="()V"/>
<method name="newCondition" type="()Ljava/util/concurrent/locks/Condition;"/>
</interface>
<interface name="java/util/concurrent/locks/ReadWriteLock">
<method name="readLock" type="()Ljava/util/concurrent/locks/Lock;"/>
<method name="writeLock" type="()Ljava/util/concurrent/locks/Lock;"/>
</interface>
<interface name="java/util/concurrent/RejectedExecutionHandler">
<method name="rejectedExecution" type="(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"/>
</interface>
<interface name="java/util/concurrent/ThreadFactory">
<method name="newThread" type="(Ljava/lang/Runnable;)Ljava/lang/Thread;"/>
</interface>
<interface name="java/util/Enumeration">
<method name="hasMoreElements" type="()Z"/>
<method name="nextElement" type="()Ljava/lang/Object;"/>
</interface>
<interface name="java/util/EventListener">
</interface>
<interface name="java/util/Formattable">
<method name="formatTo" type="(Ljava/util/Formatter;III)V"/>
</interface>
<interface name="java/util/Iterator">
<method name="hasNext" type="()Z"/>
<method name="next" type="()Ljava/lang/Object;"/>
<method name="remove" type="()V"/>
</interface>
<interface name="java/util/jar/Pack200$Packer">
<method name="properties" type="()Ljava/util/SortedMap;"/>
<method name="pack" type="(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V"/>
<method name="pack" type="(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V"/>
<method name="addPropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
<method name="removePropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
</interface>
<interface name="java/util/jar/Pack200$Unpacker">
<method name="properties" type="()Ljava/util/SortedMap;"/>
<method name="unpack" type="(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V"/>
<method name="unpack" type="(Ljava/io/File;Ljava/util/jar/JarOutputStream;)V"/>
<method name="addPropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
<method name="removePropertyChangeListener" type="(Ljava/beans/PropertyChangeListener;)V"/>
</interface>
<interface name="java/util/logging/Filter">
<method name="isLoggable" type="(Ljava/util/logging/LogRecord;)Z"/>
</interface>
<interface name="java/util/logging/LoggingMXBean">
<method name="getLoggerLevel" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getLoggerNames" type="()Ljava/util/List;"/>
<method name="getParentLoggerName" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="setLoggerLevel" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</interface>
<interface name="java/util/Map$Entry">
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="getKey" type="()Ljava/lang/Object;"/>
<method name="getValue" type="()Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="setValue" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
</interface>
<interface name="java/util/Map">
<method name="clear" type="()V"/>
<method name="containsKey" type="(Ljava/lang/Object;)Z"/>
<method name="containsValue" type="(Ljava/lang/Object;)Z"/>
<method name="entrySet" type="()Ljava/util/Set;"/>
<method name="equals" type="(Ljava/lang/Object;)Z"/>
<method name="get" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="hashCode" type="()I"/>
<method name="isEmpty" type="()Z"/>
<method name="keySet" type="()Ljava/util/Set;"/>
<method name="put" type="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="putAll" type="(Ljava/util/Map;)V"/>
<method name="remove" type="(Ljava/lang/Object;)Ljava/lang/Object;"/>
<method name="size" type="()I"/>
<method name="values" type="()Ljava/util/Collection;"/>
</interface>
<interface name="java/util/Observer">
<method name="update" type="(Ljava/util/Observable;Ljava/lang/Object;)V"/>
</interface>
<interface name="java/util/prefs/PreferencesFactory">
<method name="userRoot" type="()Ljava/util/prefs/Preferences;"/>
<method name="systemRoot" type="()Ljava/util/prefs/Preferences;"/>
</interface>
<interface name="java/util/RandomAccess">
</interface>
<interface name="java/util/regex/MatchResult">
<method name="end" type="()I"/>
<method name="end" type="(I)I"/>
<method name="group" type="()Ljava/lang/String;"/>
<method name="group" type="(I)Ljava/lang/String;"/>
<method name="groupCount" type="()I"/>
<method name="start" type="()I"/>
<method name="start" type="(I)I"/>
</interface>
<interface name="java/util/zip/Checksum">
<method name="getValue" type="()J"/>
<method name="reset" type="()V"/>
<method name="update" type="([BII)V"/>
<method name="update" type="(I)V"/>
</interface>
<interface name="javax/crypto/interfaces/DHKey">
<method name="getParams" type="()Ljavax/crypto/spec/DHParameterSpec;"/>
</interface>
<interface name="javax/microedition/khronos/egl/EGL">
</interface>
<interface name="javax/microedition/khronos/opengles/GL">
</interface>
<interface name="javax/net/ssl/HostnameVerifier">
<method name="verify" type="(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"/>
</interface>
<interface name="javax/net/ssl/KeyManager">
</interface>
<interface name="javax/net/ssl/ManagerFactoryParameters">
</interface>
<interface name="javax/net/ssl/SSLSession">
<method name="getApplicationBufferSize" type="()I"/>
<method name="getCipherSuite" type="()Ljava/lang/String;"/>
<method name="getCreationTime" type="()J"/>
<method name="getId" type="()[B"/>
<method name="getLastAccessedTime" type="()J"/>
<method name="getLocalCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getLocalPrincipal" type="()Ljava/security/Principal;"/>
<method name="getPacketBufferSize" type="()I"/>
<method name="getPeerCertificateChain" type="()[Ljavax/security/cert/X509Certificate;"/>
<method name="getPeerCertificates" type="()[Ljava/security/cert/Certificate;"/>
<method name="getPeerHost" type="()Ljava/lang/String;"/>
<method name="getPeerPort" type="()I"/>
<method name="getPeerPrincipal" type="()Ljava/security/Principal;"/>
<method name="getProtocol" type="()Ljava/lang/String;"/>
<method name="getSessionContext" type="()Ljavax/net/ssl/SSLSessionContext;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="getValueNames" type="()[Ljava/lang/String;"/>
<method name="invalidate" type="()V"/>
<method name="isValid" type="()Z"/>
<method name="putValue" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="removeValue" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="javax/net/ssl/SSLSessionContext">
<method name="getIds" type="()Ljava/util/Enumeration;"/>
<method name="getSession" type="([B)Ljavax/net/ssl/SSLSession;"/>
<method name="getSessionCacheSize" type="()I"/>
<method name="getSessionTimeout" type="()I"/>
<method name="setSessionCacheSize" type="(I)V"/>
<method name="setSessionTimeout" type="(I)V"/>
</interface>
<interface name="javax/net/ssl/TrustManager">
</interface>
<interface name="javax/security/auth/callback/Callback">
</interface>
<interface name="javax/security/auth/callback/CallbackHandler">
<method name="handle" type="([Ljavax/security/auth/callback/Callback;)V"/>
</interface>
<interface name="javax/security/auth/Destroyable">
<method name="destroy" type="()V"/>
<method name="isDestroyed" type="()Z"/>
</interface>
<interface name="javax/sql/CommonDataSource">
<method name="getLoginTimeout" type="()I"/>
<method name="getLogWriter" type="()Ljava/io/PrintWriter;"/>
<method name="setLoginTimeout" type="(I)V"/>
<method name="setLogWriter" type="(Ljava/io/PrintWriter;)V"/>
</interface>
<interface name="javax/sql/PooledConnection">
<method name="addConnectionEventListener" type="(Ljavax/sql/ConnectionEventListener;)V"/>
<method name="close" type="()V"/>
<method name="getConnection" type="()Ljava/sql/Connection;"/>
<method name="removeConnectionEventListener" type="(Ljavax/sql/ConnectionEventListener;)V"/>
<method name="addStatementEventListener" type="(Ljavax/sql/StatementEventListener;)V"/>
<method name="removeStatementEventListener" type="(Ljavax/sql/StatementEventListener;)V"/>
</interface>
<interface name="javax/sql/RowSetInternal">
<method name="getConnection" type="()Ljava/sql/Connection;"/>
<method name="getOriginal" type="()Ljava/sql/ResultSet;"/>
<method name="getOriginalRow" type="()Ljava/sql/ResultSet;"/>
<method name="getParams" type="()[Ljava/lang/Object;"/>
<method name="setMetaData" type="(Ljavax/sql/RowSetMetaData;)V"/>
</interface>
<interface name="javax/sql/RowSetReader">
<method name="readData" type="(Ljavax/sql/RowSetInternal;)V"/>
</interface>
<interface name="javax/sql/RowSetWriter">
<method name="writeData" type="(Ljavax/sql/RowSetInternal;)Z"/>
</interface>
<interface name="javax/xml/namespace/NamespaceContext">
<method name="getNamespaceURI" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPrefix" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getPrefixes" type="(Ljava/lang/String;)Ljava/util/Iterator;"/>
</interface>
<interface name="javax/xml/transform/ErrorListener">
<method name="warning" type="(Ljavax/xml/transform/TransformerException;)V"/>
<method name="error" type="(Ljavax/xml/transform/TransformerException;)V"/>
<method name="fatalError" type="(Ljavax/xml/transform/TransformerException;)V"/>
</interface>
<interface name="javax/xml/transform/Result">
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</interface>
<interface name="javax/xml/transform/Source">
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
</interface>
<interface name="javax/xml/transform/SourceLocator">
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
</interface>
<interface name="javax/xml/transform/Templates">
<method name="newTransformer" type="()Ljavax/xml/transform/Transformer;"/>
<method name="getOutputProperties" type="()Ljava/util/Properties;"/>
</interface>
<interface name="javax/xml/transform/URIResolver">
<method name="resolve" type="(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;"/>
</interface>
<interface name="javax/xml/xpath/XPath">
<method name="reset" type="()V"/>
<method name="setXPathVariableResolver" type="(Ljavax/xml/xpath/XPathVariableResolver;)V"/>
<method name="getXPathVariableResolver" type="()Ljavax/xml/xpath/XPathVariableResolver;"/>
<method name="setXPathFunctionResolver" type="(Ljavax/xml/xpath/XPathFunctionResolver;)V"/>
<method name="getXPathFunctionResolver" type="()Ljavax/xml/xpath/XPathFunctionResolver;"/>
<method name="setNamespaceContext" type="(Ljavax/xml/namespace/NamespaceContext;)V"/>
<method name="getNamespaceContext" type="()Ljavax/xml/namespace/NamespaceContext;"/>
<method name="compile" type="(Ljava/lang/String;)Ljavax/xml/xpath/XPathExpression;"/>
<method name="evaluate" type="(Ljava/lang/String;Ljava/lang/Object;Ljavax/xml/namespace/QName;)Ljava/lang/Object;"/>
<method name="evaluate" type="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="evaluate" type="(Ljava/lang/String;Lorg/xml/sax/InputSource;Ljavax/xml/namespace/QName;)Ljava/lang/Object;"/>
<method name="evaluate" type="(Ljava/lang/String;Lorg/xml/sax/InputSource;)Ljava/lang/String;"/>
</interface>
<interface name="javax/xml/xpath/XPathExpression">
<method name="evaluate" type="(Ljava/lang/Object;Ljavax/xml/namespace/QName;)Ljava/lang/Object;"/>
<method name="evaluate" type="(Ljava/lang/Object;)Ljava/lang/String;"/>
<method name="evaluate" type="(Lorg/xml/sax/InputSource;Ljavax/xml/namespace/QName;)Ljava/lang/Object;"/>
<method name="evaluate" type="(Lorg/xml/sax/InputSource;)Ljava/lang/String;"/>
</interface>
<interface name="javax/xml/xpath/XPathFunction">
<method name="evaluate" type="(Ljava/util/List;)Ljava/lang/Object;"/>
</interface>
<interface name="javax/xml/xpath/XPathFunctionResolver">
<method name="resolveFunction" type="(Ljavax/xml/namespace/QName;I)Ljavax/xml/xpath/XPathFunction;"/>
</interface>
<interface name="javax/xml/xpath/XPathVariableResolver">
<method name="resolveVariable" type="(Ljavax/xml/namespace/QName;)Ljava/lang/Object;"/>
</interface>
<interface name="junit/framework/Protectable">
<method name="protect" type="()V"/>
</interface>
<interface name="junit/framework/Test">
<method name="countTestCases" type="()I"/>
<method name="run" type="(Ljunit/framework/TestResult;)V"/>
</interface>
<interface name="junit/framework/TestListener">
<method name="addError" type="(Ljunit/framework/Test;Ljava/lang/Throwable;)V"/>
<method name="addFailure" type="(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"/>
<method name="endTest" type="(Ljunit/framework/Test;)V"/>
<method name="startTest" type="(Ljunit/framework/Test;)V"/>
</interface>
<interface name="junit/runner/TestSuiteLoader">
<method name="load" type="(Ljava/lang/String;)Ljava/lang/Class;"/>
<method name="reload" type="(Ljava/lang/Class;)Ljava/lang/Class;"/>
</interface>
<interface name="org/apache/commons/logging/Log">
<method name="isDebugEnabled" type="()Z"/>
<method name="isErrorEnabled" type="()Z"/>
<method name="isFatalEnabled" type="()Z"/>
<method name="isInfoEnabled" type="()Z"/>
<method name="isTraceEnabled" type="()Z"/>
<method name="isWarnEnabled" type="()Z"/>
<method name="trace" type="(Ljava/lang/Object;)V"/>
<method name="trace" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
<method name="debug" type="(Ljava/lang/Object;)V"/>
<method name="debug" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
<method name="info" type="(Ljava/lang/Object;)V"/>
<method name="info" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
<method name="warn" type="(Ljava/lang/Object;)V"/>
<method name="warn" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
<method name="error" type="(Ljava/lang/Object;)V"/>
<method name="error" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
<method name="fatal" type="(Ljava/lang/Object;)V"/>
<method name="fatal" type="(Ljava/lang/Object;Ljava/lang/Throwable;)V"/>
</interface>
<interface name="org/apache/http/auth/AuthScheme">
<method name="processChallenge" type="(Lorg/apache/http/Header;)V"/>
<method name="getSchemeName" type="()Ljava/lang/String;"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getRealm" type="()Ljava/lang/String;"/>
<method name="isConnectionBased" type="()Z"/>
<method name="isComplete" type="()Z"/>
<method name="authenticate" type="(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;"/>
</interface>
<interface name="org/apache/http/auth/AuthSchemeFactory">
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;"/>
</interface>
<interface name="org/apache/http/auth/Credentials">
<method name="getUserPrincipal" type="()Ljava/security/Principal;"/>
<method name="getPassword" type="()Ljava/lang/String;"/>
</interface>
<interface name="org/apache/http/auth/params/AuthPNames">
</interface>
<interface name="org/apache/http/client/AuthenticationHandler">
<method name="isAuthenticationRequested" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="getChallenges" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;"/>
<method name="selectScheme" type="(Ljava/util/Map;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/auth/AuthScheme;"/>
</interface>
<interface name="org/apache/http/client/CookieStore">
<method name="addCookie" type="(Lorg/apache/http/cookie/Cookie;)V"/>
<method name="getCookies" type="()Ljava/util/List;"/>
<method name="clearExpired" type="(Ljava/util/Date;)Z"/>
<method name="clear" type="()V"/>
</interface>
<interface name="org/apache/http/client/CredentialsProvider">
<method name="setCredentials" type="(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V"/>
<method name="getCredentials" type="(Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;"/>
<method name="clear" type="()V"/>
</interface>
<interface name="org/apache/http/client/HttpClient">
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="getConnectionManager" type="()Lorg/apache/http/conn/ClientConnectionManager;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;"/>
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
</interface>
<interface name="org/apache/http/client/HttpRequestRetryHandler">
<method name="retryRequest" type="(Ljava/io/IOException;ILorg/apache/http/protocol/HttpContext;)Z"/>
</interface>
<interface name="org/apache/http/client/methods/AbortableHttpRequest">
<method name="setConnectionRequest" type="(Lorg/apache/http/conn/ClientConnectionRequest;)V"/>
<method name="setReleaseTrigger" type="(Lorg/apache/http/conn/ConnectionReleaseTrigger;)V"/>
<method name="abort" type="()V"/>
</interface>
<interface name="org/apache/http/client/params/ClientPNames">
</interface>
<interface name="org/apache/http/client/protocol/ClientContext">
</interface>
<interface name="org/apache/http/client/RedirectHandler">
<method name="isRedirectRequested" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
<method name="getLocationURI" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/net/URI;"/>
</interface>
<interface name="org/apache/http/client/RequestDirector">
<method name="execute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
</interface>
<interface name="org/apache/http/client/ResponseHandler">
<method name="handleResponse" type="(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;"/>
</interface>
<interface name="org/apache/http/client/UserTokenHandler">
<method name="getUserToken" type="(Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;"/>
</interface>
<interface name="org/apache/http/conn/ClientConnectionManager">
<method name="getSchemeRegistry" type="()Lorg/apache/http/conn/scheme/SchemeRegistry;"/>
<method name="requestConnection" type="(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;"/>
<method name="releaseConnection" type="(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V"/>
<method name="closeIdleConnections" type="(JLjava/util/concurrent/TimeUnit;)V"/>
<method name="closeExpiredConnections" type="()V"/>
<method name="shutdown" type="()V"/>
</interface>
<interface name="org/apache/http/conn/ClientConnectionManagerFactory">
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionManager;"/>
</interface>
<interface name="org/apache/http/conn/ClientConnectionOperator">
<method name="createConnection" type="()Lorg/apache/http/conn/OperatedClientConnection;"/>
<method name="openConnection" type="(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
<method name="updateSecureConnection" type="(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V"/>
</interface>
<interface name="org/apache/http/conn/ClientConnectionRequest">
<method name="getConnection" type="(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;"/>
<method name="abortRequest" type="()V"/>
</interface>
<interface name="org/apache/http/conn/ConnectionKeepAliveStrategy">
<method name="getKeepAliveDuration" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)J"/>
</interface>
<interface name="org/apache/http/conn/ConnectionReleaseTrigger">
<method name="releaseConnection" type="()V"/>
<method name="abortConnection" type="()V"/>
</interface>
<interface name="org/apache/http/conn/EofSensorWatcher">
<method name="eofDetected" type="(Ljava/io/InputStream;)Z"/>
<method name="streamClosed" type="(Ljava/io/InputStream;)Z"/>
<method name="streamAbort" type="(Ljava/io/InputStream;)Z"/>
</interface>
<interface name="org/apache/http/conn/params/ConnConnectionPNames">
</interface>
<interface name="org/apache/http/conn/params/ConnManagerPNames">
</interface>
<interface name="org/apache/http/conn/params/ConnPerRoute">
<method name="getMaxForRoute" type="(Lorg/apache/http/conn/routing/HttpRoute;)I"/>
</interface>
<interface name="org/apache/http/conn/params/ConnRoutePNames">
</interface>
<interface name="org/apache/http/conn/routing/HttpRouteDirector">
<method name="nextStep" type="(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I"/>
</interface>
<interface name="org/apache/http/conn/routing/HttpRoutePlanner">
<method name="determineRoute" type="(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;"/>
</interface>
<interface name="org/apache/http/conn/routing/RouteInfo">
<method name="getTargetHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="getLocalAddress" type="()Ljava/net/InetAddress;"/>
<method name="getHopCount" type="()I"/>
<method name="getHopTarget" type="(I)Lorg/apache/http/HttpHost;"/>
<method name="getProxyHost" type="()Lorg/apache/http/HttpHost;"/>
<method name="getTunnelType" type="()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;"/>
<method name="isTunnelled" type="()Z"/>
<method name="getLayerType" type="()Lorg/apache/http/conn/routing/RouteInfo$LayerType;"/>
<method name="isLayered" type="()Z"/>
<method name="isSecure" type="()Z"/>
</interface>
<interface name="org/apache/http/conn/scheme/HostNameResolver">
<method name="resolve" type="(Ljava/lang/String;)Ljava/net/InetAddress;"/>
</interface>
<interface name="org/apache/http/conn/scheme/SocketFactory">
<method name="createSocket" type="()Ljava/net/Socket;"/>
<method name="connectSocket" type="(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;"/>
<method name="isSecure" type="(Ljava/net/Socket;)Z"/>
</interface>
<interface name="org/apache/http/ConnectionReuseStrategy">
<method name="keepAlive" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z"/>
</interface>
<interface name="org/apache/http/cookie/Cookie">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getComment" type="()Ljava/lang/String;"/>
<method name="getCommentURL" type="()Ljava/lang/String;"/>
<method name="getExpiryDate" type="()Ljava/util/Date;"/>
<method name="isPersistent" type="()Z"/>
<method name="getDomain" type="()Ljava/lang/String;"/>
<method name="getPath" type="()Ljava/lang/String;"/>
<method name="getPorts" type="()[I"/>
<method name="isSecure" type="()Z"/>
<method name="getVersion" type="()I"/>
<method name="isExpired" type="(Ljava/util/Date;)Z"/>
</interface>
<interface name="org/apache/http/cookie/CookieAttributeHandler">
<method name="parse" type="(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
</interface>
<interface name="org/apache/http/cookie/CookieSpec">
<method name="getVersion" type="()I"/>
<method name="parse" type="(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;"/>
<method name="validate" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V"/>
<method name="match" type="(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z"/>
<method name="formatCookies" type="(Ljava/util/List;)Ljava/util/List;"/>
<method name="getVersionHeader" type="()Lorg/apache/http/Header;"/>
</interface>
<interface name="org/apache/http/cookie/CookieSpecFactory">
<method name="newInstance" type="(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;"/>
</interface>
<interface name="org/apache/http/cookie/params/CookieSpecPNames">
</interface>
<interface name="org/apache/http/cookie/SM">
</interface>
<interface name="org/apache/http/entity/ContentLengthStrategy">
<method name="determineLength" type="(Lorg/apache/http/HttpMessage;)J"/>
</interface>
<interface name="org/apache/http/entity/ContentProducer">
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
</interface>
<interface name="org/apache/http/Header">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getElements" type="()[Lorg/apache/http/HeaderElement;"/>
</interface>
<interface name="org/apache/http/HeaderElement">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
<method name="getParameters" type="()[Lorg/apache/http/NameValuePair;"/>
<method name="getParameterByName" type="(Ljava/lang/String;)Lorg/apache/http/NameValuePair;"/>
<method name="getParameterCount" type="()I"/>
<method name="getParameter" type="(I)Lorg/apache/http/NameValuePair;"/>
</interface>
<interface name="org/apache/http/HttpConnection">
<method name="close" type="()V"/>
<method name="isOpen" type="()Z"/>
<method name="isStale" type="()Z"/>
<method name="setSocketTimeout" type="(I)V"/>
<method name="getSocketTimeout" type="()I"/>
<method name="shutdown" type="()V"/>
<method name="getMetrics" type="()Lorg/apache/http/HttpConnectionMetrics;"/>
</interface>
<interface name="org/apache/http/HttpConnectionMetrics">
<method name="getRequestCount" type="()J"/>
<method name="getResponseCount" type="()J"/>
<method name="getSentBytesCount" type="()J"/>
<method name="getReceivedBytesCount" type="()J"/>
<method name="getMetric" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="reset" type="()V"/>
</interface>
<interface name="org/apache/http/HttpEntity">
<method name="isRepeatable" type="()Z"/>
<method name="isChunked" type="()Z"/>
<method name="getContentLength" type="()J"/>
<method name="getContentType" type="()Lorg/apache/http/Header;"/>
<method name="getContentEncoding" type="()Lorg/apache/http/Header;"/>
<method name="getContent" type="()Ljava/io/InputStream;"/>
<method name="writeTo" type="(Ljava/io/OutputStream;)V"/>
<method name="isStreaming" type="()Z"/>
<method name="consumeContent" type="()V"/>
</interface>
<interface name="org/apache/http/HttpMessage">
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="containsHeader" type="(Ljava/lang/String;)Z"/>
<method name="getHeaders" type="(Ljava/lang/String;)[Lorg/apache/http/Header;"/>
<method name="getFirstHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getLastHeader" type="(Ljava/lang/String;)Lorg/apache/http/Header;"/>
<method name="getAllHeaders" type="()[Lorg/apache/http/Header;"/>
<method name="addHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="addHeader" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="setHeader" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="setHeaders" type="([Lorg/apache/http/Header;)V"/>
<method name="removeHeader" type="(Lorg/apache/http/Header;)V"/>
<method name="removeHeaders" type="(Ljava/lang/String;)V"/>
<method name="headerIterator" type="()Lorg/apache/http/HeaderIterator;"/>
<method name="headerIterator" type="(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;"/>
<method name="getParams" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="setParams" type="(Lorg/apache/http/params/HttpParams;)V"/>
</interface>
<interface name="org/apache/http/HttpRequestFactory">
<method name="newHttpRequest" type="(Lorg/apache/http/RequestLine;)Lorg/apache/http/HttpRequest;"/>
<method name="newHttpRequest" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/HttpRequest;"/>
</interface>
<interface name="org/apache/http/HttpRequestInterceptor">
<method name="process" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V"/>
</interface>
<interface name="org/apache/http/HttpResponseFactory">
<method name="newHttpResponse" type="(Lorg/apache/http/ProtocolVersion;ILorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
<method name="newHttpResponse" type="(Lorg/apache/http/StatusLine;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;"/>
</interface>
<interface name="org/apache/http/HttpResponseInterceptor">
<method name="process" type="(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</interface>
<interface name="org/apache/http/HttpStatus">
</interface>
<interface name="org/apache/http/impl/auth/NTLMEngine">
<method name="generateType1Msg" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="generateType3Msg" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="org/apache/http/impl/conn/tsccm/PoolEntryRequest">
<method name="getPoolEntry" type="(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"/>
<method name="abortRequest" type="()V"/>
</interface>
<interface name="org/apache/http/impl/conn/tsccm/RefQueueHandler">
<method name="handleReference" type="(Ljava/lang/ref/Reference;)V"/>
</interface>
<interface name="org/apache/http/io/HttpMessageParser">
<method name="parse" type="()Lorg/apache/http/HttpMessage;"/>
</interface>
<interface name="org/apache/http/io/HttpMessageWriter">
<method name="write" type="(Lorg/apache/http/HttpMessage;)V"/>
</interface>
<interface name="org/apache/http/io/HttpTransportMetrics">
<method name="getBytesTransferred" type="()J"/>
<method name="reset" type="()V"/>
</interface>
<interface name="org/apache/http/io/SessionInputBuffer">
<method name="read" type="([BII)I"/>
<method name="read" type="([B)I"/>
<method name="read" type="()I"/>
<method name="readLine" type="(Lorg/apache/http/util/CharArrayBuffer;)I"/>
<method name="readLine" type="()Ljava/lang/String;"/>
<method name="isDataAvailable" type="(I)Z"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</interface>
<interface name="org/apache/http/io/SessionOutputBuffer">
<method name="write" type="([BII)V"/>
<method name="write" type="([B)V"/>
<method name="write" type="(I)V"/>
<method name="writeLine" type="(Ljava/lang/String;)V"/>
<method name="writeLine" type="(Lorg/apache/http/util/CharArrayBuffer;)V"/>
<method name="flush" type="()V"/>
<method name="getMetrics" type="()Lorg/apache/http/io/HttpTransportMetrics;"/>
</interface>
<interface name="org/apache/http/message/HeaderValueFormatter">
<method name="formatElements" type="(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatHeaderElement" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatParameters" type="(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatNameValuePair" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;"/>
</interface>
<interface name="org/apache/http/message/HeaderValueParser">
<method name="parseElements" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/HeaderElement;"/>
<method name="parseHeaderElement" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;"/>
<method name="parseParameters" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/NameValuePair;"/>
<method name="parseNameValuePair" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/NameValuePair;"/>
</interface>
<interface name="org/apache/http/message/LineFormatter">
<method name="appendProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/ProtocolVersion;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatRequestLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/RequestLine;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatStatusLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/StatusLine;)Lorg/apache/http/util/CharArrayBuffer;"/>
<method name="formatHeader" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/Header;)Lorg/apache/http/util/CharArrayBuffer;"/>
</interface>
<interface name="org/apache/http/message/LineParser">
<method name="parseProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/ProtocolVersion;"/>
<method name="hasProtocolVersion" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z"/>
<method name="parseRequestLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/RequestLine;"/>
<method name="parseStatusLine" type="(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;"/>
<method name="parseHeader" type="(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;"/>
</interface>
<interface name="org/apache/http/NameValuePair">
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getValue" type="()Ljava/lang/String;"/>
</interface>
<interface name="org/apache/http/params/CoreConnectionPNames">
</interface>
<interface name="org/apache/http/params/CoreProtocolPNames">
</interface>
<interface name="org/apache/http/params/HttpParams">
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;"/>
<method name="copy" type="()Lorg/apache/http/params/HttpParams;"/>
<method name="removeParameter" type="(Ljava/lang/String;)Z"/>
<method name="getLongParameter" type="(Ljava/lang/String;J)J"/>
<method name="setLongParameter" type="(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;"/>
<method name="getIntParameter" type="(Ljava/lang/String;I)I"/>
<method name="setIntParameter" type="(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;"/>
<method name="getDoubleParameter" type="(Ljava/lang/String;D)D"/>
<method name="setDoubleParameter" type="(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;"/>
<method name="getBooleanParameter" type="(Ljava/lang/String;Z)Z"/>
<method name="setBooleanParameter" type="(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;"/>
<method name="isParameterTrue" type="(Ljava/lang/String;)Z"/>
<method name="isParameterFalse" type="(Ljava/lang/String;)Z"/>
</interface>
<interface name="org/apache/http/protocol/ExecutionContext">
</interface>
<interface name="org/apache/http/protocol/HttpContext">
<method name="getAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setAttribute" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="removeAttribute" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</interface>
<interface name="org/apache/http/protocol/HttpExpectationVerifier">
<method name="verify" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</interface>
<interface name="org/apache/http/protocol/HttpRequestHandler">
<method name="handle" type="(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V"/>
</interface>
<interface name="org/apache/http/protocol/HttpRequestHandlerResolver">
<method name="lookup" type="(Ljava/lang/String;)Lorg/apache/http/protocol/HttpRequestHandler;"/>
</interface>
<interface name="org/apache/http/protocol/HttpRequestInterceptorList">
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;)V"/>
<method name="addRequestInterceptor" type="(Lorg/apache/http/HttpRequestInterceptor;I)V"/>
<method name="getRequestInterceptorCount" type="()I"/>
<method name="getRequestInterceptor" type="(I)Lorg/apache/http/HttpRequestInterceptor;"/>
<method name="clearRequestInterceptors" type="()V"/>
<method name="removeRequestInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="setInterceptors" type="(Ljava/util/List;)V"/>
</interface>
<interface name="org/apache/http/protocol/HttpResponseInterceptorList">
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;)V"/>
<method name="addResponseInterceptor" type="(Lorg/apache/http/HttpResponseInterceptor;I)V"/>
<method name="getResponseInterceptorCount" type="()I"/>
<method name="getResponseInterceptor" type="(I)Lorg/apache/http/HttpResponseInterceptor;"/>
<method name="clearResponseInterceptors" type="()V"/>
<method name="removeResponseInterceptorByClass" type="(Ljava/lang/Class;)V"/>
<method name="setInterceptors" type="(Ljava/util/List;)V"/>
</interface>
<interface name="org/apache/http/ReasonPhraseCatalog">
<method name="getReason" type="(ILjava/util/Locale;)Ljava/lang/String;"/>
</interface>
<interface name="org/apache/http/RequestLine">
<method name="getMethod" type="()Ljava/lang/String;"/>
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getUri" type="()Ljava/lang/String;"/>
</interface>
<interface name="org/apache/http/StatusLine">
<method name="getProtocolVersion" type="()Lorg/apache/http/ProtocolVersion;"/>
<method name="getStatusCode" type="()I"/>
<method name="getReasonPhrase" type="()Ljava/lang/String;"/>
</interface>
<interface name="org/w3c/dom/DOMConfiguration">
<method name="setParameter" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getParameter" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="canSetParameter" type="(Ljava/lang/String;Ljava/lang/Object;)Z"/>
<method name="getParameterNames" type="()Lorg/w3c/dom/DOMStringList;"/>
</interface>
<interface name="org/w3c/dom/DOMError">
<method name="getSeverity" type="()S"/>
<method name="getMessage" type="()Ljava/lang/String;"/>
<method name="getType" type="()Ljava/lang/String;"/>
<method name="getRelatedException" type="()Ljava/lang/Object;"/>
<method name="getRelatedData" type="()Ljava/lang/Object;"/>
<method name="getLocation" type="()Lorg/w3c/dom/DOMLocator;"/>
</interface>
<interface name="org/w3c/dom/DOMErrorHandler">
<method name="handleError" type="(Lorg/w3c/dom/DOMError;)Z"/>
</interface>
<interface name="org/w3c/dom/DOMImplementation">
<method name="hasFeature" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="createDocumentType" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/DocumentType;"/>
<method name="createDocument" type="(Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/DocumentType;)Lorg/w3c/dom/Document;"/>
<method name="getFeature" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"/>
</interface>
<interface name="org/w3c/dom/DOMImplementationList">
<method name="item" type="(I)Lorg/w3c/dom/DOMImplementation;"/>
<method name="getLength" type="()I"/>
</interface>
<interface name="org/w3c/dom/DOMImplementationSource">
<method name="getDOMImplementation" type="(Ljava/lang/String;)Lorg/w3c/dom/DOMImplementation;"/>
<method name="getDOMImplementationList" type="(Ljava/lang/String;)Lorg/w3c/dom/DOMImplementationList;"/>
</interface>
<interface name="org/w3c/dom/DOMLocator">
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
<method name="getByteOffset" type="()I"/>
<method name="getUtf16Offset" type="()I"/>
<method name="getRelatedNode" type="()Lorg/w3c/dom/Node;"/>
<method name="getUri" type="()Ljava/lang/String;"/>
</interface>
<interface name="org/w3c/dom/DOMStringList">
<method name="item" type="(I)Ljava/lang/String;"/>
<method name="getLength" type="()I"/>
<method name="contains" type="(Ljava/lang/String;)Z"/>
</interface>
<interface name="org/w3c/dom/ls/DOMImplementationLS">
<method name="createLSParser" type="(SLjava/lang/String;)Lorg/w3c/dom/ls/LSParser;"/>
<method name="createLSSerializer" type="()Lorg/w3c/dom/ls/LSSerializer;"/>
<method name="createLSInput" type="()Lorg/w3c/dom/ls/LSInput;"/>
<method name="createLSOutput" type="()Lorg/w3c/dom/ls/LSOutput;"/>
</interface>
<interface name="org/w3c/dom/ls/LSInput">
<method name="getCharacterStream" type="()Ljava/io/Reader;"/>
<method name="setCharacterStream" type="(Ljava/io/Reader;)V"/>
<method name="getByteStream" type="()Ljava/io/InputStream;"/>
<method name="setByteStream" type="(Ljava/io/InputStream;)V"/>
<method name="getStringData" type="()Ljava/lang/String;"/>
<method name="setStringData" type="(Ljava/lang/String;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="setPublicId" type="(Ljava/lang/String;)V"/>
<method name="getBaseURI" type="()Ljava/lang/String;"/>
<method name="setBaseURI" type="(Ljava/lang/String;)V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
<method name="getCertifiedText" type="()Z"/>
<method name="setCertifiedText" type="(Z)V"/>
</interface>
<interface name="org/w3c/dom/ls/LSOutput">
<method name="getCharacterStream" type="()Ljava/io/Writer;"/>
<method name="setCharacterStream" type="(Ljava/io/Writer;)V"/>
<method name="getByteStream" type="()Ljava/io/OutputStream;"/>
<method name="setByteStream" type="(Ljava/io/OutputStream;)V"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="setSystemId" type="(Ljava/lang/String;)V"/>
<method name="getEncoding" type="()Ljava/lang/String;"/>
<method name="setEncoding" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="org/w3c/dom/ls/LSParser">
<method name="getDomConfig" type="()Lorg/w3c/dom/DOMConfiguration;"/>
<method name="getFilter" type="()Lorg/w3c/dom/ls/LSParserFilter;"/>
<method name="setFilter" type="(Lorg/w3c/dom/ls/LSParserFilter;)V"/>
<method name="getAsync" type="()Z"/>
<method name="getBusy" type="()Z"/>
<method name="parse" type="(Lorg/w3c/dom/ls/LSInput;)Lorg/w3c/dom/Document;"/>
<method name="parseURI" type="(Ljava/lang/String;)Lorg/w3c/dom/Document;"/>
<method name="parseWithContext" type="(Lorg/w3c/dom/ls/LSInput;Lorg/w3c/dom/Node;S)Lorg/w3c/dom/Node;"/>
<method name="abort" type="()V"/>
</interface>
<interface name="org/w3c/dom/ls/LSParserFilter">
<method name="startElement" type="(Lorg/w3c/dom/Element;)S"/>
<method name="acceptNode" type="(Lorg/w3c/dom/Node;)S"/>
<method name="getWhatToShow" type="()I"/>
</interface>
<interface name="org/w3c/dom/ls/LSResourceResolver">
<method name="resolveResource" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/ls/LSInput;"/>
</interface>
<interface name="org/w3c/dom/ls/LSSerializer">
<method name="getDomConfig" type="()Lorg/w3c/dom/DOMConfiguration;"/>
<method name="getNewLine" type="()Ljava/lang/String;"/>
<method name="setNewLine" type="(Ljava/lang/String;)V"/>
<method name="write" type="(Lorg/w3c/dom/Node;Lorg/w3c/dom/ls/LSOutput;)Z"/>
<method name="writeToURI" type="(Lorg/w3c/dom/Node;Ljava/lang/String;)Z"/>
<method name="writeToString" type="(Lorg/w3c/dom/Node;)Ljava/lang/String;"/>
</interface>
<interface name="org/w3c/dom/NamedNodeMap">
<method name="getNamedItem" type="(Ljava/lang/String;)Lorg/w3c/dom/Node;"/>
<method name="setNamedItem" type="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="removeNamedItem" type="(Ljava/lang/String;)Lorg/w3c/dom/Node;"/>
<method name="item" type="(I)Lorg/w3c/dom/Node;"/>
<method name="getLength" type="()I"/>
<method name="getNamedItemNS" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Node;"/>
<method name="setNamedItemNS" type="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="removeNamedItemNS" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Node;"/>
</interface>
<interface name="org/w3c/dom/NameList">
<method name="getName" type="(I)Ljava/lang/String;"/>
<method name="getNamespaceURI" type="(I)Ljava/lang/String;"/>
<method name="getLength" type="()I"/>
<method name="contains" type="(Ljava/lang/String;)Z"/>
<method name="containsNS" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
</interface>
<interface name="org/w3c/dom/Node">
<method name="getNodeName" type="()Ljava/lang/String;"/>
<method name="getNodeValue" type="()Ljava/lang/String;"/>
<method name="setNodeValue" type="(Ljava/lang/String;)V"/>
<method name="getNodeType" type="()S"/>
<method name="getParentNode" type="()Lorg/w3c/dom/Node;"/>
<method name="getChildNodes" type="()Lorg/w3c/dom/NodeList;"/>
<method name="getFirstChild" type="()Lorg/w3c/dom/Node;"/>
<method name="getLastChild" type="()Lorg/w3c/dom/Node;"/>
<method name="getPreviousSibling" type="()Lorg/w3c/dom/Node;"/>
<method name="getNextSibling" type="()Lorg/w3c/dom/Node;"/>
<method name="getAttributes" type="()Lorg/w3c/dom/NamedNodeMap;"/>
<method name="getOwnerDocument" type="()Lorg/w3c/dom/Document;"/>
<method name="insertBefore" type="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="replaceChild" type="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="removeChild" type="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="appendChild" type="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"/>
<method name="hasChildNodes" type="()Z"/>
<method name="cloneNode" type="(Z)Lorg/w3c/dom/Node;"/>
<method name="normalize" type="()V"/>
<method name="isSupported" type="(Ljava/lang/String;Ljava/lang/String;)Z"/>
<method name="getNamespaceURI" type="()Ljava/lang/String;"/>
<method name="getPrefix" type="()Ljava/lang/String;"/>
<method name="setPrefix" type="(Ljava/lang/String;)V"/>
<method name="getLocalName" type="()Ljava/lang/String;"/>
<method name="hasAttributes" type="()Z"/>
<method name="getBaseURI" type="()Ljava/lang/String;"/>
<method name="compareDocumentPosition" type="(Lorg/w3c/dom/Node;)S"/>
<method name="getTextContent" type="()Ljava/lang/String;"/>
<method name="setTextContent" type="(Ljava/lang/String;)V"/>
<method name="isSameNode" type="(Lorg/w3c/dom/Node;)Z"/>
<method name="lookupPrefix" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="isDefaultNamespace" type="(Ljava/lang/String;)Z"/>
<method name="lookupNamespaceURI" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="isEqualNode" type="(Lorg/w3c/dom/Node;)Z"/>
<method name="getFeature" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setUserData" type="(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;"/>
<method name="getUserData" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
</interface>
<interface name="org/w3c/dom/NodeList">
<method name="item" type="(I)Lorg/w3c/dom/Node;"/>
<method name="getLength" type="()I"/>
</interface>
<interface name="org/w3c/dom/TypeInfo">
<method name="getTypeName" type="()Ljava/lang/String;"/>
<method name="getTypeNamespace" type="()Ljava/lang/String;"/>
<method name="isDerivedFrom" type="(Ljava/lang/String;Ljava/lang/String;I)Z"/>
</interface>
<interface name="org/w3c/dom/UserDataHandler">
<method name="handle" type="(SLjava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)V"/>
</interface>
<interface name="org/xml/sax/AttributeList">
<method name="getLength" type="()I"/>
<method name="getName" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(I)Ljava/lang/String;"/>
<method name="getValue" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="org/xml/sax/Attributes">
<method name="getLength" type="()I"/>
<method name="getURI" type="(I)Ljava/lang/String;"/>
<method name="getLocalName" type="(I)Ljava/lang/String;"/>
<method name="getQName" type="(I)Ljava/lang/String;"/>
<method name="getType" type="(I)Ljava/lang/String;"/>
<method name="getValue" type="(I)Ljava/lang/String;"/>
<method name="getIndex" type="(Ljava/lang/String;Ljava/lang/String;)I"/>
<method name="getIndex" type="(Ljava/lang/String;)I"/>
<method name="getType" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getType" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getValue" type="(Ljava/lang/String;)Ljava/lang/String;"/>
</interface>
<interface name="org/xml/sax/ContentHandler">
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startPrefixMapping" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endPrefixMapping" type="(Ljava/lang/String;)V"/>
<method name="startElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"/>
<method name="endElement" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="skippedEntity" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="org/xml/sax/DocumentHandler">
<method name="setDocumentLocator" type="(Lorg/xml/sax/Locator;)V"/>
<method name="startDocument" type="()V"/>
<method name="endDocument" type="()V"/>
<method name="startElement" type="(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V"/>
<method name="endElement" type="(Ljava/lang/String;)V"/>
<method name="characters" type="([CII)V"/>
<method name="ignorableWhitespace" type="([CII)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
</interface>
<interface name="org/xml/sax/DTDHandler">
<method name="notationDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="unparsedEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
</interface>
<interface name="org/xml/sax/EntityResolver">
<method name="resolveEntity" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"/>
</interface>
<interface name="org/xml/sax/ErrorHandler">
<method name="warning" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="error" type="(Lorg/xml/sax/SAXParseException;)V"/>
<method name="fatalError" type="(Lorg/xml/sax/SAXParseException;)V"/>
</interface>
<interface name="org/xml/sax/ext/DeclHandler">
<method name="elementDecl" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="attributeDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="internalEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="externalEntityDecl" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
</interface>
<interface name="org/xml/sax/ext/LexicalHandler">
<method name="startDTD" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="endDTD" type="()V"/>
<method name="startEntity" type="(Ljava/lang/String;)V"/>
<method name="endEntity" type="(Ljava/lang/String;)V"/>
<method name="startCDATA" type="()V"/>
<method name="endCDATA" type="()V"/>
<method name="comment" type="([CII)V"/>
</interface>
<interface name="org/xml/sax/Locator">
<method name="getPublicId" type="()Ljava/lang/String;"/>
<method name="getSystemId" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
</interface>
<interface name="org/xml/sax/Parser">
<method name="setLocale" type="(Ljava/util/Locale;)V"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="setDocumentHandler" type="(Lorg/xml/sax/DocumentHandler;)V"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="org/xml/sax/XMLReader">
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="setEntityResolver" type="(Lorg/xml/sax/EntityResolver;)V"/>
<method name="getEntityResolver" type="()Lorg/xml/sax/EntityResolver;"/>
<method name="setDTDHandler" type="(Lorg/xml/sax/DTDHandler;)V"/>
<method name="getDTDHandler" type="()Lorg/xml/sax/DTDHandler;"/>
<method name="setContentHandler" type="(Lorg/xml/sax/ContentHandler;)V"/>
<method name="getContentHandler" type="()Lorg/xml/sax/ContentHandler;"/>
<method name="setErrorHandler" type="(Lorg/xml/sax/ErrorHandler;)V"/>
<method name="getErrorHandler" type="()Lorg/xml/sax/ErrorHandler;"/>
<method name="parse" type="(Lorg/xml/sax/InputSource;)V"/>
<method name="parse" type="(Ljava/lang/String;)V"/>
</interface>
<interface name="org/xmlpull/v1/XmlPullParser">
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setInput" type="(Ljava/io/Reader;)V"/>
<method name="setInput" type="(Ljava/io/InputStream;Ljava/lang/String;)V"/>
<method name="getInputEncoding" type="()Ljava/lang/String;"/>
<method name="defineEntityReplacementText" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getNamespaceCount" type="(I)I"/>
<method name="getNamespacePrefix" type="(I)Ljava/lang/String;"/>
<method name="getNamespaceUri" type="(I)Ljava/lang/String;"/>
<method name="getNamespace" type="(Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getDepth" type="()I"/>
<method name="getPositionDescription" type="()Ljava/lang/String;"/>
<method name="getLineNumber" type="()I"/>
<method name="getColumnNumber" type="()I"/>
<method name="isWhitespace" type="()Z"/>
<method name="getText" type="()Ljava/lang/String;"/>
<method name="getTextCharacters" type="([I)[C"/>
<method name="getNamespace" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="getPrefix" type="()Ljava/lang/String;"/>
<method name="isEmptyElementTag" type="()Z"/>
<method name="getAttributeCount" type="()I"/>
<method name="getAttributeNamespace" type="(I)Ljava/lang/String;"/>
<method name="getAttributeName" type="(I)Ljava/lang/String;"/>
<method name="getAttributePrefix" type="(I)Ljava/lang/String;"/>
<method name="getAttributeType" type="(I)Ljava/lang/String;"/>
<method name="isAttributeDefault" type="(I)Z"/>
<method name="getAttributeValue" type="(I)Ljava/lang/String;"/>
<method name="getAttributeValue" type="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>
<method name="getEventType" type="()I"/>
<method name="next" type="()I"/>
<method name="nextToken" type="()I"/>
<method name="require" type="(ILjava/lang/String;Ljava/lang/String;)V"/>
<method name="nextText" type="()Ljava/lang/String;"/>
<method name="nextTag" type="()I"/>
</interface>
<interface name="org/xmlpull/v1/XmlSerializer">
<method name="setFeature" type="(Ljava/lang/String;Z)V"/>
<method name="getFeature" type="(Ljava/lang/String;)Z"/>
<method name="setProperty" type="(Ljava/lang/String;Ljava/lang/Object;)V"/>
<method name="getProperty" type="(Ljava/lang/String;)Ljava/lang/Object;"/>
<method name="setOutput" type="(Ljava/io/OutputStream;Ljava/lang/String;)V"/>
<method name="setOutput" type="(Ljava/io/Writer;)V"/>
<method name="startDocument" type="(Ljava/lang/String;Ljava/lang/Boolean;)V"/>
<method name="endDocument" type="()V"/>
<method name="setPrefix" type="(Ljava/lang/String;Ljava/lang/String;)V"/>
<method name="getPrefix" type="(Ljava/lang/String;Z)Ljava/lang/String;"/>
<method name="getDepth" type="()I"/>
<method name="getNamespace" type="()Ljava/lang/String;"/>
<method name="getName" type="()Ljava/lang/String;"/>
<method name="startTag" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="attribute" type="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="endTag" type="(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="text" type="(Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="text" type="([CII)Lorg/xmlpull/v1/XmlSerializer;"/>
<method name="cdsect" type="(Ljava/lang/String;)V"/>
<method name="entityRef" type="(Ljava/lang/String;)V"/>
<method name="processingInstruction" type="(Ljava/lang/String;)V"/>
<method name="comment" type="(Ljava/lang/String;)V"/>
<method name="docdecl" type="(Ljava/lang/String;)V"/>
<method name="ignorableWhitespace" type="(Ljava/lang/String;)V"/>
<method name="flush" type="()V"/>
</interface>
</signatures>
