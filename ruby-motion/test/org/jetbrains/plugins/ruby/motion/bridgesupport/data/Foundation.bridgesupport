<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_NSDecimal=&quot;_exponent&quot;b8&quot;_length&quot;b4&quot;_isNegative&quot;b1&quot;_isCompact&quot;b1&quot;_reserved&quot;b18&quot;_mantissa&quot;[8S]}' name='NSDecimal'>
<field type='b8' name='_exponent' declared_type='int'/>
<field type='b4' name='_length' declared_type='unsigned int'/>
<field type='b1' name='_isNegative' declared_type='unsigned int'/>
<field type='b1' name='_isCompact' declared_type='unsigned int'/>
<field type='b18' name='_reserved' declared_type='unsigned int'/>
<field type='[8S]' name='_mantissa' declared_type='unsigned short*'/>
</struct>
<struct type='{_NSFastEnumerationState=&quot;state&quot;L&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^L&quot;extra&quot;[5L]}' name='NSFastEnumerationState'>
<field type='L' name='state' declared_type='unsigned long'/>
<field type='^@' name='itemsPtr' declared_type='id*'/>
<field type='^L' name='mutationsPtr' declared_type='unsigned long*'/>
<field type='[5L]' name='extra' declared_type='unsigned long*'/>
</struct>
<struct type='{_NSRange=&quot;location&quot;I&quot;length&quot;I}' name='NSRange'>
<field type='I' name='location' declared_type='NSUInteger'/>
<field type='I' name='length' declared_type='NSUInteger'/>
</struct>
<struct type='{_NSSwappedDouble=&quot;v&quot;Q}' name='NSSwappedDouble'>
<field type='Q' name='v' declared_type='unsigned long long'/>
</struct>
<struct type='{_NSSwappedFloat=&quot;v&quot;I}' name='NSSwappedFloat'>
<field type='I' name='v' declared_type='unsigned int'/>
</struct>
<cftype type='^{_NSZone=}' name='NSZone'/>
<constant type='@' name='NSArgumentDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSAssertionHandlerKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSAverageKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSBuddhistCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSBundleDidLoadNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSCharacterConversionException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSChineseCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSCocoaErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSCountKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSCurrentLocaleDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDecimalNumberDivideByZeroException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDecimalNumberExactnessException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDecimalNumberOverflowException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDecimalNumberUnderflowException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDefaultRunLoopMode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDestinationInvalidException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDidBecomeSingleThreadedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDistinctUnionOfArraysKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDistinctUnionOfObjectsKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSDistinctUnionOfSetsKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSErrorFailingURLStringKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileAppendOnly' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileBusy' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileCreationDate' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileDeviceIdentifier' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileExtensionHidden' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileGroupOwnerAccountID' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileGroupOwnerAccountName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHFSCreatorCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHFSTypeCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleConnectionAcceptedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleDataAvailableNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleNotificationDataItem' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleNotificationFileHandleItem' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleNotificationMonitorModes' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleOperationException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleReadCompletionNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileHandleReadToEndOfFileCompletionNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileImmutable' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileModificationDate' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileOwnerAccountID' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileOwnerAccountName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFilePathErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFilePosixPermissions' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileProtectionComplete' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileProtectionCompleteUnlessOpen' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileProtectionCompleteUntilFirstUserAuthentication' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileProtectionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileProtectionNone' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileReferenceCount' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSize' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemFileNumber' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemFreeNodes' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemFreeSize' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemNodes' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemNumber' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileSystemSize' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileType' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeBlockSpecial' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeCharacterSpecial' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeDirectory' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeRegular' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeSocket' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeSymbolicLink' const='true' declared_type='NSString*'/>
<constant type='@' name='NSFileTypeUnknown' const='true' declared_type='NSString*'/>
<constant type='d' name='NSFoundationVersionNumber' declared_type='double'/>
<constant type='@' name='NSGenericException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSGlobalDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSGregorianCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieComment' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieCommentURL' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieDiscard' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieExpires' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieManagerAcceptPolicyChangedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieManagerCookiesChangedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieMaximumAge' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieOriginURL' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookiePath' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookiePort' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieSecure' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieValue' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHTTPCookieVersion' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHebrewCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSHelpAnchorErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSISO8601Calendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSIndianCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInternalInconsistencyException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvalidArchiveOperationException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvalidArgumentException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvalidReceivePortException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvalidSendPortException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvalidUnarchiveOperationException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvocationOperationCancelledException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSInvocationOperationVoidResultException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSIsNilTransformerName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSIsNotNilTransformerName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSIslamicCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSIslamicCivilCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSJapaneseCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyValueChangeIndexesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyValueChangeKindKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyValueChangeNewKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyValueChangeNotificationIsPriorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyValueChangeOldKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSKeyedUnarchiveFromDataTransformerName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagAdjective' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagAdverb' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagClassifier' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagCloseParenthesis' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagCloseQuote' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagConjunction' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagDash' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagDeterminer' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagIdiom' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagInterjection' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagNoun' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagNumber' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOpenParenthesis' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOpenQuote' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOrganizationName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOther' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOtherPunctuation' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOtherWhitespace' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagOtherWord' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagParagraphBreak' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagParticle' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagPersonalName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagPlaceName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagPreposition' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagPronoun' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagPunctuation' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeLanguage' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeLemma' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeLexicalClass' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeNameType' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeNameTypeOrLexicalClass' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeScript' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSchemeTokenType' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagSentenceTerminator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagVerb' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagWhitespace' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagWord' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLinguisticTagWordJoiner' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLoadedClasses' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleAlternateQuotationBeginDelimiterKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleAlternateQuotationEndDelimiterKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCollationIdentifier' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCollatorIdentifier' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCountryCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCurrencyCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleCurrencySymbol' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleDecimalSeparator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleExemplarCharacterSet' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleGroupingSeparator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleIdentifier' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleLanguageCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleMeasurementSystem' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleQuotationBeginDelimiterKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleQuotationEndDelimiterKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleScriptCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleUsesMetricSystem' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocaleVariantCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocalizedDescriptionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocalizedFailureReasonErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocalizedRecoveryOptionsErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSLocalizedRecoverySuggestionErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMachErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMallocException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMaximumKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemDisplayNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemFSContentChangeDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemFSCreationDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemFSNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemFSSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemIsUbiquitousKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemPathKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataItemURLKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryDidFinishGatheringNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryDidStartGatheringNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryDidUpdateNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryGatheringProgressNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryResultContentRelevanceAttribute' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryUbiquitousDataScope' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataQueryUbiquitousDocumentsScope' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemHasUnresolvedConflictsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemIsDownloadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemIsDownloadingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemIsUploadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemIsUploadingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemPercentDownloadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMetadataUbiquitousItemPercentUploadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSMinimumKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSNegateBooleanTransformerName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSNetServicesErrorCode' const='true' declared_type='NSString*'/>
<constant type='@' name='NSNetServicesErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSOSStatusErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSObjectInaccessibleException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSObjectNotAvailableException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSOldStyleException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPOSIXErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSParseErrorException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPersianCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPortDidBecomeInvalidNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPortReceiveException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPortSendException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSPortTimeoutException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSRangeException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSRecoveryAttempterErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSRegistrationDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSRepublicOfChinaCalendar' const='true' declared_type='NSString*'/>
<constant type='@' name='NSRunLoopCommonModes' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamDataWrittenToMemoryStreamKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamFileCurrentOffsetKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamNetworkServiceType' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamNetworkServiceTypeBackground' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamNetworkServiceTypeVideo' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamNetworkServiceTypeVoIP' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamNetworkServiceTypeVoice' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyConfigurationKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyHostKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyPasswordKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyPortKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyUserKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyVersion4' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyVersion5' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSOCKSProxyVersionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSSLErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelNegotiatedSSL' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelNone' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelSSLv2' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelSSLv3' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStreamSocketSecurityLevelTLSv1' const='true' declared_type='NSString*'/>
<constant type='@' name='NSStringEncodingErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSSumKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSSystemClockDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSSystemTimeZoneDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingAirlineKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingCityKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingCountryKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingFlightKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingJobTitleKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingOrganizationKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingPhoneKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingStateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingStreetKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSTextCheckingZIPKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSThreadWillExitNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAttributeModificationDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodClientCertificate' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodDefault' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodHTMLForm' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodHTTPBasic' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodHTTPDigest' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodNTLM' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodNegotiate' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLAuthenticationMethodServerTrust' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLContentAccessDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLContentModificationDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLCreationDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLCredentialStorageChangedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLCustomIconKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLEffectiveIconKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLErrorFailingURLErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLErrorFailingURLPeerTrustErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLErrorFailingURLStringErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileAllocatedSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceIdentifierKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeBlockSpecial' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeCharacterSpecial' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeDirectory' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeNamedPipe' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeRegular' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeSocket' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeSymbolicLink' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileResourceTypeUnknown' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileScheme' declared_type='NSString*'/>
<constant type='@' name='NSURLFileSecurityKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLFileSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLHasHiddenExtensionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsAliasFileKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsDirectoryKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsExcludedFromBackupKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsExecutableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsHiddenKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsMountTriggerKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsPackageKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsReadableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsRegularFileKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsSymbolicLinkKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsSystemImmutableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsUbiquitousItemKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsUserImmutableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsVolumeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLIsWritableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLKeysOfUnsetValuesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLabelColorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLabelNumberKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLinkCountKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLocalizedLabelKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLocalizedNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLLocalizedTypeDescriptionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLParentDirectoryURLKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLPreferredIOBlockSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceFTP' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceFTPProxy' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceHTTP' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceHTTPProxy' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceHTTPS' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceHTTPSProxy' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLProtectionSpaceSOCKSProxy' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLTotalFileAllocatedSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLTotalFileSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLTypeIdentifierKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemHasUnresolvedConflictsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemIsDownloadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemIsDownloadingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemIsUploadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemIsUploadingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemPercentDownloadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLUbiquitousItemPercentUploadedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeAvailableCapacityKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeCreationDateKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIdentifierKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsAutomountedKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsBrowsableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsEjectableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsInternalKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsJournalingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsLocalKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsReadOnlyKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeIsRemovableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeLocalizedFormatDescriptionKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeLocalizedNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeMaximumFileSizeKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeResourceCountKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsAdvisoryFileLockingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsCasePreservedNamesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsCaseSensitiveNamesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsExtendedSecurityKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsHardLinksKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsJournalingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsPersistentIDsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsRenamingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsRootDirectoryDatesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsSparseFilesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsSymbolicLinksKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsVolumeSizesKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeSupportsZeroRunsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeTotalCapacityKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeURLForRemountingKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeURLKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSURLVolumeUUIDStringKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUbiquitousKeyValueStoreChangeReasonKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUbiquitousKeyValueStoreChangedKeysKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUbiquitousKeyValueStoreDidChangeExternallyNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUnarchiveFromDataTransformerName' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndefinedKeyException' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUnderlyingErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerCheckpointNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerDidCloseUndoGroupNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerDidOpenUndoGroupNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerDidRedoChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerDidUndoChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerGroupIsDiscardableKey' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerWillCloseUndoGroupNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerWillRedoChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUndoManagerWillUndoChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUnionOfArraysKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUnionOfObjectsKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUnionOfSetsKeyValueOperator' const='true' declared_type='NSString*'/>
<constant type='@' name='NSUserDefaultsDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSWillBecomeMultiThreadedNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='NSXMLParserErrorDomain' const='true' declared_type='NSString*'/>
<enum value='1' name='NSASCIIStringEncoding'/>
<enum value='4' name='NSAdminApplicationDirectory'/>
<enum value='14' name='NSAggregateExpressionType'/>
<enum value='100' name='NSAllApplicationsDirectory'/>
<enum value='65535' name='NSAllDomainsMask'/>
<enum value='101' name='NSAllLibrariesDirectory'/>
<enum value='1' name='NSAllPredicateModifier'/>
<enum value='8' name='NSAnchoredSearch'/>
<enum value='1' name='NSAndPredicateType'/>
<enum value='2' name='NSAnyPredicateModifier'/>
<enum value='1' name='NSApplicationDirectory'/>
<enum value='14' name='NSApplicationSupportDirectory'/>
<enum value='1' name='NSAtomicWrite'/>
<enum value='1048576' name='NSAttributedStringEnumerationLongestEffectiveRangeNotRequired'/>
<enum value='2' name='NSAttributedStringEnumerationReverse'/>
<enum value='11' name='NSAutosavedInformationDirectory'/>
<enum value='4' name='NSBackwardsSearch'/>
<enum value='8' name='NSBeginsWithPredicateOperatorType'/>
<enum value='100' name='NSBetweenPredicateOperatorType'/>
<enum value='256' name='NSBinarySearchingFirstEqual'/>
<enum value='1024' name='NSBinarySearchingInsertionIndex'/>
<enum value='512' name='NSBinarySearchingLastEqual'/>
<enum value='19' name='NSBlockExpressionType'/>
<enum value='7' name='NSBundleExecutableArchitectureI386'/>
<enum value='18' name='NSBundleExecutableArchitecturePPC'/>
<enum value='16777234' name='NSBundleExecutableArchitecturePPC64'/>
<enum value='16777223' name='NSBundleExecutableArchitectureX86_64'/>
<enum value='13' name='NSCachesDirectory'/>
<enum value='4' name='NSCalculationDivideByZero'/>
<enum value='1' name='NSCalculationLossOfPrecision'/>
<enum value='0' name='NSCalculationNoError'/>
<enum value='3' name='NSCalculationOverflow'/>
<enum value='2' name='NSCalculationUnderflow'/>
<enum value='1048576' name='NSCalendarCalendarUnit'/>
<enum value='1' name='NSCaseInsensitivePredicateOption'/>
<enum value='1' name='NSCaseInsensitiveSearch'/>
<enum value='0' name='NSConstantValueExpressionType'/>
<enum value='99' name='NSContainsPredicateOperatorType'/>
<enum value='10' name='NSCoreServiceDirectory'/>
<enum value='11' name='NSCustomSelectorPredicateOperatorType'/>
<enum value='1' name='NSDataReadingMapped'/>
<enum value='8' name='NSDataReadingMappedAlways'/>
<enum value='1' name='NSDataReadingMappedIfSafe'/>
<enum value='2' name='NSDataReadingUncached'/>
<enum value='2' name='NSDataSearchAnchored'/>
<enum value='1' name='NSDataSearchBackwards'/>
<enum value='1' name='NSDataWritingAtomic'/>
<enum value='536870912' name='NSDataWritingFileProtectionComplete'/>
<enum value='805306368' name='NSDataWritingFileProtectionCompleteUnlessOpen'/>
<enum value='1073741824' name='NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication'/>
<enum value='4026531840' name='NSDataWritingFileProtectionMask'/>
<enum value='268435456' name='NSDataWritingFileProtectionNone'/>
<enum value='1040' name='NSDateFormatterBehavior10_4'/>
<enum value='0' name='NSDateFormatterBehaviorDefault'/>
<enum value='4' name='NSDateFormatterFullStyle'/>
<enum value='3' name='NSDateFormatterLongStyle'/>
<enum value='2' name='NSDateFormatterMediumStyle'/>
<enum value='0' name='NSDateFormatterNoStyle'/>
<enum value='1' name='NSDateFormatterShortStyle'/>
<enum value='16' name='NSDayCalendarUnit'/>
<enum value='8' name='NSDecimalMaxSize'/>
<enum value='32767' name='NSDecimalNoScale'/>
<enum value='2' name='NSDemoApplicationDirectory'/>
<enum value='12' name='NSDesktopDirectory'/>
<enum value='3' name='NSDeveloperApplicationDirectory'/>
<enum value='6' name='NSDeveloperDirectory'/>
<enum value='2' name='NSDiacriticInsensitivePredicateOption'/>
<enum value='128' name='NSDiacriticInsensitiveSearch'/>
<enum value='0' name='NSDirectPredicateModifier'/>
<enum value='4' name='NSDirectoryEnumerationSkipsHiddenFiles'/>
<enum value='2' name='NSDirectoryEnumerationSkipsPackageDescendants'/>
<enum value='1' name='NSDirectoryEnumerationSkipsSubdirectoryDescendants'/>
<enum value='9' name='NSDocumentDirectory'/>
<enum value='8' name='NSDocumentationDirectory'/>
<enum value='15' name='NSDownloadsDirectory'/>
<enum value='9' name='NSEndsWithPredicateOperatorType'/>
<enum value='1' name='NSEnumerationConcurrent'/>
<enum value='2' name='NSEnumerationReverse'/>
<enum value='4' name='NSEqualToPredicateOperatorType'/>
<enum value='2' name='NSEraCalendarUnit'/>
<enum value='1' name='NSEvaluatedObjectExpressionType'/>
<enum value='3585' name='NSExecutableArchitectureMismatchError'/>
<enum value='3839' name='NSExecutableErrorMaximum'/>
<enum value='3584' name='NSExecutableErrorMinimum'/>
<enum value='3588' name='NSExecutableLinkError'/>
<enum value='3587' name='NSExecutableLoadError'/>
<enum value='3584' name='NSExecutableNotLoadableError'/>
<enum value='3586' name='NSExecutableRuntimeMismatchError'/>
<enum value='2' name='NSFileCoordinatorReadingResolvesSymbolicLink'/>
<enum value='1' name='NSFileCoordinatorReadingWithoutChanges'/>
<enum value='1' name='NSFileCoordinatorWritingForDeleting'/>
<enum value='4' name='NSFileCoordinatorWritingForMerging'/>
<enum value='2' name='NSFileCoordinatorWritingForMoving'/>
<enum value='8' name='NSFileCoordinatorWritingForReplacing'/>
<enum value='1023' name='NSFileErrorMaximum'/>
<enum value='0' name='NSFileErrorMinimum'/>
<enum value='255' name='NSFileLockingError'/>
<enum value='1' name='NSFileManagerItemReplacementUsingNewMetadataOnly'/>
<enum value='2' name='NSFileManagerItemReplacementWithoutDeletingBackupItem'/>
<enum value='4' name='NSFileNoSuchFileError'/>
<enum value='259' name='NSFileReadCorruptFileError'/>
<enum value='261' name='NSFileReadInapplicableStringEncodingError'/>
<enum value='258' name='NSFileReadInvalidFileNameError'/>
<enum value='257' name='NSFileReadNoPermissionError'/>
<enum value='260' name='NSFileReadNoSuchFileError'/>
<enum value='263' name='NSFileReadTooLargeError'/>
<enum value='256' name='NSFileReadUnknownError'/>
<enum value='264' name='NSFileReadUnknownStringEncodingError'/>
<enum value='262' name='NSFileReadUnsupportedSchemeError'/>
<enum value='1' name='NSFileVersionAddingByMoving'/>
<enum value='1' name='NSFileVersionReplacingByMoving'/>
<enum value='1' name='NSFileWrapperReadingImmediate'/>
<enum value='2' name='NSFileWrapperReadingWithoutMapping'/>
<enum value='1' name='NSFileWrapperWritingAtomic'/>
<enum value='2' name='NSFileWrapperWritingWithNameUpdating'/>
<enum value='516' name='NSFileWriteFileExistsError'/>
<enum value='517' name='NSFileWriteInapplicableStringEncodingError'/>
<enum value='514' name='NSFileWriteInvalidFileNameError'/>
<enum value='513' name='NSFileWriteNoPermissionError'/>
<enum value='640' name='NSFileWriteOutOfSpaceError'/>
<enum value='512' name='NSFileWriteUnknownError'/>
<enum value='518' name='NSFileWriteUnsupportedSchemeError'/>
<enum value='642' name='NSFileWriteVolumeReadOnlyError'/>
<enum value='512' name='NSForcedOrderingSearch'/>
<enum value='2048' name='NSFormattingError'/>
<enum value='2559' name='NSFormattingErrorMaximum'/>
<enum value='2048' name='NSFormattingErrorMinimum'/>
<enum value='397.40' name='NSFoundationVersionNumber10_0'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_2'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_3'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_1'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_3'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_5'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_6'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_7'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_8'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3_1'/>
<enum value='500.30' name='NSFoundationVersionNumber10_3_2'/>
<enum value='500.54' name='NSFoundationVersionNumber10_3_3'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_4'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_5'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_6'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_7'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_8'/>
<enum value='500.58' name='NSFoundationVersionNumber10_3_9'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4_1'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_10'/>
<enum value='567.36' name='NSFoundationVersionNumber10_4_11'/>
<enum value='567.12' name='NSFoundationVersionNumber10_4_2'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_3'/>
<enum value='567.23' name='NSFoundationVersionNumber10_4_4_Intel'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_4_PowerPC'/>
<enum value='567.25' name='NSFoundationVersionNumber10_4_5'/>
<enum value='567.26' name='NSFoundationVersionNumber10_4_6'/>
<enum value='567.27' name='NSFoundationVersionNumber10_4_7'/>
<enum value='567.28' name='NSFoundationVersionNumber10_4_8'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_9'/>
<enum value='677.00' name='NSFoundationVersionNumber10_5'/>
<enum value='677.10' name='NSFoundationVersionNumber10_5_1'/>
<enum value='677.15' name='NSFoundationVersionNumber10_5_2'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_3'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_4'/>
<enum value='677.21' name='NSFoundationVersionNumber10_5_5'/>
<enum value='677.22' name='NSFoundationVersionNumber10_5_6'/>
<enum value='677.24' name='NSFoundationVersionNumber10_5_7'/>
<enum value='677.26' name='NSFoundationVersionNumber10_5_8'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6_1'/>
<enum value='751.14' name='NSFoundationVersionNumber10_6_2'/>
<enum value='751.21' name='NSFoundationVersionNumber10_6_3'/>
<enum value='751.29' name='NSFoundationVersionNumber10_6_4'/>
<enum value='751.42' name='NSFoundationVersionNumber10_6_5'/>
<enum value='751.32' name='NSFoundationVersionNumber_iOS_4_0'/>
<enum value='751.37' name='NSFoundationVersionNumber_iOS_4_1'/>
<enum value='751.49' name='NSFoundationVersionNumber_iOS_4_2'/>
<enum value='678.24' name='NSFoundationVersionNumber_iPhoneOS_2_0'/>
<enum value='678.26' name='NSFoundationVersionNumber_iPhoneOS_2_1'/>
<enum value='678.29' name='NSFoundationVersionNumber_iPhoneOS_2_2'/>
<enum value='678.47' name='NSFoundationVersionNumber_iPhoneOS_3_0'/>
<enum value='678.51' name='NSFoundationVersionNumber_iPhoneOS_3_1'/>
<enum value='678.60' name='NSFoundationVersionNumber_iPhoneOS_3_2'/>
<enum value='412' name='NSFoundationVersionWithFileManagerResourceForkSupport'/>
<enum value='4' name='NSFunctionExpressionType'/>
<enum value='3' name='NSGreaterThanOrEqualToPredicateOperatorType'/>
<enum value='2' name='NSGreaterThanPredicateOperatorType'/>
<enum value='4' name='NSHPUXOperatingSystem'/>
<enum value='0' name='NSHTTPCookieAcceptPolicyAlways'/>
<enum value='1' name='NSHTTPCookieAcceptPolicyNever'/>
<enum value='2' name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain'/>
<enum value='32' name='NSHourCalendarUnit'/>
<enum value='1' name='NSINTEGER_DEFINED'/>
<enum value='21' name='NSISO2022JPStringEncoding'/>
<enum value='5' name='NSISOLatin1StringEncoding'/>
<enum value='9' name='NSISOLatin2StringEncoding'/>
<enum value='10' name='NSInPredicateOperatorType'/>
<enum value='16' name='NSInputMethodsDirectory'/>
<enum value='2147483647' name='NSIntegerMax'/>
<enum value='-2147483648' name='NSIntegerMin'/>
<enum value='6' name='NSIntersectSetExpressionType'/>
<enum value='99' name='NSItemReplacementDirectory'/>
<enum value='4' name='NSJSONReadingAllowFragments'/>
<enum value='1' name='NSJSONReadingMutableContainers'/>
<enum value='2' name='NSJSONReadingMutableLeaves'/>
<enum value='1' name='NSJSONWritingPrettyPrinted'/>
<enum value='3' name='NSJapaneseEUCStringEncoding'/>
<enum value='3' name='NSKeyPathExpressionType'/>
<enum value='2' name='NSKeyValueChangeInsertion'/>
<enum value='3' name='NSKeyValueChangeRemoval'/>
<enum value='4' name='NSKeyValueChangeReplacement'/>
<enum value='1' name='NSKeyValueChangeSetting'/>
<enum value='3' name='NSKeyValueIntersectSetMutation'/>
<enum value='2' name='NSKeyValueMinusSetMutation'/>
<enum value='4' name='NSKeyValueObservingOptionInitial'/>
<enum value='1' name='NSKeyValueObservingOptionNew'/>
<enum value='2' name='NSKeyValueObservingOptionOld'/>
<enum value='8' name='NSKeyValueObservingOptionPrior'/>
<enum value='4' name='NSKeyValueSetSetMutation'/>
<enum value='1' name='NSKeyValueUnionSetMutation'/>
<enum value='1024' name='NSKeyValueValidationError'/>
<enum value='1' name='NSLessThanOrEqualToPredicateOperatorType'/>
<enum value='0' name='NSLessThanPredicateOperatorType'/>
<enum value='5' name='NSLibraryDirectory'/>
<enum value='7' name='NSLikePredicateOperatorType'/>
<enum value='16' name='NSLinguisticTaggerJoinNames'/>
<enum value='8' name='NSLinguisticTaggerOmitOther'/>
<enum value='2' name='NSLinguisticTaggerOmitPunctuation'/>
<enum value='4' name='NSLinguisticTaggerOmitWhitespace'/>
<enum value='1' name='NSLinguisticTaggerOmitWords'/>
<enum value='2' name='NSLiteralSearch'/>
<enum value='2' name='NSLocalDomainMask'/>
<enum value='4' name='NSLocaleLanguageDirectionBottomToTop'/>
<enum value='1' name='NSLocaleLanguageDirectionLeftToRight'/>
<enum value='2' name='NSLocaleLanguageDirectionRightToLeft'/>
<enum value='3' name='NSLocaleLanguageDirectionTopToBottom'/>
<enum value='0' name='NSLocaleLanguageDirectionUnknown'/>
<enum value='5' name='NSMACHOperatingSystem'/>
<enum value='30' name='NSMacOSRomanStringEncoding'/>
<enum value='0' name='NSMachPortDeallocateNone'/>
<enum value='2' name='NSMachPortDeallocateReceiveRight'/>
<enum value='1' name='NSMachPortDeallocateSendRight'/>
<enum value='1' name='NSMappedRead'/>
<enum value='6' name='NSMatchesPredicateOperatorType'/>
<enum value='4' name='NSMatchingAnchored'/>
<enum value='2' name='NSMatchingCompleted'/>
<enum value='4' name='NSMatchingHitEnd'/>
<enum value='16' name='NSMatchingInternalError'/>
<enum value='1' name='NSMatchingProgress'/>
<enum value='2' name='NSMatchingReportCompletion'/>
<enum value='1' name='NSMatchingReportProgress'/>
<enum value='8' name='NSMatchingRequiredEnd'/>
<enum value='8' name='NSMatchingWithTransparentBounds'/>
<enum value='16' name='NSMatchingWithoutAnchoringBounds'/>
<enum value='2147483646' name='NSMaximumStringLength'/>
<enum value='7' name='NSMinusSetExpressionType'/>
<enum value='64' name='NSMinuteCalendarUnit'/>
<enum value='8' name='NSMonthCalendarUnit'/>
<enum value='17' name='NSMoviesDirectory'/>
<enum value='18' name='NSMusicDirectory'/>
<enum value='2' name='NSNEXTSTEPStringEncoding'/>
<enum value='1' name='NSNetServiceNoAutoRename'/>
<enum value='-72003' name='NSNetServicesActivityInProgress'/>
<enum value='-72004' name='NSNetServicesBadArgumentError'/>
<enum value='-72005' name='NSNetServicesCancelledError'/>
<enum value='-72001' name='NSNetServicesCollisionError'/>
<enum value='-72006' name='NSNetServicesInvalidError'/>
<enum value='-72002' name='NSNetServicesNotFoundError'/>
<enum value='-72007' name='NSNetServicesTimeoutError'/>
<enum value='-72000' name='NSNetServicesUnknownError'/>
<enum value='4' name='NSNetworkDomainMask'/>
<enum value='7' name='NSNonLossyASCIIStringEncoding'/>
<enum value='4' name='NSNormalizedPredicateOption'/>
<enum value='5' name='NSNotEqualToPredicateOperatorType'/>
<enum value='2147483647' name='NSNotFound'/>
<enum value='0' name='NSNotPredicateType'/>
<enum value='1' name='NSNotificationCoalescingOnName'/>
<enum value='2' name='NSNotificationCoalescingOnSender'/>
<enum value='0' name='NSNotificationNoCoalescing'/>
<enum value='1040' name='NSNumberFormatterBehavior10_4'/>
<enum value='0' name='NSNumberFormatterBehaviorDefault'/>
<enum value='2' name='NSNumberFormatterCurrencyStyle'/>
<enum value='1' name='NSNumberFormatterDecimalStyle'/>
<enum value='0' name='NSNumberFormatterNoStyle'/>
<enum value='1' name='NSNumberFormatterPadAfterPrefix'/>
<enum value='3' name='NSNumberFormatterPadAfterSuffix'/>
<enum value='0' name='NSNumberFormatterPadBeforePrefix'/>
<enum value='2' name='NSNumberFormatterPadBeforeSuffix'/>
<enum value='3' name='NSNumberFormatterPercentStyle'/>
<enum value='0' name='NSNumberFormatterRoundCeiling'/>
<enum value='2' name='NSNumberFormatterRoundDown'/>
<enum value='1' name='NSNumberFormatterRoundFloor'/>
<enum value='5' name='NSNumberFormatterRoundHalfDown'/>
<enum value='4' name='NSNumberFormatterRoundHalfEven'/>
<enum value='6' name='NSNumberFormatterRoundHalfUp'/>
<enum value='3' name='NSNumberFormatterRoundUp'/>
<enum value='4' name='NSNumberFormatterScientificStyle'/>
<enum value='5' name='NSNumberFormatterSpellOutStyle'/>
<enum value='64' name='NSNumericSearch'/>
<enum value='7' name='NSOSF1OperatingSystem'/>
<enum value='62464' name='NSOpenStepUnicodeReservedBase'/>
<enum value='-1' name='NSOperationQueueDefaultMaxConcurrentOperationCount'/>
<enum value='4' name='NSOperationQueuePriorityHigh'/>
<enum value='-4' name='NSOperationQueuePriorityLow'/>
<enum value='0' name='NSOperationQueuePriorityNormal'/>
<enum value='8' name='NSOperationQueuePriorityVeryHigh'/>
<enum value='-8' name='NSOperationQueuePriorityVeryLow'/>
<enum value='2' name='NSOrPredicateType'/>
<enum value='-1' name='NSOrderedAscending'/>
<enum value='1' name='NSOrderedDescending'/>
<enum value='0' name='NSOrderedSame'/>
<enum value='19' name='NSPicturesDirectory'/>
<enum value='2' name='NSPostASAP'/>
<enum value='3' name='NSPostNow'/>
<enum value='1' name='NSPostWhenIdle'/>
<enum value='22' name='NSPreferencePanesDirectory'/>
<enum value='20' name='NSPrinterDescriptionDirectory'/>
<enum value='200' name='NSPropertyListBinaryFormat_v1_0'/>
<enum value='4095' name='NSPropertyListErrorMaximum'/>
<enum value='3840' name='NSPropertyListErrorMinimum'/>
<enum value='0' name='NSPropertyListImmutable'/>
<enum value='1' name='NSPropertyListMutableContainers'/>
<enum value='2' name='NSPropertyListMutableContainersAndLeaves'/>
<enum value='1' name='NSPropertyListOpenStepFormat'/>
<enum value='3840' name='NSPropertyListReadCorruptError'/>
<enum value='3842' name='NSPropertyListReadStreamError'/>
<enum value='3841' name='NSPropertyListReadUnknownVersionError'/>
<enum value='3851' name='NSPropertyListWriteStreamError'/>
<enum value='100' name='NSPropertyListXMLFormat_v1_0'/>
<enum value='65536' name='NSProprietaryStringEncoding'/>
<enum value='2048' name='NSQuarterCalendarUnit'/>
<enum value='2' name='NSRegularExpressionAllowCommentsAndWhitespace'/>
<enum value='16' name='NSRegularExpressionAnchorsMatchLines'/>
<enum value='1' name='NSRegularExpressionCaseInsensitive'/>
<enum value='8' name='NSRegularExpressionDotMatchesLineSeparators'/>
<enum value='4' name='NSRegularExpressionIgnoreMetacharacters'/>
<enum value='1024' name='NSRegularExpressionSearch'/>
<enum value='64' name='NSRegularExpressionUseUnicodeWordBoundaries'/>
<enum value='32' name='NSRegularExpressionUseUnixLineSeparators'/>
<enum value='3' name='NSRoundBankers'/>
<enum value='1' name='NSRoundDown'/>
<enum value='0' name='NSRoundPlain'/>
<enum value='2' name='NSRoundUp'/>
<enum value='128' name='NSSecondCalendarUnit'/>
<enum value='21' name='NSSharedPublicDirectory'/>
<enum value='8' name='NSShiftJISStringEncoding'/>
<enum value='3' name='NSSolarisOperatingSystem'/>
<enum value='1' name='NSSortConcurrent'/>
<enum value='16' name='NSSortStable'/>
<enum value='16' name='NSStreamEventEndEncountered'/>
<enum value='8' name='NSStreamEventErrorOccurred'/>
<enum value='2' name='NSStreamEventHasBytesAvailable'/>
<enum value='4' name='NSStreamEventHasSpaceAvailable'/>
<enum value='0' name='NSStreamEventNone'/>
<enum value='1' name='NSStreamEventOpenCompleted'/>
<enum value='5' name='NSStreamStatusAtEnd'/>
<enum value='6' name='NSStreamStatusClosed'/>
<enum value='7' name='NSStreamStatusError'/>
<enum value='0' name='NSStreamStatusNotOpen'/>
<enum value='2' name='NSStreamStatusOpen'/>
<enum value='1' name='NSStreamStatusOpening'/>
<enum value='3' name='NSStreamStatusReading'/>
<enum value='4' name='NSStreamStatusWriting'/>
<enum value='1' name='NSStringEncodingConversionAllowLossy'/>
<enum value='2' name='NSStringEncodingConversionExternalRepresentation'/>
<enum value='2' name='NSStringEnumerationByComposedCharacterSequences'/>
<enum value='0' name='NSStringEnumerationByLines'/>
<enum value='1' name='NSStringEnumerationByParagraphs'/>
<enum value='4' name='NSStringEnumerationBySentences'/>
<enum value='3' name='NSStringEnumerationByWords'/>
<enum value='1024' name='NSStringEnumerationLocalized'/>
<enum value='256' name='NSStringEnumerationReverse'/>
<enum value='512' name='NSStringEnumerationSubstringNotRequired'/>
<enum value='13' name='NSSubqueryExpressionType'/>
<enum value='6' name='NSSunOSOperatingSystem'/>
<enum value='6' name='NSSymbolStringEncoding'/>
<enum value='8' name='NSSystemDomainMask'/>
<enum value='18446744069414584320' name='NSTextCheckingAllCustomTypes'/>
<enum value='4294967295' name='NSTextCheckingAllSystemTypes'/>
<enum value='18446744073709551615' name='NSTextCheckingAllTypes'/>
<enum value='16' name='NSTextCheckingTypeAddress'/>
<enum value='512' name='NSTextCheckingTypeCorrection'/>
<enum value='128' name='NSTextCheckingTypeDash'/>
<enum value='8' name='NSTextCheckingTypeDate'/>
<enum value='4' name='NSTextCheckingTypeGrammar'/>
<enum value='32' name='NSTextCheckingTypeLink'/>
<enum value='1' name='NSTextCheckingTypeOrthography'/>
<enum value='2048' name='NSTextCheckingTypePhoneNumber'/>
<enum value='64' name='NSTextCheckingTypeQuote'/>
<enum value='1024' name='NSTextCheckingTypeRegularExpression'/>
<enum value='256' name='NSTextCheckingTypeReplacement'/>
<enum value='2' name='NSTextCheckingTypeSpelling'/>
<enum value='4096' name='NSTextCheckingTypeTransitInformation'/>
<enum value='978307200.0' name='NSTimeIntervalSince1970'/>
<enum value='2097152' name='NSTimeZoneCalendarUnit'/>
<enum value='2' name='NSTimeZoneNameStyleDaylightSaving'/>
<enum value='4' name='NSTimeZoneNameStyleGeneric'/>
<enum value='3' name='NSTimeZoneNameStyleShortDaylightSaving'/>
<enum value='5' name='NSTimeZoneNameStyleShortGeneric'/>
<enum value='1' name='NSTimeZoneNameStyleShortStandard'/>
<enum value='0' name='NSTimeZoneNameStyleStandard'/>
<enum value='4294967295' name='NSUIntegerMax'/>
<enum value='512' name='NSURLBookmarkCreationMinimalBookmark'/>
<enum value='256' name='NSURLBookmarkCreationPreferFileIDResolution'/>
<enum value='1024' name='NSURLBookmarkCreationSuitableForBookmarkFile'/>
<enum value='512' name='NSURLBookmarkResolutionWithoutMounting'/>
<enum value='256' name='NSURLBookmarkResolutionWithoutUI'/>
<enum value='0' name='NSURLCacheStorageAllowed'/>
<enum value='1' name='NSURLCacheStorageAllowedInMemoryOnly'/>
<enum value='2' name='NSURLCacheStorageNotAllowed'/>
<enum value='1' name='NSURLCredentialPersistenceForSession'/>
<enum value='0' name='NSURLCredentialPersistenceNone'/>
<enum value='2' name='NSURLCredentialPersistencePermanent'/>
<enum value='-1011' name='NSURLErrorBadServerResponse'/>
<enum value='-1000' name='NSURLErrorBadURL'/>
<enum value='-1019' name='NSURLErrorCallIsActive'/>
<enum value='-999' name='NSURLErrorCancelled'/>
<enum value='-3002' name='NSURLErrorCannotCloseFile'/>
<enum value='-1004' name='NSURLErrorCannotConnectToHost'/>
<enum value='-3000' name='NSURLErrorCannotCreateFile'/>
<enum value='-1016' name='NSURLErrorCannotDecodeContentData'/>
<enum value='-1015' name='NSURLErrorCannotDecodeRawData'/>
<enum value='-1003' name='NSURLErrorCannotFindHost'/>
<enum value='-2000' name='NSURLErrorCannotLoadFromNetwork'/>
<enum value='-3005' name='NSURLErrorCannotMoveFile'/>
<enum value='-3001' name='NSURLErrorCannotOpenFile'/>
<enum value='-1017' name='NSURLErrorCannotParseResponse'/>
<enum value='-3004' name='NSURLErrorCannotRemoveFile'/>
<enum value='-3003' name='NSURLErrorCannotWriteToFile'/>
<enum value='-1205' name='NSURLErrorClientCertificateRejected'/>
<enum value='-1206' name='NSURLErrorClientCertificateRequired'/>
<enum value='-1006' name='NSURLErrorDNSLookupFailed'/>
<enum value='-1103' name='NSURLErrorDataLengthExceedsMaximum'/>
<enum value='-1020' name='NSURLErrorDataNotAllowed'/>
<enum value='-3006' name='NSURLErrorDownloadDecodingFailedMidStream'/>
<enum value='-3007' name='NSURLErrorDownloadDecodingFailedToComplete'/>
<enum value='-1100' name='NSURLErrorFileDoesNotExist'/>
<enum value='-1101' name='NSURLErrorFileIsDirectory'/>
<enum value='-1007' name='NSURLErrorHTTPTooManyRedirects'/>
<enum value='-1018' name='NSURLErrorInternationalRoamingOff'/>
<enum value='-1005' name='NSURLErrorNetworkConnectionLost'/>
<enum value='-1102' name='NSURLErrorNoPermissionsToReadFile'/>
<enum value='-1009' name='NSURLErrorNotConnectedToInternet'/>
<enum value='-1010' name='NSURLErrorRedirectToNonExistentLocation'/>
<enum value='-1021' name='NSURLErrorRequestBodyStreamExhausted'/>
<enum value='-1008' name='NSURLErrorResourceUnavailable'/>
<enum value='-1200' name='NSURLErrorSecureConnectionFailed'/>
<enum value='-1201' name='NSURLErrorServerCertificateHasBadDate'/>
<enum value='-1203' name='NSURLErrorServerCertificateHasUnknownRoot'/>
<enum value='-1204' name='NSURLErrorServerCertificateNotYetValid'/>
<enum value='-1202' name='NSURLErrorServerCertificateUntrusted'/>
<enum value='-1001' name='NSURLErrorTimedOut'/>
<enum value='-1' name='NSURLErrorUnknown'/>
<enum value='-1002' name='NSURLErrorUnsupportedURL'/>
<enum value='-1013' name='NSURLErrorUserAuthenticationRequired'/>
<enum value='-1012' name='NSURLErrorUserCancelledAuthentication'/>
<enum value='-1014' name='NSURLErrorZeroByteResource'/>
<enum value='3' name='NSURLNetworkServiceTypeBackground'/>
<enum value='0' name='NSURLNetworkServiceTypeDefault'/>
<enum value='2' name='NSURLNetworkServiceTypeVideo'/>
<enum value='1' name='NSURLNetworkServiceTypeVoIP'/>
<enum value='4' name='NSURLNetworkServiceTypeVoice'/>
<enum value='1' name='NSURLRequestReloadIgnoringCacheData'/>
<enum value='4' name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData'/>
<enum value='1' name='NSURLRequestReloadIgnoringLocalCacheData'/>
<enum value='5' name='NSURLRequestReloadRevalidatingCacheData'/>
<enum value='3' name='NSURLRequestReturnCacheDataDontLoad'/>
<enum value='2' name='NSURLRequestReturnCacheDataElseLoad'/>
<enum value='0' name='NSURLRequestUseProtocolCachePolicy'/>
<enum value='-1' name='NSURLResponseUnknownLength'/>
<enum value='2415919360' name='NSUTF16BigEndianStringEncoding'/>
<enum value='2483028224' name='NSUTF16LittleEndianStringEncoding'/>
<enum value='10' name='NSUTF16StringEncoding'/>
<enum value='2550137088' name='NSUTF32BigEndianStringEncoding'/>
<enum value='2617245952' name='NSUTF32LittleEndianStringEncoding'/>
<enum value='2348810496' name='NSUTF32StringEncoding'/>
<enum value='4' name='NSUTF8StringEncoding'/>
<enum value='1' name='NSUbiquitousKeyValueStoreInitialSyncChange'/>
<enum value='2' name='NSUbiquitousKeyValueStoreQuotaViolationChange'/>
<enum value='0' name='NSUbiquitousKeyValueStoreServerChange'/>
<enum value='2' name='NSUncachedRead'/>
<enum value='2147483647' name='NSUndefinedDateComponent'/>
<enum value='350000' name='NSUndoCloseGroupingRunLoopOrdering'/>
<enum value='10' name='NSUnicodeStringEncoding'/>
<enum value='5' name='NSUnionSetExpressionType'/>
<enum value='3072' name='NSUserCancelledError'/>
<enum value='7' name='NSUserDirectory'/>
<enum value='1' name='NSUserDomainMask'/>
<enum value='2047' name='NSValidationErrorMaximum'/>
<enum value='1024' name='NSValidationErrorMinimum'/>
<enum value='2' name='NSVariableExpressionType'/>
<enum value='4' name='NSVolumeEnumerationProduceFileReferenceURLs'/>
<enum value='2' name='NSVolumeEnumerationSkipHiddenVolumes'/>
<enum value='256' name='NSWeekCalendarUnit'/>
<enum value='4096' name='NSWeekOfMonthCalendarUnit'/>
<enum value='8192' name='NSWeekOfYearCalendarUnit'/>
<enum value='512' name='NSWeekdayCalendarUnit'/>
<enum value='1024' name='NSWeekdayOrdinalCalendarUnit'/>
<enum value='256' name='NSWidthInsensitiveSearch'/>
<enum value='2' name='NSWindows95OperatingSystem'/>
<enum value='15' name='NSWindowsCP1250StringEncoding'/>
<enum value='11' name='NSWindowsCP1251StringEncoding'/>
<enum value='12' name='NSWindowsCP1252StringEncoding'/>
<enum value='13' name='NSWindowsCP1253StringEncoding'/>
<enum value='14' name='NSWindowsCP1254StringEncoding'/>
<enum value='1' name='NSWindowsNTOperatingSystem'/>
<enum value='1' name='NSWrapCalendarComponents'/>
<enum value='41' name='NSXMLParserAttributeHasNoValueError'/>
<enum value='51' name='NSXMLParserAttributeListNotFinishedError'/>
<enum value='50' name='NSXMLParserAttributeListNotStartedError'/>
<enum value='40' name='NSXMLParserAttributeNotFinishedError'/>
<enum value='39' name='NSXMLParserAttributeNotStartedError'/>
<enum value='42' name='NSXMLParserAttributeRedefinedError'/>
<enum value='63' name='NSXMLParserCDATANotFinishedError'/>
<enum value='10' name='NSXMLParserCharacterRefAtEOFError'/>
<enum value='13' name='NSXMLParserCharacterRefInDTDError'/>
<enum value='12' name='NSXMLParserCharacterRefInEpilogError'/>
<enum value='11' name='NSXMLParserCharacterRefInPrologError'/>
<enum value='80' name='NSXMLParserCommentContainsDoubleHyphenError'/>
<enum value='45' name='NSXMLParserCommentNotFinishedError'/>
<enum value='59' name='NSXMLParserConditionalSectionNotFinishedError'/>
<enum value='58' name='NSXMLParserConditionalSectionNotStartedError'/>
<enum value='61' name='NSXMLParserDOCTYPEDeclNotFinishedError'/>
<enum value='512' name='NSXMLParserDelegateAbortedParseError'/>
<enum value='3' name='NSXMLParserDocumentStartError'/>
<enum value='55' name='NSXMLParserElementContentDeclNotFinishedError'/>
<enum value='54' name='NSXMLParserElementContentDeclNotStartedError'/>
<enum value='4' name='NSXMLParserEmptyDocumentError'/>
<enum value='32' name='NSXMLParserEncodingNotSupportedError'/>
<enum value='90' name='NSXMLParserEntityBoundaryError'/>
<enum value='29' name='NSXMLParserEntityIsExternalError'/>
<enum value='30' name='NSXMLParserEntityIsParameterError'/>
<enum value='37' name='NSXMLParserEntityNotFinishedError'/>
<enum value='36' name='NSXMLParserEntityNotStartedError'/>
<enum value='14' name='NSXMLParserEntityRefAtEOFError'/>
<enum value='17' name='NSXMLParserEntityRefInDTDError'/>
<enum value='16' name='NSXMLParserEntityRefInEpilogError'/>
<enum value='15' name='NSXMLParserEntityRefInPrologError'/>
<enum value='89' name='NSXMLParserEntityRefLoopError'/>
<enum value='23' name='NSXMLParserEntityReferenceMissingSemiError'/>
<enum value='22' name='NSXMLParserEntityReferenceWithoutNameError'/>
<enum value='84' name='NSXMLParserEntityValueRequiredError'/>
<enum value='75' name='NSXMLParserEqualExpectedError'/>
<enum value='82' name='NSXMLParserExternalStandaloneEntityError'/>
<enum value='60' name='NSXMLParserExternalSubsetNotFinishedError'/>
<enum value='86' name='NSXMLParserExtraContentError'/>
<enum value='73' name='NSXMLParserGTRequiredError'/>
<enum value='1' name='NSXMLParserInternalError'/>
<enum value='9' name='NSXMLParserInvalidCharacterError'/>
<enum value='87' name='NSXMLParserInvalidCharacterInEntityError'/>
<enum value='8' name='NSXMLParserInvalidCharacterRefError'/>
<enum value='83' name='NSXMLParserInvalidConditionalSectionError'/>
<enum value='7' name='NSXMLParserInvalidDecimalCharacterRefError'/>
<enum value='81' name='NSXMLParserInvalidEncodingError'/>
<enum value='79' name='NSXMLParserInvalidEncodingNameError'/>
<enum value='6' name='NSXMLParserInvalidHexCharacterRefError'/>
<enum value='91' name='NSXMLParserInvalidURIError'/>
<enum value='72' name='NSXMLParserLTRequiredError'/>
<enum value='74' name='NSXMLParserLTSlashRequiredError'/>
<enum value='38' name='NSXMLParserLessThanSymbolInAttributeError'/>
<enum value='44' name='NSXMLParserLiteralNotFinishedError'/>
<enum value='43' name='NSXMLParserLiteralNotStartedError'/>
<enum value='62' name='NSXMLParserMisplacedCDATAEndStringError'/>
<enum value='64' name='NSXMLParserMisplacedXMLDeclarationError'/>
<enum value='53' name='NSXMLParserMixedContentDeclNotFinishedError'/>
<enum value='52' name='NSXMLParserMixedContentDeclNotStartedError'/>
<enum value='68' name='NSXMLParserNAMERequiredError'/>
<enum value='67' name='NSXMLParserNMTOKENRequiredError'/>
<enum value='35' name='NSXMLParserNamespaceDeclarationError'/>
<enum value='94' name='NSXMLParserNoDTDError'/>
<enum value='85' name='NSXMLParserNotWellBalancedError'/>
<enum value='49' name='NSXMLParserNotationNotFinishedError'/>
<enum value='48' name='NSXMLParserNotationNotStartedError'/>
<enum value='2' name='NSXMLParserOutOfMemoryError'/>
<enum value='69' name='NSXMLParserPCDATARequiredError'/>
<enum value='18' name='NSXMLParserParsedEntityRefAtEOFError'/>
<enum value='20' name='NSXMLParserParsedEntityRefInEpilogError'/>
<enum value='88' name='NSXMLParserParsedEntityRefInInternalError'/>
<enum value='21' name='NSXMLParserParsedEntityRefInInternalSubsetError'/>
<enum value='19' name='NSXMLParserParsedEntityRefInPrologError'/>
<enum value='25' name='NSXMLParserParsedEntityRefMissingSemiError'/>
<enum value='24' name='NSXMLParserParsedEntityRefNoNameError'/>
<enum value='5' name='NSXMLParserPrematureDocumentEndError'/>
<enum value='47' name='NSXMLParserProcessingInstructionNotFinishedError'/>
<enum value='46' name='NSXMLParserProcessingInstructionNotStartedError'/>
<enum value='71' name='NSXMLParserPublicIdentifierRequiredError'/>
<enum value='66' name='NSXMLParserSeparatorRequiredError'/>
<enum value='65' name='NSXMLParserSpaceRequiredError'/>
<enum value='78' name='NSXMLParserStandaloneValueError'/>
<enum value='34' name='NSXMLParserStringNotClosedError'/>
<enum value='33' name='NSXMLParserStringNotStartedError'/>
<enum value='76' name='NSXMLParserTagNameMismatchError'/>
<enum value='92' name='NSXMLParserURIFragmentError'/>
<enum value='70' name='NSXMLParserURIRequiredError'/>
<enum value='26' name='NSXMLParserUndeclaredEntityError'/>
<enum value='77' name='NSXMLParserUnfinishedTagError'/>
<enum value='31' name='NSXMLParserUnknownEncodingError'/>
<enum value='28' name='NSXMLParserUnparsedEntityError'/>
<enum value='57' name='NSXMLParserXMLDeclNotFinishedError'/>
<enum value='56' name='NSXMLParserXMLDeclNotStartedError'/>
<enum value='4' name='NSYearCalendarUnit'/>
<enum value='16384' name='NSYearForWeekOfYearCalendarUnit'/>
<enum value='1' name='NS_BLOCKS_AVAILABLE'/>
<enum value='2' name='NS_BigEndian'/>
<enum value='1' name='NS_LittleEndian'/>
<enum value='0' name='NS_UNICHAR_IS_EIGHT_BIT'/>
<enum value='0' name='NS_UnknownByteOrder'/>
<function inline='true' name='CFBridgingRelease'>
<arg type='^v' name='X' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function inline='true' name='CFBridgingRetain'>
<arg type='@' name='X' declared_type='id'/>
<retval type='^v' declared_type='CFTypeRef'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg type='I' name='bytes' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSAllocateObject'>
<arg type='#' name='aClass' declared_type='Class'/>
<arg type='I' name='extraBytes' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSClassFromString'>
<arg type='@' name='aClassName' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</function>
<function inline='true' name='NSConvertHostDoubleToSwapped'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSConvertHostFloatToSwapped'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSConvertSwappedDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSConvertSwappedFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function name='NSCopyMemoryPages'>
<arg type='^v' name='source' const='true' declared_type='void*'/>
<arg type='^v' name='dest' declared_type='void*'/>
<arg type='I' name='bytes' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCopyObject'>
<arg type='@' name='object' declared_type='id'/>
<arg type='I' name='extraBytes' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSCreateZone'>
<arg type='I' name='startSize' declared_type='NSUInteger'/>
<arg type='I' name='granularity' declared_type='NSUInteger'/>
<arg type='B' name='canFree' declared_type='BOOL'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg type='^v' name='ptr' declared_type='void*'/>
<arg type='I' name='bytes' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDeallocateObject'>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalAdd'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' const='true' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' const='true' declared_type='NSDecimal*'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalCompact'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalCompare'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' const='true' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' const='true' declared_type='NSDecimal*'/>
<retval type='i' declared_type='NSComparisonResult'/>
</function>
<function name='NSDecimalCopy'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='destination' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='source' const='true' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalDivide'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' const='true' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' const='true' declared_type='NSDecimal*'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function inline='true' name='NSDecimalIsNotANumber'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' const='true' declared_type='NSDecimal*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDecimalMultiply'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' const='true' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' const='true' declared_type='NSDecimal*'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number' const='true' declared_type='NSDecimal*'/>
<arg type='s' name='power' declared_type='short'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalNormalize'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number1' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number2' declared_type='NSDecimal*'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalPower'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number' const='true' declared_type='NSDecimal*'/>
<arg type='I' name='power' declared_type='NSUInteger'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalRound'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number' const='true' declared_type='NSDecimal*'/>
<arg type='i' name='scale' declared_type='NSInteger'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalString'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' const='true' declared_type='NSDecimal*'/>
<arg type='@' name='locale' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSDecimalSubtract'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' const='true' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' const='true' declared_type='NSDecimal*'/>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDefaultMallocZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function inline='true' name='NSEqualRanges'>
<arg type='{_NSRange=II}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' name='range2' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSExtraRefCount'>
<arg type='@' name='object' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSFullUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg type='*' name='typePtr' const='true' declared_type='char*'/>
<arg type='^I' name='sizep' declared_type='NSUInteger*'/>
<arg type='^I' name='alignp' declared_type='NSUInteger*'/>
<retval type='*' const='true' declared_type='char*'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval type='^?' function_pointer='true' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</retval>
</function>
<function name='NSHomeDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg type='@' name='userName' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function inline='true' name='NSHostByteOrder'>
<retval type='l' declared_type='long'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSIntersectionRange'>
<arg type='{_NSRange=II}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' name='range2' declared_type='NSRange'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function inline='true' name='NSLocationInRange'>
<arg type='I' name='loc' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSLog' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSLogPageSize'>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSLogv'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*'/>
<arg type='*' name='args' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSMakeCollectable'>
<arg type='^v' name='cf' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function inline='true' name='NSMakeRange'>
<arg type='I' name='loc' declared_type='NSUInteger'/>
<arg type='I' name='len' declared_type='NSUInteger'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function inline='true' name='NSMaxRange'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSPageSize'>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSProtocolFromString'>
<arg type='@' name='namestr' declared_type='NSString*'/>
<retval type='@' declared_type='Protocol*'/>
</function>
<function name='NSRangeFromString'>
<arg type='@' name='aString' declared_type='NSString*'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSRecycleZone'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg type='I' name='bytes' declared_type='NSUInteger'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg type='I' name='bytes' declared_type='NSUInteger'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg type='I' name='directory' declared_type='NSSearchPathDirectory'/>
<arg type='I' name='domainMask' declared_type='NSSearchPathDomainMask'/>
<arg type='B' name='expandTilde' declared_type='BOOL'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSSelectorFromString'>
<arg type='@' name='aSelectorName' declared_type='NSString*'/>
<retval type=':' declared_type='SEL'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg type='^?' function_pointer='true' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='NSSetZoneName'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg type='@' name='anObject' declared_type='id'/>
<arg type='^{_NSZone=}' name='requestedZone' declared_type='NSZone*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSStringFromClass'>
<arg type='#' name='aClass' declared_type='Class'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromProtocol'>
<arg type='@' name='proto' declared_type='Protocol*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromRange'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromSelector'>
<arg type=':' name='aSelector' declared_type='SEL'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function inline='true' name='NSSwapBigDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSSwapBigFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function inline='true' name='NSSwapBigIntToHost'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapBigLongLongToHost'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapBigLongToHost'>
<arg type='L' name='x' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapBigShortToHost'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapDouble'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapFloat'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostDoubleToBig'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapHostDoubleToLittle'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapHostFloatToBig'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostFloatToLittle'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostIntToBig'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapHostIntToLittle'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapHostLongLongToBig'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapHostLongLongToLittle'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapHostLongToBig'>
<arg type='L' name='x' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapHostLongToLittle'>
<arg type='L' name='x' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapHostShortToBig'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapHostShortToLittle'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapInt'>
<arg type='I' name='inv' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapLittleDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSSwapLittleFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function inline='true' name='NSSwapLittleIntToHost'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapLittleLongLongToHost'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapLittleLongToHost'>
<arg type='L' name='x' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapLittleShortToHost'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapLong'>
<arg type='L' name='inv' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapLongLong'>
<arg type='Q' name='inv' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapShort'>
<arg type='S' name='inv' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSTemporaryDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSUnionRange'>
<arg type='{_NSRange=II}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' name='range2' declared_type='NSRange'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSZoneCalloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='I' name='numElems' declared_type='NSUInteger'/>
<arg type='I' name='byteSize' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneFree'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='^v' name='ptr' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSZoneFromPointer'>
<arg type='^v' name='ptr' declared_type='void*'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSZoneMalloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='I' name='size' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneName'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSZoneRealloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='^v' name='ptr' declared_type='void*'/>
<arg type='I' name='size' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<class name='NSArray'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:toObjectsAtIndexes:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='3'/>
<arg type='^v' name='context' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayByAddingObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='arrayByAddingObjectsFromArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithContentsOfFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithContentsOfURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithObject:' class_method='true'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='arrayWithObjects:' class_method='true' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithObjects:count:' class_method='true'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='componentsJoinedByString:'>
<arg type='@' name='separator' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredArrayUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='firstObjectCommonWithArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjects:range:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='r' declared_type='NSRange' index='1'/>
<arg type='I' name='opts' declared_type='NSBinarySearchingOptions' index='2'/>
<arg type='@?' name='cmp' function_pointer='true' declared_type='NSComparator' index='3'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='initWithObjects:' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='argument' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsMatchingExtensions:'>
<arg type='@' name='filterTypes' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayHint'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg type='^?' name='comparator' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg type='^?' name='comparator' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<arg type='@' name='hint' declared_type='NSData*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='I' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subarrayWithRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method selector='currentHandler' class_method='true'>
<retval type='@' declared_type='NSAssertionHandler*'/>
</method>
<method selector='handleFailureInFunction:file:lineNumber:description:' variadic='true'>
<arg type='@' name='functionName' declared_type='NSString*' index='0'/>
<arg type='@' name='fileName' declared_type='NSString*' index='1'/>
<arg type='i' name='line' declared_type='NSInteger' index='2'/>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleFailureInMethod:object:file:lineNumber:description:' variadic='true'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='fileName' declared_type='NSString*' index='2'/>
<arg type='i' name='line' declared_type='NSInteger' index='3'/>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attribute:atIndex:effectiveRange:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' name='location' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' name='range' declared_type='NSRangePointer' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' name='location' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' name='range' declared_type='NSRangePointer' index='2'/>
<arg type='{_NSRange=II}' name='rangeLimit' declared_type='NSRange' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributesAtIndex:effectiveRange:'>
<arg type='I' name='location' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' name='range' declared_type='NSRangePointer' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
<arg type='I' name='location' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' name='range' declared_type='NSRangePointer' index='1'/>
<arg type='{_NSRange=II}' name='rangeLimit' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='enumerateAttribute:inRange:options:usingBlock:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='{_NSRange=II}' name='enumerationRange' declared_type='NSRange' index='1'/>
<arg type='I' name='opts' declared_type='NSAttributedStringEnumerationOptions' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSRange, BOOL *)' index='3'>
<arg type='@' declared_type='id'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateAttributesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' name='enumerationRange' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSAttributedStringEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSDictionary *, NSRange, BOOL *)' index='2'>
<arg type='@' declared_type='NSDictionary*'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithAttributedString:'>
<arg type='@' name='attrStr' declared_type='NSAttributedString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:attributes:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToAttributedString:'>
<arg type='@' name='other' declared_type='NSAttributedString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSAutoreleasePool'>
<method selector='addObject:' class_method='true'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drain'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSBlockOperation'>
<method selector='addExecutionBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='blockOperationWithBlock:' class_method='true'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='executionBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForAuxiliaryExecutable:'>
<arg type='@' name='executableName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:inBundleWithURL:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='bundleURL' declared_type='NSURL*' index='3'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:localization:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:inBundleWithURL:' class_method='true'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='bundleURL' declared_type='NSURL*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:localization:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allBundles' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allFrameworks' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='builtInPlugInsPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='builtInPlugInsURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='bundleForClass:' class_method='true'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='bundleIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundlePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundleURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='bundleWithIdentifier:' class_method='true'>
<arg type='@' name='identifier' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='bundleWithPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='bundleWithURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='classNamed:'>
<arg type='@' name='className' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='developmentLocalization'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableArchitectures'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='executablePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='infoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedInfoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='localizedStringForKey:value:table:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='value' declared_type='NSString*' index='1'/>
<arg type='@' name='tableName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mainBundle' class_method='true'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='objectForInfoDictionaryKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathForAuxiliaryExecutable:'>
<arg type='@' name='executableName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='bundlePath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:forLocalization:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:' class_method='true'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='bundlePath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:forLocalization:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preferredLocalizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preferredLocalizationsFromArray:' class_method='true'>
<arg type='@' name='localizationsArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preferredLocalizationsFromArray:forPreferences:' class_method='true'>
<arg type='@' name='localizationsArray' declared_type='NSArray*' index='0'/>
<arg type='@' name='preferencesArray' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preflightAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='principalClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='privateFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='privateFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='resourcePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedSupportPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedSupportURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='unload'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSCache'>
<method selector='countLimit'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='evictsObjectsWithDiscardedContent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountLimit:'>
<arg type='I' name='lim' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='d' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEvictsObjectsWithDiscardedContent:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:cost:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<arg type='I' name='g' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalCostLimit:'>
<arg type='I' name='lim' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalCostLimit'>
<retval type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSCachedURLResponse'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='initWithResponse:data:'>
<arg type='@' name='response' declared_type='NSURLResponse*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithResponse:data:userInfo:storagePolicy:'>
<arg type='@' name='response' declared_type='NSURLResponse*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<arg type='I' name='storagePolicy' declared_type='NSURLCacheStoragePolicy' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='storagePolicy'>
<retval type='I' declared_type='NSURLCacheStoragePolicy'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSCalendar'>
<method selector='autoupdatingCurrentCalendar' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='calendarIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='components:fromDate:'>
<arg type='I' name='unitFlags' declared_type='NSUInteger' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='components:fromDate:toDate:options:'>
<arg type='I' name='unitFlags' declared_type='NSUInteger' index='0'/>
<arg type='@' name='startingDate' declared_type='NSDate*' index='1'/>
<arg type='@' name='resultDate' declared_type='NSDate*' index='2'/>
<arg type='I' name='opts' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='currentCalendar' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingComponents:toDate:options:'>
<arg type='@' name='comps' declared_type='NSDateComponents*' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<arg type='I' name='opts' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateFromComponents:'>
<arg type='@' name='comps' declared_type='NSDateComponents*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='firstWeekday'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithCalendarIdentifier:'>
<arg type='@' name='ident' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maximumRangeOfUnit:'>
<arg type='I' name='unit' declared_type='NSCalendarUnit' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='minimumDaysInFirstWeek'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumRangeOfUnit:'>
<arg type='I' name='unit' declared_type='NSCalendarUnit' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='ordinalityOfUnit:inUnit:forDate:'>
<arg type='I' name='smaller' declared_type='NSCalendarUnit' index='0'/>
<arg type='I' name='larger' declared_type='NSCalendarUnit' index='1'/>
<arg type='@' name='date' declared_type='NSDate*' index='2'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfUnit:inUnit:forDate:'>
<arg type='I' name='smaller' declared_type='NSCalendarUnit' index='0'/>
<arg type='I' name='larger' declared_type='NSCalendarUnit' index='1'/>
<arg type='@' name='date' declared_type='NSDate*' index='2'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<arg type='I' name='unit' declared_type='NSCalendarUnit' index='0'/>
<arg type='^@' name='datep' declared_type='NSDate**' index='1'/>
<arg type='^d' name='tip' declared_type='NSTimeInterval*' index='2'/>
<arg type='@' name='date' declared_type='NSDate*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFirstWeekday:'>
<arg type='I' name='weekday' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumDaysInFirstWeek:'>
<arg type='I' name='mdw' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='NSCharacterSet'>
<method selector='alphanumericCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='bitmapRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='capitalizedLetterCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterIsMember:'>
<arg type='S' name='aCharacter' declared_type='unichar' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='characterSetWithBitmapRepresentation:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterSetWithCharactersInString:' class_method='true'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterSetWithContentsOfFile:' class_method='true'>
<arg type='@' name='fName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterSetWithRange:' class_method='true'>
<arg type='{_NSRange=II}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='controlCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalDigitCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decomposableCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='hasMemberInPlane:'>
<arg type='C' name='thePlane' declared_type='uint8_t' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='illegalCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invertedSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='isSupersetOfSet:'>
<arg type='@' name='theOtherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='letterCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='longCharacterIsMember:'>
<arg type='L' name='theLongChar' declared_type='UTF32Char' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lowercaseLetterCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='newlineCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nonBaseCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='punctuationCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='symbolCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='uppercaseLetterCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='whitespaceAndNewlineCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='whitespaceCharacterSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowsKeyedCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeArrayOfObjCType:count:at:'>
<arg type='*' name='itemType' const='true' declared_type='char*' index='0'/>
<arg type='I' name='count' declared_type='NSUInteger' index='1'/>
<arg type='^v' name='array' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeBoolForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='^I' name='lengthp' declared_type='NSUInteger*' index='1'/>
<retval type='*' const='true' declared_type='uint8_t*'/>
</method>
<method selector='decodeBytesWithReturnedLength:'>
<arg type='^I' name='lengthp' declared_type='NSUInteger*' index='0'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='decodeDataObject'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeIntegerForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='decodeObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeValueOfObjCType:at:'>
<arg type='*' name='type' const='true' declared_type='char*' index='0'/>
<arg type='^v' name='data' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeValuesOfObjCTypes:' variadic='true'>
<arg type='*' name='types' const='true' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeArrayOfObjCType:count:at:'>
<arg type='*' name='type' const='true' declared_type='char*' index='0'/>
<arg type='I' name='count' declared_type='NSUInteger' index='1'/>
<arg type='^v' name='array' const='true' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' name='boolv' declared_type='BOOL' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBycopyObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeByrefObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:'>
<arg type='^v' name='byteaddr' const='true' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg type='*' name='bytesp' const='true' declared_type='uint8_t*' index='0'/>
<arg type='I' name='lenv' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDataObject:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg type='d' name='realv' declared_type='double' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg type='f' name='realv' declared_type='float' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg type='i' name='intv' declared_type='int32_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg type='q' name='intv' declared_type='int64_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg type='i' name='intv' declared_type='int' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInteger:forKey:'>
<arg type='i' name='intv' declared_type='NSInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRootObject:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeValueOfObjCType:at:'>
<arg type='*' name='type' const='true' declared_type='char*' index='0'/>
<arg type='^v' name='addr' const='true' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeValuesOfObjCTypes:' variadic='true'>
<arg type='*' name='types' const='true' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='setObjectZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='versionForClassName:'>
<arg type='@' name='className' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSComparisonPredicate'>
<method selector='comparisonPredicateModifier'>
<retval type='I' declared_type='NSComparisonPredicateModifier'/>
</method>
<method selector='customSelector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='initWithLeftExpression:rightExpression:customSelector:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLeftExpression:rightExpression:modifier:type:options:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type='I' name='modifier' declared_type='NSComparisonPredicateModifier' index='2'/>
<arg type='I' name='type' declared_type='NSPredicateOperatorType' index='3'/>
<arg type='I' name='options' declared_type='NSComparisonPredicateOptions' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='options'>
<retval type='I' declared_type='NSComparisonPredicateOptions'/>
</method>
<method selector='predicateOperatorType'>
<retval type='I' declared_type='NSPredicateOperatorType'/>
</method>
<method selector='predicateWithLeftExpression:rightExpression:customSelector:' class_method='true'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithLeftExpression:rightExpression:modifier:type:options:' class_method='true'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type='I' name='modifier' declared_type='NSComparisonPredicateModifier' index='2'/>
<arg type='I' name='type' declared_type='NSPredicateOperatorType' index='3'/>
<arg type='I' name='options' declared_type='NSComparisonPredicateOptions' index='4'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
</class>
<class name='NSCompoundPredicate'>
<method selector='andPredicateWithSubpredicates:' class_method='true'>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='compoundPredicateType'>
<retval type='I' declared_type='NSCompoundPredicateType'/>
</method>
<method selector='initWithType:subpredicates:'>
<arg type='I' name='type' declared_type='NSCompoundPredicateType' index='0'/>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='notPredicateWithSubpredicate:' class_method='true'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='orPredicateWithSubpredicates:' class_method='true'>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='subpredicates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCondition'>
<method selector='broadcast'>
<retval type='v' declared_type='void'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='signal'>
<retval type='v' declared_type='void'/>
</method>
<method selector='wait'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='condition'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithCondition:'>
<arg type='i' name='condition' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lockWhenCondition:'>
<arg type='i' name='condition' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<arg type='i' name='condition' declared_type='NSInteger' index='0'/>
<arg type='@' name='limit' declared_type='NSDate*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tryLockWhenCondition:'>
<arg type='i' name='condition' declared_type='NSInteger' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlockWithCondition:'>
<arg type='i' name='condition' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCountedSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='countForObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSData'>
<method selector='bytes'>
<retval type='^v' const='true' declared_type='void*'/>
</method>
<method selector='data' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithBytes:length:' class_method='true'>
<arg type='^v' name='bytes' const='true' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithBytesNoCopy:length:' class_method='true'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithBytesNoCopy:length:freeWhenDone:' class_method='true'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='b' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithContentsOfFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithContentsOfFile:options:error:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithContentsOfMappedFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithContentsOfURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithContentsOfURL:options:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithData:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getBytes:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:length:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:range:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:length:'>
<arg type='^v' name='bytes' const='true' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:freeWhenDone:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='b' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:options:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfMappedFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToData:'>
<arg type='@' name='other' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfData:options:range:'>
<arg type='@' name='dataToFind' declared_type='NSData*' index='0'/>
<arg type='I' name='mask' declared_type='NSDataSearchOptions' index='1'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='subdataWithRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:options:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' name='writeOptionsMask' declared_type='NSDataWritingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='writeOptionsMask' declared_type='NSDataWritingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDataDetector'>
<method selector='checkingTypes'>
<retval type='Q' declared_type='NSTextCheckingTypes'/>
</method>
<method selector='dataDetectorWithTypes:error:' class_method='true'>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDataDetector*'/>
</method>
<method selector='initWithTypes:error:'>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDate'>
<method selector='addTimeInterval:'>
<arg type='d' name='seconds' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='compare:'>
<arg type='@' name='other' declared_type='NSDate*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='date' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingTimeInterval:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithTimeInterval:sinceDate:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithTimeIntervalSince1970:' class_method='true'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithTimeIntervalSinceNow:' class_method='true'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithTimeIntervalSinceReferenceDate:' class_method='true'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='distantFuture' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='distantPast' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='earlierDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeInterval:sinceDate:'>
<arg type='d' name='secsToBeAdded' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSince1970:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceNow:'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceReferenceDate:'>
<arg type='d' name='secsToBeAdded' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDate:'>
<arg type='@' name='otherDate' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='laterDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='timeIntervalSince1970'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceNow'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceReferenceDate' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceReferenceDate'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSDateComponents'>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='day'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='era'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='hour'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='minute'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='month'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='quarter'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='second'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setCalendar:'>
<arg type='@' name='cal' declared_type='NSCalendar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDay:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEra:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHour:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinute:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonth:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarter:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecond:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeek:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfMonth:'>
<arg type='i' name='w' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfYear:'>
<arg type='i' name='w' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekday:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdayOrdinal:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYear:'>
<arg type='i' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYearForWeekOfYear:'>
<arg type='i' name='y' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='week'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='weekOfMonth'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='weekOfYear'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='weekday'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='weekdayOrdinal'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='year'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='yearForWeekOfYear'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='AMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='PMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='dateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateFormatFromTemplate:options:locale:' class_method='true'>
<arg type='@' name='tmplate' declared_type='NSString*' index='0'/>
<arg type='I' name='opts' declared_type='NSUInteger' index='1'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateStyle'>
<retval type='I' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='defaultDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='defaultFormatterBehavior' class_method='true'>
<retval type='I' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='doesRelativeDateFormatting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='formatterBehavior'>
<retval type='I' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='generatesCalendarDates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type='^@' name='obj' declared_type='id*' type_modifier='o' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' name='rangep' declared_type='NSRange*' type_modifier='N' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='gregorianStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='localizedStringFromDate:dateStyle:timeStyle:' class_method='true'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<arg type='I' name='dstyle' declared_type='NSDateFormatterStyle' index='1'/>
<arg type='I' name='tstyle' declared_type='NSDateFormatterStyle' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='longEraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='monthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='quarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAMSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCalendar:'>
<arg type='@' name='calendar' declared_type='NSCalendar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormat:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateStyle:'>
<arg type='I' name='style' declared_type='NSDateFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultFormatterBehavior:' class_method='true'>
<arg type='I' name='behavior' declared_type='NSDateFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoesRelativeDateFormatting:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEraSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg type='I' name='behavior' declared_type='NSDateFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGregorianStartDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongEraSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPMSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeStyle:'>
<arg type='I' name='style' declared_type='NSDateFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTwoDigitStartDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringFromDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeStyle'>
<retval type='I' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='twoDigitStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='veryShortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='weekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method selector='compare:'>
<arg type='@' name='decimalNumber' declared_type='NSNumber*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalNumberByAdding:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByAdding:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:'>
<arg type='s' name='power' declared_type='short' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:withBehavior:'>
<arg type='s' name='power' declared_type='short' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:'>
<arg type='I' name='power' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:withBehavior:'>
<arg type='I' name='power' declared_type='NSUInteger' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRoundingAccordingToBehavior:'>
<arg type='@' name='behavior' declared_type='id' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberWithDecimal:' class_method='true'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberWithMantissa:exponent:isNegative:' class_method='true'>
<arg type='Q' name='mantissa' declared_type='unsigned long long' index='0'/>
<arg type='s' name='exponent' declared_type='short' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberWithString:' class_method='true'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberWithString:locale:' class_method='true'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='defaultBehavior' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg type='Q' name='mantissa' declared_type='unsigned long long' index='0'/>
<arg type='s' name='exponent' declared_type='short' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:locale:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maximumDecimalNumber' class_method='true'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='minimumDecimalNumber' class_method='true'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='notANumber' class_method='true'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='objCType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='one' class_method='true'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='setDefaultBehavior:' class_method='true'>
<arg type='@' name='behavior' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='zero' class_method='true'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:' class_method='true'>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode' index='0'/>
<arg type='s' name='scale' declared_type='short' index='1'/>
<arg type='B' name='exact' declared_type='BOOL' index='2'/>
<arg type='B' name='overflow' declared_type='BOOL' index='3'/>
<arg type='B' name='underflow' declared_type='BOOL' index='4'/>
<arg type='B' name='divideByZero' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultDecimalNumberHandler' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg type='I' name='roundingMode' declared_type='NSRoundingMode' index='0'/>
<arg type='s' name='scale' declared_type='short' index='1'/>
<arg type='B' name='exact' declared_type='BOOL' index='2'/>
<arg type='B' name='overflow' declared_type='BOOL' index='3'/>
<arg type='B' name='underflow' declared_type='BOOL' index='4'/>
<arg type='B' name='divideByZero' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='allKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allKeysForObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allValues'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionInStringsFileFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionary' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithContentsOfFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithContentsOfURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithDictionary:' class_method='true'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithObject:forKey:' class_method='true'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithObjects:forKeys:' class_method='true'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryWithObjects:forKeys:count:' class_method='true'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='^@' name='keys' const='true' declared_type='id*' index='1'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='dictionaryWithObjectsAndKeys:' class_method='true' variadic='true'>
<arg type='@' name='firstObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='enumerateKeysAndObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateKeysAndObjectsWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileCreationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileExtensionHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileGroupOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileGroupOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileHFSCreatorCode'>
<retval type='L' declared_type='OSType'/>
</method>
<method selector='fileHFSTypeCode'>
<retval type='L' declared_type='OSType'/>
</method>
<method selector='fileIsAppendOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileIsImmutable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileModificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='filePosixPermissions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fileSize'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='fileSystemFileNumber'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fileSystemNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='fileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjects:andKeys:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='^@' name='keys' declared_type='id*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:count:'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='^@' name='keys' const='true' declared_type='id*' index='1'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='initWithObjectsAndKeys:' variadic='true'>
<arg type='@' name='firstObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='keysOfEntriesPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysOfEntriesWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysSortedByValueUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueWithOptions:usingComparator:'>
<arg type='I' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsForKeys:notFoundMarker:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='marker' declared_type='id' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDirectoryEnumerator'>
<method selector='directoryAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='level'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='skipDescendants'>
<retval type='v' declared_type='void'/>
</method>
<method selector='skipDescendents'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSEnumerator'>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='nextObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSError'>
<method selector='code'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='errorWithDomain:code:userInfo:' class_method='true'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='i' name='code' declared_type='NSInteger' index='1'/>
<arg type='@' name='dict' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='helpAnchor'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:code:userInfo:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='i' name='code' declared_type='NSInteger' index='1'/>
<arg type='@' name='dict' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedFailureReason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedRecoveryOptions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedRecoverySuggestion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='recoveryAttempter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSException'>
<method selector='callStackReturnAddresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callStackSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='exceptionWithName:reason:userInfo:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='NSException*'/>
</method>
<method selector='initWithName:reason:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='aReason' declared_type='NSString*' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='raise'>
<retval type='v' declared_type='void'/>
</method>
<method selector='raise:format:' class_method='true' variadic='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='raise:format:arguments:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='1'/>
<arg type='*' name='argList' declared_type='va_list' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSExpression'>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='collection'>
<retval type='@' declared_type='id'/>
</method>
<method selector='constantValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='expressionBlock'>
<retval type='@?' function_pointer='true' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method selector='expressionForAggregate:' class_method='true'>
<arg type='@' name='subexpressions' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForBlock:arguments:' class_method='true'>
<arg type='@?' name='block' function_pointer='true' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</arg>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForConstantValue:' class_method='true'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForEvaluatedObject' class_method='true'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForFunction:arguments:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='parameters' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForFunction:selectorName:arguments:' class_method='true'>
<arg type='@' name='target' declared_type='NSExpression*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='parameters' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForIntersectSet:with:' class_method='true'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForKeyPath:' class_method='true'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForMinusSet:with:' class_method='true'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForSubquery:usingIteratorVariable:predicate:' class_method='true'>
<arg type='@' name='expression' declared_type='NSExpression*' index='0'/>
<arg type='@' name='variable' declared_type='NSString*' index='1'/>
<arg type='@' name='predicate' declared_type='id' index='2'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForUnionSet:with:' class_method='true'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionForVariable:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionType'>
<retval type='I' declared_type='NSExpressionType'/>
</method>
<method selector='expressionValueWithObject:context:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='context' declared_type='NSMutableDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='expressionWithFormat:' class_method='true' variadic='true'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionWithFormat:argumentArray:' class_method='true'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionWithFormat:arguments:' class_method='true'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<arg type='*' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='function'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithExpressionType:'>
<arg type='I' name='type' declared_type='NSExpressionType' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='operand'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='variable'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSFileCoordinator'>
<method selector='addFilePresenter:' class_method='true'>
<arg type='@' name='filePresenter' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(NSURL *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='readingURL' declared_type='NSURL*' index='0'/>
<arg type='I' name='readingOptions' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='@' name='writingURL' declared_type='NSURL*' index='2'/>
<arg type='I' name='writingOptions' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='readerWriter' function_pointer='true' declared_type='void (^)(NSURL *, NSURL *)' index='5'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileCoordinatorWritingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(NSURL *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url1' declared_type='NSURL*' index='0'/>
<arg type='I' name='options1' declared_type='NSFileCoordinatorWritingOptions' index='1'/>
<arg type='@' name='url2' declared_type='NSURL*' index='2'/>
<arg type='I' name='options2' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(NSURL *, NSURL *)' index='5'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filePresenters' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithFilePresenter:'>
<arg type='@' name='filePresenterOrNil' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemAtURL:didMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'>
<arg type='@' name='readingURLs' declared_type='NSArray*' index='0'/>
<arg type='I' name='readingOptions' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='@' name='writingURLs' declared_type='NSArray*' index='2'/>
<arg type='I' name='writingOptions' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='batchAccessor' function_pointer='true' declared_type='void (^)(void (^)(void))' index='5'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFilePresenter:' class_method='true'>
<arg type='@' name='filePresenter' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFileHandle'>
<method selector='acceptConnectionInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='acceptConnectionInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='closeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileDescriptor'>
<retval type='i' declared_type='int'/>
</method>
<method selector='fileHandleForReadingAtPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleForReadingFromURL:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleForUpdatingAtPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleForUpdatingURL:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleForWritingAtPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleForWritingToURL:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleWithNullDevice' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleWithStandardError' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleWithStandardInput' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileHandleWithStandardOutput' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:'>
<arg type='i' name='fd' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg type='i' name='fd' declared_type='int' index='0'/>
<arg type='B' name='closeopt' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offsetInFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='readDataOfLength:'>
<arg type='I' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readDataToEndOfFile'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readabilityHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='seekToEndOfFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='seekToFileOffset:'>
<arg type='Q' name='offset' declared_type='unsigned long long' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReadabilityHandler:'>
<arg type='@?' name='readabilityHandler' function_pointer='true' declared_type='void (^)(NSFileHandle *)' index='0'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWriteabilityHandler:'>
<arg type='@?' name='writeabilityHandler' function_pointer='true' declared_type='void (^)(NSFileHandle *)' index='0'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='truncateFileAtOffset:'>
<arg type='Q' name='offset' declared_type='unsigned long long' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeabilityHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='NSFileManager'>
<method selector='URLForDirectory:inDomain:appropriateForURL:create:error:'>
<arg type='I' name='directory' declared_type='NSSearchPathDirectory' index='0'/>
<arg type='I' name='domain' declared_type='NSSearchPathDomainMask' index='1'/>
<arg type='@' name='url' declared_type='NSURL*' index='2'/>
<arg type='B' name='shouldCreate' declared_type='BOOL' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForPublishingUbiquitousItemAtURL:expirationDate:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='outDate' declared_type='NSDate**' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForUbiquityContainerIdentifier:'>
<arg type='@' name='containerIdentifier' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForDirectory:inDomains:'>
<arg type='I' name='directory' declared_type='NSSearchPathDirectory' index='0'/>
<arg type='I' name='domainMask' declared_type='NSSearchPathDomainMask' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='attributesOfFileSystemForPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesOfItemAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='componentsToDisplayForPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<arg type='@' name='path1' declared_type='NSString*' index='0'/>
<arg type='@' name='path2' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='contentsOfDirectoryAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='I' name='mask' declared_type='NSDirectoryEnumerationOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='copyItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='createIntermediates' declared_type='BOOL' index='1'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtURL:withIntermediateDirectories:attributes:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='createIntermediates' declared_type='BOOL' index='1'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<arg type='@' name='attr' declared_type='NSDictionary*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='otherpath' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='destPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtURL:withDestinationURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='destURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentDirectoryPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultManager' class_method='true'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationOfSymbolicLinkAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='directoryContentsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='displayNameAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumeratorAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='I' name='mask' declared_type='NSDirectoryEnumerationOptions' index='2'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='BOOL (^)(NSURL *, NSError *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='evictUbiquitousItemAtURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='yorn' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileExistsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^B' name='isDirectory' declared_type='BOOL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileSystemAttributesAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileSystemRepresentationWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='isDeletableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecutableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReadableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUbiquitousItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isWritableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mountedVolumeURLsIncludingResourceValuesForKeys:options:'>
<arg type='@' name='propertyKeys' declared_type='NSArray*' index='0'/>
<arg type='I' name='options' declared_type='NSVolumeEnumerationOptions' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='moveItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathContentOfSymbolicLinkAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeItemAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeItemAtURL:error:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'>
<arg type='@' name='originalItemURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newItemURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='backupItemName' declared_type='NSString*' index='2'/>
<arg type='I' name='options' declared_type='NSFileManagerItemReplacementOptions' index='3'/>
<arg type='^@' name='resultingURL' declared_type='NSURL**' index='4'/>
<arg type='^@' name='error' declared_type='NSError**' index='5'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUbiquitous:itemAtURL:destinationURL:error:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<arg type='@' name='url' declared_type='NSURL*' index='1'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startDownloadingUbiquitousItemAtURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringWithFileSystemRepresentation:length:'>
<arg type='*' name='str' const='true' declared_type='char*' index='0'/>
<arg type='I' name='len' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subpathsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subpathsOfDirectoryAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSFileVersion'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='currentVersionOfItemAtURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
<method selector='isConflict'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isResolved'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedNameOfSavingComputer'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='modificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='otherVersionsOfItemAtURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='persistentIdentifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAndReturnError:'>
<arg type='^@' name='outError' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeOtherVersionsOfItemAtURL:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='outError' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileVersionReplacingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='setDiscardable:'>
<arg type='B' name='discardable' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolved:'>
<arg type='B' name='resolved' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unresolvedConflictVersionsOfItemAtURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='versionOfItemAtURL:forPersistentIdentifier:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='persistentIdentifier' declared_type='id' index='1'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='addFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addRegularFileWithContents:preferredFilename:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='@' name='fileName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileWrappers'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initDirectoryWithFileWrappers:'>
<arg type='@' name='childrenByPreferredName' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRegularFileWithContents:'>
<arg type='@' name='contents' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initSymbolicLinkWithDestinationURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSerializedRepresentation:'>
<arg type='@' name='serializeRepresentation' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileWrapperReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDirectory'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRegularFile'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSymbolicLink'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyForFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matchesContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readFromURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileWrapperReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='regularFileContents'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='removeFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='serializedRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setFileAttributes:'>
<arg type='@' name='fileAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilename:'>
<arg type='@' name='fileName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredFilename:'>
<arg type='@' name='fileName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='symbolicLinkDestinationURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='writeToURL:options:originalContentsURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='options' declared_type='NSFileWrapperWritingOptions' index='1'/>
<arg type='@' name='originalContentsURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='outError' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='attributedStringForObjectValue:withDefaultAttributes:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='editingStringForObjectValue:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjectValue:forString:errorDescription:'>
<arg type='^@' name='obj' declared_type='id*' type_modifier='o' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSString**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<arg type='@' name='partialString' declared_type='NSString*' index='0'/>
<arg type='^@' name='newString' declared_type='NSString**' index='1'/>
<arg type='^@' name='error' declared_type='NSString**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<arg type='^@' name='partialStringPtr' declared_type='NSString**' index='0'/>
<arg type='^{_NSRange=II}' name='proposedSelRangePtr' declared_type='NSRangePointer' index='1'/>
<arg type='@' name='origString' declared_type='NSString*' index='2'/>
<arg type='{_NSRange=II}' name='origSelRange' declared_type='NSRange' index='3'/>
<arg type='^@' name='error' declared_type='NSString**' index='4'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringForObjectValue:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='comment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='commentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cookieWithProperties:' class_method='true'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='cookiesWithResponseHeaderFields:forURL:' class_method='true'>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='expiresDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithProperties:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isHTTPOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSecure'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSessionOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='portList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='requestHeaderFieldsWithCookies:' class_method='true'>
<arg type='@' name='cookies' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='version'>
<retval type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSHTTPCookieStorage'>
<method selector='cookieAcceptPolicy'>
<retval type='I' declared_type='NSHTTPCookieAcceptPolicy'/>
</method>
<method selector='cookies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cookiesForURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='deleteCookie:'>
<arg type='@' name='cookie' declared_type='NSHTTPCookie*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookie:'>
<arg type='@' name='cookie' declared_type='NSHTTPCookie*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookieAcceptPolicy:'>
<arg type='I' name='cookieAcceptPolicy' declared_type='NSHTTPCookieAcceptPolicy' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookies:forURL:mainDocumentURL:'>
<arg type='@' name='cookies' declared_type='NSArray*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<arg type='@' name='mainDocumentURL' declared_type='NSURL*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedHTTPCookieStorage' class_method='true'>
<retval type='@' declared_type='NSHTTPCookieStorage*'/>
</method>
<method selector='sortedCookiesUsingDescriptors:'>
<arg type='@' name='sortOrder' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSHTTPURLResponse'>
<method selector='allHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithURL:statusCode:HTTPVersion:headerFields:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='i' name='statusCode' declared_type='NSInteger' index='1'/>
<arg type='@' name='HTTPVersion' declared_type='NSString*' index='2'/>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedStringForStatusCode:' class_method='true'>
<arg type='i' name='statusCode' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='statusCode'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSIndexPath'>
<method selector='compare:'>
<arg type='@' name='otherObject' declared_type='NSIndexPath*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='getIndexes:'>
<arg type='^I' name='indexes' declared_type='NSUInteger*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexAtPosition:'>
<arg type='I' name='position' declared_type='NSUInteger' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexPathByAddingIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathByRemovingLastIndex'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathWithIndex:' class_method='true'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexPathWithIndexes:length:' class_method='true'>
<arg type='^I' name='indexes' declared_type='NSUInteger*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexes:length:'>
<arg type='^I' name='indexes' declared_type='NSUInteger*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='countOfIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='enumerateIndexesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='2'>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='0'>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='1'>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='getIndexes:maxCount:inIndexRange:'>
<arg type='^I' name='indexBuffer' declared_type='NSUInteger*' index='0'/>
<arg type='I' name='bufferSize' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' name='range' declared_type='NSRangePointer' index='2'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanOrEqualToIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexInRange:options:passingTest:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanOrEqualToIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexSetWithIndex:' class_method='true'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexSetWithIndexesInRange:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesInRange:options:passingTest:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexSet:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToIndexSet:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSInputStream'>
<method selector='getBuffer:length:'>
<arg type='^*' name='buffer' declared_type='uint8_t**' index='0'/>
<arg type='^I' name='len' declared_type='NSUInteger*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasBytesAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStreamWithData:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStreamWithFileAtPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStreamWithURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='read:maxLength:'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' name='len' declared_type='NSUInteger' index='1'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getArgument:atIndex:'>
<arg type='^v' name='argumentLocation' declared_type='void*' index='0'/>
<arg type='i' name='idx' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getReturnValue:'>
<arg type='^v' name='retLoc' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invocationWithMethodSignature:' class_method='true'>
<arg type='@' name='sig' declared_type='NSMethodSignature*' index='0'/>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='invoke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='invokeWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignature'>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='retainArguments'>
<retval type='v' declared_type='void'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='setArgument:atIndex:'>
<arg type='^v' name='argumentLocation' declared_type='void*' index='0'/>
<arg type='i' name='idx' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReturnValue:'>
<arg type='^v' name='retLoc' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelector:'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSInvocationOperation'>
<method selector='initWithInvocation:'>
<arg type='@' name='inv' declared_type='NSInvocation*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='sel' declared_type='SEL' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invocation'>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='result'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSJSONSerialization'>
<method selector='JSONObjectWithData:options:error:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' name='opt' declared_type='NSJSONReadingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='JSONObjectWithStream:options:error:' class_method='true'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<arg type='I' name='opt' declared_type='NSJSONReadingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithJSONObject:options:error:' class_method='true'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' name='opt' declared_type='NSJSONWritingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='isValidJSONObject:' class_method='true'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeJSONObject:toStream:options:error:' class_method='true'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='stream' declared_type='NSOutputStream*' index='1'/>
<arg type='I' name='opt' declared_type='NSJSONWritingOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method selector='archiveRootObject:toFile:' class_method='true'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='archivedDataWithRootObject:' class_method='true'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='classNameForClass:' class_method='true'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='classNameForClass:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' name='boolv' declared_type='BOOL' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg type='*' name='bytesp' const='true' declared_type='uint8_t*' index='0'/>
<arg type='I' name='lenv' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg type='d' name='realv' declared_type='double' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg type='f' name='realv' declared_type='float' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg type='i' name='intv' declared_type='int32_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg type='q' name='intv' declared_type='int64_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg type='i' name='intv' declared_type='int' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finishEncoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg type='@' name='data' declared_type='NSMutableData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputFormat'>
<retval type='I' declared_type='NSPropertyListFormat'/>
</method>
<method selector='setClassName:forClass:' class_method='true'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<arg type='#' name='cls' declared_type='Class' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClassName:forClass:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<arg type='#' name='cls' declared_type='Class' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputFormat:'>
<arg type='I' name='format' declared_type='NSPropertyListFormat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method selector='classForClassName:' class_method='true'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForClassName:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='containsValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBoolForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='^I' name='lengthp' declared_type='NSUInteger*' index='1'/>
<retval type='*' const='true' declared_type='uint8_t*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeObjectForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='finishDecoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForReadingWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setClass:forClassName:' class_method='true'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<arg type='@' name='codedName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClass:forClassName:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<arg type='@' name='codedName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiveObjectWithData:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unarchiveObjectWithFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSLinguisticTagger'>
<method selector='availableTagSchemesForLanguage:' class_method='true'>
<arg type='@' name='language' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='enumerateTagsInRange:scheme:options:usingBlock:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='3'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTagSchemes:options:'>
<arg type='@' name='tagSchemes' declared_type='NSArray*' index='0'/>
<arg type='I' name='opts' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orthographyAtIndex:effectiveRange:'>
<arg type='I' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' name='effectiveRange' declared_type='NSRangePointer' index='1'/>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method selector='possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:'>
<arg type='I' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' name='tokenRange' declared_type='NSRangePointer' index='2'/>
<arg type='^{_NSRange=II}' name='sentenceRange' declared_type='NSRangePointer' index='3'/>
<arg type='^@' name='scores' declared_type='NSArray**' index='4'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sentenceRangeForRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setOrthography:range:'>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringEditedInRange:changeInLength:'>
<arg type='{_NSRange=II}' name='newRange' declared_type='NSRange' index='0'/>
<arg type='i' name='delta' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tagAtIndex:scheme:tokenRange:sentenceRange:'>
<arg type='I' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' name='tokenRange' declared_type='NSRangePointer' index='2'/>
<arg type='^{_NSRange=II}' name='sentenceRange' declared_type='NSRangePointer' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tagSchemes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tagsInRange:scheme:options:tokenRanges:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='^@' name='tokenRanges' declared_type='NSArray**' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSLocale'>
<method selector='ISOCountryCodes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='ISOCurrencyCodes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='ISOLanguageCodes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='autoupdatingCurrentLocale' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='availableLocaleIdentifiers' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='canonicalLanguageIdentifierFromString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='canonicalLocaleIdentifierFromString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='characterDirectionForLanguage:' class_method='true'>
<arg type='@' name='isoLangCode' declared_type='NSString*' index='0'/>
<retval type='I' declared_type='NSLocaleLanguageDirection'/>
</method>
<method selector='commonISOCurrencyCodes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='componentsFromLocaleIdentifier:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='currentLocale' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayNameForKey:value:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<arg type='@' name='value' declared_type='id' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithLocaleIdentifier:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineDirectionForLanguage:' class_method='true'>
<arg type='@' name='isoLangCode' declared_type='NSString*' index='0'/>
<retval type='I' declared_type='NSLocaleLanguageDirection'/>
</method>
<method selector='localeIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localeIdentifierFromComponents:' class_method='true'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localeIdentifierFromWindowsLocaleCode:' class_method='true'>
<arg type='I' name='lcid' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='preferredLanguages' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='systemLocale' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='windowsLocaleCodeFromLocaleIdentifier:' class_method='true'>
<arg type='@' name='localeIdentifier' declared_type='NSString*' index='0'/>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSMachPort'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:options:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<arg type='I' name='f' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='machPort'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='portWithMachPort:' class_method='true'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portWithMachPort:options:' class_method='true'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<arg type='I' name='f' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMetadataItem'>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForAttribute:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForAttributes:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupedResults'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='groupingAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfResult:'>
<arg type='@' name='result' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGathering'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStarted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStopped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationBatchingInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='resultAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='searchScopes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingAttributes:'>
<arg type='@' name='attrs' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationBatchingInterval:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchScopes:'>
<arg type='@' name='scopes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg type='@' name='descriptors' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueListAttributes:'>
<arg type='@' name='attrs' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='startQuery'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopQuery'>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueListAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueLists'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='valueOfAttribute:forResultAtIndex:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryAttributeValueTuple'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryResultGroup'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subgroups'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='frameLength'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='getArgumentTypeAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='isOneway'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='methodReturnLength'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='methodReturnType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='numberOfArguments'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='signatureWithObjCTypes:' class_method='true'>
<arg type='*' name='types' const='true' declared_type='char*' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='addObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type='I' name='idx1' declared_type='NSUInteger' index='0'/>
<arg type='I' name='idx2' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='I' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsFromIndices:numIndices:'>
<arg type='^I' name='indices' declared_type='NSUInteger*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='@' name='objects' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='otherArray' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:range:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='otherArray' declared_type='NSArray*' index='1'/>
<arg type='{_NSRange=II}' name='otherRange' declared_type='NSRange' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg type='^?' name='compare' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='I' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='addAttribute:value:range:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='value' declared_type='id' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributes:range:'>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendAttributedString:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertAttributedString:atIndex:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<arg type='I' name='loc' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mutableString'>
<retval type='@' declared_type='NSMutableString*'/>
</method>
<method selector='removeAttribute:range:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withAttributedString:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='str' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributes:range:'>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableCharacterSet'>
<method selector='addCharactersInRange:'>
<arg type='{_NSRange=II}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addCharactersInString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formIntersectionWithCharacterSet:'>
<arg type='@' name='otherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formUnionWithCharacterSet:'>
<arg type='@' name='otherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invert'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInRange:'>
<arg type='{_NSRange=II}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableData'>
<method selector='appendBytes:length:'>
<arg type='^v' name='bytes' const='true' declared_type='void*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendData:'>
<arg type='@' name='other' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataWithCapacity:' class_method='true'>
<arg type='I' name='aNumItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataWithLength:' class_method='true'>
<arg type='I' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='increaseLengthBy:'>
<arg type='I' name='extraLength' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLength:'>
<arg type='I' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableBytes'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='replaceBytesInRange:withBytes:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='^v' name='bytes' const='true' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceBytesInRange:withBytes:length:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='^v' name='replacementBytes' const='true' declared_type='void*' index='1'/>
<arg type='I' name='replacementLength' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetBytesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLength:'>
<arg type='I' name='length' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableDictionary'>
<method selector='addEntriesFromDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dictionaryWithCapacity:' class_method='true'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg type='@' name='keyArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='@' name='aKey' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableIndexSet'>
<method selector='addIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllIndexes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndex:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexesInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftIndexesStartingAtIndex:by:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<arg type='i' name='delta' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:count:'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='count' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type='I' name='idx1' declared_type='NSUInteger' index='0'/>
<arg type='I' name='idx2' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='I' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveObjectsAtIndexes:toIndex:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderedSetWithCapacity:' class_method='true'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='@' name='objects' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjects:count:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='^@' name='objects' const='true' declared_type='id*' index='1'/>
<arg type='I' name='count' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndex:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortRange:options:usingComparator:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSSortOptions' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='I' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWithCapacity:' class_method='true'>
<arg type='I' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unionSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableString'>
<method selector='appendFormat:' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertString:atIndex:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' name='loc' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='aString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceOccurrencesOfString:withString:options:range:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSStringCompareOptions' index='2'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='3'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringWithCapacity:' class_method='true'>
<arg type='I' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='addValue:forHTTPHeaderField:'>
<arg type='@' name='value' declared_type='NSString*' index='0'/>
<arg type='@' name='field' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllHTTPHeaderFields:'>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachePolicy:'>
<arg type='I' name='policy' declared_type='NSURLRequestCachePolicy' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBody:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBodyStream:'>
<arg type='@' name='inputStream' declared_type='NSInputStream*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPMethod:'>
<arg type='@' name='method' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg type='B' name='should' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg type='B' name='shouldUsePipelining' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainDocumentURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNetworkServiceType:'>
<arg type='I' name='networkServiceType' declared_type='NSURLRequestNetworkServiceType' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeoutInterval:'>
<arg type='d' name='seconds' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg type='@' name='value' declared_type='NSString*' index='0'/>
<arg type='@' name='field' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNetService'>
<method selector='TXTRecordData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='addresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dataFromTXTRecordDictionary:' class_method='true'>
<arg type='@' name='txtDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dictionaryFromTXTRecordData:' class_method='true'>
<arg type='@' name='txtData' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getInputStream:outputStream:'>
<arg type='^@' name='inputStream' declared_type='NSInputStream**' index='0'/>
<arg type='^@' name='outputStream' declared_type='NSOutputStream**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:type:name:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='@' name='type' declared_type='NSString*' index='1'/>
<arg type='@' name='name' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDomain:type:name:port:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='@' name='type' declared_type='NSString*' index='1'/>
<arg type='@' name='name' declared_type='NSString*' index='2'/>
<arg type='i' name='port' declared_type='int' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='publish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='publishWithOptions:'>
<arg type='I' name='options' declared_type='NSNetServiceOptions' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolve'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolveWithTimeout:'>
<arg type='d' name='timeout' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTXTRecordData:'>
<arg type='@' name='recordData' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='type'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSNetServiceBrowser'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForBrowsableDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForRegistrationDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForServicesOfType:inDomain:'>
<arg type='@' name='type' declared_type='NSString*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotification'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='notificationWithName:object:' class_method='true'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='notificationWithName:object:userInfo:' class_method='true'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='aName' declared_type='NSString*' index='2'/>
<arg type='@' name='anObject' declared_type='id' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserverForName:object:queue:usingBlock:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSNotification *)' index='3'>
<arg type='@' declared_type='NSNotification*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultCenter' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='postNotification:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type='@' name='aName' declared_type='NSString*' index='1'/>
<arg type='@' name='anObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotificationQueue'>
<method selector='defaultQueue' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dequeueNotificationsMatching:coalesceMask:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' name='coalesceMask' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' name='postingStyle' declared_type='NSPostingStyle' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:coalesceMask:forModes:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' name='postingStyle' declared_type='NSPostingStyle' index='1'/>
<arg type='I' name='coalesceMask' declared_type='NSUInteger' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithNotificationCenter:'>
<arg type='@' name='notificationCenter' declared_type='NSNotificationCenter*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSNull'>
<method selector='null' class_method='true'>
<retval type='@' declared_type='NSNull*'/>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charValue'>
<retval type='c' declared_type='char'/>
</method>
<method selector='compare:'>
<arg type='@' name='otherNumber' declared_type='NSNumber*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithBool:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithChar:'>
<arg type='c' name='value' declared_type='char' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDouble:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFloat:'>
<arg type='f' name='value' declared_type='float' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInt:'>
<arg type='i' name='value' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInteger:'>
<arg type='i' name='value' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLong:'>
<arg type='l' name='value' declared_type='long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLongLong:'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithShort:'>
<arg type='s' name='value' declared_type='short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedChar:'>
<arg type='C' name='value' declared_type='unsigned char' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInt:'>
<arg type='I' name='value' declared_type='unsigned int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInteger:'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLong:'>
<arg type='L' name='value' declared_type='unsigned long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLongLong:'>
<arg type='Q' name='value' declared_type='unsigned long long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedShort:'>
<arg type='S' name='value' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='isEqualToNumber:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='longValue'>
<retval type='l' declared_type='long'/>
</method>
<method selector='numberWithBool:' class_method='true'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithChar:' class_method='true'>
<arg type='c' name='value' declared_type='char' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithDouble:' class_method='true'>
<arg type='d' name='value' declared_type='double' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithFloat:' class_method='true'>
<arg type='f' name='value' declared_type='float' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithInt:' class_method='true'>
<arg type='i' name='value' declared_type='int' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithInteger:' class_method='true'>
<arg type='i' name='value' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithLong:' class_method='true'>
<arg type='l' name='value' declared_type='long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithLongLong:' class_method='true'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithShort:' class_method='true'>
<arg type='s' name='value' declared_type='short' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedChar:' class_method='true'>
<arg type='C' name='value' declared_type='unsigned char' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedInt:' class_method='true'>
<arg type='I' name='value' declared_type='unsigned int' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedInteger:' class_method='true'>
<arg type='I' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedLong:' class_method='true'>
<arg type='L' name='value' declared_type='unsigned long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedLongLong:' class_method='true'>
<arg type='Q' name='value' declared_type='unsigned long long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberWithUnsignedShort:' class_method='true'>
<arg type='S' name='value' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='shortValue'>
<retval type='s' declared_type='short'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='unsignedCharValue'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='unsignedIntValue'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='unsignedIntegerValue'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='unsignedLongLongValue'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='unsignedLongValue'>
<retval type='L' declared_type='unsigned long'/>
</method>
<method selector='unsignedShortValue'>
<retval type='S' declared_type='unsigned short'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currencyCode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyDecimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyGroupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultFormatterBehavior' class_method='true'>
<retval type='I' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='exponentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formatWidth'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='formatterBehavior'>
<retval type='I' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type='^@' name='obj' declared_type='id*' type_modifier='o' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' name='rangep' declared_type='NSRange*' type_modifier='N' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='groupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='groupingSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='internationalCurrencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='localizedStringFromNumber:numberStyle:' class_method='true'>
<arg type='@' name='num' declared_type='NSNumber*' index='0'/>
<arg type='I' name='nstyle' declared_type='NSNumberFormatterStyle' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='maximum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='maximumFractionDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='maximumIntegerDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='maximumSignificantDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='minimumFractionDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumIntegerDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumSignificantDigits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='multiplier'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='negativeFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nilSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='notANumberSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberStyle'>
<retval type='I' declared_type='NSNumberFormatterStyle'/>
</method>
<method selector='paddingCharacter'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='paddingPosition'>
<retval type='I' declared_type='NSNumberFormatterPadPosition'/>
</method>
<method selector='perMillSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='percentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='plusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positivePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='roundingIncrement'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='roundingMode'>
<retval type='I' declared_type='NSNumberFormatterRoundingMode'/>
</method>
<method selector='secondaryGroupingSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setAllowsFloats:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyCode:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyDecimalSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyGroupingSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecimalSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultFormatterBehavior:' class_method='true'>
<arg type='I' name='behavior' declared_type='NSNumberFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExponentSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatWidth:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg type='I' name='behavior' declared_type='NSNumberFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSize:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInternationalCurrencySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximum:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumFractionDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumIntegerDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumSignificantDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimum:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumFractionDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumIntegerDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumSignificantDigits:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinusSign:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMultiplier:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeInfinitySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativePrefix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeSuffix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotANumberSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberStyle:'>
<arg type='I' name='style' declared_type='NSNumberFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingCharacter:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingPosition:'>
<arg type='I' name='position' declared_type='NSNumberFormatterPadPosition' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerMillSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlusSign:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveInfinitySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositivePrefix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveSuffix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingIncrement:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingMode:'>
<arg type='I' name='mode' declared_type='NSNumberFormatterRoundingMode' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecondaryGroupingSize:'>
<arg type='I' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeInfinity:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeValues:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNil:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNotANumber:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveInfinity:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveValues:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForZero:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZeroSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromNumber:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAttributesForNegativeInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNegativeValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNil'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNotANumber'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForZero'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='usesGroupingSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesSignificantDigits'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zeroSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSObject'>
<method selector='URLProtocol:cachedResponseIsValid:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didCancelAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didFailWithError:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didLoadData:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='I' name='policy' declared_type='NSURLCacheStoragePolicy' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocolDidFinishLoading:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessInstanceVariablesDirectly' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='1'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alloc' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='allocWithZone:' class_method='true'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:didEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiver:willEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:willReplaceObject:withObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverDidFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverWillFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<arg type='@' name='delegate' declared_type='id' index='2'/>
<arg type=':' name='didRecoverSelector' declared_type='SEL' index='3'/>
<arg type='^v' name='contextInfo' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autoContentAccessingProxy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='automaticallyNotifiesObserversForKey:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autorelease'>
<retval type='@' declared_type='id'/>
</method>
<method selector='awakeAfterUsingCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='beginContentAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cache:willEvictObject:'>
<arg type='@' name='cache' declared_type='NSCache*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPreviousPerformRequestsWithTarget:' class_method='true'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPreviousPerformRequestsWithTarget:selector:object:' class_method='true'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='anArgument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='class' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classFallbacksForKeyedArchiver' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForKeyedArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForKeyedUnarchiver' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='conformsToProtocol:' class_method='true'>
<arg type='@' name='protocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='conformsToProtocol:'>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:canAuthenticateAgainstProtectionSpace:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:didCancelAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didFailWithError:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveData:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='i' name='bytesWritten' declared_type='NSInteger' index='1'/>
<arg type='i' name='totalBytesWritten' declared_type='NSInteger' index='2'/>
<arg type='i' name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='bytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='2'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:needNewBodyStream:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='connection:willCacheResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='connection:willSendRequest:redirectResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='connection:willSendRequestForAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishDownloading:destinationURL:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishLoading:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionShouldUseCredentialStorage:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='continueWithoutCredentialForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:' class_method='true'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg type='^{_NSFastEnumerationState=L^@^L[5L]}' name='state' declared_type='NSFastEnumerationState*' index='0'/>
<arg type='^@' name='buffer' declared_type='id*' index='1'/>
<arg type='I' name='len' declared_type='NSUInteger' index='2'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryWithValuesForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='didChange:valuesAtIndexes:forKey:'>
<arg type='I' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardContentIfPossible'>
<retval type='v' declared_type='void'/>
</method>
<method selector='doesNotRecognizeSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeWithCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endContentAccess'>
<retval type='v' declared_type='void'/>
</method>
<method selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
<arg type=':' name='operation' declared_type='SEL' index='0'/>
<arg type='I' name='error' declared_type='NSCalculationError' index='1'/>
<arg type='@' name='leftOperand' declared_type='NSDecimalNumber*' index='2'/>
<arg type='@' name='rightOperand' declared_type='NSDecimalNumber*' index='3'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='errorInfo' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='URL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:willProcessPath:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg type='@' name='anInvocation' declared_type='NSInvocation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardingTargetForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleMachMessage:'>
<arg type='^v' name='msg' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handlePortMessage:'>
<arg type='@' name='message' declared_type='NSPortMessage*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hash'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initialize' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='instanceMethodForSelector:' class_method='true'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='^?' function_pointer='true' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method selector='instanceMethodSignatureForSelector:' class_method='true'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='instancesRespondToSelector:' class_method='true'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContentDiscarded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqual:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKindOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMemberOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubclassOfClass:' class_method='true'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPathsForValuesAffectingValueForKey:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='load' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='metadataQuery:replacementObjectForResultObject:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='result' declared_type='NSMetadataItem*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='metadataQuery:replacementValueForAttribute:value:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='attrName' declared_type='NSString*' index='1'/>
<arg type='@' name='attrValue' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='methodForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='^?' function_pointer='true' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method selector='methodSignatureForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='mutableArrayValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableArrayValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableCopy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableCopyWithZone:' class_method='true'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableCopyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableOrderedSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableOrderedSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='mutableSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='netService:didNotPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didNotResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didUpdateTXTRecordData:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didNotSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserDidStopSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserWillSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidResolveAddress:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidStop:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='new' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='observationInfo'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='observeValueForKeyPath:ofObject:change:context:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='change' declared_type='NSDictionary*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndMappingPrefix:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<arg type='@' name='attributeDict' declared_type='NSDictionary*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartMappingPrefix:toURI:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='attributeName' declared_type='NSString*' index='1'/>
<arg type='@' name='elementName' declared_type='NSString*' index='2'/>
<arg type='@' name='type' declared_type='NSString*' index='3'/>
<arg type='@' name='defaultValue' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCDATA:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='CDATABlock' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCharacters:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundComment:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='comment' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundElementDeclarationWithName:model:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='model' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundIgnorableWhitespace:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='whitespaceString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='target' declared_type='NSString*' index='1'/>
<arg type='@' name='data' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<arg type='@' name='notationName' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:parseErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='parseError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:resolveExternalEntityName:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='systemID' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='parser:validationErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='validationError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidEndDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidStartDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performDefaultHandlingForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<arg type='@' name='array' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:withObject:afterDelay:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:afterDelay:inModes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object1' declared_type='id' index='1'/>
<arg type='@' name='object2' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelectorInBackground:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<arg type='@' name='array' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidChange'>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidGainVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidLoseVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidMoveToURL:'>
<arg type='@' name='newURL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidResolveConflictVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemOperationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='presentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='presentedSubitemAtURL:didGainVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didLoseVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didResolveConflictVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidAppearAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidChangeAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rejectProtectionSpaceAndContinueWithChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='release'>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToReader:'>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToWriter:'>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replacementObjectForCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForKeyedArchiver:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resolveClassMethod:' class_method='true'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='resolveInstanceMethod:' class_method='true'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='respondsToSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='retain'>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='roundingMode'>
<retval type='I' declared_type='NSRoundingMode'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='scale'>
<retval type='s' declared_type='short'/>
</method>
<method selector='self'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setNilValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObservationInfo:'>
<arg type='^v' name='observationInfo' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKeyPath:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forUndefinedKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValuesForKeysWithDictionary:'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVersion:' class_method='true'>
<arg type='i' name='aVersion' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stream:handleEvent:'>
<arg type='@' name='aStream' declared_type='NSStream*' index='0'/>
<arg type='I' name='eventCode' declared_type='NSStreamEvent' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='superclass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='classNames' declared_type='NSArray*' index='2'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='unarchiver:didDecodeObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unarchiver:willReplaceObject:withObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverDidFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverWillFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='useCredential:forAuthenticationChallenge:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg type='^@' name='ioValue' declared_type='id*' type_modifier='N' index='0'/>
<arg type='@' name='inKey' declared_type='NSString*' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg type='^@' name='ioValue' declared_type='id*' type_modifier='N' index='0'/>
<arg type='@' name='inKeyPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='version' class_method='true'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='willChange:valuesAtIndexes:forKey:'>
<arg type='I' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</class>
<class name='NSOperation'>
<method selector='addDependency:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionBlock'>
<retval type='@?' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='dependencies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isConcurrent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReady'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method selector='queuePriority'>
<retval type='i' declared_type='NSOperationQueuePriority'/>
</method>
<method selector='removeDependency:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQueuePriority:'>
<arg type='i' name='p' declared_type='NSOperationQueuePriority' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThreadPriority:'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
<method selector='waitUntilFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addOperation:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperationWithBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperations:waitUntilFinished:'>
<arg type='@' name='ops' declared_type='NSArray*' index='0'/>
<arg type='B' name='wait' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAllOperations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentQueue' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSuspended'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mainQueue' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='maxConcurrentOperationCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operationCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='operations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setMaxConcurrentOperationCount:'>
<arg type='i' name='cnt' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuspended:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilAllOperationsAreFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:range:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<arg type='I' name='opts' declared_type='NSBinarySearchingOptions' index='2'/>
<arg type='@?' name='cmp' function_pointer='true' declared_type='NSComparator' index='3'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='@' name='set' declared_type='NSArray*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:range:copyItems:'>
<arg type='@' name='set' declared_type='NSArray*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='initWithObjects:' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:copyItems:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:range:copyItems:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='intersectsSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='orderedSet' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithArray:' class_method='true'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithArray:range:copyItems:' class_method='true'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithObject:' class_method='true'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='orderedSetWithObjects:' class_method='true' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithObjects:count:' class_method='true'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithOrderedSet:' class_method='true'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithOrderedSet:range:copyItems:' class_method='true'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithSet:' class_method='true'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orderedSetWithSet:copyItems:' class_method='true'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='reversedOrderedSet'>
<retval type='@' declared_type='NSOrderedSet*'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='I' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOrthography'>
<method selector='allLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allScripts'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dominantLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantLanguageForScript:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantScript'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDominantScript:languageMap:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<arg type='@' name='map' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='languageMap'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='languagesForScript:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='orthographyWithDominantScript:languageMap:' class_method='true'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<arg type='@' name='map' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initToBuffer:capacity:'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' name='capacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToMemory'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:append:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputStreamToBuffer:capacity:' class_method='true'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' name='capacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputStreamToFileAtPath:append:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputStreamToMemory' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputStreamWithURL:append:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='write:maxLength:'>
<arg type='*' name='buffer' const='true' declared_type='uint8_t*' index='0'/>
<arg type='I' name='len' declared_type='NSUInteger' index='1'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSPipe'>
<method selector='fileHandleForReading'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='fileHandleForWriting'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='pipe' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPort'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='port' class_method='true'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reservedSpaceLength'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<arg type='@' name='components' declared_type='NSMutableArray*' index='1'/>
<arg type='@' name='receivePort' declared_type='NSPort*' index='2'/>
<arg type='I' name='headerSpaceReserved' declared_type='NSUInteger' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<arg type='I' name='msgID' declared_type='NSUInteger' index='1'/>
<arg type='@' name='components' declared_type='NSMutableArray*' index='2'/>
<arg type='@' name='receivePort' declared_type='NSPort*' index='3'/>
<arg type='I' name='headerSpaceReserved' declared_type='NSUInteger' index='4'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='bindings' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='predicateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='predicateWithBlock:' class_method='true'>
<arg type='@?' name='block' function_pointer='true' declared_type='BOOL (^)(id, NSDictionary *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithFormat:' class_method='true' variadic='true'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithFormat:argumentArray:' class_method='true'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithFormat:arguments:' class_method='true'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<arg type='*' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithSubstitutionVariables:'>
<arg type='@' name='variables' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithValue:' class_method='true'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='activeProcessorCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='environment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='globallyUniqueString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystem'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='operatingSystemName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystemVersionString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='physicalMemory'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='int'/>
</method>
<method selector='processInfo' class_method='true'>
<retval type='@' declared_type='NSProcessInfo*'/>
</method>
<method selector='processName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='processorCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setProcessName:'>
<arg type='@' name='newName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemUptime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method selector='dataFromPropertyList:format:errorDescription:' class_method='true'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' name='format' declared_type='NSPropertyListFormat' index='1'/>
<arg type='^@' name='errorString' declared_type='NSString**' type_modifier='o' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataWithPropertyList:format:options:error:' class_method='true'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' name='format' declared_type='NSPropertyListFormat' index='1'/>
<arg type='I' name='opt' declared_type='NSPropertyListWriteOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='3'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='propertyList:isValidForFormat:' class_method='true'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' name='format' declared_type='NSPropertyListFormat' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='propertyListFromData:mutabilityOption:format:errorDescription:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' name='opt' declared_type='NSPropertyListMutabilityOptions' index='1'/>
<arg type='^I' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' name='errorString' declared_type='NSString**' type_modifier='o' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyListWithData:options:format:error:' class_method='true'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' name='opt' declared_type='NSPropertyListReadOptions' index='1'/>
<arg type='^I' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyListWithStream:options:format:error:' class_method='true'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<arg type='I' name='opt' declared_type='NSPropertyListReadOptions' index='1'/>
<arg type='^I' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writePropertyList:toStream:format:options:error:' class_method='true'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='@' name='stream' declared_type='NSOutputStream*' index='1'/>
<arg type='I' name='format' declared_type='NSPropertyListFormat' index='2'/>
<arg type='I' name='opt' declared_type='NSPropertyListWriteOptions' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='4'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSProxy'>
<method selector='alloc' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='allocWithZone:' class_method='true'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='class' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignatureForSelector:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='respondsToSelector:' class_method='true'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRegularExpression'>
<method selector='enumerateMatchesInString:options:range:usingBlock:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSTextCheckingResult *, NSMatchingFlags, BOOL *)' index='3'>
<arg type='@' declared_type='NSTextCheckingResult*'/>
<arg type='I' declared_type='NSMatchingFlags'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='escapedPatternForString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='escapedTemplateForString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='firstMatchInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='initWithPattern:options:error:'>
<arg type='@' name='pattern' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSRegularExpressionOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matchesInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='numberOfCaptureGroups'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfMatchesInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='options'>
<retval type='I' declared_type='NSRegularExpressionOptions'/>
</method>
<method selector='pattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rangeOfFirstMatchInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='regularExpressionWithPattern:options:error:' class_method='true'>
<arg type='@' name='pattern' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSRegularExpressionOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method selector='replaceMatchesInString:options:range:withTemplate:'>
<arg type='@' name='string' declared_type='NSMutableString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='replacementStringForResult:inString:offset:template:'>
<arg type='@' name='result' declared_type='NSTextCheckingResult*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='i' name='offset' declared_type='NSInteger' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingMatchesInString:options:range:withTemplate:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSRunLoop'>
<method selector='acceptInputForMode:beforeDate:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<arg type='@' name='limitDate' declared_type='NSDate*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPort:forMode:'>
<arg type='@' name='aPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTimer:forMode:'>
<arg type='@' name='timer' declared_type='NSTimer*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelector:target:argument:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelectorsWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentMode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currentRunLoop' class_method='true'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='getCFRunLoop'>
<retval type='^{__CFRunLoop=}' declared_type='CFRunLoopRef'/>
</method>
<method selector='limitDateForMode:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='mainRunLoop' class_method='true'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='performSelector:target:argument:order:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='I' name='order' declared_type='NSUInteger' index='3'/>
<arg type='@' name='modes' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePort:forMode:'>
<arg type='@' name='aPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runMode:beforeDate:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<arg type='@' name='limitDate' declared_type='NSDate*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runUntilDate:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charactersToBeSkipped'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAtEnd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedScannerWithString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDecimal:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDouble:'>
<arg type='^d' name='value' declared_type='double*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanFloat:'>
<arg type='^f' name='value' declared_type='float*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexDouble:'>
<arg type='^d' name='result' declared_type='double*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexFloat:'>
<arg type='^f' name='result' declared_type='float*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexInt:'>
<arg type='^I' name='value' declared_type='unsigned int*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexLongLong:'>
<arg type='^Q' name='result' declared_type='unsigned long long*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInt:'>
<arg type='^i' name='value' declared_type='int*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInteger:'>
<arg type='^i' name='value' declared_type='NSInteger*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanLocation'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='scanLongLong:'>
<arg type='^q' name='value' declared_type='long long*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanString:intoString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToString:intoString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scannerWithString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCaseSensitive:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCharactersToBeSkipped:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScanLocation:'>
<arg type='I' name='pos' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='anyObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredSetUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='initWithObjects:' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='argument' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='member:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='objectsWithOptions:passingTest:'>
<arg type='I' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='set' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setByAddingObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromArray:'>
<arg type='@' name='other' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWithArray:' class_method='true'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setWithObject:' class_method='true'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='setWithObjects:' class_method='true' variadic='true'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setWithObjects:count:' class_method='true'>
<arg type='^@' name='objects' const='true' declared_type='id*' index='0'/>
<arg type='I' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setWithSet:' class_method='true'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSocketPort'>
<method selector='address'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithProtocolFamily:socketType:protocol:address:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='@' name='address' declared_type='NSData*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithTCPPort:host:'>
<arg type='S' name='port' declared_type='unsigned short' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:address:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='@' name='address' declared_type='NSData*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:socket:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='i' name='sock' declared_type='NSSocketNativeHandle' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTCPPort:'>
<arg type='S' name='port' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='protocol'>
<retval type='i' declared_type='int'/>
</method>
<method selector='protocolFamily'>
<retval type='i' declared_type='int'/>
</method>
<method selector='socket'>
<retval type='i' declared_type='NSSocketNativeHandle'/>
</method>
<method selector='socketType'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='comparator'>
<retval type='@?' function_pointer='true' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</retval>
</method>
<method selector='compareObject:toObject:'>
<arg type='@' name='object1' declared_type='id' index='0'/>
<arg type='@' name='object2' declared_type='id' index='1'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='initWithKey:ascending:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:comparator:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='reversedSortDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='sortDescriptorWithKey:ascending:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortDescriptorWithKey:ascending:comparator:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortDescriptorWithKey:ascending:selector:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSStream'>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='open'>
<retval type='v' declared_type='void'/>
</method>
<method selector='propertyForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperty:forKey:'>
<arg type='@' name='property' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='streamError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='streamStatus'>
<retval type='I' declared_type='NSStreamStatus'/>
</method>
</class>
<class name='NSString'>
<method selector='UTF8String'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='availableStringEncodings' class_method='true'>
<retval type='^I' const='true' declared_type='NSStringEncoding*'/>
</method>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cString'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='cStringLength'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='cStringUsingEncoding:'>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='capitalizedString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='caseInsensitiveCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='characterAtIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='S' declared_type='unichar'/>
</method>
<method selector='commonPrefixWithString:options:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='compare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' name='compareRange' declared_type='NSRange' index='2'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:locale:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' name='compareRange' declared_type='NSRange' index='2'/>
<arg type='@' name='locale' declared_type='id' index='3'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg type='^@' name='outputName' declared_type='NSString**' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<arg type='^@' name='outputArray' declared_type='NSArray**' index='2'/>
<arg type='@' name='filterTypes' declared_type='NSArray*' index='3'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='componentsSeparatedByCharactersInSet:'>
<arg type='@' name='separator' declared_type='NSCharacterSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='componentsSeparatedByString:'>
<arg type='@' name='separator' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dataUsingEncoding:'>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='0'/>
<arg type='B' name='lossy' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultCStringEncoding' class_method='true'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='enumerateLinesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, BOOL *)' index='0'>
<arg type='@' declared_type='NSString*'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='3'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='4'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateSubstringsInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' name='opts' declared_type='NSStringEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='2'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastestEncoding'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='fileSystemRepresentation'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='I' name='maxBufferCount' declared_type='NSUInteger' index='1'/>
<arg type='^I' name='usedBufferCount' declared_type='NSUInteger*' index='2'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='3'/>
<arg type='I' name='options' declared_type='NSStringEncodingConversionOptions' index='4'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='5'/>
<arg type='^{_NSRange=II}' name='leftover' declared_type='NSRangePointer' index='6'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' name='maxLength' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<arg type='*' name='buffer' declared_type='char*' index='0'/>
<arg type='I' name='maxBufferCount' declared_type='NSUInteger' index='1'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:maxLength:range:remainingRange:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' name='maxLength' declared_type='NSUInteger' index='1'/>
<arg type='{_NSRange=II}' name='aRange' declared_type='NSRange' index='2'/>
<arg type='^{_NSRange=II}' name='leftoverRange' declared_type='NSRangePointer' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:'>
<arg type='^S' name='buffer' declared_type='unichar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:range:'>
<arg type='^S' name='buffer' declared_type='unichar*' index='0'/>
<arg type='{_NSRange=II}' name='aRange' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<arg type='*' name='cname' declared_type='char*' index='0'/>
<arg type='I' name='max' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getLineStart:end:contentsEnd:forRange:'>
<arg type='^I' name='startPtr' declared_type='NSUInteger*' index='0'/>
<arg type='^I' name='lineEndPtr' declared_type='NSUInteger*' index='1'/>
<arg type='^I' name='contentsEndPtr' declared_type='NSUInteger*' index='2'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getParagraphStart:end:contentsEnd:forRange:'>
<arg type='^I' name='startPtr' declared_type='NSUInteger*' index='0'/>
<arg type='^I' name='parEndPtr' declared_type='NSUInteger*' index='1'/>
<arg type='^I' name='contentsEndPtr' declared_type='NSUInteger*' index='2'/>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPrefix:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasSuffix:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hash'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytes:length:encoding:'>
<arg type='^v' name='bytes' const='true' declared_type='void*' index='0'/>
<arg type='I' name='len' declared_type='NSUInteger' index='1'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' name='len' declared_type='NSUInteger' index='1'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='2'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:'>
<arg type='*' name='bytes' const='true' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:encoding:'>
<arg type='*' name='nullTerminatedCString' const='true' declared_type='char*' index='0'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:length:'>
<arg type='*' name='bytes' const='true' declared_type='char*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharacters:length:'>
<arg type='^S' name='characters' const='true' declared_type='unichar*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharactersNoCopy:length:freeWhenDone:'>
<arg type='^S' name='characters' declared_type='unichar*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:encoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:usedEncoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^I' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:encoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:usedEncoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^I' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:encoding:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:arguments:'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<arg type='*' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:locale:' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:locale:arguments:'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<arg type='*' name='argList' declared_type='va_list' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUTF8String:'>
<arg type='*' name='nullTerminatedCString' const='true' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='isAbsolutePath'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='lengthOfBytesUsingEncoding:'>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='lineRangeForRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='linguisticTagsInRange:scheme:options:orthography:tokenRanges:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='3'/>
<arg type='^@' name='tokenRanges' declared_type='NSArray**' index='4'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedCaseInsensitiveCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='localizedCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='localizedNameOfStringEncoding:' class_method='true'>
<arg type='I' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedStandardCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='localizedStringWithFormat:' class_method='true' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='lossyCString'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='lowercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='maximumLengthOfBytesUsingEncoding:'>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='paragraphRangeForRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathWithComponents:' class_method='true'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='propertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyListFromStringsFileFormat'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='rangeOfCharacterFromSet:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:range:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequenceAtIndex:'>
<arg type='I' name='index' declared_type='NSUInteger' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequencesForRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:locale:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='2'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='3'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='smallestEncoding'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='string' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringByAbbreviatingWithTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingPercentEscapesUsingEncoding:'>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingFormat:' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathComponent:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathExtension:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingLastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingPathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByExpandingTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByFoldingWithOptions:locale:'>
<arg type='I' name='options' declared_type='NSStringCompareOptions' index='0'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByPaddingToLength:withString:startingAtIndex:'>
<arg type='I' name='newLength' declared_type='NSUInteger' index='0'/>
<arg type='@' name='padString' declared_type='NSString*' index='1'/>
<arg type='I' name='padIndex' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingCharactersInRange:withString:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:options:range:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSStringCompareOptions' index='2'/>
<arg type='{_NSRange=II}' name='searchRange' declared_type='NSRange' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingPercentEscapesUsingEncoding:'>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByStandardizingPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByTrimmingCharactersInSet:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringWithCString:' class_method='true'>
<arg type='*' name='bytes' const='true' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithCString:encoding:' class_method='true'>
<arg type='*' name='cString' const='true' declared_type='char*' index='0'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithCString:length:' class_method='true'>
<arg type='*' name='bytes' const='true' declared_type='char*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithCharacters:length:' class_method='true'>
<arg type='^S' name='characters' const='true' declared_type='unichar*' index='0'/>
<arg type='I' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfFile:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfFile:encoding:error:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfFile:usedEncoding:error:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^I' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfURL:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfURL:encoding:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithContentsOfURL:usedEncoding:error:' class_method='true'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^I' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithFormat:' class_method='true' variadic='true'>
<arg type='@' name='format' printf_format='true' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithString:' class_method='true'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringWithUTF8String:' class_method='true'>
<arg type='*' name='nullTerminatedCString' const='true' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringsByAppendingPaths:'>
<arg type='@' name='paths' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='substringFromIndex:'>
<arg type='I' name='from' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringToIndex:'>
<arg type='I' name='to' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringWithRange:'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uppercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<arg type='I' name='enc' declared_type='NSStringEncoding' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTextCheckingResult'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='addressCheckingResultWithRange:components:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='components' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='addressComponents'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='components'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='correctionCheckingResultWithRange:replacementString:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='dashCheckingResultWithRange:replacementString:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateCheckingResultWithRange:date:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='dateCheckingResultWithRange:date:timeZone:duration:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<arg type='@' name='timeZone' declared_type='NSTimeZone*' index='2'/>
<arg type='d' name='duration' declared_type='NSTimeInterval' index='3'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='grammarCheckingResultWithRange:details:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='details' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='grammarDetails'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='linkCheckingResultWithRange:URL:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='url' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='numberOfRanges'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='orthography'>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method selector='orthographyCheckingResultWithRange:orthography:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='phoneNumber'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='phoneNumberCheckingResultWithRange:phoneNumber:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='phoneNumber' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='quoteCheckingResultWithRange:replacementString:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='range'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeAtIndex:'>
<arg type='I' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='regularExpression'>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method selector='regularExpressionCheckingResultWithRanges:count:regularExpression:' class_method='true'>
<arg type='^{_NSRange=II}' name='ranges' declared_type='NSRangePointer' index='0'/>
<arg type='I' name='count' declared_type='NSUInteger' index='1'/>
<arg type='@' name='regularExpression' declared_type='NSRegularExpression*' index='2'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='replacementCheckingResultWithRange:replacementString:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='replacementString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultByAdjustingRangesWithOffset:'>
<arg type='i' name='offset' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='resultType'>
<retval type='Q' declared_type='NSTextCheckingType'/>
</method>
<method selector='spellCheckingResultWithRange:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='transitInformationCheckingResultWithRange:components:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='components' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
</class>
<class name='NSThread'>
<method selector='callStackReturnAddresses' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callStackSymbols' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentThread' class_method='true'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='detachNewThreadSelector:toTarget:withObject:' class_method='true'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='argument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exit' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='@' name='argument' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMainThread' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMainThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMultiThreaded' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method selector='mainThread' class_method='true'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStackSize:'>
<arg type='I' name='s' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThreadPriority:' class_method='true'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setThreadPriority:'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sleepForTimeInterval:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sleepUntilDate:' class_method='true'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stackSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadDictionary'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='threadPriority' class_method='true'>
<retval type='d' declared_type='double'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='abbreviation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='abbreviationDictionary' class_method='true'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='abbreviationForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='daylightSavingTimeOffset'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='daylightSavingTimeOffsetForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='defaultTimeZone' class_method='true'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithName:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:data:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<arg type='@' name='aData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDaylightSavingTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToTimeZone:'>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='knownTimeZoneNames' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localTimeZone' class_method='true'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='localizedName:locale:'>
<arg type='i' name='style' declared_type='NSTimeZoneNameStyle' index='0'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nextDaylightSavingTimeTransition'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='nextDaylightSavingTimeTransitionAfterDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='resetSystemTimeZone' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='secondsFromGMT'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='secondsFromGMTForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAbbreviationDictionary:' class_method='true'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultTimeZone:' class_method='true'>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemTimeZone' class_method='true'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='timeZoneDataVersion' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeZoneForSecondsFromGMT:' class_method='true'>
<arg type='i' name='seconds' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeZoneWithAbbreviation:' class_method='true'>
<arg type='@' name='abbreviation' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeZoneWithName:' class_method='true'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeZoneWithName:data:' class_method='true'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<arg type='@' name='aData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTimer'>
<method selector='fire'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fireDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='1'/>
<arg type='@' name='t' declared_type='id' index='2'/>
<arg type=':' name='s' declared_type='SEL' index='3'/>
<arg type='@' name='ui' declared_type='id' index='4'/>
<arg type='B' name='rep' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scheduledTimerWithTimeInterval:invocation:repeats:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='1'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='aTarget' declared_type='id' index='1'/>
<arg type=':' name='aSelector' declared_type='SEL' index='2'/>
<arg type='@' name='userInfo' declared_type='id' index='3'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='4'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='setFireDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timerWithTimeInterval:invocation:repeats:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='1'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='timerWithTimeInterval:target:selector:userInfo:repeats:' class_method='true'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='aTarget' declared_type='id' index='1'/>
<arg type=':' name='aSelector' declared_type='SEL' index='2'/>
<arg type='@' name='userInfo' declared_type='id' index='3'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='4'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLByAppendingPathComponent:'>
<arg type='@' name='pathComponent' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathComponent:isDirectory:'>
<arg type='@' name='pathComponent' declared_type='NSString*' index='0'/>
<arg type='B' name='isDirectory' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathExtension:'>
<arg type='@' name='pathExtension' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingLastPathComponent'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingPathExtension'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:' class_method='true'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='I' name='options' declared_type='NSURLBookmarkResolutionOptions' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^B' name='isStale' declared_type='BOOL*' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URLByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByStandardizingPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLWithString:' class_method='true'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URLWithString:relativeToURL:' class_method='true'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<arg type='@' name='baseURL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='absoluteString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='absoluteURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='bookmarkDataWithContentsOfURL:error:' class_method='true'>
<arg type='@' name='bookmarkFileURL' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:'>
<arg type='I' name='options' declared_type='NSURLBookmarkCreationOptions' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='checkResourceIsReachableAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='filePathURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fileReferenceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fileURLWithPath:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileURLWithPath:isDirectory:' class_method='true'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='isDir' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileURLWithPathComponents:' class_method='true'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fragment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getResourceValue:forKey:error:'>
<arg type='^@' name='value' declared_type='id*' type_modifier='o' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='I' name='options' declared_type='NSURLBookmarkResolutionOptions' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^B' name='isStale' declared_type='BOOL*' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='isDir' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithScheme:host:path:'>
<arg type='@' name='scheme' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:relativeToURL:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<arg type='@' name='baseURL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFileReferenceURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFileURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='parameterString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='query'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativeString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceSpecifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceValuesForKeys:error:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='resourceValuesForKeys:fromBookmarkData:' class_method='true'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scheme'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setResourceValue:forKey:error:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceValues:error:'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='standardizedURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='writeBookmarkData:toURL:options:error:' class_method='true'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='@' name='bookmarkFileURL' declared_type='NSURL*' index='1'/>
<arg type='I' name='options' declared_type='NSURLBookmarkFileCreationOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSURLAuthenticationChallenge'>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureResponse'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='initWithAuthenticationChallenge:sender:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<arg type='@' name='sender' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='1'/>
<arg type='i' name='previousFailureCount' declared_type='NSInteger' index='2'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='3'/>
<arg type='@' name='error' declared_type='NSError*' index='4'/>
<arg type='@' name='sender' declared_type='id' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='previousFailureCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='proposedCredential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='protectionSpace'>
<retval type='@' declared_type='NSURLProtectionSpace*'/>
</method>
<method selector='sender'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURLCache'>
<method selector='cachedResponseForRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='currentDiskUsage'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='currentMemoryUsage'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='diskCapacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithMemoryCapacity:diskCapacity:diskPath:'>
<arg type='I' name='memoryCapacity' declared_type='NSUInteger' index='0'/>
<arg type='I' name='diskCapacity' declared_type='NSUInteger' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='memoryCapacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeAllCachedResponses'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCachedResponseForRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDiskCapacity:'>
<arg type='I' name='diskCapacity' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMemoryCapacity:'>
<arg type='I' name='memoryCapacity' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSharedURLCache:' class_method='true'>
<arg type='@' name='cache' declared_type='NSURLCache*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedURLCache' class_method='true'>
<retval type='@' declared_type='NSURLCache*'/>
</method>
<method selector='storeCachedResponse:forRequest:'>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLConnection'>
<method selector='canHandleRequest:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionWithRequest:delegate:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<retval type='@' declared_type='NSURLConnection*'/>
</method>
<method selector='currentRequest'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<arg type='B' name='startImmediately' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='originalRequest'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendAsynchronousRequest:queue:completionHandler:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='1'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='void (^)(NSURLResponse *, NSData *, NSError *)' index='2'>
<arg type='@' declared_type='NSURLResponse*'/>
<arg type='@' declared_type='NSData*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendSynchronousRequest:returningResponse:error:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='^@' name='response' declared_type='NSURLResponse**' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setDelegateQueue:'>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLCredential'>
<method selector='certificates'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='credentialForTrust:' class_method='true'>
<arg type='^{__SecTrust=}' name='trust' declared_type='SecTrustRef' index='0'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='credentialWithIdentity:certificates:persistence:' class_method='true'>
<arg type='^{__SecIdentity=}' name='identity' declared_type='SecIdentityRef' index='0'/>
<arg type='@' name='certArray' declared_type='NSArray*' index='1'/>
<arg type='I' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='credentialWithUser:password:persistence:' class_method='true'>
<arg type='@' name='user' declared_type='NSString*' index='0'/>
<arg type='@' name='password' declared_type='NSString*' index='1'/>
<arg type='I' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='hasPassword'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='identity'>
<retval type='^{__SecIdentity=}' declared_type='SecIdentityRef'/>
</method>
<method selector='initWithIdentity:certificates:persistence:'>
<arg type='^{__SecIdentity=}' name='identity' declared_type='SecIdentityRef' index='0'/>
<arg type='@' name='certArray' declared_type='NSArray*' index='1'/>
<arg type='I' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTrust:'>
<arg type='^{__SecTrust=}' name='trust' declared_type='SecTrustRef' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:password:persistence:'>
<arg type='@' name='user' declared_type='NSString*' index='0'/>
<arg type='@' name='password' declared_type='NSString*' index='1'/>
<arg type='I' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistence'>
<retval type='I' declared_type='NSURLCredentialPersistence'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLCredentialStorage'>
<method selector='allCredentials'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='credentialsForProtectionSpace:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultCredentialForProtectionSpace:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='removeCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedCredentialStorage' class_method='true'>
<retval type='@' declared_type='NSURLCredentialStorage*'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='authenticationMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='distinguishedNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithHost:port:protocol:realm:authenticationMethod:'>
<arg type='@' name='host' declared_type='NSString*' index='0'/>
<arg type='i' name='port' declared_type='NSInteger' index='1'/>
<arg type='@' name='protocol' declared_type='NSString*' index='2'/>
<arg type='@' name='realm' declared_type='NSString*' index='3'/>
<arg type='@' name='authenticationMethod' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProxyHost:port:type:realm:authenticationMethod:'>
<arg type='@' name='host' declared_type='NSString*' index='0'/>
<arg type='i' name='port' declared_type='NSInteger' index='1'/>
<arg type='@' name='type' declared_type='NSString*' index='2'/>
<arg type='@' name='realm' declared_type='NSString*' index='3'/>
<arg type='@' name='authenticationMethod' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='port'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='proxyType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='realm'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='serverTrust'>
<retval type='^{__SecTrust=}' declared_type='SecTrustRef'/>
</method>
</class>
<class name='NSURLProtocol'>
<method selector='cachedResponse'>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='canInitWithRequest:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canonicalRequestForRequest:' class_method='true'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='client'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:cachedResponse:client:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<arg type='@' name='client' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyForKey:inRequest:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerClass:' class_method='true'>
<arg type='#' name='protocolClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removePropertyForKey:inRequest:' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='request' declared_type='NSMutableURLRequest*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='requestIsCacheEquivalent:toRequest:' class_method='true'>
<arg type='@' name='a' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='b' declared_type='NSURLRequest*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setProperty:forKey:inRequest:' class_method='true'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='request' declared_type='NSMutableURLRequest*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg type='#' name='protocolClass' declared_type='Class' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPBody'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='HTTPBodyStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='HTTPMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='allHTTPHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='cachePolicy'>
<retval type='I' declared_type='NSURLRequestCachePolicy'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:cachePolicy:timeoutInterval:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='I' name='cachePolicy' declared_type='NSURLRequestCachePolicy' index='1'/>
<arg type='d' name='timeoutInterval' declared_type='NSTimeInterval' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainDocumentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='networkServiceType'>
<retval type='I' declared_type='NSURLRequestNetworkServiceType'/>
</method>
<method selector='requestWithURL:' class_method='true'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='requestWithURL:cachePolicy:timeoutInterval:' class_method='true'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='I' name='cachePolicy' declared_type='NSURLRequestCachePolicy' index='1'/>
<arg type='d' name='timeoutInterval' declared_type='NSTimeInterval' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeoutInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg type='@' name='field' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLResponse'>
<method selector='MIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='expectedContentLength'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='initWithURL:MIMEType:expectedContentLength:textEncodingName:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='@' name='MIMEType' declared_type='NSString*' index='1'/>
<arg type='i' name='length' declared_type='NSInteger' index='2'/>
<arg type='@' name='name' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='suggestedFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textEncodingName'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSUbiquitousKeyValueStore'>
<method selector='arrayForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval type='@' declared_type='NSUbiquitousKeyValueStore*'/>
</method>
<method selector='dictionaryForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='longLongForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='long long'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:forKey:'>
<arg type='@' name='anArray' declared_type='NSArray*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:forKey:'>
<arg type='@' name='aData' declared_type='NSData*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:forKey:'>
<arg type='@' name='aDictionary' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongLong:forKey:'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:forKey:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='beginUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='canRedo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='disableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupingLevel'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='groupsByEvent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRedoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='levelsOfUndo'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='prepareWithInvocationTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='redo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='redoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='redoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuTitleForUndoActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='registerUndoWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='@' name='anObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setActionIsDiscardable:'>
<arg type='B' name='discardable' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupsByEvent:'>
<arg type='B' name='groupsByEvent' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLevelsOfUndo:'>
<arg type='I' name='levels' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg type='@' name='runLoopModes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='undoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuTitleForUndoActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoNestedGroup'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='URLForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='addSuiteNamed:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dictionaryForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:'>
<arg type='@' name='username' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='integerForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectIsForcedForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='domain' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='persistentDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='persistentDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerDefaults:'>
<arg type='@' name='registrationDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePersistentDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSuiteNamed:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeVolatileDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetStandardUserDefaults' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloat:forKey:'>
<arg type='f' name='value' declared_type='float' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInteger:forKey:'>
<arg type='i' name='value' declared_type='NSInteger' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentDomain:forName:'>
<arg type='@' name='domain' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='domainName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:forKey:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolatileDomain:forName:'>
<arg type='@' name='domain' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='domainName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='standardUserDefaults' class_method='true'>
<retval type='@' declared_type='NSUserDefaults*'/>
</method>
<method selector='stringArrayForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='volatileDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='volatileDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSValue'>
<method selector='getValue:'>
<arg type='^v' name='value' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:objCType:'>
<arg type='^v' name='value' const='true' declared_type='void*' index='0'/>
<arg type='*' name='type' const='true' declared_type='char*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToValue:'>
<arg type='@' name='value' declared_type='NSValue*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nonretainedObjectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objCType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='pointerValue'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='rangeValue'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='value:withObjCType:' class_method='true'>
<arg type='^v' name='value' const='true' declared_type='void*' index='0'/>
<arg type='*' name='type' const='true' declared_type='char*' index='1'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method selector='valueWithBytes:objCType:' class_method='true'>
<arg type='^v' name='value' const='true' declared_type='void*' index='0'/>
<arg type='*' name='type' const='true' declared_type='char*' index='1'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method selector='valueWithNonretainedObject:' class_method='true'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method selector='valueWithPointer:' class_method='true'>
<arg type='^v' name='pointer' const='true' declared_type='void*' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method selector='valueWithRange:' class_method='true'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
</class>
<class name='NSValueTransformer'>
<method selector='allowsReverseTransformation' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverseTransformedValue:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setValueTransformer:forName:' class_method='true'>
<arg type='@' name='transformer' declared_type='NSValueTransformer*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformedValue:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transformedValueClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='valueTransformerForName:' class_method='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSValueTransformer*'/>
</method>
<method selector='valueTransformerNames' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='abortParsing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='columnNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStream:'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='parse'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='parserError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg type='B' name='shouldProcessNamespaces' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg type='B' name='shouldReportNamespacePrefixes' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg type='B' name='shouldResolveExternalEntities' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<informal_protocol name='NSCacheDelegate'>
<method selector='cache:willEvictObject:' type='v16@0:4@8@12'>
<arg type='@' name='cache' declared_type='NSCache*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoderMethods'>
<method selector='awakeAfterUsingCoder:' type='@12@0:4@8'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='classForCoder' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='replacementObjectForCoder:' type='@12@0:4@8'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setVersion:' type='v12@0:4i8' class_method='true'>
<arg type='i' name='aVersion' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='version' type='i8@0:4' class_method='true'>
<retval type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoding'>
<method selector='encodeWithCoder:' type='v12@0:4@8'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCoder:' type='@12@0:4@8'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method selector='fileManager:shouldProceedAfterError:' type='B16@0:4@8@12'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='errorInfo' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:willProcessPath:' type='v16@0:4@8@12'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopying'>
<method selector='copyWithZone:' type='@12@0:4^{_NSZone=}8'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDecimalNumberBehaviors'>
<method selector='exceptionDuringOperation:error:leftOperand:rightOperand:' type='@24@0:4:8I12@16@20'>
<arg type=':' name='operation' declared_type='SEL' index='0'/>
<arg type='I' name='error' declared_type='NSCalculationError' index='1'/>
<arg type='@' name='leftOperand' declared_type='NSDecimalNumber*' index='2'/>
<arg type='@' name='rightOperand' declared_type='NSDecimalNumber*' index='3'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='roundingMode' type='I8@0:4'>
<retval type='I' declared_type='NSRoundingMode'/>
</method>
<method selector='scale' type='s8@0:4'>
<retval type='s' declared_type='short'/>
</method>
</informal_protocol>
<informal_protocol name='NSDelayedPerforming'>
<method selector='cancelPreviousPerformRequestsWithTarget:' type='v12@0:4@8' class_method='true'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPreviousPerformRequestsWithTarget:selector:object:' type='v20@0:4@8:12@16' class_method='true'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='anArgument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:afterDelay:' type='v24@0:4:8@12d16'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:afterDelay:inModes:' type='v28@0:4:8@12d16@24'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContent'>
<method selector='beginContentAccess' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='discardContentIfPossible' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endContentAccess' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isContentDiscarded' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContentProxy'>
<method selector='autoContentAccessingProxy' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method selector='attemptRecoveryFromError:optionIndex:' type='B16@0:4@8I12'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:' type='v28@0:4@8I12@16:20^v24'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<arg type='@' name='delegate' declared_type='id' index='2'/>
<arg type=':' name='didRecoverSelector' declared_type='SEL' index='3'/>
<arg type='^v' name='contextInfo' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFastEnumeration'>
<method selector='countByEnumeratingWithState:objects:count:' type='I20@0:4^{?=L^@^L[5L]}8^@12I16'>
<arg type='^{_NSFastEnumerationState=L^@^L[5L]}' name='state' declared_type='NSFastEnumerationState*' index='0'/>
<arg type='^@' name='buffer' declared_type='id*' index='1'/>
<arg type='I' name='len' declared_type='NSUInteger' index='2'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSFileManagerDelegate'>
<method selector='fileManager:shouldCopyItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:' type='B20@0:4@8@12@16'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='URL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:' type='B16@0:4@8@12'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:' type='B16@0:4@8@12'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSFilePresenter'>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:' type='v12@0:4@?8'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:' type='v16@0:4@8@?12'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='1'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidChange' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidGainVersion:' type='v12@0:4@8'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidLoseVersion:' type='v12@0:4@8'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidMoveToURL:' type='v12@0:4@8'>
<arg type='@' name='newURL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidResolveConflictVersion:' type='v12@0:4@8'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemOperationQueue' type='@8@0:4'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='presentedItemURL' type='@8@0:4'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='presentedSubitemAtURL:didGainVersion:' type='v16@0:4@8@12'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didLoseVersion:' type='v16@0:4@8@12'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didMoveToURL:' type='v16@0:4@8@12'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didResolveConflictVersion:' type='v16@0:4@8@12'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidAppearAtURL:' type='v12@0:4@8'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidChangeAtURL:' type='v12@0:4@8'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToReader:' type='v12@0:4@?8'>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToWriter:' type='v12@0:4@?8'>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:' type='v12@0:4@?8'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method selector='accessInstanceVariablesDirectly' type='B8@0:4' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dictionaryWithValuesForKeys:' type='@12@0:4@8'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mutableArrayValueForKey:' type='@12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableArrayValueForKeyPath:' type='@12@0:4@8'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableOrderedSetValueForKey:' type='@12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableOrderedSetValueForKeyPath:' type='@12@0:4@8'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableSetValueForKey:' type='@12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='mutableSetValueForKeyPath:' type='@12@0:4@8'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='setNilValueForKey:' type='v12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:' type='v16@0:4@8@12'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKeyPath:' type='v16@0:4@8@12'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forUndefinedKey:' type='v16@0:4@8@12'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValuesForKeysWithDictionary:' type='v12@0:4@8'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateValue:forKey:error:' type='B20@0:4N^@8@12o^@16'>
<arg type='^@' name='ioValue' declared_type='id*' type_modifier='N' index='0'/>
<arg type='@' name='inKey' declared_type='NSString*' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKeyPath:error:' type='B20@0:4N^@8@12o^@16'>
<arg type='^@' name='ioValue' declared_type='id*' type_modifier='N' index='0'/>
<arg type='@' name='inKeyPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' type_modifier='o' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueForKey:' type='@12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKeyPath:' type='@12@0:4@8'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForUndefinedKey:' type='@12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverNotification'>
<method selector='didChange:valuesAtIndexes:forKey:' type='v20@0:4I8@12@16'>
<arg type='I' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:' type='v12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:withSetMutation:usingObjects:' type='v20@0:4@8I12@16'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChange:valuesAtIndexes:forKey:' type='v20@0:4I8@12@16'>
<arg type='I' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:' type='v12@0:4@8'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:withSetMutation:usingObjects:' type='v20@0:4@8I12@16'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverRegistration'>
<method selector='addObserver:forKeyPath:options:context:' type='v24@0:4@8@12I16^v20'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:' type='v16@0:4@8@12'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:' type='v20@0:4@8@12^v16'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserving'>
<method selector='observeValueForKeyPath:ofObject:change:context:' type='v24@0:4@8@12@16^v20'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='change' declared_type='NSDictionary*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method selector='automaticallyNotifiesObserversForKey:' type='B12@0:4@8' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPathsForValuesAffectingValueForKey:' type='@12@0:4@8' class_method='true'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='observationInfo' type='^v8@0:4'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='setObservationInfo:' type='v12@0:4^v8'>
<arg type='^v' name='observationInfo' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverDelegate'>
<method selector='archiver:didEncodeObject:' type='v16@0:4@8@12'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiver:willEncodeObject:' type='@16@0:4@8@12'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:willReplaceObject:withObject:' type='v20@0:4@8@12@16'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverDidFinish:' type='v12@0:4@8'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverWillFinish:' type='v12@0:4@8'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverObjectSubstitution'>
<method selector='classFallbacksForKeyedArchiver' type='@8@0:4' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForKeyedArchiver' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='replacementObjectForKeyedArchiver:' type='@12@0:4@8'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverDelegate'>
<method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:' type='#20@0:4@8@12@16'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='classNames' declared_type='NSArray*' index='2'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='unarchiver:didDecodeObject:' type='@16@0:4@8@12'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unarchiver:willReplaceObject:withObject:' type='v20@0:4@8@12@16'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverDidFinish:' type='v12@0:4@8'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverWillFinish:' type='v12@0:4@8'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
<method selector='classForKeyedUnarchiver' type='#8@0:4' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
</informal_protocol>
<informal_protocol name='NSLocking'>
<method selector='lock' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlock' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMachPortDelegate'>
<method selector='handleMachMessage:' type='v12@0:4^v8'>
<arg type='^v' name='msg' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMetadataQueryDelegate'>
<method selector='metadataQuery:replacementObjectForResultObject:' type='@16@0:4@8@12'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='result' declared_type='NSMetadataItem*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='metadataQuery:replacementValueForAttribute:value:' type='@20@0:4@8@12@16'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='attrName' declared_type='NSString*' index='1'/>
<arg type='@' name='attrValue' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSMutableCopying'>
<method selector='mutableCopyWithZone:' type='@12@0:4^{_NSZone=}8'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceBrowserDelegate'>
<method selector='netServiceBrowser:didFindDomain:moreComing:' type='v20@0:4@8@12B16'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:' type='v20@0:4@8@12B16'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didNotSearch:' type='v16@0:4@8@12'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:' type='v20@0:4@8@12B16'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:' type='v20@0:4@8@12B16'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserDidStopSearch:' type='v12@0:4@8'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserWillSearch:' type='v12@0:4@8'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceDelegate'>
<method selector='netService:didNotPublish:' type='v16@0:4@8@12'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didNotResolve:' type='v16@0:4@8@12'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didUpdateTXTRecordData:' type='v16@0:4@8@12'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidPublish:' type='v12@0:4@8'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidResolveAddress:' type='v12@0:4@8'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidStop:' type='v12@0:4@8'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillPublish:' type='v12@0:4@8'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillResolve:' type='v12@0:4@8'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSObject'>
<method selector='autorelease' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method selector='class' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='conformsToProtocol:' type='B12@0:4@8'>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='debugDescription' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hash' type='I8@0:4'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='isEqual:' type='B12@0:4@8'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKindOfClass:' type='B12@0:4#8'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMemberOfClass:' type='B12@0:4#8'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProxy' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performSelector:' type='@12@0:4:8'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:withObject:' type='@16@0:4:8@12'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:withObject:withObject:' type='@20@0:4:8@12@16'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object1' declared_type='id' index='1'/>
<arg type='@' name='object2' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='release' type='Vv8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method selector='respondsToSelector:' type='B12@0:4:8'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='retain' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainCount' type='I8@0:4'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='self' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method selector='superclass' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='zone' type='^{_NSZone=}8@0:4'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</informal_protocol>
<informal_protocol name='NSPortDelegate'>
<method selector='handlePortMessage:' type='v12@0:4@8'>
<arg type='@' name='message' declared_type='NSPortMessage*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSStreamDelegate'>
<method selector='stream:handleEvent:' type='v16@0:4@8I12'>
<arg type='@' name='aStream' declared_type='NSStream*' index='0'/>
<arg type='I' name='eventCode' declared_type='NSStreamEvent' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSThreadPerformAdditions'>
<method selector='performSelector:onThread:withObject:waitUntilDone:' type='v24@0:4:8@12@16B20'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:' type='v28@0:4:8@12@16B20@24'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<arg type='@' name='array' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorInBackground:withObject:' type='v16@0:4:8@12'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:' type='v20@0:4:8@12B16'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:' type='v24@0:4:8@12B16@20'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<arg type='@' name='array' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLAuthenticationChallengeSender'>
<method selector='cancelAuthenticationChallenge:' type='v12@0:4@8'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='continueWithoutCredentialForAuthenticationChallenge:' type='v12@0:4@8'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performDefaultHandlingForAuthenticationChallenge:' type='v12@0:4@8'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rejectProtectionSpaceAndContinueWithChallenge:' type='v12@0:4@8'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='useCredential:forAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDataDelegate'>
<method selector='connection:didReceiveData:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveResponse:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:' type='v24@0:4@8i12i16i20'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='i' name='bytesWritten' declared_type='NSInteger' index='1'/>
<arg type='i' name='totalBytesWritten' declared_type='NSInteger' index='2'/>
<arg type='i' name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:needNewBodyStream:' type='@16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='connection:willCacheResponse:' type='@16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='connection:willSendRequest:redirectResponse:' type='@20@0:4@8@12@16'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='connectionDidFinishLoading:' type='v12@0:4@8'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method selector='connection:canAuthenticateAgainstProtectionSpace:' type='B16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:didCancelAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didFailWithError:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:willSendRequestForAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionShouldUseCredentialStorage:' type='B12@0:4@8'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDownloadDelegate'>
<method selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:' type='v36@0:4@8q12q20q28'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='bytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='2'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishDownloading:destinationURL:' type='v16@0:4@8@12'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:' type='v28@0:4@8q12q20'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLProtocolClient'>
<method selector='URLProtocol:cachedResponseIsValid:' type='v16@0:4@8@12'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didCancelAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didFailWithError:' type='v16@0:4@8@12'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didLoadData:' type='v16@0:4@8@12'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:' type='v20@0:4@8@12I16'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='I' name='policy' declared_type='NSURLCacheStoragePolicy' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:' type='v20@0:4@8@12@16'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocolDidFinishLoading:' type='v12@0:4@8'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSXMLParserDelegate'>
<method selector='parser:didEndElement:namespaceURI:qualifiedName:' type='v24@0:4@8@12@16@20'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndMappingPrefix:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:' type='v28@0:4@8@12@16@20@24'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<arg type='@' name='attributeDict' declared_type='NSDictionary*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartMappingPrefix:toURI:' type='v20@0:4@8@12@16'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:' type='v28@0:4@8@12@16@20@24'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='attributeName' declared_type='NSString*' index='1'/>
<arg type='@' name='elementName' declared_type='NSString*' index='2'/>
<arg type='@' name='type' declared_type='NSString*' index='3'/>
<arg type='@' name='defaultValue' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCDATA:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='CDATABlock' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCharacters:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundComment:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='comment' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundElementDeclarationWithName:model:' type='v20@0:4@8@12@16'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='model' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:' type='v24@0:4@8@12@16@20'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundIgnorableWhitespace:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='whitespaceString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundInternalEntityDeclarationWithName:value:' type='v20@0:4@8@12@16'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundNotationDeclarationWithName:publicID:systemID:' type='v24@0:4@8@12@16@20'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundProcessingInstructionWithTarget:data:' type='v20@0:4@8@12@16'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='target' declared_type='NSString*' index='1'/>
<arg type='@' name='data' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:' type='v28@0:4@8@12@16@20@24'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<arg type='@' name='notationName' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:parseErrorOccurred:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='parseError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:resolveExternalEntityName:systemID:' type='@20@0:4@8@12@16'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='systemID' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='parser:validationErrorOccurred:' type='v16@0:4@8@12'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='validationError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidEndDocument:' type='v12@0:4@8'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidStartDocument:' type='v12@0:4@8'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
