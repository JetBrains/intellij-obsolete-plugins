<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='UIEdgeInsets' type='{UIEdgeInsets=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}'>
<field name='top' type='f' declared_type='CGFloat'/>
<field name='left' type='f' declared_type='CGFloat'/>
<field name='bottom' type='f' declared_type='CGFloat'/>
<field name='right' type='f' declared_type='CGFloat'/>
</struct>
<struct name='UIOffset' type='{UIOffset=&quot;horizontal&quot;f&quot;vertical&quot;f}'>
<field name='horizontal' type='f' declared_type='CGFloat'/>
<field name='vertical' type='f' declared_type='CGFloat'/>
</struct>
<constant name='UIAccessibilityAnnouncementNotification' type='I' declared_type='UIAccessibilityNotifications'/>
<constant name='UIAccessibilityClosedCaptioningStatusDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIAccessibilityLayoutChangedNotification' type='I' declared_type='UIAccessibilityNotifications'/>
<constant name='UIAccessibilityMonoAudioStatusDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIAccessibilityPageScrolledNotification' type='I' declared_type='UIAccessibilityNotifications'/>
<constant name='UIAccessibilityScreenChangedNotification' type='I' declared_type='UIAccessibilityNotifications'/>
<constant name='UIAccessibilityTraitAdjustable' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitAllowsDirectInteraction' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitButton' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitCausesPageTurn' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitImage' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitKeyboardKey' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitLink' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitNone' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitNotEnabled' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitPlaysSound' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitSearchField' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitSelected' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitStartsMediaSession' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitStaticText' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitSummaryElement' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityTraitUpdatesFrequently' type='Q' declared_type='UIAccessibilityTraits'/>
<constant name='UIAccessibilityVoiceOverStatusChanged' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidBecomeActiveNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidChangeStatusBarFrameNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidChangeStatusBarOrientationNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidEnterBackgroundNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidFinishLaunchingNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationDidReceiveMemoryWarningNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsAnnotationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsLocalNotificationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsLocationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsNewsstandDownloadsKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsRemoteNotificationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsSourceApplicationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationLaunchOptionsURLKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationProtectedDataDidBecomeAvailable' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationProtectedDataWillBecomeUnavailable' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationSignificantTimeChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationStatusBarFrameUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationStatusBarOrientationUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationWillChangeStatusBarFrameNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationWillChangeStatusBarOrientationNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationWillEnterForegroundNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationWillResignActiveNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIApplicationWillTerminateNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIBackgroundTaskInvalid' type='I' const='true' declared_type='UIBackgroundTaskIdentifier'/>
<constant name='UIDeviceBatteryLevelDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIDeviceBatteryStateDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIDeviceOrientationDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIDeviceProximityStateDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIDocumentStateChangedNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIEdgeInsetsZero' type='{UIEdgeInsets=ffff}' const='true' declared_type='UIEdgeInsets'/>
<constant name='UIImagePickerControllerCropRect' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerEditedImage' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerMediaMetadata' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerMediaType' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerMediaURL' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerOriginalImage' type='@' const='true' declared_type='NSString*'/>
<constant name='UIImagePickerControllerReferenceURL' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardAnimationCurveUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardAnimationDurationUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardBoundsUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardCenterBeginUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardCenterEndUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardDidChangeFrameNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardDidHideNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardDidShowNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardFrameBeginUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardFrameEndUserInfoKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardWillChangeFrameNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardWillHideNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIKeyboardWillShowNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UILocalNotificationDefaultSoundName' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMenuControllerDidHideMenuNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMenuControllerDidShowMenuNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMenuControllerMenuFrameDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMenuControllerWillHideMenuNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMenuControllerWillShowMenuNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIMinimumKeepAliveTimeout' type='d' const='true' declared_type='NSTimeInterval'/>
<constant name='UINavigationControllerHideShowBarDuration' type='f' const='true' declared_type='CGFloat'/>
<constant name='UINibExternalObjects' type='@' const='true' declared_type='NSString*'/>
<constant name='UINibProxiedObjectsKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIOffsetZero' type='{UIOffset=ff}' const='true' declared_type='UIOffset'/>
<constant name='UIPageViewControllerOptionSpineLocationKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardChangedNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardChangedTypesAddedKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardChangedTypesRemovedKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardNameFind' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardNameGeneral' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardRemovedNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIPasteboardTypeListColor' type='@' declared_type='NSArray*'/>
<constant name='UIPasteboardTypeListImage' type='@' declared_type='NSArray*'/>
<constant name='UIPasteboardTypeListString' type='@' declared_type='NSArray*'/>
<constant name='UIPasteboardTypeListURL' type='@' declared_type='NSArray*'/>
<constant name='UIPrintErrorDomain' type='@' const='true' declared_type='NSString*'/>
<constant name='UIScreenBrightnessDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIScreenDidConnectNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIScreenDidDisconnectNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIScreenModeDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIScrollViewDecelerationRateFast' type='f' const='true' declared_type='float'/>
<constant name='UIScrollViewDecelerationRateNormal' type='f' const='true' declared_type='float'/>
<constant name='UITableViewAutomaticDimension' type='f' const='true' declared_type='CGFloat'/>
<constant name='UITableViewIndexSearch' type='@' const='true' declared_type='NSString*'/>
<constant name='UITableViewSelectionDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextAttributeFont' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextAttributeTextColor' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextAttributeTextShadowColor' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextAttributeTextShadowOffset' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextFieldTextDidBeginEditingNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextFieldTextDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextFieldTextDidEndEditingNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextInputCurrentInputModeDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextInputTextBackgroundColorKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextInputTextColorKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextInputTextFontKey' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextViewTextDidBeginEditingNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextViewTextDidChangeNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITextViewTextDidEndEditingNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UITrackingRunLoopMode' type='@' const='true' declared_type='NSString*'/>
<constant name='UIViewControllerHierarchyInconsistencyException' type='@' const='true' declared_type='NSString*'/>
<constant name='UIWindowDidBecomeHiddenNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIWindowDidBecomeKeyNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIWindowDidBecomeVisibleNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIWindowDidResignKeyNotification' type='@' const='true' declared_type='NSString*'/>
<constant name='UIWindowLevelAlert' type='f' const='true' declared_type='UIWindowLevel'/>
<constant name='UIWindowLevelNormal' type='f' const='true' declared_type='UIWindowLevel'/>
<constant name='UIWindowLevelStatusBar' type='f' const='true' declared_type='UIWindowLevel'/>
<enum name='UIAccessibilityScrollDirectionDown' value='4'/>
<enum name='UIAccessibilityScrollDirectionLeft' value='2'/>
<enum name='UIAccessibilityScrollDirectionNext' value='5'/>
<enum name='UIAccessibilityScrollDirectionPrevious' value='6'/>
<enum name='UIAccessibilityScrollDirectionRight' value='1'/>
<enum name='UIAccessibilityScrollDirectionUp' value='3'/>
<enum name='UIAccessibilityZoomTypeInsertionPoint' value='0'/>
<enum name='UIActionSheetStyleAutomatic' value='-1'/>
<enum name='UIActionSheetStyleBlackOpaque' value='1'/>
<enum name='UIActionSheetStyleBlackTranslucent' value='2'/>
<enum name='UIActionSheetStyleDefault' value='0'/>
<enum name='UIActivityIndicatorViewStyleGray' value='2'/>
<enum name='UIActivityIndicatorViewStyleWhite' value='1'/>
<enum name='UIActivityIndicatorViewStyleWhiteLarge' value='0'/>
<enum name='UIAlertViewStyleDefault' value='0'/>
<enum name='UIAlertViewStyleLoginAndPasswordInput' value='3'/>
<enum name='UIAlertViewStylePlainTextInput' value='2'/>
<enum name='UIAlertViewStyleSecureTextInput' value='1'/>
<enum name='UIApplicationStateActive' value='0'/>
<enum name='UIApplicationStateBackground' value='2'/>
<enum name='UIApplicationStateInactive' value='1'/>
<enum name='UIBarButtonItemStyleBordered' value='1'/>
<enum name='UIBarButtonItemStyleDone' value='2'/>
<enum name='UIBarButtonItemStylePlain' value='0'/>
<enum name='UIBarButtonSystemItemAction' value='9'/>
<enum name='UIBarButtonSystemItemAdd' value='4'/>
<enum name='UIBarButtonSystemItemBookmarks' value='11'/>
<enum name='UIBarButtonSystemItemCamera' value='15'/>
<enum name='UIBarButtonSystemItemCancel' value='1'/>
<enum name='UIBarButtonSystemItemCompose' value='7'/>
<enum name='UIBarButtonSystemItemDone' value='0'/>
<enum name='UIBarButtonSystemItemEdit' value='2'/>
<enum name='UIBarButtonSystemItemFastForward' value='20'/>
<enum name='UIBarButtonSystemItemFixedSpace' value='6'/>
<enum name='UIBarButtonSystemItemFlexibleSpace' value='5'/>
<enum name='UIBarButtonSystemItemOrganize' value='10'/>
<enum name='UIBarButtonSystemItemPageCurl' value='23'/>
<enum name='UIBarButtonSystemItemPause' value='18'/>
<enum name='UIBarButtonSystemItemPlay' value='17'/>
<enum name='UIBarButtonSystemItemRedo' value='22'/>
<enum name='UIBarButtonSystemItemRefresh' value='13'/>
<enum name='UIBarButtonSystemItemReply' value='8'/>
<enum name='UIBarButtonSystemItemRewind' value='19'/>
<enum name='UIBarButtonSystemItemSave' value='3'/>
<enum name='UIBarButtonSystemItemSearch' value='12'/>
<enum name='UIBarButtonSystemItemStop' value='14'/>
<enum name='UIBarButtonSystemItemTrash' value='16'/>
<enum name='UIBarButtonSystemItemUndo' value='21'/>
<enum name='UIBarMetricsDefault' value='0'/>
<enum name='UIBarMetricsLandscapePhone' value='1'/>
<enum name='UIBarStyleBlack' value='1'/>
<enum name='UIBarStyleBlackOpaque' value='1'/>
<enum name='UIBarStyleBlackTranslucent' value='2'/>
<enum name='UIBarStyleDefault' value='0'/>
<enum name='UIBaselineAdjustmentAlignBaselines' value='0'/>
<enum name='UIBaselineAdjustmentAlignCenters' value='1'/>
<enum name='UIBaselineAdjustmentNone' value='2'/>
<enum name='UIButtonTypeContactAdd' value='5'/>
<enum name='UIButtonTypeCustom' value='0'/>
<enum name='UIButtonTypeDetailDisclosure' value='2'/>
<enum name='UIButtonTypeInfoDark' value='4'/>
<enum name='UIButtonTypeInfoLight' value='3'/>
<enum name='UIButtonTypeRoundedRect' value='1'/>
<enum name='UIControlContentHorizontalAlignmentCenter' value='0'/>
<enum name='UIControlContentHorizontalAlignmentFill' value='3'/>
<enum name='UIControlContentHorizontalAlignmentLeft' value='1'/>
<enum name='UIControlContentHorizontalAlignmentRight' value='2'/>
<enum name='UIControlContentVerticalAlignmentBottom' value='2'/>
<enum name='UIControlContentVerticalAlignmentCenter' value='0'/>
<enum name='UIControlContentVerticalAlignmentFill' value='3'/>
<enum name='UIControlContentVerticalAlignmentTop' value='1'/>
<enum name='UIControlEventAllEditingEvents' value='983040'/>
<enum name='UIControlEventAllEvents' value='4294967295'/>
<enum name='UIControlEventAllTouchEvents' value='4095'/>
<enum name='UIControlEventApplicationReserved' value='251658240'/>
<enum name='UIControlEventEditingChanged' value='131072'/>
<enum name='UIControlEventEditingDidBegin' value='65536'/>
<enum name='UIControlEventEditingDidEnd' value='262144'/>
<enum name='UIControlEventEditingDidEndOnExit' value='524288'/>
<enum name='UIControlEventSystemReserved' value='4026531840'/>
<enum name='UIControlEventTouchCancel' value='256'/>
<enum name='UIControlEventTouchDown' value='1'/>
<enum name='UIControlEventTouchDownRepeat' value='2'/>
<enum name='UIControlEventTouchDragEnter' value='16'/>
<enum name='UIControlEventTouchDragExit' value='32'/>
<enum name='UIControlEventTouchDragInside' value='4'/>
<enum name='UIControlEventTouchDragOutside' value='8'/>
<enum name='UIControlEventTouchUpInside' value='64'/>
<enum name='UIControlEventTouchUpOutside' value='128'/>
<enum name='UIControlEventValueChanged' value='4096'/>
<enum name='UIControlStateApplication' value='16711680'/>
<enum name='UIControlStateDisabled' value='2'/>
<enum name='UIControlStateHighlighted' value='1'/>
<enum name='UIControlStateNormal' value='0'/>
<enum name='UIControlStateReserved' value='4278190080'/>
<enum name='UIControlStateSelected' value='4'/>
<enum name='UIDataDetectorTypeAddress' value='4'/>
<enum name='UIDataDetectorTypeAll' value='4294967295'/>
<enum name='UIDataDetectorTypeCalendarEvent' value='8'/>
<enum name='UIDataDetectorTypeLink' value='2'/>
<enum name='UIDataDetectorTypeNone' value='0'/>
<enum name='UIDataDetectorTypePhoneNumber' value='1'/>
<enum name='UIDatePickerModeCountDownTimer' value='3'/>
<enum name='UIDatePickerModeDate' value='1'/>
<enum name='UIDatePickerModeDateAndTime' value='2'/>
<enum name='UIDatePickerModeTime' value='0'/>
<enum name='UIDeviceBatteryStateCharging' value='2'/>
<enum name='UIDeviceBatteryStateFull' value='3'/>
<enum name='UIDeviceBatteryStateUnknown' value='0'/>
<enum name='UIDeviceBatteryStateUnplugged' value='1'/>
<enum name='UIDeviceOrientationFaceDown' value='6'/>
<enum name='UIDeviceOrientationFaceUp' value='5'/>
<enum name='UIDeviceOrientationLandscapeLeft' value='3'/>
<enum name='UIDeviceOrientationLandscapeRight' value='4'/>
<enum name='UIDeviceOrientationPortrait' value='1'/>
<enum name='UIDeviceOrientationPortraitUpsideDown' value='2'/>
<enum name='UIDeviceOrientationUnknown' value='0'/>
<enum name='UIDocumentChangeCleared' value='3'/>
<enum name='UIDocumentChangeDone' value='0'/>
<enum name='UIDocumentChangeRedone' value='2'/>
<enum name='UIDocumentChangeUndone' value='1'/>
<enum name='UIDocumentSaveForCreating' value='0'/>
<enum name='UIDocumentSaveForOverwriting' value='1'/>
<enum name='UIDocumentStateClosed' value='1'/>
<enum name='UIDocumentStateEditingDisabled' value='8'/>
<enum name='UIDocumentStateInConflict' value='2'/>
<enum name='UIDocumentStateNormal' value='0'/>
<enum name='UIDocumentStateSavingError' value='4'/>
<enum name='UIEventSubtypeMotionShake' value='1'/>
<enum name='UIEventSubtypeNone' value='0'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingBackward' value='106'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingForward' value='108'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingBackward' value='107'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingForward' value='109'/>
<enum name='UIEventSubtypeRemoteControlNextTrack' value='104'/>
<enum name='UIEventSubtypeRemoteControlPause' value='101'/>
<enum name='UIEventSubtypeRemoteControlPlay' value='100'/>
<enum name='UIEventSubtypeRemoteControlPreviousTrack' value='105'/>
<enum name='UIEventSubtypeRemoteControlStop' value='102'/>
<enum name='UIEventSubtypeRemoteControlTogglePlayPause' value='103'/>
<enum name='UIEventTypeMotion' value='1'/>
<enum name='UIEventTypeRemoteControl' value='2'/>
<enum name='UIEventTypeTouches' value='0'/>
<enum name='UIGestureRecognizerStateBegan' value='1'/>
<enum name='UIGestureRecognizerStateCancelled' value='4'/>
<enum name='UIGestureRecognizerStateChanged' value='2'/>
<enum name='UIGestureRecognizerStateEnded' value='3'/>
<enum name='UIGestureRecognizerStateFailed' value='5'/>
<enum name='UIGestureRecognizerStatePossible' value='0'/>
<enum name='UIGestureRecognizerStateRecognized' value='3'/>
<enum name='UIImageOrientationDown' value='1'/>
<enum name='UIImageOrientationDownMirrored' value='5'/>
<enum name='UIImageOrientationLeft' value='2'/>
<enum name='UIImageOrientationLeftMirrored' value='6'/>
<enum name='UIImageOrientationRight' value='3'/>
<enum name='UIImageOrientationRightMirrored' value='7'/>
<enum name='UIImageOrientationUp' value='0'/>
<enum name='UIImageOrientationUpMirrored' value='4'/>
<enum name='UIImagePickerControllerCameraCaptureModePhoto' value='0'/>
<enum name='UIImagePickerControllerCameraCaptureModeVideo' value='1'/>
<enum name='UIImagePickerControllerCameraDeviceFront' value='1'/>
<enum name='UIImagePickerControllerCameraDeviceRear' value='0'/>
<enum name='UIImagePickerControllerCameraFlashModeAuto' value='0'/>
<enum name='UIImagePickerControllerCameraFlashModeOff' value='-1'/>
<enum name='UIImagePickerControllerCameraFlashModeOn' value='1'/>
<enum name='UIImagePickerControllerQualityType640x480' value='3'/>
<enum name='UIImagePickerControllerQualityTypeHigh' value='0'/>
<enum name='UIImagePickerControllerQualityTypeIFrame1280x720' value='4'/>
<enum name='UIImagePickerControllerQualityTypeIFrame960x540' value='5'/>
<enum name='UIImagePickerControllerQualityTypeLow' value='2'/>
<enum name='UIImagePickerControllerQualityTypeMedium' value='1'/>
<enum name='UIImagePickerControllerSourceTypeCamera' value='1'/>
<enum name='UIImagePickerControllerSourceTypePhotoLibrary' value='0'/>
<enum name='UIImagePickerControllerSourceTypeSavedPhotosAlbum' value='2'/>
<enum name='UIInterfaceOrientationLandscapeLeft' value='4'/>
<enum name='UIInterfaceOrientationLandscapeRight' value='3'/>
<enum name='UIInterfaceOrientationPortrait' value='1'/>
<enum name='UIInterfaceOrientationPortraitUpsideDown' value='2'/>
<enum name='UIKeyboardAppearanceAlert' value='1'/>
<enum name='UIKeyboardAppearanceDefault' value='0'/>
<enum name='UIKeyboardTypeASCIICapable' value='1'/>
<enum name='UIKeyboardTypeAlphabet' value='1'/>
<enum name='UIKeyboardTypeDecimalPad' value='8'/>
<enum name='UIKeyboardTypeDefault' value='0'/>
<enum name='UIKeyboardTypeEmailAddress' value='7'/>
<enum name='UIKeyboardTypeNamePhonePad' value='6'/>
<enum name='UIKeyboardTypeNumberPad' value='4'/>
<enum name='UIKeyboardTypeNumbersAndPunctuation' value='2'/>
<enum name='UIKeyboardTypePhonePad' value='5'/>
<enum name='UIKeyboardTypeTwitter' value='9'/>
<enum name='UIKeyboardTypeURL' value='3'/>
<enum name='UILineBreakModeCharacterWrap' value='1'/>
<enum name='UILineBreakModeClip' value='2'/>
<enum name='UILineBreakModeHeadTruncation' value='3'/>
<enum name='UILineBreakModeMiddleTruncation' value='5'/>
<enum name='UILineBreakModeTailTruncation' value='4'/>
<enum name='UILineBreakModeWordWrap' value='0'/>
<enum name='UIMenuControllerArrowDefault' value='0'/>
<enum name='UIMenuControllerArrowDown' value='2'/>
<enum name='UIMenuControllerArrowLeft' value='3'/>
<enum name='UIMenuControllerArrowRight' value='4'/>
<enum name='UIMenuControllerArrowUp' value='1'/>
<enum name='UIModalPresentationCurrentContext' value='3'/>
<enum name='UIModalPresentationFormSheet' value='2'/>
<enum name='UIModalPresentationFullScreen' value='0'/>
<enum name='UIModalPresentationPageSheet' value='1'/>
<enum name='UIModalTransitionStyleCoverVertical' value='0'/>
<enum name='UIModalTransitionStyleCrossDissolve' value='2'/>
<enum name='UIModalTransitionStyleFlipHorizontal' value='1'/>
<enum name='UIModalTransitionStylePartialCurl' value='3'/>
<enum name='UIPageViewControllerNavigationDirectionForward' value='0'/>
<enum name='UIPageViewControllerNavigationDirectionReverse' value='1'/>
<enum name='UIPageViewControllerNavigationOrientationHorizontal' value='0'/>
<enum name='UIPageViewControllerNavigationOrientationVertical' value='1'/>
<enum name='UIPageViewControllerSpineLocationMax' value='3'/>
<enum name='UIPageViewControllerSpineLocationMid' value='2'/>
<enum name='UIPageViewControllerSpineLocationMin' value='1'/>
<enum name='UIPageViewControllerSpineLocationNone' value='0'/>
<enum name='UIPageViewControllerTransitionStylePageCurl' value='0'/>
<enum name='UIPopoverArrowDirectionAny' value='15'/>
<enum name='UIPopoverArrowDirectionDown' value='2'/>
<enum name='UIPopoverArrowDirectionLeft' value='4'/>
<enum name='UIPopoverArrowDirectionRight' value='8'/>
<enum name='UIPopoverArrowDirectionUnknown' value='4294967295'/>
<enum name='UIPopoverArrowDirectionUp' value='1'/>
<enum name='UIPrintInfoDuplexLongEdge' value='1'/>
<enum name='UIPrintInfoDuplexNone' value='0'/>
<enum name='UIPrintInfoDuplexShortEdge' value='2'/>
<enum name='UIPrintInfoOrientationLandscape' value='1'/>
<enum name='UIPrintInfoOrientationPortrait' value='0'/>
<enum name='UIPrintInfoOutputGeneral' value='0'/>
<enum name='UIPrintInfoOutputGrayscale' value='2'/>
<enum name='UIPrintInfoOutputPhoto' value='1'/>
<enum name='UIPrintJobFailedError' value='4'/>
<enum name='UIPrintNoContentError' value='2'/>
<enum name='UIPrintUnknownImageFormatError' value='3'/>
<enum name='UIPrintingNotAvailableError' value='1'/>
<enum name='UIProgressViewStyleBar' value='1'/>
<enum name='UIProgressViewStyleDefault' value='0'/>
<enum name='UIRectCornerAllCorners' value='-1'/>
<enum name='UIRectCornerBottomLeft' value='4'/>
<enum name='UIRectCornerBottomRight' value='8'/>
<enum name='UIRectCornerTopLeft' value='1'/>
<enum name='UIRectCornerTopRight' value='2'/>
<enum name='UIRemoteNotificationTypeAlert' value='4'/>
<enum name='UIRemoteNotificationTypeBadge' value='1'/>
<enum name='UIRemoteNotificationTypeNewsstandContentAvailability' value='8'/>
<enum name='UIRemoteNotificationTypeNone' value='0'/>
<enum name='UIRemoteNotificationTypeSound' value='2'/>
<enum name='UIReturnKeyDefault' value='0'/>
<enum name='UIReturnKeyDone' value='9'/>
<enum name='UIReturnKeyEmergencyCall' value='10'/>
<enum name='UIReturnKeyGo' value='1'/>
<enum name='UIReturnKeyGoogle' value='2'/>
<enum name='UIReturnKeyJoin' value='3'/>
<enum name='UIReturnKeyNext' value='4'/>
<enum name='UIReturnKeyRoute' value='5'/>
<enum name='UIReturnKeySearch' value='6'/>
<enum name='UIReturnKeySend' value='7'/>
<enum name='UIReturnKeyYahoo' value='8'/>
<enum name='UIScreenOverscanCompensationInsetApplicationFrame' value='2'/>
<enum name='UIScreenOverscanCompensationInsetBounds' value='1'/>
<enum name='UIScreenOverscanCompensationScale' value='0'/>
<enum name='UIScrollViewIndicatorStyleBlack' value='1'/>
<enum name='UIScrollViewIndicatorStyleDefault' value='0'/>
<enum name='UIScrollViewIndicatorStyleWhite' value='2'/>
<enum name='UISearchBarIconBookmark' value='2'/>
<enum name='UISearchBarIconClear' value='1'/>
<enum name='UISearchBarIconResultsList' value='3'/>
<enum name='UISearchBarIconSearch' value='0'/>
<enum name='UISegmentedControlNoSegment' value='-1'/>
<enum name='UISegmentedControlSegmentAlone' value='4'/>
<enum name='UISegmentedControlSegmentAny' value='0'/>
<enum name='UISegmentedControlSegmentCenter' value='2'/>
<enum name='UISegmentedControlSegmentLeft' value='1'/>
<enum name='UISegmentedControlSegmentRight' value='3'/>
<enum name='UISegmentedControlStyleBar' value='2'/>
<enum name='UISegmentedControlStyleBezeled' value='3'/>
<enum name='UISegmentedControlStyleBordered' value='1'/>
<enum name='UISegmentedControlStylePlain' value='0'/>
<enum name='UIStatusBarAnimationFade' value='1'/>
<enum name='UIStatusBarAnimationNone' value='0'/>
<enum name='UIStatusBarAnimationSlide' value='2'/>
<enum name='UIStatusBarStyleBlackOpaque' value='2'/>
<enum name='UIStatusBarStyleBlackTranslucent' value='1'/>
<enum name='UIStatusBarStyleDefault' value='0'/>
<enum name='UISwipeGestureRecognizerDirectionDown' value='8'/>
<enum name='UISwipeGestureRecognizerDirectionLeft' value='2'/>
<enum name='UISwipeGestureRecognizerDirectionRight' value='1'/>
<enum name='UISwipeGestureRecognizerDirectionUp' value='4'/>
<enum name='UITabBarSystemItemBookmarks' value='7'/>
<enum name='UITabBarSystemItemContacts' value='5'/>
<enum name='UITabBarSystemItemDownloads' value='9'/>
<enum name='UITabBarSystemItemFavorites' value='1'/>
<enum name='UITabBarSystemItemFeatured' value='2'/>
<enum name='UITabBarSystemItemHistory' value='6'/>
<enum name='UITabBarSystemItemMore' value='0'/>
<enum name='UITabBarSystemItemMostRecent' value='10'/>
<enum name='UITabBarSystemItemMostViewed' value='11'/>
<enum name='UITabBarSystemItemRecents' value='4'/>
<enum name='UITabBarSystemItemSearch' value='8'/>
<enum name='UITabBarSystemItemTopRated' value='3'/>
<enum name='UITableViewCellAccessoryCheckmark' value='3'/>
<enum name='UITableViewCellAccessoryDetailDisclosureButton' value='2'/>
<enum name='UITableViewCellAccessoryDisclosureIndicator' value='1'/>
<enum name='UITableViewCellAccessoryNone' value='0'/>
<enum name='UITableViewCellEditingStyleDelete' value='1'/>
<enum name='UITableViewCellEditingStyleInsert' value='2'/>
<enum name='UITableViewCellEditingStyleNone' value='0'/>
<enum name='UITableViewCellSelectionStyleBlue' value='1'/>
<enum name='UITableViewCellSelectionStyleGray' value='2'/>
<enum name='UITableViewCellSelectionStyleNone' value='0'/>
<enum name='UITableViewCellSeparatorStyleNone' value='0'/>
<enum name='UITableViewCellSeparatorStyleSingleLine' value='1'/>
<enum name='UITableViewCellSeparatorStyleSingleLineEtched' value='2'/>
<enum name='UITableViewCellStateDefaultMask' value='0'/>
<enum name='UITableViewCellStateEditingMask' value='1'/>
<enum name='UITableViewCellStateShowingDeleteConfirmationMask' value='2'/>
<enum name='UITableViewCellStateShowingEditControlMask' value='1'/>
<enum name='UITableViewCellStyleDefault' value='0'/>
<enum name='UITableViewCellStyleSubtitle' value='3'/>
<enum name='UITableViewCellStyleValue1' value='1'/>
<enum name='UITableViewCellStyleValue2' value='2'/>
<enum name='UITableViewRowAnimationAutomatic' value='100'/>
<enum name='UITableViewRowAnimationBottom' value='4'/>
<enum name='UITableViewRowAnimationFade' value='0'/>
<enum name='UITableViewRowAnimationLeft' value='2'/>
<enum name='UITableViewRowAnimationMiddle' value='6'/>
<enum name='UITableViewRowAnimationNone' value='5'/>
<enum name='UITableViewRowAnimationRight' value='1'/>
<enum name='UITableViewRowAnimationTop' value='3'/>
<enum name='UITableViewScrollPositionBottom' value='3'/>
<enum name='UITableViewScrollPositionMiddle' value='2'/>
<enum name='UITableViewScrollPositionNone' value='0'/>
<enum name='UITableViewScrollPositionTop' value='1'/>
<enum name='UITableViewStyleGrouped' value='1'/>
<enum name='UITableViewStylePlain' value='0'/>
<enum name='UITextAlignmentCenter' value='1'/>
<enum name='UITextAlignmentLeft' value='0'/>
<enum name='UITextAlignmentRight' value='2'/>
<enum name='UITextAutocapitalizationTypeAllCharacters' value='3'/>
<enum name='UITextAutocapitalizationTypeNone' value='0'/>
<enum name='UITextAutocapitalizationTypeSentences' value='2'/>
<enum name='UITextAutocapitalizationTypeWords' value='1'/>
<enum name='UITextAutocorrectionTypeDefault' value='0'/>
<enum name='UITextAutocorrectionTypeNo' value='1'/>
<enum name='UITextAutocorrectionTypeYes' value='2'/>
<enum name='UITextBorderStyleBezel' value='2'/>
<enum name='UITextBorderStyleLine' value='1'/>
<enum name='UITextBorderStyleNone' value='0'/>
<enum name='UITextBorderStyleRoundedRect' value='3'/>
<enum name='UITextFieldViewModeAlways' value='3'/>
<enum name='UITextFieldViewModeNever' value='0'/>
<enum name='UITextFieldViewModeUnlessEditing' value='2'/>
<enum name='UITextFieldViewModeWhileEditing' value='1'/>
<enum name='UITextGranularityCharacter' value='0'/>
<enum name='UITextGranularityDocument' value='5'/>
<enum name='UITextGranularityLine' value='4'/>
<enum name='UITextGranularityParagraph' value='3'/>
<enum name='UITextGranularitySentence' value='2'/>
<enum name='UITextGranularityWord' value='1'/>
<enum name='UITextLayoutDirectionDown' value='5'/>
<enum name='UITextLayoutDirectionLeft' value='3'/>
<enum name='UITextLayoutDirectionRight' value='2'/>
<enum name='UITextLayoutDirectionUp' value='4'/>
<enum name='UITextSpellCheckingTypeDefault' value='0'/>
<enum name='UITextSpellCheckingTypeNo' value='1'/>
<enum name='UITextSpellCheckingTypeYes' value='2'/>
<enum name='UITextStorageDirectionBackward' value='1'/>
<enum name='UITextStorageDirectionForward' value='0'/>
<enum name='UITextWritingDirectionLeftToRight' value='0'/>
<enum name='UITextWritingDirectionNatural' value='-1'/>
<enum name='UITextWritingDirectionRightToLeft' value='1'/>
<enum name='UIToolbarPositionAny' value='0'/>
<enum name='UIToolbarPositionBottom' value='1'/>
<enum name='UIToolbarPositionTop' value='2'/>
<enum name='UITouchPhaseBegan' value='0'/>
<enum name='UITouchPhaseCancelled' value='4'/>
<enum name='UITouchPhaseEnded' value='3'/>
<enum name='UITouchPhaseMoved' value='1'/>
<enum name='UITouchPhaseStationary' value='2'/>
<enum name='UIUserInterfaceIdiomPad' value='1'/>
<enum name='UIUserInterfaceIdiomPhone' value='0'/>
<enum name='UIUserInterfaceLayoutDirectionLeftToRight' value='0'/>
<enum name='UIUserInterfaceLayoutDirectionRightToLeft' value='1'/>
<enum name='UIViewAnimationCurveEaseIn' value='1'/>
<enum name='UIViewAnimationCurveEaseInOut' value='0'/>
<enum name='UIViewAnimationCurveEaseOut' value='2'/>
<enum name='UIViewAnimationCurveLinear' value='3'/>
<enum name='UIViewAnimationOptionAllowAnimatedContent' value='128'/>
<enum name='UIViewAnimationOptionAllowUserInteraction' value='2'/>
<enum name='UIViewAnimationOptionAutoreverse' value='16'/>
<enum name='UIViewAnimationOptionBeginFromCurrentState' value='4'/>
<enum name='UIViewAnimationOptionCurveEaseIn' value='65536'/>
<enum name='UIViewAnimationOptionCurveEaseInOut' value='0'/>
<enum name='UIViewAnimationOptionCurveEaseOut' value='131072'/>
<enum name='UIViewAnimationOptionCurveLinear' value='196608'/>
<enum name='UIViewAnimationOptionLayoutSubviews' value='1'/>
<enum name='UIViewAnimationOptionOverrideInheritedCurve' value='64'/>
<enum name='UIViewAnimationOptionOverrideInheritedDuration' value='32'/>
<enum name='UIViewAnimationOptionRepeat' value='8'/>
<enum name='UIViewAnimationOptionShowHideTransitionViews' value='256'/>
<enum name='UIViewAnimationOptionTransitionCrossDissolve' value='5242880'/>
<enum name='UIViewAnimationOptionTransitionCurlDown' value='4194304'/>
<enum name='UIViewAnimationOptionTransitionCurlUp' value='3145728'/>
<enum name='UIViewAnimationOptionTransitionFlipFromBottom' value='7340032'/>
<enum name='UIViewAnimationOptionTransitionFlipFromLeft' value='1048576'/>
<enum name='UIViewAnimationOptionTransitionFlipFromRight' value='2097152'/>
<enum name='UIViewAnimationOptionTransitionFlipFromTop' value='6291456'/>
<enum name='UIViewAnimationOptionTransitionNone' value='0'/>
<enum name='UIViewAnimationTransitionCurlDown' value='4'/>
<enum name='UIViewAnimationTransitionCurlUp' value='3'/>
<enum name='UIViewAnimationTransitionFlipFromLeft' value='1'/>
<enum name='UIViewAnimationTransitionFlipFromRight' value='2'/>
<enum name='UIViewAnimationTransitionNone' value='0'/>
<enum name='UIViewAutoresizingFlexibleBottomMargin' value='32'/>
<enum name='UIViewAutoresizingFlexibleHeight' value='16'/>
<enum name='UIViewAutoresizingFlexibleLeftMargin' value='1'/>
<enum name='UIViewAutoresizingFlexibleRightMargin' value='4'/>
<enum name='UIViewAutoresizingFlexibleTopMargin' value='8'/>
<enum name='UIViewAutoresizingFlexibleWidth' value='2'/>
<enum name='UIViewAutoresizingNone' value='0'/>
<enum name='UIViewContentModeBottom' value='6'/>
<enum name='UIViewContentModeBottomLeft' value='11'/>
<enum name='UIViewContentModeBottomRight' value='12'/>
<enum name='UIViewContentModeCenter' value='4'/>
<enum name='UIViewContentModeLeft' value='7'/>
<enum name='UIViewContentModeRedraw' value='3'/>
<enum name='UIViewContentModeRight' value='8'/>
<enum name='UIViewContentModeScaleAspectFill' value='2'/>
<enum name='UIViewContentModeScaleAspectFit' value='1'/>
<enum name='UIViewContentModeScaleToFill' value='0'/>
<enum name='UIViewContentModeTop' value='5'/>
<enum name='UIViewContentModeTopLeft' value='9'/>
<enum name='UIViewContentModeTopRight' value='10'/>
<enum name='UIWebViewNavigationTypeBackForward' value='2'/>
<enum name='UIWebViewNavigationTypeFormResubmitted' value='4'/>
<enum name='UIWebViewNavigationTypeFormSubmitted' value='1'/>
<enum name='UIWebViewNavigationTypeLinkClicked' value='0'/>
<enum name='UIWebViewNavigationTypeOther' value='5'/>
<enum name='UIWebViewNavigationTypeReload' value='3'/>
<function name='CGAffineTransformFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</function>
<function name='CGPointFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='CGRectFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CGSizeFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</function>
<function name='NSStringFromCGAffineTransform'>
<arg name='transform' type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromCGPoint'>
<arg name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromCGRect'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromCGSize'>
<arg name='size' type='{CGSize=ff}' declared_type='CGSize'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromUIEdgeInsets'>
<arg name='insets' type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromUIOffset'>
<arg name='offset' type='{UIOffset=ff}' declared_type='UIOffset'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='UIAccessibilityIsClosedCaptioningEnabled'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIAccessibilityIsMonoAudioEnabled'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIAccessibilityIsVoiceOverRunning'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIAccessibilityPostNotification'>
<arg name='notification' type='I' declared_type='UIAccessibilityNotifications'/>
<arg name='argument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIAccessibilityRegisterGestureConflictWithZoom'>
<retval type='v' declared_type='void'/>
</function>
<function name='UIAccessibilityZoomFocusChanged'>
<arg name='type' type='i' declared_type='UIAccessibilityZoomType'/>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='view' type='@' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIApplicationMain'>
<arg name='argc' type='i' declared_type='int'/>
<arg name='argv' type='^*' declared_type='char**'/>
<arg name='principalClassName' type='@' declared_type='NSString*'/>
<arg name='delegateClassName' type='@' declared_type='NSString*'/>
<retval type='i' declared_type='int'/>
</function>
<function inline='true' name='UIEdgeInsetsEqualToEdgeInsets'>
<arg name='insets1' type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
<arg name='insets2' type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIEdgeInsetsFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</function>
<function inline='true' name='UIEdgeInsetsInsetRect'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='insets' type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function inline='true' name='UIEdgeInsetsMake'>
<arg name='top' type='f' declared_type='CGFloat'/>
<arg name='left' type='f' declared_type='CGFloat'/>
<arg name='bottom' type='f' declared_type='CGFloat'/>
<arg name='right' type='f' declared_type='CGFloat'/>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</function>
<function name='UIGraphicsAddPDFContextDestinationAtPoint'>
<arg name='name' type='@' declared_type='NSString*'/>
<arg name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsBeginImageContext'>
<arg name='size' type='{CGSize=ff}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsBeginImageContextWithOptions'>
<arg name='size' type='{CGSize=ff}' declared_type='CGSize'/>
<arg name='cftype' type='B' declared_type='BOOL'/>
<arg name='scale' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsBeginPDFContextToData'>
<arg name='data' type='@' declared_type='NSMutableData*'/>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='documentInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsBeginPDFContextToFile'>
<arg name='path' type='@' declared_type='NSString*'/>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='documentInfo' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIGraphicsBeginPDFPage'>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsBeginPDFPageWithInfo'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='pageInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsEndImageContext'>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsEndPDFContext'>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsGetCurrentContext'>
<retval type='^{CGContext=}' declared_type='CGContextRef'/>
</function>
<function name='UIGraphicsGetImageFromCurrentImageContext'>
<retval type='@' declared_type='UIImage*'/>
</function>
<function name='UIGraphicsGetPDFContextBounds'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='UIGraphicsPopContext'>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsPushContext'>
<arg name='context' type='^{CGContext=}' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsSetPDFContextDestinationForRect'>
<arg name='name' type='@' declared_type='NSString*'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIGraphicsSetPDFContextURLForRect'>
<arg name='url' type='@' declared_type='NSURL*'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIImageJPEGRepresentation'>
<arg name='image' type='@' declared_type='UIImage*'/>
<arg name='compressionQuality' type='f' declared_type='CGFloat'/>
<retval type='@' declared_type='NSData*'/>
</function>
<function name='UIImagePNGRepresentation'>
<arg name='image' type='@' declared_type='UIImage*'/>
<retval type='@' declared_type='NSData*'/>
</function>
<function name='UIImageWriteToSavedPhotosAlbum'>
<arg name='image' type='@' declared_type='UIImage*'/>
<arg name='completionTarget' type='@' declared_type='id'/>
<arg name='completionSelector' type=':' declared_type='SEL'/>
<arg name='contextInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='UIOffsetEqualToOffset'>
<arg name='offset1' type='{UIOffset=ff}' declared_type='UIOffset'/>
<arg name='offset2' type='{UIOffset=ff}' declared_type='UIOffset'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='UIOffsetFromString'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</function>
<function inline='true' name='UIOffsetMake'>
<arg name='horizontal' type='f' declared_type='CGFloat'/>
<arg name='vertical' type='f' declared_type='CGFloat'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</function>
<function name='UIRectClip'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIRectFill'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIRectFillUsingBlendMode'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='blendMode' type='i' declared_type='CGBlendMode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIRectFrame'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIRectFrameUsingBlendMode'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg name='blendMode' type='i' declared_type='CGBlendMode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UISaveVideoAtPathToSavedPhotosAlbum'>
<arg name='videoPath' type='@' declared_type='NSString*'/>
<arg name='completionTarget' type='@' declared_type='id'/>
<arg name='completionSelector' type=':' declared_type='SEL'/>
<arg name='contextInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='UIVideoAtPathIsCompatibleWithSavedPhotosAlbum'>
<arg name='videoPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CIImage'>
<method selector='initWithImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:options:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='options' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSBundle'>
<method selector='loadNibNamed:owner:options:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='owner' type='@' index='1' declared_type='id'/>
<arg name='options' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGAffineTransformForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='decodeCGPointForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='decodeCGRectForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='decodeCGSizeForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='decodeUIEdgeInsetsForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='decodeUIOffsetForKey:'>
<arg name='key' type='@' index='0' declared_type='NSString*'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='encodeCGAffineTransform:forKey:'>
<arg name='transform' type='{CGAffineTransform=ffffff}' index='0' declared_type='CGAffineTransform'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGPoint:forKey:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGRect:forKey:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGSize:forKey:'>
<arg name='size' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeUIEdgeInsets:forKey:'>
<arg name='insets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeUIOffset:forKey:'>
<arg name='offset' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<arg name='key' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathForRow:inSection:'>
<arg name='row' type='i' index='0' declared_type='NSInteger'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='row'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='section'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSObject'>
<method selector='accelerometer:didAccelerate:'>
<arg name='accelerometer' type='@' index='0' declared_type='UIAccelerometer*'/>
<arg name='acceleration' type='@' index='1' declared_type='UIAcceleration*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilityActivationPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='accessibilityContentForLineNumber:'>
<arg name='lineNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityDecrement'>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilityElementAtIndex:'>
<arg name='index' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityElementCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='accessibilityElementDidBecomeFocused'>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilityElementDidLoseFocus'>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilityElementIsFocused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityElementsHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='accessibilityFrameForLineNumber:'>
<arg name='lineNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='accessibilityHint'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityIncrement'>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilityLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityLineNumberForPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='accessibilityPageContent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityPerformEscape'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityScroll:'>
<arg name='direction' type='i' index='0' declared_type='UIAccessibilityScrollDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityTraits'>
<retval type='Q' declared_type='UIAccessibilityTraits'/>
</method>
<method selector='accessibilityValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityViewIsModal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='actionSheet:clickedButtonAtIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='actionSheet:didDismissWithButtonIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='actionSheet:willDismissWithButtonIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='actionSheetCancel:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertView:clickedButtonAtIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertView:didDismissWithButtonIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertView:willDismissWithButtonIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertViewCancel:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertViewShouldEnableFirstOtherButton:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='appearance'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='appearanceWhenContainedIn:' sentinel='0'>
<arg name='ContainerClass' type='#' index='0' declared_type='Class*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='application:didChangeStatusBarFrame:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='oldStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didChangeStatusBarOrientation:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='oldStatusBarOrientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didFinishLaunchingWithOptions:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='launchOptions' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:didReceiveLocalNotification:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='notification' type='@' index='1' declared_type='UILocalNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='userInfo' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='deviceToken' type='@' index='1' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:handleOpenURL:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='url' type='@' index='1' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:openURL:sourceApplication:annotation:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='url' type='@' index='1' declared_type='NSURL*'/>
<arg name='sourceApplication' type='@' index='2' declared_type='NSString*'/>
<arg name='annotation' type='@' index='3' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:willChangeStatusBarFrame:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='newStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:willChangeStatusBarOrientation:duration:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='newStatusBarOrientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='2' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidEnterBackground:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidReceiveMemoryWarning:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationProtectedDataDidBecomeAvailable:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationProtectedDataWillBecomeUnavailable:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationSignificantTimeChange:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillEnterForeground:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillResignActive:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillTerminate:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autocapitalizationType'>
<retval type='i' declared_type='UITextAutocapitalizationType'/>
</method>
<method selector='autocorrectionType'>
<retval type='i' declared_type='UITextAutocorrectionType'/>
</method>
<method selector='awakeFromNib'>
<retval type='v' declared_type='void'/>
</method>
<method selector='baseWritingDirectionForPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextStorageDirection'/>
<retval type='i' declared_type='UITextWritingDirection'/>
</method>
<method selector='beginningOfDocument'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='caretRectForPosition:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='characterOffsetOfPosition:withinRange:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='characterRangeAtPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='characterRangeByExtendingPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='closestPositionToPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='closestPositionToPoint:withinRange:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='comparePosition:toPosition:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='other' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='copy:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cut:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delete:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteBackward'>
<retval type='v' declared_type='void'/>
</method>
<method selector='dictationRecognitionFailed'>
<retval type='v' declared_type='void'/>
</method>
<method selector='dictationRecordingDidEnd'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didPresentActionSheet:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didPresentAlertView:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionController:canPerformAction:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='documentInteractionController:didEndSendingToApplication:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='application' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionController:performAction:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='documentInteractionController:willBeginSendingToApplication:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='application' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerDidDismissOpenInMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerDidDismissOptionsMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerDidEndPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerRectForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='documentInteractionControllerViewControllerForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='documentInteractionControllerViewForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='documentInteractionControllerWillBeginPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerWillPresentOpenInMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentInteractionControllerWillPresentOptionsMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableInputClicksWhenVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='enablesReturnKeyAutomatically'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endOfDocument'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='firstRectForRange:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<arg name='touch' type='@' index='1' declared_type='UITouch*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<arg name='otherGestureRecognizer' type='@' index='1' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imagePickerController:didFinishPickingImage:editingInfo:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<arg name='image' type='@' index='1' declared_type='UIImage*'/>
<arg name='editingInfo' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imagePickerController:didFinishPickingMediaWithInfo:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<arg name='info' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imagePickerControllerDidCancel:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfAccessibilityElement:'>
<arg name='element' type='@' index='0' declared_type='id'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='inputDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertDictationResult:'>
<arg name='dictationResult' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isAccessibilityElement'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPosition:atBoundary:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPosition:withinTextUnit:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSecureTextEntry'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyboardAppearance'>
<retval type='i' declared_type='UIKeyboardAppearance'/>
</method>
<method selector='keyboardType'>
<retval type='i' declared_type='UIKeyboardType'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='markedTextRange'>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='markedTextStyle'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='navigationBar:didPopItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='navigationBar:didPushItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='navigationBar:shouldPopItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='navigationBar:shouldPushItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='navigationController:didShowViewController:animated:'>
<arg name='navigationController' type='@' index='0' declared_type='UINavigationController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='navigationController:willShowViewController:animated:'>
<arg name='navigationController' type='@' index='0' declared_type='UINavigationController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfComponentsInPickerView:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfSectionsInTableView:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='offsetFromPosition:toPosition:'>
<arg name='from' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='toPosition' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='finished' type='B' index='1' declared_type='BOOL'/>
<arg name='previousViewControllers' type='@' index='2' declared_type='NSArray*'/>
<arg name='completed' type='B' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageViewController:spineLocationForInterfaceOrientation:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='orientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<retval type='i' declared_type='UIPageViewControllerSpineLocation'/>
</method>
<method selector='pageViewController:viewControllerAfterViewController:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='pageViewController:viewControllerBeforeViewController:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='paste:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pickerView:accessibilityHintForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pickerView:accessibilityLabelForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pickerView:didSelectRow:inComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pickerView:numberOfRowsInComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pickerView:rowHeightForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pickerView:titleForRow:forComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pickerView:viewForRow:forComponent:reusingView:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<arg name='view' type='@' index='3' declared_type='UIView*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='pickerView:widthForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='popoverControllerDidDismissPopover:'>
<arg name='popoverController' type='@' index='0' declared_type='UIPopoverController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popoverControllerShouldDismissPopover:'>
<arg name='popoverController' type='@' index='0' declared_type='UIPopoverController*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionFromPosition:inDirection:offset:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<arg name='offset' type='i' index='2' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='positionFromPosition:offset:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='offset' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='positionFromPosition:toBoundary:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='positionWithinRange:atCharacterOffset:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='offset' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='positionWithinRange:farthestInDirection:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='printInteractionController:choosePaper:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<arg name='paperList' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='UIPrintPaper*'/>
</method>
<method selector='printInteractionControllerDidDismissPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInteractionControllerDidFinishJob:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInteractionControllerDidPresentPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInteractionControllerParentViewController:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='printInteractionControllerWillDismissPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInteractionControllerWillPresentPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInteractionControllerWillStartJob:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rangeEnclosingPosition:withGranularity:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='replaceRange:withText:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='text' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='returnKeyType'>
<retval type='i' declared_type='UIReturnKeyType'/>
</method>
<method selector='scrollViewDidEndDecelerating:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidEndDragging:willDecelerate:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='decelerate' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidEndScrollingAnimation:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidEndZooming:withView:atScale:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='scale' type='f' index='2' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidScroll:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidScrollToTop:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewDidZoom:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewShouldScrollToTop:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scrollViewWillBeginDecelerating:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewWillBeginDragging:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewWillBeginZooming:withView:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='velocity' type='{CGPoint=ff}' index='1' declared_type='CGPoint'/>
<arg type_modifier='N' name='targetContentOffset' type='^{CGPoint=ff}' index='2' declared_type='CGPoint*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBar:selectedScopeButtonIndexDidChange:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='selectedScope' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBar:shouldChangeTextInRange:replacementText:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='text' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchBar:textDidChange:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='searchText' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarBookmarkButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarCancelButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarResultsListButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarSearchButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarShouldBeginEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchBarShouldEndEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchBarTextDidBeginEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchBarTextDidEndEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:didHideSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:didLoadSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:didShowSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchScope:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='searchOption' type='i' index='1' declared_type='NSInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchString:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='searchString' type='@' index='1' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchDisplayController:willHideSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:willShowSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayController:willUnloadSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayControllerDidBeginSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayControllerDidEndSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayControllerWillBeginSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchDisplayControllerWillEndSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sectionIndexTitlesForTableView:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='select:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedTextRange'>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='selectionAffinity'>
<retval type='i' declared_type='UITextStorageDirection'/>
</method>
<method selector='selectionDidChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectionWillChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityActivationPoint:'>
<arg name='accessibilityActivationPoint' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityElementsHidden:'>
<arg name='accessibilityElementsHidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityHint:'>
<arg name='accessibilityHint' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityIdentifier:'>
<arg name='accessibilityIdentifier' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg name='accessibilityLabel' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityLanguage:'>
<arg name='accessibilityLanguage' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg name='accessibilityTraits' type='Q' index='0' declared_type='UIAccessibilityTraits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityValue:'>
<arg name='accessibilityValue' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityViewIsModal:'>
<arg name='accessibilityViewIsModal' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocapitalizationType:'>
<arg name='autocapitalizationType' type='i' index='0' declared_type='UITextAutocapitalizationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocorrectionType:'>
<arg name='autocorrectionType' type='i' index='0' declared_type='UITextAutocorrectionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:forRange:'>
<arg name='writingDirection' type='i' index='0' declared_type='UITextWritingDirection'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnablesReturnKeyAutomatically:'>
<arg name='enablesReturnKeyAutomatically' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputDelegate:'>
<arg name='inputDelegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg name='isAccessibilityElement' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyboardAppearance:'>
<arg name='keyboardAppearance' type='i' index='0' declared_type='UIKeyboardAppearance'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyboardType:'>
<arg name='keyboardType' type='i' index='0' declared_type='UIKeyboardType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg name='markedText' type='@' index='0' declared_type='NSString*'/>
<arg name='selectedRange' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkedTextStyle:'>
<arg name='markedTextStyle' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReturnKeyType:'>
<arg name='returnKeyType' type='i' index='0' declared_type='UIReturnKeyType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecureTextEntry:'>
<arg name='secureTextEntry' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedTextRange:'>
<arg name='selectedTextRange' type='@' index='0' declared_type='UITextRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionAffinity:'>
<arg name='selectionAffinity' type='i' index='0' declared_type='UITextStorageDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpellCheckingType:'>
<arg name='spellCheckingType' type='i' index='0' declared_type='UITextSpellCheckingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindow:'>
<arg name='window' type='@' index='0' declared_type='UIWindow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellCheckingType'>
<retval type='i' declared_type='UITextSpellCheckingType'/>
</method>
<method selector='splitViewController:popoverController:willPresentViewController:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='pc' type='@' index='1' declared_type='UIPopoverController*'/>
<arg name='aViewController' type='@' index='2' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='splitViewController:shouldHideViewController:inOrientation:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='vc' type='@' index='1' declared_type='UIViewController*'/>
<arg name='orientation' type='i' index='2' declared_type='UIInterfaceOrientation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitViewController:willHideViewController:withBarButtonItem:forPopoverController:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='aViewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='barButtonItem' type='@' index='2' declared_type='UIBarButtonItem*'/>
<arg name='pc' type='@' index='3' declared_type='UIPopoverController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='splitViewController:willShowViewController:invalidatingBarButtonItem:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='aViewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='barButtonItem' type='@' index='2' declared_type='UIBarButtonItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar:didBeginCustomizingItems:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar:didEndCustomizingItems:changed:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar:didSelectItem:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='item' type='@' index='1' declared_type='UITabBarItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar:willBeginCustomizingItems:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar:willEndCustomizingItems:changed:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBarController:didEndCustomizingViewControllers:changed:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBarController:didSelectViewController:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBarController:shouldSelectViewController:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tabBarController:willBeginCustomizingViewControllers:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBarController:willEndCustomizingViewControllers:changed:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:accessoryButtonTappedForRowWithIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:accessoryTypeForRowWithIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='UITableViewCellAccessoryType'/>
</method>
<method selector='tableView:canEditRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:canMoveRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:canPerformAction:forRowAtIndexPath:withSender:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<arg name='sender' type='@' index='3' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:cellForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='UITableViewCell*'/>
</method>
<method selector='tableView:commitEditingStyle:forRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='editingStyle' type='i' index='1' declared_type='UITableViewCellEditingStyle'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didDeselectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didEndEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didSelectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:editingStyleForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='UITableViewCellEditingStyle'/>
</method>
<method selector='tableView:heightForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='tableView:heightForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='tableView:heightForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='tableView:indentationLevelForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='tableView:moveRowAtIndexPath:toIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='sourceIndexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<arg name='destinationIndexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:numberOfRowsInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='tableView:performAction:forRowAtIndexPath:withSender:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<arg name='sender' type='@' index='3' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:sectionForSectionIndexTitle:atIndex:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='title' type='@' index='1' declared_type='NSString*'/>
<arg name='index' type='i' index='2' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='tableView:shouldIndentWhileEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldShowMenuForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='sourceIndexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<arg name='proposedDestinationIndexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tableView:titleForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tableView:titleForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tableView:viewForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='tableView:viewForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='tableView:willBeginEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:willDeselectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='tableView:willDisplayCell:forRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='cell' type='@' index='1' declared_type='UITableViewCell*'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:willSelectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='textDidChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textField:shouldChangeCharactersInRange:replacementString:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='string' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textFieldDidBeginEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textFieldDidEndEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textFieldShouldBeginEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textFieldShouldClear:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textFieldShouldEndEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textFieldShouldReturn:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textInRange:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textInputView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='textRangeFromPosition:toPosition:'>
<arg name='fromPosition' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='toPosition' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method selector='textStylingAtPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextStorageDirection'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementText:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='text' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textViewDidBeginEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewDidChange:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewDidEndEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewShouldBeginEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textViewShouldEndEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textWillChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tokenizer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unmarkText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoEditorController:didFailWithError:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoEditorController:didSaveEditedVideoToPath:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<arg name='editedVideoPath' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoEditorControllerDidCancel:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewForZoomingInScrollView:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='webView:didFailLoadWithError:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='webView:shouldStartLoadWithRequest:navigationType:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<arg name='request' type='@' index='1' declared_type='NSURLRequest*'/>
<arg name='navigationType' type='i' index='2' declared_type='UIWebViewNavigationType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='webViewDidFinishLoad:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='webViewDidStartLoad:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPresentActionSheet:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPresentAlertView:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window'>
<retval type='@' declared_type='UIWindow*'/>
</method>
</class>
<class name='NSString'>
<method selector='drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='width' type='f' index='1' declared_type='CGFloat'/>
<arg name='font' type='@' index='2' declared_type='UIFont*'/>
<arg name='fontSize' type='f' index='3' declared_type='CGFloat'/>
<arg name='lineBreakMode' type='i' index='4' declared_type='UILineBreakMode'/>
<arg name='baselineAdjustment' type='i' index='5' declared_type='UIBaselineAdjustment'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawAtPoint:forWidth:withFont:lineBreakMode:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='width' type='f' index='1' declared_type='CGFloat'/>
<arg name='font' type='@' index='2' declared_type='UIFont*'/>
<arg name='lineBreakMode' type='i' index='3' declared_type='UILineBreakMode'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='width' type='f' index='1' declared_type='CGFloat'/>
<arg name='font' type='@' index='2' declared_type='UIFont*'/>
<arg name='minFontSize' type='f' index='3' declared_type='CGFloat'/>
<arg name='actualFontSize' type='^f' index='4' declared_type='CGFloat*'/>
<arg name='lineBreakMode' type='i' index='5' declared_type='UILineBreakMode'/>
<arg name='baselineAdjustment' type='i' index='6' declared_type='UIBaselineAdjustment'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawAtPoint:withFont:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='font' type='@' index='1' declared_type='UIFont*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawInRect:withFont:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='font' type='@' index='1' declared_type='UIFont*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawInRect:withFont:lineBreakMode:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='font' type='@' index='1' declared_type='UIFont*'/>
<arg name='lineBreakMode' type='i' index='2' declared_type='UILineBreakMode'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='drawInRect:withFont:lineBreakMode:alignment:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='font' type='@' index='1' declared_type='UIFont*'/>
<arg name='lineBreakMode' type='i' index='2' declared_type='UILineBreakMode'/>
<arg name='alignment' type='i' index='3' declared_type='UITextAlignment'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeWithFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeWithFont:constrainedToSize:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<arg name='size' type='{CGSize=ff}' index='1' declared_type='CGSize'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeWithFont:constrainedToSize:lineBreakMode:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<arg name='size' type='{CGSize=ff}' index='1' declared_type='CGSize'/>
<arg name='lineBreakMode' type='i' index='2' declared_type='UILineBreakMode'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeWithFont:forWidth:lineBreakMode:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<arg name='width' type='f' index='1' declared_type='CGFloat'/>
<arg name='lineBreakMode' type='i' index='2' declared_type='UILineBreakMode'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<arg name='minFontSize' type='f' index='1' declared_type='CGFloat'/>
<arg name='actualFontSize' type='^f' index='2' declared_type='CGFloat*'/>
<arg name='width' type='f' index='3' declared_type='CGFloat'/>
<arg name='lineBreakMode' type='i' index='4' declared_type='UILineBreakMode'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='NSValue'>
<method selector='CGAffineTransformValue'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='CGPointValue'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='CGRectValue'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='CGSizeValue'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='UIEdgeInsetsValue'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='UIOffsetValue'>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method class_method='true' selector='valueWithCGAffineTransform:'>
<arg name='transform' type='{CGAffineTransform=ffffff}' index='0' declared_type='CGAffineTransform'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithCGPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithCGRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithCGSize:'>
<arg name='size' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithUIEdgeInsets:'>
<arg name='insets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithUIOffset:'>
<arg name='insets' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<retval type='@' declared_type='NSValue*'/>
</method>
</class>
<class name='UIAcceleration'>
<method selector='timestamp'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='x'>
<retval type='d' declared_type='UIAccelerationValue'/>
</method>
<method selector='y'>
<retval type='d' declared_type='UIAccelerationValue'/>
</method>
<method selector='z'>
<retval type='d' declared_type='UIAccelerationValue'/>
</method>
</class>
<class name='UIAccelerometer'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpdateInterval:'>
<arg name='updateInterval' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedAccelerometer'>
<retval type='@' declared_type='UIAccelerometer*'/>
</method>
<method selector='updateInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='UIAccessibilityElement'>
<method selector='accessibilityContainer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='accessibilityHint'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityTraits'>
<retval type='Q' declared_type='UIAccessibilityTraits'/>
</method>
<method selector='accessibilityValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithAccessibilityContainer:'>
<arg name='container' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAccessibilityElement'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAccessibilityContainer:'>
<arg name='accessibilityContainer' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityHint:'>
<arg name='accessibilityHint' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg name='accessibilityLabel' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg name='accessibilityTraits' type='Q' index='0' declared_type='UIAccessibilityTraits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessibilityValue:'>
<arg name='accessibilityValue' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg name='isAccessibilityElement' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIActionSheet'>
<method selector='actionSheetStyle'>
<retval type='i' declared_type='UIActionSheetStyle'/>
</method>
<method selector='addButtonWithTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='buttonTitleAtIndex:'>
<arg name='buttonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='cancelButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destructiveButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='dismissWithClickedButtonIndex:animated:'>
<arg name='buttonIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstOtherButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method variadic='true' selector='initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:' sentinel='0'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='delegate' type='@' index='1' declared_type='id'/>
<arg name='cancelButtonTitle' type='@' index='2' declared_type='NSString*'/>
<arg name='destructiveButtonTitle' type='@' index='3' declared_type='NSString*'/>
<arg name='otherButtonTitles' type='@' index='4' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfButtons'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setActionSheetStyle:'>
<arg name='actionSheetStyle' type='i' index='0' declared_type='UIActionSheetStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCancelButtonIndex:'>
<arg name='cancelButtonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestructiveButtonIndex:'>
<arg name='destructiveButtonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromBarButtonItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromRect:inView:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromTabBar:'>
<arg name='view' type='@' index='0' declared_type='UITabBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromToolbar:'>
<arg name='view' type='@' index='0' declared_type='UIToolbar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='activityIndicatorViewStyle'>
<retval type='i' declared_type='UIActivityIndicatorViewStyle'/>
</method>
<method selector='color'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hidesWhenStopped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithActivityIndicatorStyle:'>
<arg name='style' type='i' index='0' declared_type='UIActivityIndicatorViewStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg name='activityIndicatorViewStyle' type='i' index='0' declared_type='UIActivityIndicatorViewStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesWhenStopped:'>
<arg name='hidesWhenStopped' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimating'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimating'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIAlertView'>
<method selector='addButtonWithTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='alertViewStyle'>
<retval type='i' declared_type='UIAlertViewStyle'/>
</method>
<method selector='buttonTitleAtIndex:'>
<arg name='buttonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='cancelButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dismissWithClickedButtonIndex:animated:'>
<arg name='buttonIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstOtherButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method variadic='true' selector='initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='message' type='@' index='1' declared_type='NSString*'/>
<arg name='delegate' type='@' index='2' declared_type='id'/>
<arg name='cancelButtonTitle' type='@' index='3' declared_type='NSString*'/>
<arg name='otherButtonTitles' type='@' index='4' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='message'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberOfButtons'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAlertViewStyle:'>
<arg name='alertViewStyle' type='i' index='0' declared_type='UIAlertViewStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCancelButtonIndex:'>
<arg name='cancelButtonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMessage:'>
<arg name='message' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='show'>
<retval type='v' declared_type='void'/>
</method>
<method selector='textFieldAtIndex:'>
<arg name='textFieldIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextField*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UIApplication'>
<method selector='applicationIconBadgeNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='applicationState'>
<retval type='i' declared_type='UIApplicationState'/>
</method>
<method selector='applicationSupportsShakeToEdit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundTimeRemaining'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='beginBackgroundTaskWithExpirationHandler:'>
<arg function_pointer='true' name='handler' type='@?' index='0' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='I' declared_type='UIBackgroundTaskIdentifier'/>
</method>
<method selector='beginIgnoringInteractionEvents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginReceivingRemoteControlEvents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='canOpenURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelAllLocalNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelLocalNotification:'>
<arg name='notification' type='@' index='0' declared_type='UILocalNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearKeepAliveTimeout'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='enabledRemoteNotificationTypes'>
<retval type='i' declared_type='UIRemoteNotificationType'/>
</method>
<method selector='endBackgroundTask:'>
<arg name='identifier' type='I' index='0' declared_type='UIBackgroundTaskIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endIgnoringInteractionEvents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endReceivingRemoteControlEvents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isIdleTimerDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isIgnoringInteractionEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProtectedDataAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProximitySensingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStatusBarHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyWindow'>
<retval type='@' declared_type='UIWindow*'/>
</method>
<method selector='openURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentLocalNotificationNow:'>
<arg name='notification' type='@' index='0' declared_type='UILocalNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg name='types' type='i' index='0' declared_type='UIRemoteNotificationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleLocalNotification:'>
<arg name='notification' type='@' index='0' declared_type='UILocalNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduledLocalNotifications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sendAction:to:from:forEvent:'>
<arg name='action' type=':' index='0' declared_type='SEL'/>
<arg name='target' type='@' index='1' declared_type='id'/>
<arg name='sender' type='@' index='2' declared_type='id'/>
<arg name='event' type='@' index='3' declared_type='UIEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendEvent:'>
<arg name='event' type='@' index='0' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setApplicationIconBadgeNumber:'>
<arg name='applicationIconBadgeNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setApplicationSupportsShakeToEdit:'>
<arg name='applicationSupportsShakeToEdit' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdleTimerDisabled:'>
<arg name='idleTimerDisabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeepAliveTimeout:handler:'>
<arg name='timeout' type='d' index='0' declared_type='NSTimeInterval'/>
<arg function_pointer='true' name='keepAliveHandler' type='@?' index='1' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setNetworkActivityIndicatorVisible:'>
<arg name='networkActivityIndicatorVisible' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNewsstandIconImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProximitySensingEnabled:'>
<arg name='proximitySensingEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduledLocalNotifications:'>
<arg name='scheduledLocalNotifications' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarHidden:'>
<arg name='statusBarHidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarHidden:animated:'>
<arg name='hidden' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarHidden:withAnimation:'>
<arg name='hidden' type='B' index='0' declared_type='BOOL'/>
<arg name='animation' type='i' index='1' declared_type='UIStatusBarAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarOrientation:'>
<arg name='statusBarOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarOrientation:animated:'>
<arg name='interfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarStyle:'>
<arg name='statusBarStyle' type='i' index='0' declared_type='UIStatusBarStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatusBarStyle:animated:'>
<arg name='statusBarStyle' type='i' index='0' declared_type='UIStatusBarStyle'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedApplication'>
<retval type='@' declared_type='UIApplication*'/>
</method>
<method selector='statusBarFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='statusBarOrientation'>
<retval type='i' declared_type='UIInterfaceOrientation'/>
</method>
<method selector='statusBarOrientationAnimationDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='statusBarStyle'>
<retval type='i' declared_type='UIStatusBarStyle'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval type='i' declared_type='UIUserInterfaceLayoutDirection'/>
</method>
<method selector='windows'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='backButtonBackgroundImageForState:barMetrics:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='backButtonTitlePositionAdjustmentForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='backgroundVerticalPositionAdjustmentForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='customView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='initWithBarButtonSystemItem:target:action:'>
<arg name='systemItem' type='i' index='0' declared_type='UIBarButtonSystemItem'/>
<arg name='target' type='@' index='1' declared_type='id'/>
<arg name='action' type=':' index='2' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCustomView:'>
<arg name='customView' type='@' index='0' declared_type='UIView*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:landscapeImagePhone:style:target:action:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='landscapeImagePhone' type='@' index='1' declared_type='UIImage*'/>
<arg name='style' type='i' index='2' declared_type='UIBarButtonItemStyle'/>
<arg name='target' type='@' index='3' declared_type='id'/>
<arg name='action' type=':' index='4' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:style:target:action:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='style' type='i' index='1' declared_type='UIBarButtonItemStyle'/>
<arg name='target' type='@' index='2' declared_type='id'/>
<arg name='action' type=':' index='3' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTitle:style:target:action:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='style' type='i' index='1' declared_type='UIBarButtonItemStyle'/>
<arg name='target' type='@' index='2' declared_type='id'/>
<arg name='action' type=':' index='3' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='possibleTitles'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setAction:'>
<arg name='action' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackButtonBackgroundImage:forState:barMetrics:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:'>
<arg name='adjustment' type='f' index='0' declared_type='CGFloat'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackButtonTitlePositionAdjustment:forBarMetrics:'>
<arg name='adjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundVerticalPositionAdjustment:forBarMetrics:'>
<arg name='adjustment' type='f' index='0' declared_type='CGFloat'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomView:'>
<arg name='customView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPossibleTitles:'>
<arg name='possibleTitles' type='@' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStyle:'>
<arg name='style' type='i' index='0' declared_type='UIBarButtonItemStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitlePositionAdjustment:forBarMetrics:'>
<arg name='adjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg name='width' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='style'>
<retval type='i' declared_type='UIBarButtonItemStyle'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titlePositionAdjustmentForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='width'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='UIBarItem'>
<method selector='image'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='imageInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='landscapeImagePhone'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='landscapeImagePhoneInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageInsets:'>
<arg name='imageInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLandscapeImagePhone:'>
<arg name='landscapeImagePhone' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLandscapeImagePhoneInsets:'>
<arg name='landscapeImagePhoneInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg name='tag' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg name='attributes' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='UIBezierPath'>
<method selector='CGPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='addArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg name='center' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='radius' type='f' index='1' declared_type='CGFloat'/>
<arg name='startAngle' type='f' index='2' declared_type='CGFloat'/>
<arg name='endAngle' type='f' index='3' declared_type='CGFloat'/>
<arg name='clockwise' type='B' index='4' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addClip'>
<retval type='v' declared_type='void'/>
</method>
<method selector='addCurveToPoint:controlPoint1:controlPoint2:'>
<arg name='endPoint' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='controlPoint1' type='{CGPoint=ff}' index='1' declared_type='CGPoint'/>
<arg name='controlPoint2' type='{CGPoint=ff}' index='2' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addLineToPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addQuadCurveToPoint:controlPoint:'>
<arg name='endPoint' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='controlPoint' type='{CGPoint=ff}' index='1' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPath:'>
<arg name='bezierPath' type='@' index='0' declared_type='UIBezierPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTransform:'>
<arg name='transform' type='{CGAffineTransform=ffffff}' index='0' declared_type='CGAffineTransform'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:'>
<arg name='center' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='radius' type='f' index='1' declared_type='CGFloat'/>
<arg name='startAngle' type='f' index='2' declared_type='CGFloat'/>
<arg name='endAngle' type='f' index='3' declared_type='CGFloat'/>
<arg name='clockwise' type='B' index='4' declared_type='BOOL'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithCGPath:'>
<arg name='CGPath' type='^{CGPath=}' index='0' declared_type='CGPathRef'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='corners' type='I' index='1' declared_type='UIRectCorner'/>
<arg name='cornerRadii' type='{CGSize=ff}' index='2' declared_type='CGSize'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:cornerRadius:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='cornerRadius' type='f' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='UIBezierPath*'/>
</method>
<method selector='bounds'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='closePath'>
<retval type='v' declared_type='void'/>
</method>
<method selector='containsPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='fill'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithBlendMode:alpha:'>
<arg name='blendMode' type='i' index='0' declared_type='CGBlendMode'/>
<arg name='alpha' type='f' index='1' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='flatness'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg name='pattern' type='^f' index='0' declared_type='CGFloat*'/>
<arg name='count' type='^i' index='1' declared_type='NSInteger*'/>
<arg name='phase' type='^f' index='2' declared_type='CGFloat*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEmpty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lineCapStyle'>
<retval type='i' declared_type='CGLineCap'/>
</method>
<method selector='lineJoinStyle'>
<retval type='i' declared_type='CGLineJoin'/>
</method>
<method selector='lineWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='moveToPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCGPath:'>
<arg name='CGPath' type='^{CGPath=}' index='0' declared_type='CGPathRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlatness:'>
<arg name='flatness' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCapStyle:'>
<arg name='lineCapStyle' type='i' index='0' declared_type='CGLineCap'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg name='pattern' type='^f' index='0' const='true' declared_type='CGFloat*'/>
<arg name='count' type='i' index='1' declared_type='NSInteger'/>
<arg name='phase' type='f' index='2' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineJoinStyle:'>
<arg name='lineJoinStyle' type='i' index='0' declared_type='CGLineJoin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineWidth:'>
<arg name='lineWidth' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiterLimit:'>
<arg name='miterLimit' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEvenOddFillRule:'>
<arg name='usesEvenOddFillRule' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stroke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokeWithBlendMode:alpha:'>
<arg name='blendMode' type='i' index='0' declared_type='CGBlendMode'/>
<arg name='alpha' type='f' index='1' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesEvenOddFillRule'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIButton'>
<method selector='adjustsImageWhenDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='adjustsImageWhenHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='backgroundRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='buttonType'>
<retval type='i' declared_type='UIButtonType'/>
</method>
<method class_method='true' selector='buttonWithType:'>
<arg name='buttonType' type='i' index='0' declared_type='UIButtonType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='contentEdgeInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='contentRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='currentBackgroundImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='currentImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='currentTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currentTitleColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='currentTitleShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='imageEdgeInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='imageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='imageRectForContentRect:'>
<arg name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='imageView'>
<retval type='@' declared_type='UIImageView*'/>
</method>
<method selector='lineBreakMode'>
<retval type='i' declared_type='UILineBreakMode'/>
</method>
<method selector='reversesTitleShadowWhenHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAdjustsImageWhenDisabled:'>
<arg name='adjustsImageWhenDisabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAdjustsImageWhenHighlighted:'>
<arg name='adjustsImageWhenHighlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundImage:forState:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentEdgeInsets:'>
<arg name='contentEdgeInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:forState:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageEdgeInsets:'>
<arg name='imageEdgeInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineBreakMode:'>
<arg name='lineBreakMode' type='i' index='0' declared_type='UILineBreakMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReversesTitleShadowWhenHighlighted:'>
<arg name='reversesTitleShadowWhenHighlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsTouchWhenHighlighted:'>
<arg name='showsTouchWhenHighlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:forState:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleColor:forState:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleEdgeInsets:'>
<arg name='titleEdgeInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleShadowColor:forState:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleShadowOffset:'>
<arg name='titleShadowOffset' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsTouchWhenHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleColorForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleEdgeInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='titleForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='titleRectForContentRect:'>
<arg name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='titleShadowColorForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleShadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='UIColor'>
<method selector='CGColor'>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='CIColor'>
<retval type='@' declared_type='CIColor*'/>
</method>
<method class_method='true' selector='blackColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='blueColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='brownColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='clearColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg name='alpha' type='f' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg name='cgColor' type='^{CGColor=}' index='0' declared_type='CGColorRef'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithCIColor:'>
<arg name='ciColor' type='@' index='0' declared_type='CIColor*'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg name='hue' type='f' index='0' declared_type='CGFloat'/>
<arg name='saturation' type='f' index='1' declared_type='CGFloat'/>
<arg name='brightness' type='f' index='2' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg name='red' type='f' index='0' declared_type='CGFloat'/>
<arg name='green' type='f' index='1' declared_type='CGFloat'/>
<arg name='blue' type='f' index='2' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg name='white' type='f' index='0' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='darkTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg name='hue' type='^f' index='0' declared_type='CGFloat*'/>
<arg name='saturation' type='^f' index='1' declared_type='CGFloat*'/>
<arg name='brightness' type='^f' index='2' declared_type='CGFloat*'/>
<arg name='alpha' type='^f' index='3' declared_type='CGFloat*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg name='red' type='^f' index='0' declared_type='CGFloat*'/>
<arg name='green' type='^f' index='1' declared_type='CGFloat*'/>
<arg name='blue' type='^f' index='2' declared_type='CGFloat*'/>
<arg name='alpha' type='^f' index='3' declared_type='CGFloat*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getWhite:alpha:'>
<arg name='white' type='^f' index='0' declared_type='CGFloat*'/>
<arg name='alpha' type='^f' index='1' declared_type='CGFloat*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='grayColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='greenColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='groupTableViewBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithCGColor:'>
<arg name='cgColor' type='^{CGColor=}' index='0' declared_type='CGColorRef'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithCIColor:'>
<arg name='ciColor' type='@' index='0' declared_type='CIColor*'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithHue:saturation:brightness:alpha:'>
<arg name='hue' type='f' index='0' declared_type='CGFloat'/>
<arg name='saturation' type='f' index='1' declared_type='CGFloat'/>
<arg name='brightness' type='f' index='2' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithPatternImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithRed:green:blue:alpha:'>
<arg name='red' type='f' index='0' declared_type='CGFloat'/>
<arg name='green' type='f' index='1' declared_type='CGFloat'/>
<arg name='blue' type='f' index='2' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithWhite:alpha:'>
<arg name='white' type='f' index='0' declared_type='CGFloat'/>
<arg name='alpha' type='f' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='lightTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='redColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='scrollViewTexturedBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStroke'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='underPageBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='viewFlipsideBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UIControl'>
<method selector='actionsForTarget:forControlEvent:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='controlEvent' type='I' index='1' declared_type='UIControlEvents'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='addTarget:action:forControlEvents:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='controlEvents' type='I' index='2' declared_type='UIControlEvents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allControlEvents'>
<retval type='I' declared_type='UIControlEvents'/>
</method>
<method selector='allTargets'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='beginTrackingWithTouch:withEvent:'>
<arg name='touch' type='@' index='0' declared_type='UITouch*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelTrackingWithEvent:'>
<arg name='event' type='@' index='0' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentHorizontalAlignment'>
<retval type='i' declared_type='UIControlContentHorizontalAlignment'/>
</method>
<method selector='contentVerticalAlignment'>
<retval type='i' declared_type='UIControlContentVerticalAlignment'/>
</method>
<method selector='continueTrackingWithTouch:withEvent:'>
<arg name='touch' type='@' index='0' declared_type='UITouch*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endTrackingWithTouch:withEvent:'>
<arg name='touch' type='@' index='0' declared_type='UITouch*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTouchInside'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTracking'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeTarget:action:forControlEvents:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='controlEvents' type='I' index='2' declared_type='UIControlEvents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendAction:to:forEvent:'>
<arg name='action' type=':' index='0' declared_type='SEL'/>
<arg name='target' type='@' index='1' declared_type='id'/>
<arg name='event' type='@' index='2' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendActionsForControlEvents:'>
<arg name='controlEvents' type='I' index='0' declared_type='UIControlEvents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentHorizontalAlignment:'>
<arg name='contentHorizontalAlignment' type='i' index='0' declared_type='UIControlContentHorizontalAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentVerticalAlignment:'>
<arg name='contentVerticalAlignment' type='i' index='0' declared_type='UIControlContentVerticalAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:'>
<arg name='highlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:'>
<arg name='selected' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type='I' declared_type='UIControlState'/>
</method>
</class>
<class name='UIDatePicker'>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='countDownDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='datePickerMode'>
<retval type='i' declared_type='UIDatePickerMode'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maximumDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='minimumDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='minuteInterval'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setCalendar:'>
<arg name='calendar' type='@' index='0' declared_type='NSCalendar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountDownDuration:'>
<arg name='countDownDuration' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDate:'>
<arg name='date' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDate:animated:'>
<arg name='date' type='@' index='0' declared_type='NSDate*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerMode:'>
<arg name='datePickerMode' type='i' index='0' declared_type='UIDatePickerMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg name='locale' type='@' index='0' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumDate:'>
<arg name='maximumDate' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumDate:'>
<arg name='minimumDate' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinuteInterval:'>
<arg name='minuteInterval' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg name='timeZone' type='@' index='0' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='UIDevice'>
<method selector='batteryLevel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='batteryState'>
<retval type='i' declared_type='UIDeviceBatteryState'/>
</method>
<method selector='beginGeneratingDeviceOrientationNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='currentDevice'>
<retval type='@' declared_type='UIDevice*'/>
</method>
<method selector='endGeneratingDeviceOrientationNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBatteryMonitoringEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGeneratingDeviceOrientationNotifications'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMultitaskingSupported'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProximityMonitoringEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedModel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='model'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='UIDeviceOrientation'/>
</method>
<method selector='playInputClick'>
<retval type='v' declared_type='void'/>
</method>
<method selector='proximityState'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBatteryMonitoringEnabled:'>
<arg name='batteryMonitoringEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProximityMonitoringEnabled:'>
<arg name='proximityMonitoringEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='systemVersion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uniqueIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInterfaceIdiom'>
<retval type='i' declared_type='UIUserInterfaceIdiom'/>
</method>
</class>
<class name='UIDictationPhrase'>
<method selector='alternativeInterpretations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UIDocument'>
<method selector='autosaveWithCompletionHandler:'>
<arg function_pointer='true' name='completionHandler' type='@?' index='0' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeCountTokenForSaveOperation:'>
<arg name='saveOperation' type='i' index='0' declared_type='UIDocumentSaveOperation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='closeWithCompletionHandler:'>
<arg function_pointer='true' name='completionHandler' type='@?' index='0' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentsForType:error:'>
<arg name='typeName' type='@' index='0' declared_type='NSString*'/>
<arg name='outError' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='disableEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='documentState'>
<retval type='i' declared_type='UIDocumentState'/>
</method>
<method selector='enableEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileAttributesToWriteToURL:forSaveOperation:error:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<arg name='saveOperation' type='i' index='1' declared_type='UIDocumentSaveOperation'/>
<arg name='outError' type='^@' index='2' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileModificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileNameExtensionForType:saveOperation:'>
<arg name='typeName' type='@' index='0' declared_type='NSString*'/>
<arg name='saveOperation' type='i' index='1' declared_type='UIDocumentSaveOperation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='finishedHandlingError:recovered:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<arg name='recovered' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleError:userInteractionPermitted:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<arg name='userInteractionPermitted' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasUnsavedChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithFileURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loadFromContents:ofType:error:'>
<arg name='contents' type='@' index='0' declared_type='id'/>
<arg name='typeName' type='@' index='1' declared_type='NSString*'/>
<arg name='outError' type='^@' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='openWithCompletionHandler:'>
<arg function_pointer='true' name='completionHandler' type='@?' index='0' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg function_pointer='true' name='block' type='@?' index='0' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='readFromURL:error:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<arg name='outError' type='^@' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='revertToContentsOfURL:completionHandler:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<arg function_pointer='true' name='completionHandler' type='@?' index='1' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveToURL:forSaveOperation:completionHandler:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<arg name='saveOperation' type='i' index='1' declared_type='UIDocumentSaveOperation'/>
<arg function_pointer='true' name='completionHandler' type='@?' index='2' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='savingFileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setFileModificationDate:'>
<arg name='fileModificationDate' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUndoManager:'>
<arg name='undoManager' type='@' index='0' declared_type='NSUndoManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoManager'>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method selector='updateChangeCount:'>
<arg name='change' type='i' index='0' declared_type='UIDocumentChangeKind'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateChangeCountWithToken:forSaveOperation:'>
<arg name='changeCountToken' type='@' index='0' declared_type='id'/>
<arg name='saveOperation' type='i' index='1' declared_type='UIDocumentSaveOperation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInteractionNoLongerPermittedForError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeContents:andAttributes:safelyToURL:forSaveOperation:error:'>
<arg name='contents' type='@' index='0' declared_type='id'/>
<arg name='additionalFileAttributes' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='url' type='@' index='2' declared_type='NSURL*'/>
<arg name='saveOperation' type='i' index='3' declared_type='UIDocumentSaveOperation'/>
<arg name='outError' type='^@' index='4' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeContents:toURL:forSaveOperation:originalContentsURL:error:'>
<arg name='contents' type='@' index='0' declared_type='id'/>
<arg name='url' type='@' index='1' declared_type='NSURL*'/>
<arg name='saveOperation' type='i' index='2' declared_type='UIDocumentSaveOperation'/>
<arg name='originalContentsURL' type='@' index='3' declared_type='NSURL*'/>
<arg name='outError' type='^@' index='4' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIDocumentInteractionController'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='UTI'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='annotation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dismissMenuAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dismissPreviewAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='gestureRecognizers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='icons'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='interactionControllerWithURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='UIDocumentInteractionController*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='presentOpenInMenuFromBarButtonItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentOpenInMenuFromRect:inView:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentOptionsMenuFromBarButtonItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentOptionsMenuFromRect:inView:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentPreviewAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAnnotation:'>
<arg name='annotation' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg name='URL' type='@' index='0' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUTI:'>
<arg name='UTI' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIEvent'>
<method selector='allTouches'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='subtype'>
<retval type='i' declared_type='UIEventSubtype'/>
</method>
<method selector='timestamp'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='touchesForGestureRecognizer:'>
<arg name='gesture' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='touchesForView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='touchesForWindow:'>
<arg name='window' type='@' index='0' declared_type='UIWindow*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='UIEventType'/>
</method>
</class>
<class name='UIFont'>
<method selector='ascender'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg name='fontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='UIFont*'/>
</method>
<method class_method='true' selector='buttonFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='capHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='descender'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='familyName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='familyNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='fontNamesForFamilyName:'>
<arg name='familyName' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg name='fontName' type='@' index='0' declared_type='NSString*'/>
<arg name='fontSize' type='f' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='fontWithSize:'>
<arg name='fontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='UIFont*'/>
</method>
<method class_method='true' selector='italicSystemFontOfSize:'>
<arg name='fontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='UIFont*'/>
</method>
<method class_method='true' selector='labelFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='leading'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='lineHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pointSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='smallSystemFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg name='fontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='UIFont*'/>
</method>
<method class_method='true' selector='systemFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='xHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='UIGestureRecognizer'>
<method selector='addTarget:action:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canBePreventedByGestureRecognizer:'>
<arg name='preventingGestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canPreventGestureRecognizer:'>
<arg name='preventedGestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelsTouchesInView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delaysTouchesBegan'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delaysTouchesEnded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='ignoreTouch:forEvent:'>
<arg name='touch' type='@' index='0' declared_type='UITouch*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTarget:action:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locationInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='locationOfTouch:inView:'>
<arg name='touchIndex' type='I' index='0' declared_type='NSUInteger'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='numberOfTouches'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeTarget:action:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requireGestureRecognizerToFail:'>
<arg name='otherGestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCancelsTouchesInView:'>
<arg name='cancelsTouchesInView' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelaysTouchesBegan:'>
<arg name='delaysTouchesBegan' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelaysTouchesEnded:'>
<arg name='delaysTouchesEnded' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setState:'>
<arg name='state' type='i' index='0' declared_type='UIGestureRecognizerState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type='i' declared_type='UIGestureRecognizerState'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='view'>
<retval type='@' declared_type='UIView*'/>
</method>
</class>
<class name='UIImage'>
<method selector='CGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='CIImage'>
<retval type='@' declared_type='CIImage*'/>
</method>
<method class_method='true' selector='animatedImageNamed:duration:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='animatedImageWithImages:duration:'>
<arg name='images' type='@' index='0' declared_type='NSArray*'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:duration:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='capInsets' type='{UIEdgeInsets=ffff}' index='1' declared_type='UIEdgeInsets'/>
<arg name='duration' type='d' index='2' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='capInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='drawAsPatternInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawAtPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawAtPoint:blendMode:alpha:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='blendMode' type='i' index='1' declared_type='CGBlendMode'/>
<arg name='alpha' type='f' index='2' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:blendMode:alpha:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='blendMode' type='i' index='1' declared_type='CGBlendMode'/>
<arg name='alpha' type='f' index='2' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='imageOrientation'>
<retval type='i' declared_type='UIImageOrientation'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg name='cgImage' type='^{CGImage=}' index='0' declared_type='CGImageRef'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:orientation:'>
<arg name='cgImage' type='^{CGImage=}' index='0' declared_type='CGImageRef'/>
<arg name='scale' type='f' index='1' declared_type='CGFloat'/>
<arg name='orientation' type='i' index='2' declared_type='UIImageOrientation'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='imageWithCIImage:'>
<arg name='ciImage' type='@' index='0' declared_type='CIImage*'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='imageWithContentsOfFile:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method class_method='true' selector='imageWithData:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='images'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithCGImage:'>
<arg name='cgImage' type='^{CGImage=}' index='0' declared_type='CGImageRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:scale:orientation:'>
<arg name='cgImage' type='^{CGImage=}' index='0' declared_type='CGImageRef'/>
<arg name='scale' type='f' index='1' declared_type='CGFloat'/>
<arg name='orientation' type='i' index='2' declared_type='UIImageOrientation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCIImage:'>
<arg name='ciImage' type='@' index='0' declared_type='CIImage*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftCapWidth'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='resizableImageWithCapInsets:'>
<arg name='capInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='stretchableImageWithLeftCapWidth:topCapHeight:'>
<arg name='leftCapWidth' type='i' index='0' declared_type='NSInteger'/>
<arg name='topCapHeight' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='topCapHeight'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='UIImagePickerController'>
<method selector='allowsEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsImageEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='availableCaptureModesForCameraDevice:'>
<arg name='cameraDevice' type='I' index='0' declared_type='UIImagePickerControllerCameraDevice'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='availableMediaTypesForSourceType:'>
<arg name='sourceType' type='I' index='0' declared_type='UIImagePickerControllerSourceType'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cameraCaptureMode'>
<retval type='I' declared_type='UIImagePickerControllerCameraCaptureMode'/>
</method>
<method selector='cameraDevice'>
<retval type='I' declared_type='UIImagePickerControllerCameraDevice'/>
</method>
<method selector='cameraFlashMode'>
<retval type='i' declared_type='UIImagePickerControllerCameraFlashMode'/>
</method>
<method selector='cameraOverlayView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='cameraViewTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='isCameraDeviceAvailable:'>
<arg name='cameraDevice' type='I' index='0' declared_type='UIImagePickerControllerCameraDevice'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isFlashAvailableForCameraDevice:'>
<arg name='cameraDevice' type='I' index='0' declared_type='UIImagePickerControllerCameraDevice'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isSourceTypeAvailable:'>
<arg name='sourceType' type='I' index='0' declared_type='UIImagePickerControllerSourceType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mediaTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAllowsEditing:'>
<arg name='allowsEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg name='allowsImageEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCameraCaptureMode:'>
<arg name='cameraCaptureMode' type='I' index='0' declared_type='UIImagePickerControllerCameraCaptureMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCameraDevice:'>
<arg name='cameraDevice' type='I' index='0' declared_type='UIImagePickerControllerCameraDevice'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCameraFlashMode:'>
<arg name='cameraFlashMode' type='i' index='0' declared_type='UIImagePickerControllerCameraFlashMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCameraOverlayView:'>
<arg name='cameraOverlayView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCameraViewTransform:'>
<arg name='cameraViewTransform' type='{CGAffineTransform=ffffff}' index='0' declared_type='CGAffineTransform'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMediaTypes:'>
<arg name='mediaTypes' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsCameraControls:'>
<arg name='showsCameraControls' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceType:'>
<arg name='sourceType' type='I' index='0' declared_type='UIImagePickerControllerSourceType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVideoMaximumDuration:'>
<arg name='videoMaximumDuration' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVideoQuality:'>
<arg name='videoQuality' type='I' index='0' declared_type='UIImagePickerControllerQualityType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsCameraControls'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sourceType'>
<retval type='I' declared_type='UIImagePickerControllerSourceType'/>
</method>
<method selector='startVideoCapture'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopVideoCapture'>
<retval type='v' declared_type='void'/>
</method>
<method selector='takePicture'>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoMaximumDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='videoQuality'>
<retval type='I' declared_type='UIImagePickerControllerQualityType'/>
</method>
</class>
<class name='UIImageView'>
<method selector='animationDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='animationImages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='animationRepeatCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='highlightedAnimationImages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='highlightedImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='image'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='initWithImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:highlightedImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='highlightedImage' type='@' index='1' declared_type='UIImage*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAnimationDuration:'>
<arg name='animationDuration' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationImages:'>
<arg name='animationImages' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationRepeatCount:'>
<arg name='animationRepeatCount' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:'>
<arg name='highlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedAnimationImages:'>
<arg name='highlightedAnimationImages' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedImage:'>
<arg name='highlightedImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg name='userInteractionEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimating'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimating'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UILabel'>
<method selector='adjustsFontSizeToFitWidth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baselineAdjustment'>
<retval type='i' declared_type='UIBaselineAdjustment'/>
</method>
<method selector='drawTextInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='highlightedTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lineBreakMode'>
<retval type='i' declared_type='UILineBreakMode'/>
</method>
<method selector='minimumFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfLines'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg name='adjustsFontSizeToFitWidth' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaselineAdjustment:'>
<arg name='baselineAdjustment' type='i' index='0' declared_type='UIBaselineAdjustment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:'>
<arg name='highlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg name='highlightedTextColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineBreakMode:'>
<arg name='lineBreakMode' type='i' index='0' declared_type='UILineBreakMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumFontSize:'>
<arg name='minimumFontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfLines:'>
<arg name='numberOfLines' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowColor:'>
<arg name='shadowColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOffset:'>
<arg name='shadowOffset' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg name='textAlignment' type='i' index='0' declared_type='UITextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg name='textColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg name='userInteractionEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='UITextAlignment'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textRectForBounds:limitedToNumberOfLines:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='numberOfLines' type='i' index='1' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
</class>
<class name='UILocalNotification'>
<method selector='alertAction'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='alertBody'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='alertLaunchImage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='applicationIconBadgeNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='fireDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='hasAction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='repeatCalendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='repeatInterval'>
<retval type='I' declared_type='NSCalendarUnit'/>
</method>
<method selector='setAlertAction:'>
<arg name='alertAction' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlertBody:'>
<arg name='alertBody' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlertLaunchImage:'>
<arg name='alertLaunchImage' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setApplicationIconBadgeNumber:'>
<arg name='applicationIconBadgeNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFireDate:'>
<arg name='fireDate' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasAction:'>
<arg name='hasAction' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepeatCalendar:'>
<arg name='repeatCalendar' type='@' index='0' declared_type='NSCalendar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepeatInterval:'>
<arg name='repeatInterval' type='I' index='0' declared_type='NSCalendarUnit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSoundName:'>
<arg name='soundName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg name='timeZone' type='@' index='0' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='UILocalizedIndexedCollation'>
<method class_method='true' selector='currentCollation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='sectionForObject:collationStringSelector:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='selector' type=':' index='1' declared_type='SEL'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='sectionForSectionIndexTitleAtIndex:'>
<arg name='indexTitleIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='sectionIndexTitles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sectionTitles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayFromArray:collationStringSelector:'>
<arg name='array' type='@' index='0' declared_type='NSArray*'/>
<arg name='selector' type=':' index='1' declared_type='SEL'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UILongPressGestureRecognizer'>
<method selector='allowableMovement'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minimumPressDuration'>
<retval type='d' declared_type='CFTimeInterval'/>
</method>
<method selector='numberOfTapsRequired'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAllowableMovement:'>
<arg name='allowableMovement' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumPressDuration:'>
<arg name='minimumPressDuration' type='d' index='0' declared_type='CFTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg name='numberOfTapsRequired' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg name='numberOfTouchesRequired' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIManagedDocument'>
<method selector='additionalContentForURL:error:'>
<arg name='absoluteURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg name='storeURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='fileType' type='@' index='1' declared_type='NSString*'/>
<arg name='configuration' type='@' index='2' declared_type='NSString*'/>
<arg name='storeOptions' type='@' index='3' declared_type='NSDictionary*'/>
<arg name='error' type='^@' index='4' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='modelConfiguration'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='persistentStoreName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistentStoreOptions'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='persistentStoreTypeForFileType:'>
<arg name='fileType' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readAdditionalContentFromURL:error:'>
<arg name='absoluteURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setModelConfiguration:'>
<arg name='modelConfiguration' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreOptions:'>
<arg name='persistentStoreOptions' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeAdditionalContent:toURL:originalContentsURL:error:'>
<arg name='content' type='@' index='0' declared_type='id'/>
<arg name='absoluteURL' type='@' index='1' declared_type='NSURL*'/>
<arg name='absoluteOriginalContentsURL' type='@' index='2' declared_type='NSURL*'/>
<arg name='error' type='^@' index='3' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIMarkupTextPrintFormatter'>
<method selector='initWithMarkupText:'>
<arg name='markupText' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='markupText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMarkupText:'>
<arg name='markupText' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIMenuController'>
<method selector='arrowDirection'>
<retval type='i' declared_type='UIMenuControllerArrowDirection'/>
</method>
<method selector='isMenuVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='menuItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setArrowDirection:'>
<arg name='arrowDirection' type='i' index='0' declared_type='UIMenuControllerArrowDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuItems:'>
<arg name='menuItems' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuVisible:'>
<arg name='menuVisible' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuVisible:animated:'>
<arg name='menuVisible' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetRect:inView:'>
<arg name='targetRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='targetView' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedMenuController'>
<retval type='@' declared_type='UIMenuController*'/>
</method>
<method selector='update'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIMenuItem'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='initWithTitle:action:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAction:'>
<arg name='action' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UINavigationBar'>
<method selector='backItem'>
<retval type='@' declared_type='UINavigationItem*'/>
</method>
<method selector='backgroundImageForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='barStyle'>
<retval type='i' declared_type='UIBarStyle'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTranslucent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='popNavigationItemAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='@' declared_type='UINavigationItem*'/>
</method>
<method selector='pushNavigationItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UINavigationItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundImage:forBarMetrics:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarStyle:'>
<arg name='barStyle' type='i' index='0' declared_type='UIBarStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:animated:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextAttributes:'>
<arg name='titleTextAttributes' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleVerticalPositionAdjustment:forBarMetrics:'>
<arg name='adjustment' type='f' index='0' declared_type='CGFloat'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTranslucent:'>
<arg name='translucent' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleTextAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='titleVerticalPositionAdjustmentForBarMetrics:'>
<arg name='barMetrics' type='i' index='0' declared_type='UIBarMetrics'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='topItem'>
<retval type='@' declared_type='UINavigationItem*'/>
</method>
</class>
<class name='UINavigationController'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRootViewController:'>
<arg name='rootViewController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isNavigationBarHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isToolbarHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='navigationBar'>
<retval type='@' declared_type='UINavigationBar*'/>
</method>
<method selector='popToRootViewControllerAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='popToViewController:animated:'>
<arg name='viewController' type='@' index='0' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='popViewControllerAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='pushViewController:animated:'>
<arg name='viewController' type='@' index='0' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNavigationBarHidden:'>
<arg name='navigationBarHidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNavigationBarHidden:animated:'>
<arg name='hidden' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolbarHidden:'>
<arg name='toolbarHidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolbarHidden:animated:'>
<arg name='hidden' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:animated:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toolbar'>
<retval type='@' declared_type='UIToolbar*'/>
</method>
<method selector='topViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='viewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='visibleViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
</class>
<class name='UINavigationItem'>
<method selector='backBarButtonItem'>
<retval type='@' declared_type='UIBarButtonItem*'/>
</method>
<method selector='hidesBackButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftBarButtonItem'>
<retval type='@' declared_type='UIBarButtonItem*'/>
</method>
<method selector='leftBarButtonItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='leftItemsSupplementBackButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='prompt'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rightBarButtonItem'>
<retval type='@' declared_type='UIBarButtonItem*'/>
</method>
<method selector='rightBarButtonItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setBackBarButtonItem:'>
<arg name='backBarButtonItem' type='@' index='0' declared_type='UIBarButtonItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesBackButton:'>
<arg name='hidesBackButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesBackButton:animated:'>
<arg name='hidesBackButton' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftBarButtonItem:'>
<arg name='leftBarButtonItem' type='@' index='0' declared_type='UIBarButtonItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftBarButtonItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftBarButtonItems:'>
<arg name='leftBarButtonItems' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftBarButtonItems:animated:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftItemsSupplementBackButton:'>
<arg name='leftItemsSupplementBackButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrompt:'>
<arg name='prompt' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightBarButtonItem:'>
<arg name='rightBarButtonItem' type='@' index='0' declared_type='UIBarButtonItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightBarButtonItem:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightBarButtonItems:'>
<arg name='rightBarButtonItems' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightBarButtonItems:animated:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleView:'>
<arg name='titleView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleView'>
<retval type='@' declared_type='UIView*'/>
</method>
</class>
<class name='UINib'>
<method selector='instantiateWithOwner:options:'>
<arg name='ownerOrNil' type='@' index='0' declared_type='id'/>
<arg name='optionsOrNil' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='nibWithData:bundle:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='bundleOrNil' type='@' index='1' declared_type='NSBundle*'/>
<retval type='@' declared_type='UINib*'/>
</method>
<method class_method='true' selector='nibWithNibName:bundle:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='bundleOrNil' type='@' index='1' declared_type='NSBundle*'/>
<retval type='@' declared_type='UINib*'/>
</method>
</class>
<class name='UIPageControl'>
<method selector='currentPage'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='defersCurrentPageDisplay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hidesForSinglePage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfPages'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setCurrentPage:'>
<arg name='currentPage' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefersCurrentPageDisplay:'>
<arg name='defersCurrentPageDisplay' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesForSinglePage:'>
<arg name='hidesForSinglePage' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfPages:'>
<arg name='numberOfPages' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeForNumberOfPages:'>
<arg name='pageCount' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='updateCurrentPageDisplay'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIPageViewController'>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='gestureRecognizers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithTransitionStyle:navigationOrientation:options:'>
<arg name='style' type='i' index='0' declared_type='UIPageViewControllerTransitionStyle'/>
<arg name='navigationOrientation' type='i' index='1' declared_type='UIPageViewControllerNavigationOrientation'/>
<arg name='options' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDoubleSided'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='navigationOrientation'>
<retval type='i' declared_type='UIPageViewControllerNavigationOrientation'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleSided:'>
<arg name='doubleSided' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:direction:animated:completion:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<arg name='direction' type='i' index='1' declared_type='UIPageViewControllerNavigationDirection'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='3' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='spineLocation'>
<retval type='i' declared_type='UIPageViewControllerSpineLocation'/>
</method>
<method selector='transitionStyle'>
<retval type='i' declared_type='UIPageViewControllerTransitionStyle'/>
</method>
<method selector='viewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UIPanGestureRecognizer'>
<method selector='maximumNumberOfTouches'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumNumberOfTouches'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setMaximumNumberOfTouches:'>
<arg name='maximumNumberOfTouches' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumNumberOfTouches:'>
<arg name='minimumNumberOfTouches' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTranslation:inView:'>
<arg name='translation' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='translationInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='velocityInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='UIPasteboard'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLs'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='addItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='color'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='colors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsPasteboardTypes:'>
<arg name='pasteboardTypes' type='@' index='0' declared_type='NSArray*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsPasteboardTypes:inItemSet:'>
<arg name='pasteboardTypes' type='@' index='0' declared_type='NSArray*'/>
<arg name='itemSet' type='@' index='1' declared_type='NSIndexSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForPasteboardType:'>
<arg name='pasteboardType' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataForPasteboardType:inItemSet:'>
<arg name='pasteboardType' type='@' index='0' declared_type='NSString*'/>
<arg name='itemSet' type='@' index='1' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='generalPasteboard'>
<retval type='@' declared_type='UIPasteboard*'/>
</method>
<method selector='image'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='images'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='isPersistent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemSetWithPasteboardTypes:'>
<arg name='pasteboardTypes' type='@' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberOfItems'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pasteboardTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pasteboardTypesForItemSet:'>
<arg name='itemSet' type='@' index='0' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='pasteboardWithName:create:'>
<arg name='pasteboardName' type='@' index='0' declared_type='NSString*'/>
<arg name='create' type='B' index='1' declared_type='BOOL'/>
<retval type='@' declared_type='UIPasteboard*'/>
</method>
<method class_method='true' selector='pasteboardWithUniqueName'>
<retval type='@' declared_type='UIPasteboard*'/>
</method>
<method class_method='true' selector='removePasteboardWithName:'>
<arg name='pasteboardName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColors:'>
<arg name='colors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:forPasteboardType:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='pasteboardType' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImages:'>
<arg name='images' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistent:'>
<arg name='persistent' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrings:'>
<arg name='strings' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg name='URL' type='@' index='0' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURLs:'>
<arg name='URLs' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forPasteboardType:'>
<arg name='value' type='@' index='0' declared_type='id'/>
<arg name='pasteboardType' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='strings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForPasteboardType:'>
<arg name='pasteboardType' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForPasteboardType:inItemSet:'>
<arg name='pasteboardType' type='@' index='0' declared_type='NSString*'/>
<arg name='itemSet' type='@' index='1' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UIPickerView'>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberOfComponents'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfRowsInComponent:'>
<arg name='component' type='i' index='0' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='reloadAllComponents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadComponent:'>
<arg name='component' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowSizeForComponent:'>
<arg name='component' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='selectRow:inComponent:animated:'>
<arg name='row' type='i' index='0' declared_type='NSInteger'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedRowInComponent:'>
<arg name='component' type='i' index='0' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsSelectionIndicator:'>
<arg name='showsSelectionIndicator' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsSelectionIndicator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='viewForRow:forComponent:'>
<arg name='row' type='i' index='0' declared_type='NSInteger'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
</class>
<class name='UIPinchGestureRecognizer'>
<method selector='scale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setScale:'>
<arg name='scale' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='velocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='UIPopoverBackgroundView'>
<method class_method='true' selector='arrowBase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='arrowDirection'>
<retval type='I' declared_type='UIPopoverArrowDirection'/>
</method>
<method class_method='true' selector='arrowHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='arrowOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='contentViewInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='setArrowDirection:'>
<arg name='arrowDirection' type='I' index='0' declared_type='UIPopoverArrowDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArrowOffset:'>
<arg name='arrowOffset' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIPopoverController'>
<method selector='contentViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dismissPopoverAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithContentViewController:'>
<arg name='viewController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPopoverVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='passthroughViews'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='popoverArrowDirection'>
<retval type='I' declared_type='UIPopoverArrowDirection'/>
</method>
<method selector='popoverBackgroundViewClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='popoverContentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='popoverLayoutMargins'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='presentPopoverFromBarButtonItem:permittedArrowDirections:animated:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='arrowDirections' type='I' index='1' declared_type='UIPopoverArrowDirection'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentPopoverFromRect:inView:permittedArrowDirections:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='arrowDirections' type='I' index='2' declared_type='UIPopoverArrowDirection'/>
<arg name='animated' type='B' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewController:'>
<arg name='contentViewController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewController:animated:'>
<arg name='viewController' type='@' index='0' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPassthroughViews:'>
<arg name='passthroughViews' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPopoverBackgroundViewClass:'>
<arg name='popoverBackgroundViewClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPopoverContentSize:'>
<arg name='popoverContentSize' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPopoverContentSize:animated:'>
<arg name='size' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPopoverLayoutMargins:'>
<arg name='popoverLayoutMargins' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIPrintFormatter'>
<method selector='contentInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='drawInRect:forPageAtIndex:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='pageIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='maximumContentHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='maximumContentWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pageCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='printPageRenderer'>
<retval type='@' declared_type='UIPrintPageRenderer*'/>
</method>
<method selector='rectForPageAtIndex:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='removeFromPrintPageRenderer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentInsets:'>
<arg name='contentInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumContentHeight:'>
<arg name='maximumContentHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumContentWidth:'>
<arg name='maximumContentWidth' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartPage:'>
<arg name='startPage' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startPage'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='UIPrintInfo'>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='duplex'>
<retval type='i' declared_type='UIPrintInfoDuplex'/>
</method>
<method selector='jobName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='UIPrintInfoOrientation'/>
</method>
<method selector='outputType'>
<retval type='i' declared_type='UIPrintInfoOutputType'/>
</method>
<method class_method='true' selector='printInfo'>
<retval type='@' declared_type='UIPrintInfo*'/>
</method>
<method class_method='true' selector='printInfoWithDictionary:'>
<arg name='dictionary' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='@' declared_type='UIPrintInfo*'/>
</method>
<method selector='printerID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDuplex:'>
<arg name='duplex' type='i' index='0' declared_type='UIPrintInfoDuplex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setJobName:'>
<arg name='jobName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg name='orientation' type='i' index='0' declared_type='UIPrintInfoOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputType:'>
<arg name='outputType' type='i' index='0' declared_type='UIPrintInfoOutputType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrinterID:'>
<arg name='printerID' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIPrintInteractionController'>
<method class_method='true' selector='canPrintData:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='canPrintURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dismissAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='isPrintingAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentAnimated:completionHandler:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='1' declared_type='UIPrintInteractionCompletionHandler'>
<arg type='@' declared_type='UIPrintInteractionController*'/>
<arg type='B' declared_type='BOOL'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentFromBarButtonItem:animated:completionHandler:'>
<arg name='item' type='@' index='0' declared_type='UIBarButtonItem*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='2' declared_type='UIPrintInteractionCompletionHandler'>
<arg type='@' declared_type='UIPrintInteractionController*'/>
<arg type='B' declared_type='BOOL'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentFromRect:inView:animated:completionHandler:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='3' declared_type='UIPrintInteractionCompletionHandler'>
<arg type='@' declared_type='UIPrintInteractionController*'/>
<arg type='B' declared_type='BOOL'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='printFormatter'>
<retval type='@' declared_type='UIPrintFormatter*'/>
</method>
<method selector='printInfo'>
<retval type='@' declared_type='UIPrintInfo*'/>
</method>
<method selector='printPageRenderer'>
<retval type='@' declared_type='UIPrintPageRenderer*'/>
</method>
<method selector='printPaper'>
<retval type='@' declared_type='UIPrintPaper*'/>
</method>
<method class_method='true' selector='printableUTIs'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='printingItem'>
<retval type='@' declared_type='id'/>
</method>
<method selector='printingItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintFormatter:'>
<arg name='printFormatter' type='@' index='0' declared_type='UIPrintFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintInfo:'>
<arg name='printInfo' type='@' index='0' declared_type='UIPrintInfo*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintPageRenderer:'>
<arg name='printPageRenderer' type='@' index='0' declared_type='UIPrintPageRenderer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintingItem:'>
<arg name='printingItem' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintingItems:'>
<arg name='printingItems' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsPageRange:'>
<arg name='showsPageRange' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedPrintController'>
<retval type='@' declared_type='UIPrintInteractionController*'/>
</method>
<method selector='showsPageRange'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIPrintPageRenderer'>
<method selector='addPrintFormatter:startingAtPageAtIndex:'>
<arg name='formatter' type='@' index='0' declared_type='UIPrintFormatter*'/>
<arg name='pageIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawContentForPageAtIndex:inRect:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawFooterForPageAtIndex:inRect:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='footerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawHeaderForPageAtIndex:inRect:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='headerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawPageAtIndex:inRect:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<arg name='printableRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawPrintFormatter:forPageAtIndex:'>
<arg name='printFormatter' type='@' index='0' declared_type='UIPrintFormatter*'/>
<arg name='pageIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='footerHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='headerHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfPages'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='paperRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='prepareForDrawingPages:'>
<arg name='range' type='{_NSRange=II}' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printFormatters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='printFormattersForPageAtIndex:'>
<arg name='pageIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='printableRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setFooterHeight:'>
<arg name='footerHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderHeight:'>
<arg name='headerHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintFormatters:'>
<arg name='printFormatters' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIPrintPaper'>
<method class_method='true' selector='bestPaperForPageSize:withPapersFromArray:'>
<arg name='contentSize' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<arg name='paperList' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='UIPrintPaper*'/>
</method>
<method selector='paperSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='printRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='printableRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
</class>
<class name='UIProgressView'>
<method selector='initWithProgressViewStyle:'>
<arg name='style' type='i' index='0' declared_type='UIProgressViewStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='progressTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='progressViewStyle'>
<retval type='i' declared_type='UIProgressViewStyle'/>
</method>
<method selector='setProgress:'>
<arg name='progress' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:animated:'>
<arg name='progress' type='f' index='0' declared_type='float'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressImage:'>
<arg name='progressImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressTintColor:'>
<arg name='progressTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressViewStyle:'>
<arg name='progressViewStyle' type='i' index='0' declared_type='UIProgressViewStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTrackImage:'>
<arg name='trackImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTrackTintColor:'>
<arg name='trackTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='trackImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='trackTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UIReferenceLibraryViewController'>
<method class_method='true' selector='dictionaryHasDefinitionForTerm:'>
<arg name='term' type='@' index='0' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTerm:'>
<arg name='term' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='UIResponder'>
<method selector='becomeFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canBecomeFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canPerformAction:withSender:'>
<arg name='action' type=':' index='0' declared_type='SEL'/>
<arg name='sender' type='@' index='1' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canResignFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inputAccessoryView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='inputView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='isFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='motionBegan:withEvent:'>
<arg name='motion' type='i' index='0' declared_type='UIEventSubtype'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='motionCancelled:withEvent:'>
<arg name='motion' type='i' index='0' declared_type='UIEventSubtype'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='motionEnded:withEvent:'>
<arg name='motion' type='i' index='0' declared_type='UIEventSubtype'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nextResponder'>
<retval type='@' declared_type='UIResponder*'/>
</method>
<method selector='reloadInputViews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='remoteControlReceivedWithEvent:'>
<arg name='event' type='@' index='0' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resignFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoManager'>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
</class>
<class name='UIRotationGestureRecognizer'>
<method selector='rotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setRotation:'>
<arg name='rotation' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='velocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='UIScreen'>
<method selector='applicationFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='availableModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='bounds'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='brightness'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='currentMode'>
<retval type='@' declared_type='UIScreenMode*'/>
</method>
<method selector='displayLinkWithTarget:selector:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<arg name='sel' type=':' index='1' declared_type='SEL'/>
<retval type='@' declared_type='CADisplayLink*'/>
</method>
<method class_method='true' selector='mainScreen'>
<retval type='@' declared_type='UIScreen*'/>
</method>
<method selector='mirroredScreen'>
<retval type='@' declared_type='UIScreen*'/>
</method>
<method selector='overscanCompensation'>
<retval type='i' declared_type='UIScreenOverscanCompensation'/>
</method>
<method selector='preferredMode'>
<retval type='@' declared_type='UIScreenMode*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='screens'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setBrightness:'>
<arg name='brightness' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentMode:'>
<arg name='currentMode' type='@' index='0' declared_type='UIScreenMode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOverscanCompensation:'>
<arg name='overscanCompensation' type='i' index='0' declared_type='UIScreenOverscanCompensation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWantsSoftwareDimming:'>
<arg name='wantsSoftwareDimming' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='wantsSoftwareDimming'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIScreenMode'>
<method selector='pixelAspectRatio'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='alwaysBounceHorizontal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysBounceVertical'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='bounces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='bouncesZoom'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canCancelContentTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='contentInset'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='contentOffset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='decelerationRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='delaysContentTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='flashScrollIndicators'>
<retval type='v' declared_type='void'/>
</method>
<method selector='indicatorStyle'>
<retval type='i' declared_type='UIScrollViewIndicatorStyle'/>
</method>
<method selector='isDecelerating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDirectionalLockEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDragging'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPagingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isScrollEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTracking'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isZoomBouncing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isZooming'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maximumZoomScale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minimumZoomScale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='panGestureRecognizer'>
<retval type='@' declared_type='UIPanGestureRecognizer*'/>
</method>
<method selector='pinchGestureRecognizer'>
<retval type='@' declared_type='UIPinchGestureRecognizer*'/>
</method>
<method selector='scrollIndicatorInsets'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</method>
<method selector='scrollRectToVisible:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollsToTop'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlwaysBounceHorizontal:'>
<arg name='alwaysBounceHorizontal' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlwaysBounceVertical:'>
<arg name='alwaysBounceVertical' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBounces:'>
<arg name='bounces' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBouncesZoom:'>
<arg name='bouncesZoom' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanCancelContentTouches:'>
<arg name='canCancelContentTouches' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentInset:'>
<arg name='contentInset' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentOffset:'>
<arg name='contentOffset' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentOffset:animated:'>
<arg name='contentOffset' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg name='contentSize' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecelerationRate:'>
<arg name='decelerationRate' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelaysContentTouches:'>
<arg name='delaysContentTouches' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirectionalLockEnabled:'>
<arg name='directionalLockEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndicatorStyle:'>
<arg name='indicatorStyle' type='i' index='0' declared_type='UIScrollViewIndicatorStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumZoomScale:'>
<arg name='maximumZoomScale' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumZoomScale:'>
<arg name='minimumZoomScale' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPagingEnabled:'>
<arg name='pagingEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollEnabled:'>
<arg name='scrollEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollIndicatorInsets:'>
<arg name='scrollIndicatorInsets' type='{UIEdgeInsets=ffff}' index='0' declared_type='UIEdgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollsToTop:'>
<arg name='scrollsToTop' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsHorizontalScrollIndicator:'>
<arg name='showsHorizontalScrollIndicator' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsVerticalScrollIndicator:'>
<arg name='showsVerticalScrollIndicator' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZoomScale:'>
<arg name='zoomScale' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZoomScale:animated:'>
<arg name='scale' type='f' index='0' declared_type='float'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsHorizontalScrollIndicator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsVerticalScrollIndicator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='touchesShouldBegin:withEvent:inContentView:'>
<arg name='touches' type='@' index='0' declared_type='NSSet*'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<arg name='view' type='@' index='2' declared_type='UIView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='touchesShouldCancelInContentView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zoomScale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='zoomToRect:animated:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UISearchBar'>
<method selector='autocapitalizationType'>
<retval type='i' declared_type='UITextAutocapitalizationType'/>
</method>
<method selector='autocorrectionType'>
<retval type='i' declared_type='UITextAutocorrectionType'/>
</method>
<method selector='backgroundImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='barStyle'>
<retval type='i' declared_type='UIBarStyle'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageForSearchBarIcon:state:'>
<arg name='icon' type='i' index='0' declared_type='UISearchBarIcon'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='isSearchResultsButtonSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTranslucent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyboardType'>
<retval type='i' declared_type='UIKeyboardType'/>
</method>
<method selector='placeholder'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positionAdjustmentForSearchBarIcon:'>
<arg name='icon' type='i' index='0' declared_type='UISearchBarIcon'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='prompt'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='scopeBarBackgroundImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='scopeBarButtonBackgroundImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:'>
<arg name='leftState' type='I' index='0' declared_type='UIControlState'/>
<arg name='rightState' type='I' index='1' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='scopeBarButtonTitleTextAttributesForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scopeButtonTitles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='searchFieldBackgroundImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='searchFieldBackgroundPositionAdjustment'>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='searchTextPositionAdjustment'>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='selectedScopeButtonIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAutocapitalizationType:'>
<arg name='autocapitalizationType' type='i' index='0' declared_type='UITextAutocapitalizationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocorrectionType:'>
<arg name='autocorrectionType' type='i' index='0' declared_type='UITextAutocorrectionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundImage:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarStyle:'>
<arg name='barStyle' type='i' index='0' declared_type='UIBarStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:forSearchBarIcon:state:'>
<arg name='iconImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='icon' type='i' index='1' declared_type='UISearchBarIcon'/>
<arg name='state' type='I' index='2' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyboardType:'>
<arg name='keyboardType' type='i' index='0' declared_type='UIKeyboardType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholder:'>
<arg name='placeholder' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionAdjustment:forSearchBarIcon:'>
<arg name='adjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<arg name='icon' type='i' index='1' declared_type='UISearchBarIcon'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrompt:'>
<arg name='prompt' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScopeBarBackgroundImage:'>
<arg name='scopeBarBackgroundImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScopeBarButtonBackgroundImage:forState:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:'>
<arg name='dividerImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='leftState' type='I' index='1' declared_type='UIControlState'/>
<arg name='rightState' type='I' index='2' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScopeBarButtonTitleTextAttributes:forState:'>
<arg name='attributes' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScopeButtonTitles:'>
<arg name='scopeButtonTitles' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchFieldBackgroundImage:forState:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchFieldBackgroundPositionAdjustment:'>
<arg name='searchFieldBackgroundPositionAdjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchResultsButtonSelected:'>
<arg name='searchResultsButtonSelected' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchTextPositionAdjustment:'>
<arg name='searchTextPositionAdjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedScopeButtonIndex:'>
<arg name='selectedScopeButtonIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsBookmarkButton:'>
<arg name='showsBookmarkButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsCancelButton:'>
<arg name='showsCancelButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsCancelButton:animated:'>
<arg name='showsCancelButton' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsScopeBar:'>
<arg name='showsScopeBar' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsSearchResultsButton:'>
<arg name='showsSearchResultsButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpellCheckingType:'>
<arg name='spellCheckingType' type='i' index='0' declared_type='UITextSpellCheckingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTranslucent:'>
<arg name='translucent' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsBookmarkButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsCancelButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsScopeBar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsSearchResultsButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='spellCheckingType'>
<retval type='i' declared_type='UITextSpellCheckingType'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UISearchDisplayController'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSearchBar:contentsController:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='searchBar'>
<retval type='@' declared_type='UISearchBar*'/>
</method>
<method selector='searchContentsController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='searchResultsDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='searchResultsDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='searchResultsTableView'>
<retval type='@' declared_type='UITableView*'/>
</method>
<method selector='searchResultsTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setActive:'>
<arg name='active' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setActive:animated:'>
<arg name='visible' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchResultsDataSource:'>
<arg name='searchResultsDataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchResultsDelegate:'>
<arg name='searchResultsDelegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchResultsTitle:'>
<arg name='searchResultsTitle' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UISegmentedControl'>
<method selector='apportionsSegmentWidthsByContent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='contentOffsetForSegmentAtIndex:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='contentPositionAdjustmentForSegmentType:barMetrics:'>
<arg name='leftCenterRightOrAlone' type='i' index='0' declared_type='UISegmentedControlSegment'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
<method selector='dividerImageForLeftSegmentState:rightSegmentState:barMetrics:'>
<arg name='leftState' type='I' index='0' declared_type='UIControlState'/>
<arg name='rightState' type='I' index='1' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='imageForSegmentAtIndex:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='initWithItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertSegmentWithImage:atIndex:animated:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertSegmentWithTitle:atIndex:animated:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabledForSegmentAtIndex:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMomentary'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfSegments'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeAllSegments'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSegmentAtIndex:animated:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='segmentedControlStyle'>
<retval type='i' declared_type='UISegmentedControlStyle'/>
</method>
<method selector='selectedSegmentIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setApportionsSegmentWidthsByContent:'>
<arg name='apportionsSegmentWidthsByContent' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentOffset:forSegmentAtIndex:'>
<arg name='offset' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentPositionAdjustment:forSegmentType:barMetrics:'>
<arg name='adjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<arg name='leftCenterRightOrAlone' type='i' index='1' declared_type='UISegmentedControlSegment'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:'>
<arg name='dividerImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='leftState' type='I' index='1' declared_type='UIControlState'/>
<arg name='rightState' type='I' index='2' declared_type='UIControlState'/>
<arg name='barMetrics' type='i' index='3' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:forSegmentAtIndex:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:forSegmentAtIndex:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMomentary:'>
<arg name='momentary' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSegmentedControlStyle:'>
<arg name='segmentedControlStyle' type='i' index='0' declared_type='UISegmentedControlStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSegmentIndex:'>
<arg name='selectedSegmentIndex' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:forSegmentAtIndex:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg name='attributes' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:forSegmentAtIndex:'>
<arg name='width' type='f' index='0' declared_type='CGFloat'/>
<arg name='segment' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleForSegmentAtIndex:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='widthForSegmentAtIndex:'>
<arg name='segment' type='I' index='0' declared_type='NSUInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='UISimpleTextPrintFormatter'>
<method selector='color'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='initWithText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setColor:'>
<arg name='color' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg name='textAlignment' type='i' index='0' declared_type='UITextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='UITextAlignment'/>
</method>
</class>
<class name='UISlider'>
<method selector='currentMaximumTrackImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='currentMinimumTrackImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='currentThumbImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='isContinuous'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maximumTrackImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='maximumTrackTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='maximumValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='maximumValueImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='maximumValueImageRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='minimumTrackImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='minimumTrackTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='minimumValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minimumValueImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='minimumValueImageRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setContinuous:'>
<arg name='continuous' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumTrackImage:forState:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumTrackTintColor:'>
<arg name='maximumTrackTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumValue:'>
<arg name='maximumValue' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumValueImage:'>
<arg name='maximumValueImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumTrackImage:forState:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumTrackTintColor:'>
<arg name='minimumTrackTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumValue:'>
<arg name='minimumValue' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumValueImage:'>
<arg name='minimumValueImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThumbImage:forState:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='state' type='I' index='1' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThumbTintColor:'>
<arg name='thumbTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:'>
<arg name='value' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:animated:'>
<arg name='value' type='f' index='0' declared_type='float'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='thumbImageForState:'>
<arg name='state' type='I' index='0' declared_type='UIControlState'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='thumbRectForBounds:trackRect:value:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<arg name='value' type='f' index='2' declared_type='float'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='thumbTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='trackRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='value'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='UISplitViewController'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='presentsWithGesture'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPresentsWithGesture:'>
<arg name='presentsWithGesture' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UIStepper'>
<method selector='autorepeat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContinuous'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maximumValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minimumValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='setAutorepeat:'>
<arg name='autorepeat' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuous:'>
<arg name='continuous' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumValue:'>
<arg name='maximumValue' type='d' index='0' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumValue:'>
<arg name='minimumValue' type='d' index='0' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStepValue:'>
<arg name='stepValue' type='d' index='0' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:'>
<arg name='value' type='d' index='0' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWraps:'>
<arg name='wraps' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stepValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='value'>
<retval type='d' declared_type='double'/>
</method>
<method selector='wraps'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIStoryboard'>
<method selector='instantiateInitialViewController'>
<retval type='@' declared_type='id'/>
</method>
<method selector='instantiateViewControllerWithIdentifier:'>
<arg name='identifier' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='storyboardWithName:bundle:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='storyboardBundleOrNil' type='@' index='1' declared_type='NSBundle*'/>
<retval type='@' declared_type='UIStoryboard*'/>
</method>
</class>
<class name='UIStoryboardPopoverSegue'>
<method selector='popoverController'>
<retval type='@' declared_type='UIPopoverController*'/>
</method>
</class>
<class name='UIStoryboardSegue'>
<method selector='destinationViewController'>
<retval type='@' declared_type='id'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithIdentifier:source:destination:'>
<arg name='identifier' type='@' index='0' declared_type='NSString*'/>
<arg name='source' type='@' index='1' declared_type='UIViewController*'/>
<arg name='destination' type='@' index='2' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='perform'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceViewController'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='UISwipeGestureRecognizer'>
<method selector='direction'>
<retval type='i' declared_type='UISwipeGestureRecognizerDirection'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setDirection:'>
<arg name='direction' type='i' index='0' declared_type='UISwipeGestureRecognizerDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg name='numberOfTouchesRequired' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UISwitch'>
<method selector='initWithFrame:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOn'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='onTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='setOn:'>
<arg name='on' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOn:animated:'>
<arg name='on' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOnTintColor:'>
<arg name='onTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UITabBar'>
<method selector='backgroundImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='beginCustomizingItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='endCustomizingAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isCustomizing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectedImageTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='UITabBarItem*'/>
</method>
<method selector='selectionIndicatorImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setBackgroundImage:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:animated:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImageTintColor:'>
<arg name='selectedImageTintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedItem:'>
<arg name='selectedItem' type='@' index='0' declared_type='UITabBarItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionIndicatorImage:'>
<arg name='selectionIndicatorImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UITabBarController'>
<method selector='customizableViewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='moreNavigationController'>
<retval type='@' declared_type='UINavigationController*'/>
</method>
<method selector='selectedIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='selectedViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='setCustomizableViewControllers:'>
<arg name='customizableViewControllers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedIndex:'>
<arg name='selectedIndex' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedViewController:'>
<arg name='selectedViewController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewControllers:animated:'>
<arg name='viewControllers' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabBar'>
<retval type='@' declared_type='UITabBar*'/>
</method>
<method selector='viewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='badgeValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='finishedSelectedImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='finishedUnselectedImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='initWithTabBarSystemItem:tag:'>
<arg name='systemItem' type='i' index='0' declared_type='UITabBarSystemItem'/>
<arg name='tag' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTitle:image:tag:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<arg name='image' type='@' index='1' declared_type='UIImage*'/>
<arg name='tag' type='i' index='2' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBadgeValue:'>
<arg name='badgeValue' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFinishedSelectedImage:withFinishedUnselectedImage:'>
<arg name='selectedImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='unselectedImage' type='@' index='1' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitlePositionAdjustment:'>
<arg name='adjustment' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='titlePositionAdjustment'>
<retval type='{UIOffset=ff}' declared_type='UIOffset'/>
</method>
</class>
<class name='UITableView'>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsMultipleSelectionDuringEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsSelectionDuringEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='beginUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cellForRowAtIndexPath:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='UITableViewCell*'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deleteRowsAtIndexPaths:withRowAnimation:'>
<arg name='indexPaths' type='@' index='0' declared_type='NSArray*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteSections:withRowAnimation:'>
<arg name='sections' type='@' index='0' declared_type='NSIndexSet*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:'>
<arg name='identifier' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='deselectRowAtIndexPath:animated:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexPathForCell:'>
<arg name='cell' type='@' index='0' declared_type='UITableViewCell*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathForRowAtPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathForSelectedRow'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathsForRowsInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexPathsForSelectedRows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexPathsForVisibleRows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithFrame:style:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='style' type='i' index='1' declared_type='UITableViewStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertRowsAtIndexPaths:withRowAnimation:'>
<arg name='indexPaths' type='@' index='0' declared_type='NSArray*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertSections:withRowAnimation:'>
<arg name='sections' type='@' index='0' declared_type='NSIndexSet*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='moveRowAtIndexPath:toIndexPath:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<arg name='newIndexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveSection:toSection:'>
<arg name='section' type='i' index='0' declared_type='NSInteger'/>
<arg name='newSection' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfRowsInSection:'>
<arg name='section' type='i' index='0' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfSections'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='rectForFooterInSection:'>
<arg name='section' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectForHeaderInSection:'>
<arg name='section' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectForRowAtIndexPath:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectForSection:'>
<arg name='section' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='registerNib:forCellReuseIdentifier:'>
<arg name='nib' type='@' index='0' declared_type='UINib*'/>
<arg name='identifier' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadRowsAtIndexPaths:withRowAnimation:'>
<arg name='indexPaths' type='@' index='0' declared_type='NSArray*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadSectionIndexTitles'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadSections:withRowAnimation:'>
<arg name='sections' type='@' index='0' declared_type='NSIndexSet*'/>
<arg name='animation' type='i' index='1' declared_type='UITableViewRowAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollToNearestSelectedRowAtScrollPosition:animated:'>
<arg name='scrollPosition' type='i' index='0' declared_type='UITableViewScrollPosition'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollToRowAtIndexPath:atScrollPosition:animated:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<arg name='scrollPosition' type='i' index='1' declared_type='UITableViewScrollPosition'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sectionFooterHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='sectionHeaderHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='sectionIndexMinimumDisplayRowCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='selectRowAtIndexPath:animated:scrollPosition:'>
<arg name='indexPath' type='@' index='0' declared_type='NSIndexPath*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<arg name='scrollPosition' type='i' index='2' declared_type='UITableViewScrollPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='separatorColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='separatorStyle'>
<retval type='i' declared_type='UITableViewCellSeparatorStyle'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg name='allowsMultipleSelection' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsMultipleSelectionDuringEditing:'>
<arg name='allowsMultipleSelectionDuringEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSelection:'>
<arg name='allowsSelection' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSelectionDuringEditing:'>
<arg name='allowsSelectionDuringEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundView:'>
<arg name='backgroundView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:animated:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeight:'>
<arg name='rowHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSectionFooterHeight:'>
<arg name='sectionFooterHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSectionHeaderHeight:'>
<arg name='sectionHeaderHeight' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSectionIndexMinimumDisplayRowCount:'>
<arg name='sectionIndexMinimumDisplayRowCount' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatorColor:'>
<arg name='separatorColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatorStyle:'>
<arg name='separatorStyle' type='i' index='0' declared_type='UITableViewCellSeparatorStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTableFooterView:'>
<arg name='tableFooterView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTableHeaderView:'>
<arg name='tableHeaderView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='style'>
<retval type='i' declared_type='UITableViewStyle'/>
</method>
<method selector='tableFooterView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='tableHeaderView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='visibleCells'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='UITableViewCell'>
<method selector='accessoryAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='accessoryType'>
<retval type='i' declared_type='UITableViewCellAccessoryType'/>
</method>
<method selector='accessoryView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='backgroundView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='detailTextLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='didTransitionToState:'>
<arg name='state' type='I' index='0' declared_type='UITableViewCellStateMask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='editAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='editingAccessoryType'>
<retval type='i' declared_type='UITableViewCellAccessoryType'/>
</method>
<method selector='editingAccessoryView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='editingStyle'>
<retval type='i' declared_type='UITableViewCellEditingStyle'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='hidesAccessoryWhenEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='imageView'>
<retval type='@' declared_type='UIImageView*'/>
</method>
<method selector='indentationLevel'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='indentationWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithFrame:reuseIdentifier:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='reuseIdentifier' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStyle:reuseIdentifier:'>
<arg name='style' type='i' index='0' declared_type='UITableViewCellStyle'/>
<arg name='reuseIdentifier' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lineBreakMode'>
<retval type='i' declared_type='UILineBreakMode'/>
</method>
<method selector='multipleSelectionBackgroundView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='prepareForReuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='selectedBackgroundView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='selectedImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='selectedTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='selectionStyle'>
<retval type='i' declared_type='UITableViewCellSelectionStyle'/>
</method>
<method selector='setAccessoryAction:'>
<arg name='accessoryAction' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessoryType:'>
<arg name='accessoryType' type='i' index='0' declared_type='UITableViewCellAccessoryType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessoryView:'>
<arg name='accessoryView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundView:'>
<arg name='backgroundView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditAction:'>
<arg name='editAction' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:animated:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditingAccessoryType:'>
<arg name='editingAccessoryType' type='i' index='0' declared_type='UITableViewCellAccessoryType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditingAccessoryView:'>
<arg name='editingAccessoryView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesAccessoryWhenEditing:'>
<arg name='hidesAccessoryWhenEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:'>
<arg name='highlighted' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:animated:'>
<arg name='highlighted' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationLevel:'>
<arg name='indentationLevel' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationWidth:'>
<arg name='indentationWidth' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineBreakMode:'>
<arg name='lineBreakMode' type='i' index='0' declared_type='UILineBreakMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMultipleSelectionBackgroundView:'>
<arg name='multipleSelectionBackgroundView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:'>
<arg name='selected' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:animated:'>
<arg name='selected' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg name='selectedBackgroundView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImage:'>
<arg name='selectedImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedTextColor:'>
<arg name='selectedTextColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionStyle:'>
<arg name='selectionStyle' type='i' index='0' declared_type='UITableViewCellSelectionStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldIndentWhileEditing:'>
<arg name='shouldIndentWhileEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsReorderControl:'>
<arg name='showsReorderControl' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg name='target' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg name='textAlignment' type='i' index='0' declared_type='UITextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg name='textColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldIndentWhileEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showingDeleteConfirmation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsReorderControl'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='UITextAlignment'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='willTransitionToState:'>
<arg name='state' type='I' index='0' declared_type='UITableViewCellStateMask'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UITableViewController'>
<method selector='clearsSelectionOnViewWillAppear'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithStyle:'>
<arg name='style' type='i' index='0' declared_type='UITableViewStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setClearsSelectionOnViewWillAppear:'>
<arg name='clearsSelectionOnViewWillAppear' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTableView:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView'>
<retval type='@' declared_type='UITableView*'/>
</method>
</class>
<class name='UITapGestureRecognizer'>
<method selector='numberOfTapsRequired'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg name='numberOfTapsRequired' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg name='numberOfTouchesRequired' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UITextChecker'>
<method class_method='true' selector='availableLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:'>
<arg name='range' type='{_NSRange=II}' index='0' declared_type='NSRange'/>
<arg name='string' type='@' index='1' declared_type='NSString*'/>
<arg name='language' type='@' index='2' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='guessesForWordRange:inString:language:'>
<arg name='range' type='{_NSRange=II}' index='0' declared_type='NSRange'/>
<arg name='string' type='@' index='1' declared_type='NSString*'/>
<arg name='language' type='@' index='2' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='hasLearnedWord:'>
<arg name='word' type='@' index='0' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ignoreWord:'>
<arg name='wordToIgnore' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ignoredWords'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='learnWord:'>
<arg name='word' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rangeOfMisspelledWordInString:range:startingAt:wrap:language:'>
<arg name='stringToCheck' type='@' index='0' declared_type='NSString*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='startingOffset' type='i' index='2' declared_type='NSInteger'/>
<arg name='wrapFlag' type='B' index='3' declared_type='BOOL'/>
<arg name='language' type='@' index='4' declared_type='NSString*'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setIgnoredWords:'>
<arg name='words' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='unlearnWord:'>
<arg name='word' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UITextField'>
<method selector='adjustsFontSizeToFitWidth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='background'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='borderRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='borderStyle'>
<retval type='i' declared_type='UITextBorderStyle'/>
</method>
<method selector='clearButtonMode'>
<retval type='i' declared_type='UITextFieldViewMode'/>
</method>
<method selector='clearButtonRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='clearsOnBeginEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disabledBackground'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='drawPlaceholderInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawTextInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='editingRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='inputAccessoryView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='inputView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='isEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='leftView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='leftViewMode'>
<retval type='i' declared_type='UITextFieldViewMode'/>
</method>
<method selector='leftViewRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='minimumFontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='placeholder'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='placeholderRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rightView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='rightViewMode'>
<retval type='i' declared_type='UITextFieldViewMode'/>
</method>
<method selector='rightViewRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg name='adjustsFontSizeToFitWidth' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackground:'>
<arg name='background' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderStyle:'>
<arg name='borderStyle' type='i' index='0' declared_type='UITextBorderStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearButtonMode:'>
<arg name='clearButtonMode' type='i' index='0' declared_type='UITextFieldViewMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearsOnBeginEditing:'>
<arg name='clearsOnBeginEditing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisabledBackground:'>
<arg name='disabledBackground' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputAccessoryView:'>
<arg name='inputAccessoryView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputView:'>
<arg name='inputView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftView:'>
<arg name='leftView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftViewMode:'>
<arg name='leftViewMode' type='i' index='0' declared_type='UITextFieldViewMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumFontSize:'>
<arg name='minimumFontSize' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholder:'>
<arg name='placeholder' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightView:'>
<arg name='rightView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightViewMode:'>
<arg name='rightViewMode' type='i' index='0' declared_type='UITextFieldViewMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg name='textAlignment' type='i' index='0' declared_type='UITextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg name='textColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='UITextAlignment'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textRectForBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
</class>
<class name='UITextInputMode'>
<method class_method='true' selector='activeInputModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='currentInputMode'>
<retval type='@' declared_type='UITextInputMode*'/>
</method>
<method selector='primaryLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UITextInputStringTokenizer'>
<method selector='initWithTextInput:'>
<arg name='textInput' type='@' index='0' declared_type='UIResponder*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='UITextRange'>
<method selector='end'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method selector='isEmpty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='start'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
</class>
<class name='UITextView'>
<method selector='dataDetectorTypes'>
<retval type='I' declared_type='UIDataDetectorTypes'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='font'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='hasText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inputAccessoryView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='inputView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg name='range' type='{_NSRange=II}' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedRange'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setDataDetectorTypes:'>
<arg name='dataDetectorTypes' type='I' index='0' declared_type='UIDataDetectorTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg name='editable' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputAccessoryView:'>
<arg name='inputAccessoryView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputView:'>
<arg name='inputView' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRange:'>
<arg name='selectedRange' type='{_NSRange=II}' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg name='textAlignment' type='i' index='0' declared_type='UITextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg name='textColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='UITextAlignment'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UIToolbar'>
<method selector='backgroundImageForToolbarPosition:barMetrics:'>
<arg name='topOrBottom' type='i' index='0' declared_type='UIToolbarPosition'/>
<arg name='barMetrics' type='i' index='1' declared_type='UIBarMetrics'/>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='barStyle'>
<retval type='i' declared_type='UIBarStyle'/>
</method>
<method selector='isTranslucent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setBackgroundImage:forToolbarPosition:barMetrics:'>
<arg name='backgroundImage' type='@' index='0' declared_type='UIImage*'/>
<arg name='topOrBottom' type='i' index='1' declared_type='UIToolbarPosition'/>
<arg name='barMetrics' type='i' index='2' declared_type='UIBarMetrics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarStyle:'>
<arg name='barStyle' type='i' index='0' declared_type='UIBarStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItems:animated:'>
<arg name='items' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTranslucent:'>
<arg name='translucent' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
</class>
<class name='UITouch'>
<method selector='gestureRecognizers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='locationInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='phase'>
<retval type='i' declared_type='UITouchPhase'/>
</method>
<method selector='previousLocationInView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='tapCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='timestamp'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='view'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='window'>
<retval type='@' declared_type='UIWindow*'/>
</method>
</class>
<class name='UIVideoEditorController'>
<method class_method='true' selector='canEditVideoAtPath:'>
<arg name='videoPath' type='@' index='0' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVideoMaximumDuration:'>
<arg name='videoMaximumDuration' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVideoPath:'>
<arg name='videoPath' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVideoQuality:'>
<arg name='videoQuality' type='I' index='0' declared_type='UIImagePickerControllerQualityType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoMaximumDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='videoPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='videoQuality'>
<retval type='I' declared_type='UIImagePickerControllerQualityType'/>
</method>
</class>
<class name='UIView'>
<method selector='addGestureRecognizer:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSubview:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alpha'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:'>
<arg name='duration' type='d' index='0' declared_type='NSTimeInterval'/>
<arg function_pointer='true' name='animations' type='@?' index='1' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:completion:'>
<arg name='duration' type='d' index='0' declared_type='NSTimeInterval'/>
<arg function_pointer='true' name='animations' type='@?' index='1' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<arg function_pointer='true' name='completion' type='@?' index='2' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='animateWithDuration:delay:options:animations:completion:'>
<arg name='duration' type='d' index='0' declared_type='NSTimeInterval'/>
<arg name='delay' type='d' index='1' declared_type='NSTimeInterval'/>
<arg name='options' type='I' index='2' declared_type='UIViewAnimationOptions'/>
<arg function_pointer='true' name='animations' type='@?' index='3' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<arg function_pointer='true' name='completion' type='@?' index='4' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='areAnimationsEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autoresizesSubviews'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autoresizingMask'>
<retval type='I' declared_type='UIViewAutoresizing'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='beginAnimations:context:'>
<arg name='animationID' type='@' index='0' declared_type='NSString*'/>
<arg name='context' type='^v' index='1' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bounds'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='bringSubviewToFront:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='center'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='clearsContextBeforeDrawing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='clipsToBounds'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='commitAnimations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentMode'>
<retval type='i' declared_type='UIViewContentMode'/>
</method>
<method selector='contentScaleFactor'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='contentStretch'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='convertPoint:fromView:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertPoint:toView:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertRect:fromView:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='convertRect:toView:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='didAddSubview:'>
<arg name='subview' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didMoveToSuperview'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didMoveToWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawRect:forViewPrintFormatter:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='formatter' type='@' index='1' declared_type='UIViewPrintFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditing:'>
<arg name='force' type='B' index='0' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='exchangeSubviewAtIndex:withSubviewAtIndex:'>
<arg name='index1' type='i' index='0' declared_type='NSInteger'/>
<arg name='index2' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='frame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='gestureRecognizers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='hitTest:withEvent:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='initWithFrame:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertSubview:aboveSubview:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<arg name='siblingSubview' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertSubview:atIndex:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<arg name='index' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertSubview:belowSubview:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<arg name='siblingSubview' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isDescendantOfView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExclusiveTouch'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMultipleTouchEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layer'>
<retval type='@' declared_type='CALayer*'/>
</method>
<method class_method='true' selector='layerClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='layoutIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutSubviews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pointInside:withEvent:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='event' type='@' index='1' declared_type='UIEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeFromSuperview'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeGestureRecognizer:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendSubviewToBack:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlpha:'>
<arg name='alpha' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationBeginsFromCurrentState:'>
<arg name='fromCurrentState' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationCurve:'>
<arg name='curve' type='i' index='0' declared_type='UIViewAnimationCurve'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationDelay:'>
<arg name='delay' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationDidStopSelector:'>
<arg name='selector' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg name='duration' type='d' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationRepeatAutoreverses:'>
<arg name='repeatAutoreverses' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationRepeatCount:'>
<arg name='repeatCount' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationStartDate:'>
<arg name='startDate' type='@' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationTransition:forView:cache:'>
<arg name='transition' type='i' index='0' declared_type='UIViewAnimationTransition'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='cache' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationWillStartSelector:'>
<arg name='selector' type=':' index='0' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setAnimationsEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg name='autoresizesSubviews' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoresizingMask:'>
<arg name='autoresizingMask' type='I' index='0' declared_type='UIViewAutoresizing'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg name='backgroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBounds:'>
<arg name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenter:'>
<arg name='center' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearsContextBeforeDrawing:'>
<arg name='clearsContextBeforeDrawing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClipsToBounds:'>
<arg name='clipsToBounds' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentMode:'>
<arg name='contentMode' type='i' index='0' declared_type='UIViewContentMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentScaleFactor:'>
<arg name='contentScaleFactor' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentStretch:'>
<arg name='contentStretch' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExclusiveTouch:'>
<arg name='exclusiveTouch' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGestureRecognizers:'>
<arg name='gestureRecognizers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidden:'>
<arg name='hidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMultipleTouchEnabled:'>
<arg name='multipleTouchEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplay'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsLayout'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpaque:'>
<arg name='cftype' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg name='tag' type='i' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransform:'>
<arg name='transform' type='{CGAffineTransform=ffffff}' index='0' declared_type='CGAffineTransform'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg name='userInteractionEnabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeThatFits:'>
<arg name='size' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='subviews'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='superview'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='transform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method class_method='true' selector='transitionFromView:toView:duration:options:completion:'>
<arg name='fromView' type='@' index='0' declared_type='UIView*'/>
<arg name='toView' type='@' index='1' declared_type='UIView*'/>
<arg name='duration' type='d' index='2' declared_type='NSTimeInterval'/>
<arg name='options' type='I' index='3' declared_type='UIViewAnimationOptions'/>
<arg function_pointer='true' name='completion' type='@?' index='4' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='transitionWithView:duration:options:animations:completion:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<arg name='options' type='I' index='2' declared_type='UIViewAnimationOptions'/>
<arg function_pointer='true' name='animations' type='@?' index='3' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<arg function_pointer='true' name='completion' type='@?' index='4' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewPrintFormatter'>
<retval type='@' declared_type='UIViewPrintFormatter*'/>
</method>
<method selector='viewWithTag:'>
<arg name='tag' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='willMoveToSuperview:'>
<arg name='newSuperview' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willMoveToWindow:'>
<arg name='newWindow' type='@' index='0' declared_type='UIWindow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willRemoveSubview:'>
<arg name='subview' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window'>
<retval type='@' declared_type='UIWindow*'/>
</method>
</class>
<class name='UIViewController'>
<method selector='addChildViewController:'>
<arg name='childController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='attemptRotationToDeviceOrientation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='childViewControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentSizeForViewInPopover'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='definesPresentationContext'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='didAnimateFirstHalfOfRotationToInterfaceOrientation:'>
<arg name='toInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didMoveToParentViewController:'>
<arg name='parent' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didRotateFromInterfaceOrientation:'>
<arg name='fromInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='disablesAutomaticKeyboardDismissal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dismissModalViewControllerAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dismissViewControllerAnimated:completion:'>
<arg name='flag' type='B' index='0' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='1' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='editButtonItem'>
<retval type='@' declared_type='UIBarButtonItem*'/>
</method>
<method selector='hidesBottomBarWhenPushed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg name='nibNameOrNil' type='@' index='0' declared_type='NSString*'/>
<arg name='nibBundleOrNil' type='@' index='1' declared_type='NSBundle*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interfaceOrientation'>
<retval type='i' declared_type='UIInterfaceOrientation'/>
</method>
<method selector='isBeingDismissed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBeingPresented'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isModalInPopover'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMovingFromParentViewController'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMovingToParentViewController'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isViewLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadView'>
<retval type='v' declared_type='void'/>
</method>
<method selector='modalPresentationStyle'>
<retval type='i' declared_type='UIModalPresentationStyle'/>
</method>
<method selector='modalTransitionStyle'>
<retval type='i' declared_type='UIModalTransitionStyle'/>
</method>
<method selector='modalViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='navigationController'>
<retval type='@' declared_type='UINavigationController*'/>
</method>
<method selector='navigationItem'>
<retval type='@' declared_type='UINavigationItem*'/>
</method>
<method selector='nibBundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='nibName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='parentViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='performSegueWithIdentifier:sender:'>
<arg name='identifier' type='@' index='0' declared_type='NSString*'/>
<arg name='sender' type='@' index='1' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForSegue:sender:'>
<arg name='segue' type='@' index='0' declared_type='UIStoryboardSegue*'/>
<arg name='sender' type='@' index='1' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentModalViewController:animated:'>
<arg name='modalViewController' type='@' index='0' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentViewController:animated:completion:'>
<arg name='viewControllerToPresent' type='@' index='0' declared_type='UIViewController*'/>
<arg name='flag' type='B' index='1' declared_type='BOOL'/>
<arg function_pointer='true' name='completion' type='@?' index='2' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='presentingViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='providesPresentationContextTransitionStyle'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeFromParentViewController'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotatingFooterView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='rotatingHeaderView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='searchDisplayController'>
<retval type='@' declared_type='UISearchDisplayController*'/>
</method>
<method selector='setContentSizeForViewInPopover:'>
<arg name='contentSizeForViewInPopover' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefinesPresentationContext:'>
<arg name='definesPresentationContext' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditing:animated:'>
<arg name='editing' type='B' index='0' declared_type='BOOL'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesBottomBarWhenPushed:'>
<arg name='hidesBottomBarWhenPushed' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModalInPopover:'>
<arg name='modalInPopover' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModalPresentationStyle:'>
<arg name='modalPresentationStyle' type='i' index='0' declared_type='UIModalPresentationStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModalTransitionStyle:'>
<arg name='modalTransitionStyle' type='i' index='0' declared_type='UIModalTransitionStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProvidesPresentationContextTransitionStyle:'>
<arg name='providesPresentationContextTransitionStyle' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTabBarItem:'>
<arg name='tabBarItem' type='@' index='0' declared_type='UITabBarItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg name='title' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolbarItems:'>
<arg name='toolbarItems' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolbarItems:animated:'>
<arg name='toolbarItems' type='@' index='0' declared_type='NSArray*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg name='view' type='@' index='0' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWantsFullScreenLayout:'>
<arg name='wantsFullScreenLayout' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldAutorotateToInterfaceOrientation:'>
<arg name='toInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitViewController'>
<retval type='@' declared_type='UISplitViewController*'/>
</method>
<method selector='storyboard'>
<retval type='@' declared_type='UIStoryboard*'/>
</method>
<method selector='tabBarController'>
<retval type='@' declared_type='UITabBarController*'/>
</method>
<method selector='tabBarItem'>
<retval type='@' declared_type='UITabBarItem*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='toolbarItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='transitionFromViewController:toViewController:duration:options:animations:completion:'>
<arg name='fromViewController' type='@' index='0' declared_type='UIViewController*'/>
<arg name='toViewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='duration' type='d' index='2' declared_type='NSTimeInterval'/>
<arg name='options' type='I' index='3' declared_type='UIViewAnimationOptions'/>
<arg function_pointer='true' name='animations' type='@?' index='4' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<arg function_pointer='true' name='completion' type='@?' index='5' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='view'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='viewDidAppear:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidDisappear:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidLayoutSubviews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidLoad'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidUnload'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillAppear:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillDisappear:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillLayoutSubviews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillUnload'>
<retval type='v' declared_type='void'/>
</method>
<method selector='wantsFullScreenLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:'>
<arg name='toInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willAnimateRotationToInterfaceOrientation:duration:'>
<arg name='toInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:'>
<arg name='fromInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willMoveToParentViewController:'>
<arg name='parent' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willRotateToInterfaceOrientation:duration:'>
<arg name='toInterfaceOrientation' type='i' index='0' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIViewPrintFormatter'>
<method selector='view'>
<retval type='@' declared_type='UIView*'/>
</method>
</class>
<class name='UIWebView'>
<method selector='allowsInlineMediaPlayback'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canGoBack'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canGoForward'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataDetectorTypes'>
<retval type='I' declared_type='UIDataDetectorTypes'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='detectsPhoneNumbers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='goBack'>
<retval type='v' declared_type='void'/>
</method>
<method selector='goForward'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isLoading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadData:MIMEType:textEncodingName:baseURL:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='MIMEType' type='@' index='1' declared_type='NSString*'/>
<arg name='textEncodingName' type='@' index='2' declared_type='NSString*'/>
<arg name='baseURL' type='@' index='3' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadHTMLString:baseURL:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<arg name='baseURL' type='@' index='1' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadRequest:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mediaPlaybackAllowsAirPlay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mediaPlaybackRequiresUserAction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reload'>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='scalesPageToFit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scrollView'>
<retval type='@' declared_type='UIScrollView*'/>
</method>
<method selector='setAllowsInlineMediaPlayback:'>
<arg name='allowsInlineMediaPlayback' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataDetectorTypes:'>
<arg name='dataDetectorTypes' type='I' index='0' declared_type='UIDataDetectorTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDetectsPhoneNumbers:'>
<arg name='detectsPhoneNumbers' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMediaPlaybackAllowsAirPlay:'>
<arg name='mediaPlaybackAllowsAirPlay' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMediaPlaybackRequiresUserAction:'>
<arg name='mediaPlaybackRequiresUserAction' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScalesPageToFit:'>
<arg name='scalesPageToFit' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringByEvaluatingJavaScriptFromString:'>
<arg name='script' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='UIWindow'>
<method selector='becomeKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='convertPoint:fromWindow:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='window' type='@' index='1' declared_type='UIWindow*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertPoint:toWindow:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='window' type='@' index='1' declared_type='UIWindow*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertRect:fromWindow:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='window' type='@' index='1' declared_type='UIWindow*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='convertRect:toWindow:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<arg name='window' type='@' index='1' declared_type='UIWindow*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='isKeyWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeKeyAndVisible'>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resignKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rootViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='screen'>
<retval type='@' declared_type='UIScreen*'/>
</method>
<method selector='sendEvent:'>
<arg name='event' type='@' index='0' declared_type='UIEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRootViewController:'>
<arg name='rootViewController' type='@' index='0' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScreen:'>
<arg name='screen' type='@' index='0' declared_type='UIScreen*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindowLevel:'>
<arg name='windowLevel' type='f' index='0' declared_type='UIWindowLevel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowLevel'>
<retval type='f' declared_type='UIWindowLevel'/>
</method>
</class>
<informal_protocol name='UIAccelerometerDelegate'>
<method type='v16@0:4@8@12' selector='accelerometer:didAccelerate:'>
<arg name='accelerometer' type='@' index='0' declared_type='UIAccelerometer*'/>
<arg name='acceleration' type='@' index='1' declared_type='UIAcceleration*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibility'>
<method type='{CGPoint=ff}8@0:4' selector='accessibilityActivationPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method type='B8@0:4' selector='accessibilityElementsHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' selector='accessibilityFrame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method type='@8@0:4' selector='accessibilityHint'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' selector='accessibilityLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' selector='accessibilityLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='Q8@0:4' selector='accessibilityTraits'>
<retval type='Q' declared_type='UIAccessibilityTraits'/>
</method>
<method type='@8@0:4' selector='accessibilityValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='B8@0:4' selector='accessibilityViewIsModal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='isAccessibilityElement'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4{CGPoint=ff}8' selector='setAccessibilityActivationPoint:'>
<arg name='accessibilityActivationPoint' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setAccessibilityElementsHidden:'>
<arg name='accessibilityElementsHidden' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8' selector='setAccessibilityFrame:'>
<arg name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setAccessibilityHint:'>
<arg name='accessibilityHint' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setAccessibilityLabel:'>
<arg name='accessibilityLabel' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setAccessibilityLanguage:'>
<arg name='accessibilityLanguage' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4Q8' selector='setAccessibilityTraits:'>
<arg name='accessibilityTraits' type='Q' index='0' declared_type='UIAccessibilityTraits'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setAccessibilityValue:'>
<arg name='accessibilityValue' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setAccessibilityViewIsModal:'>
<arg name='accessibilityViewIsModal' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setIsAccessibilityElement:'>
<arg name='isAccessibilityElement' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityAction'>
<method type='v8@0:4' selector='accessibilityDecrement'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' selector='accessibilityIncrement'>
<retval type='v' declared_type='void'/>
</method>
<method type='B8@0:4' selector='accessibilityPerformEscape'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4i8' selector='accessibilityScroll:'>
<arg name='direction' type='i' index='0' declared_type='UIAccessibilityScrollDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContainer'>
<method type='@12@0:4i8' selector='accessibilityElementAtIndex:'>
<arg name='index' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method type='i8@0:4' selector='accessibilityElementCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='i12@0:4@8' selector='indexOfAccessibilityElement:'>
<arg name='element' type='@' index='0' declared_type='id'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityFocus'>
<method type='v8@0:4' selector='accessibilityElementDidBecomeFocused'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' selector='accessibilityElementDidLoseFocus'>
<retval type='v' declared_type='void'/>
</method>
<method type='B8@0:4' selector='accessibilityElementIsFocused'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityIdentification'>
<method type='@8@0:4' selector='accessibilityIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='v12@0:4@8' selector='setAccessibilityIdentifier:'>
<arg name='accessibilityIdentifier' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityReadingContent'>
<method type='@12@0:4i8' selector='accessibilityContentForLineNumber:'>
<arg name='lineNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4i8' selector='accessibilityFrameForLineNumber:'>
<arg name='lineNumber' type='i' index='0' declared_type='NSInteger'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method type='i16@0:4{CGPoint=ff}8' selector='accessibilityLineNumberForPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='@8@0:4' selector='accessibilityPageContent'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='UIActionSheetDelegate'>
<method type='v16@0:4@8i12' selector='actionSheet:clickedButtonAtIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8i12' selector='actionSheet:didDismissWithButtonIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8i12' selector='actionSheet:willDismissWithButtonIndex:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='actionSheetCancel:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='didPresentActionSheet:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='willPresentActionSheet:'>
<arg name='actionSheet' type='@' index='0' declared_type='UIActionSheet*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIAlertViewDelegate'>
<method type='v16@0:4@8i12' selector='alertView:clickedButtonAtIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8i12' selector='alertView:didDismissWithButtonIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8i12' selector='alertView:willDismissWithButtonIndex:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<arg name='buttonIndex' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='alertViewCancel:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='alertViewShouldEnableFirstOtherButton:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='didPresentAlertView:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='willPresentAlertView:'>
<arg name='alertView' type='@' index='0' declared_type='UIAlertView*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIAppearance'>
<method class_method='true' type='@8@0:4' selector='appearance'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' type='@12@0:4#8' selector='appearanceWhenContainedIn:' sentinel='0'>
<arg name='ContainerClass' type='#' index='0' declared_type='Class*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='UIApplicationDelegate'>
<method type='v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12' selector='application:didChangeStatusBarFrame:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='oldStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8i12' selector='application:didChangeStatusBarOrientation:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='oldStatusBarOrientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='application:didFinishLaunchingWithOptions:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='launchOptions' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='application:didReceiveLocalNotification:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='notification' type='@' index='1' declared_type='UILocalNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='application:didReceiveRemoteNotification:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='userInfo' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='deviceToken' type='@' index='1' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='application:handleOpenURL:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='url' type='@' index='1' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' selector='application:openURL:sourceApplication:annotation:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='url' type='@' index='1' declared_type='NSURL*'/>
<arg name='sourceApplication' type='@' index='2' declared_type='NSString*'/>
<arg name='annotation' type='@' index='3' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12' selector='application:willChangeStatusBarFrame:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='newStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8i12d16' selector='application:willChangeStatusBarOrientation:duration:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<arg name='newStatusBarOrientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<arg name='duration' type='d' index='2' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationDidBecomeActive:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationDidEnterBackground:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationDidFinishLaunching:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationDidReceiveMemoryWarning:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationProtectedDataDidBecomeAvailable:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationProtectedDataWillBecomeUnavailable:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationSignificantTimeChange:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationWillEnterForeground:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationWillResignActive:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='applicationWillTerminate:'>
<arg name='application' type='@' index='0' declared_type='UIApplication*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setWindow:'>
<arg name='window' type='@' index='0' declared_type='UIWindow*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='window'>
<retval type='@' declared_type='UIWindow*'/>
</method>
</informal_protocol>
<informal_protocol name='UIDocumentInteractionControllerDelegate'>
<method type='B16@0:4@8:12' selector='documentInteractionController:canPerformAction:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='documentInteractionController:didEndSendingToApplication:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='application' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8:12' selector='documentInteractionController:performAction:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='documentInteractionController:willBeginSendingToApplication:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<arg name='application' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerDidDismissOpenInMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerDidDismissOptionsMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerDidEndPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' selector='documentInteractionControllerRectForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method type='@12@0:4@8' selector='documentInteractionControllerViewControllerForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method type='@12@0:4@8' selector='documentInteractionControllerViewForPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerWillBeginPreview:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerWillPresentOpenInMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='documentInteractionControllerWillPresentOptionsMenu:'>
<arg name='controller' type='@' index='0' declared_type='UIDocumentInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIGestureRecognizerDelegate'>
<method type='B16@0:4@8@12' selector='gestureRecognizer:shouldReceiveTouch:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<arg name='touch' type='@' index='1' declared_type='UITouch*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<arg name='otherGestureRecognizer' type='@' index='1' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='gestureRecognizerShouldBegin:'>
<arg name='gestureRecognizer' type='@' index='0' declared_type='UIGestureRecognizer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIImagePickerControllerDelegate'>
<method type='v20@0:4@8@12@16' selector='imagePickerController:didFinishPickingImage:editingInfo:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<arg name='image' type='@' index='1' declared_type='UIImage*'/>
<arg name='editingInfo' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='imagePickerController:didFinishPickingMediaWithInfo:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<arg name='info' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='imagePickerControllerDidCancel:'>
<arg name='picker' type='@' index='0' declared_type='UIImagePickerController*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIInputViewAudioFeedback'>
<method type='B8@0:4' selector='enableInputClicksWhenVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIKeyInput'>
<method type='v8@0:4' selector='deleteBackward'>
<retval type='v' declared_type='void'/>
</method>
<method type='B8@0:4' selector='hasText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='insertText:'>
<arg name='text' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationBarDelegate'>
<method type='v16@0:4@8@12' selector='navigationBar:didPopItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='navigationBar:didPushItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='navigationBar:shouldPopItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='navigationBar:shouldPushItem:'>
<arg name='navigationBar' type='@' index='0' declared_type='UINavigationBar*'/>
<arg name='item' type='@' index='1' declared_type='UINavigationItem*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationControllerDelegate'>
<method type='v20@0:4@8@12B16' selector='navigationController:didShowViewController:animated:'>
<arg name='navigationController' type='@' index='0' declared_type='UINavigationController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' selector='navigationController:willShowViewController:animated:'>
<arg name='navigationController' type='@' index='0' declared_type='UINavigationController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UINibLoadingAdditions'>
<method type='v8@0:4' selector='awakeFromNib'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDataSource'>
<method type='@16@0:4@8@12' selector='pageViewController:viewControllerAfterViewController:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method type='@16@0:4@8@12' selector='pageViewController:viewControllerBeforeViewController:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDelegate'>
<method type='v24@0:4@8B12@16B20' selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='finished' type='B' index='1' declared_type='BOOL'/>
<arg name='previousViewControllers' type='@' index='2' declared_type='NSArray*'/>
<arg name='completed' type='B' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='i16@0:4@8i12' selector='pageViewController:spineLocationForInterfaceOrientation:'>
<arg name='pageViewController' type='@' index='0' declared_type='UIPageViewController*'/>
<arg name='orientation' type='i' index='1' declared_type='UIInterfaceOrientation'/>
<retval type='i' declared_type='UIPageViewControllerSpineLocation'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewAccessibilityDelegate'>
<method type='@16@0:4@8i12' selector='pickerView:accessibilityHintForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@16@0:4@8i12' selector='pickerView:accessibilityLabelForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewDataSource'>
<method type='i12@0:4@8' selector='numberOfComponentsInPickerView:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='i16@0:4@8i12' selector='pickerView:numberOfRowsInComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewDelegate'>
<method type='v20@0:4@8i12i16' selector='pickerView:didSelectRow:inComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='f16@0:4@8i12' selector='pickerView:rowHeightForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method type='@20@0:4@8i12i16' selector='pickerView:titleForRow:forComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@24@0:4@8i12i16@20' selector='pickerView:viewForRow:forComponent:reusingView:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='row' type='i' index='1' declared_type='NSInteger'/>
<arg name='component' type='i' index='2' declared_type='NSInteger'/>
<arg name='view' type='@' index='3' declared_type='UIView*'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method type='f16@0:4@8i12' selector='pickerView:widthForComponent:'>
<arg name='pickerView' type='@' index='0' declared_type='UIPickerView*'/>
<arg name='component' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverControllerDelegate'>
<method type='v12@0:4@8' selector='popoverControllerDidDismissPopover:'>
<arg name='popoverController' type='@' index='0' declared_type='UIPopoverController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='popoverControllerShouldDismissPopover:'>
<arg name='popoverController' type='@' index='0' declared_type='UIPopoverController*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIPrintInteractionControllerDelegate'>
<method type='@16@0:4@8@12' selector='printInteractionController:choosePaper:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<arg name='paperList' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='UIPrintPaper*'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerDidDismissPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerDidFinishJob:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerDidPresentPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@12@0:4@8' selector='printInteractionControllerParentViewController:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerWillDismissPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerWillPresentPrinterOptions:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='printInteractionControllerWillStartJob:'>
<arg name='printInteractionController' type='@' index='0' declared_type='UIPrintInteractionController*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIResponderStandardEditActions'>
<method type='v12@0:4@8' selector='copy:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='cut:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='delete:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='makeTextWritingDirectionLeftToRight:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='makeTextWritingDirectionRightToLeft:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='paste:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='select:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='selectAll:'>
<arg name='sender' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIScrollViewDelegate'>
<method type='v12@0:4@8' selector='scrollViewDidEndDecelerating:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8B12' selector='scrollViewDidEndDragging:willDecelerate:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='decelerate' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='scrollViewDidEndScrollingAnimation:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12f16' selector='scrollViewDidEndZooming:withView:atScale:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<arg name='scale' type='f' index='2' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='scrollViewDidScroll:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='scrollViewDidScrollToTop:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='scrollViewDidZoom:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='scrollViewShouldScrollToTop:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='scrollViewWillBeginDecelerating:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='scrollViewWillBeginDragging:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='scrollViewWillBeginZooming:withView:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='view' type='@' index='1' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8{CGPoint=ff}12N^{CGPoint=ff}20' selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<arg name='velocity' type='{CGPoint=ff}' index='1' declared_type='CGPoint'/>
<arg type_modifier='N' name='targetContentOffset' type='^{CGPoint=ff}' index='2' declared_type='CGPoint*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@12@0:4@8' selector='viewForZoomingInScrollView:'>
<arg name='scrollView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='@' declared_type='UIView*'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchBarDelegate'>
<method type='v16@0:4@8i12' selector='searchBar:selectedScopeButtonIndexDidChange:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='selectedScope' type='i' index='1' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B24@0:4@8{_NSRange=II}12@20' selector='searchBar:shouldChangeTextInRange:replacementText:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='text' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='searchBar:textDidChange:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<arg name='searchText' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchBarBookmarkButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchBarCancelButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchBarResultsListButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchBarSearchButtonClicked:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='searchBarShouldBeginEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='searchBarShouldEndEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='searchBarTextDidBeginEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchBarTextDidEndEditing:'>
<arg name='searchBar' type='@' index='0' declared_type='UISearchBar*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchDisplayDelegate'>
<method type='v16@0:4@8@12' selector='searchDisplayController:didHideSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='searchDisplayController:didLoadSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='searchDisplayController:didShowSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8i12' selector='searchDisplayController:shouldReloadTableForSearchScope:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='searchOption' type='i' index='1' declared_type='NSInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='searchDisplayController:shouldReloadTableForSearchString:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='searchString' type='@' index='1' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='searchDisplayController:willHideSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='searchDisplayController:willShowSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='searchDisplayController:willUnloadSearchResultsTableView:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<arg name='tableView' type='@' index='1' declared_type='UITableView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchDisplayControllerDidBeginSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchDisplayControllerDidEndSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchDisplayControllerWillBeginSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='searchDisplayControllerWillEndSearch:'>
<arg name='controller' type='@' index='0' declared_type='UISearchDisplayController*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UISplitViewControllerDelegate'>
<method type='v20@0:4@8@12@16' selector='splitViewController:popoverController:willPresentViewController:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='pc' type='@' index='1' declared_type='UIPopoverController*'/>
<arg name='aViewController' type='@' index='2' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4@8@12i16' selector='splitViewController:shouldHideViewController:inOrientation:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='vc' type='@' index='1' declared_type='UIViewController*'/>
<arg name='orientation' type='i' index='2' declared_type='UIInterfaceOrientation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='splitViewController:willHideViewController:withBarButtonItem:forPopoverController:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='aViewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='barButtonItem' type='@' index='2' declared_type='UIBarButtonItem*'/>
<arg name='pc' type='@' index='3' declared_type='UIPopoverController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='splitViewController:willShowViewController:invalidatingBarButtonItem:'>
<arg name='svc' type='@' index='0' declared_type='UISplitViewController*'/>
<arg name='aViewController' type='@' index='1' declared_type='UIViewController*'/>
<arg name='barButtonItem' type='@' index='2' declared_type='UIBarButtonItem*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarControllerDelegate'>
<method type='v20@0:4@8@12B16' selector='tabBarController:didEndCustomizingViewControllers:changed:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='tabBarController:didSelectViewController:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='tabBarController:shouldSelectViewController:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewController' type='@' index='1' declared_type='UIViewController*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='tabBarController:willBeginCustomizingViewControllers:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' selector='tabBarController:willEndCustomizingViewControllers:changed:'>
<arg name='tabBarController' type='@' index='0' declared_type='UITabBarController*'/>
<arg name='viewControllers' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarDelegate'>
<method type='v16@0:4@8@12' selector='tabBar:didBeginCustomizingItems:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' selector='tabBar:didEndCustomizingItems:changed:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='tabBar:didSelectItem:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='item' type='@' index='1' declared_type='UITabBarItem*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='tabBar:willBeginCustomizingItems:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' selector='tabBar:willEndCustomizingItems:changed:'>
<arg name='tabBar' type='@' index='0' declared_type='UITabBar*'/>
<arg name='items' type='@' index='1' declared_type='NSArray*'/>
<arg name='changed' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDataSource'>
<method type='i12@0:4@8' selector='numberOfSectionsInTableView:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='@12@0:4@8' selector='sectionIndexTitlesForTableView:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='B16@0:4@8@12' selector='tableView:canEditRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='tableView:canMoveRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@16@0:4@8@12' selector='tableView:cellForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='UITableViewCell*'/>
</method>
<method type='v20@0:4@8i12@16' selector='tableView:commitEditingStyle:forRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='editingStyle' type='i' index='1' declared_type='UITableViewCellEditingStyle'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableView:moveRowAtIndexPath:toIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='sourceIndexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<arg name='destinationIndexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='i16@0:4@8i12' selector='tableView:numberOfRowsInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='i20@0:4@8@12i16' selector='tableView:sectionForSectionIndexTitle:atIndex:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='title' type='@' index='1' declared_type='NSString*'/>
<arg name='index' type='i' index='2' declared_type='NSInteger'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='@16@0:4@8i12' selector='tableView:titleForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@16@0:4@8i12' selector='tableView:titleForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDelegate'>
<method type='v16@0:4@8@12' selector='tableView:accessoryButtonTappedForRowWithIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='i16@0:4@8@12' selector='tableView:accessoryTypeForRowWithIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='UITableViewCellAccessoryType'/>
</method>
<method type='B24@0:4@8:12@16@20' selector='tableView:canPerformAction:forRowAtIndexPath:withSender:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<arg name='sender' type='@' index='3' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='tableView:didDeselectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='tableView:didEndEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='tableView:didSelectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='i16@0:4@8@12' selector='tableView:editingStyleForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='UITableViewCellEditingStyle'/>
</method>
<method type='f16@0:4@8i12' selector='tableView:heightForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method type='f16@0:4@8i12' selector='tableView:heightForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method type='f16@0:4@8@12' selector='tableView:heightForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method type='i16@0:4@8@12' selector='tableView:indentationLevelForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='v24@0:4@8:12@16@20' selector='tableView:performAction:forRowAtIndexPath:withSender:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='action' type=':' index='1' declared_type='SEL'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<arg name='sender' type='@' index='3' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='tableView:shouldIndentWhileEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='tableView:shouldShowMenuForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@20@0:4@8@12@16' selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='sourceIndexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<arg name='proposedDestinationIndexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method type='@16@0:4@8@12' selector='tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@16@0:4@8i12' selector='tableView:viewForFooterInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method type='@16@0:4@8i12' selector='tableView:viewForHeaderInSection:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='section' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method type='v16@0:4@8@12' selector='tableView:willBeginEditingRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@16@0:4@8@12' selector='tableView:willDeselectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableView:willDisplayCell:forRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='cell' type='@' index='1' declared_type='UITableViewCell*'/>
<arg name='indexPath' type='@' index='2' declared_type='NSIndexPath*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@16@0:4@8@12' selector='tableView:willSelectRowAtIndexPath:'>
<arg name='tableView' type='@' index='0' declared_type='UITableView*'/>
<arg name='indexPath' type='@' index='1' declared_type='NSIndexPath*'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
</informal_protocol>
<informal_protocol name='UITextFieldDelegate'>
<method type='B24@0:4@8{_NSRange=II}12@20' selector='textField:shouldChangeCharactersInRange:replacementString:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='string' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='textFieldDidBeginEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textFieldDidEndEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='textFieldShouldBeginEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='textFieldShouldClear:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='textFieldShouldEndEditing:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='textFieldShouldReturn:'>
<arg name='textField' type='@' index='0' declared_type='UITextField*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInput'>
<method type='i16@0:4@8i12' selector='baseWritingDirectionForPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextStorageDirection'/>
<retval type='i' declared_type='UITextWritingDirection'/>
</method>
<method type='@8@0:4' selector='beginningOfDocument'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' selector='caretRectForPosition:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method type='i16@0:4@8@12' selector='characterOffsetOfPosition:withinRange:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='@16@0:4{CGPoint=ff}8' selector='characterRangeAtPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method type='@16@0:4@8i12' selector='characterRangeByExtendingPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method type='@16@0:4{CGPoint=ff}8' selector='closestPositionToPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='@20@0:4{CGPoint=ff}8@16' selector='closestPositionToPoint:withinRange:'>
<arg name='point' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='i16@0:4@8@12' selector='comparePosition:toPosition:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='other' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
<method type='v8@0:4' selector='dictationRecognitionFailed'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' selector='dictationRecordingDidEnd'>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='endOfDocument'>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' selector='firstRectForRange:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method type='@8@0:4' selector='inputDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method type='v12@0:4@8' selector='insertDictationResult:'>
<arg name='dictationResult' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='markedTextRange'>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method type='@8@0:4' selector='markedTextStyle'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type='i16@0:4@8@12' selector='offsetFromPosition:toPosition:'>
<arg name='from' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='toPosition' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method type='@20@0:4@8i12i16' selector='positionFromPosition:inDirection:offset:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<arg name='offset' type='i' index='2' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='@16@0:4@8i12' selector='positionFromPosition:offset:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='offset' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='@16@0:4@8i12' selector='positionWithinRange:atCharacterOffset:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='offset' type='i' index='1' declared_type='NSInteger'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='@16@0:4@8i12' selector='positionWithinRange:farthestInDirection:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='direction' type='i' index='1' declared_type='UITextLayoutDirection'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='v16@0:4@8@12' selector='replaceRange:withText:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<arg name='text' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='selectedTextRange'>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method type='i8@0:4' selector='selectionAffinity'>
<retval type='i' declared_type='UITextStorageDirection'/>
</method>
<method type='v16@0:4i8@12' selector='setBaseWritingDirection:forRange:'>
<arg name='writingDirection' type='i' index='0' declared_type='UITextWritingDirection'/>
<arg name='range' type='@' index='1' declared_type='UITextRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setInputDelegate:'>
<arg name='inputDelegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8{_NSRange=II}12' selector='setMarkedText:selectedRange:'>
<arg name='markedText' type='@' index='0' declared_type='NSString*'/>
<arg name='selectedRange' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setMarkedTextStyle:'>
<arg name='markedTextStyle' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setSelectedTextRange:'>
<arg name='selectedTextRange' type='@' index='0' declared_type='UITextRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setSelectionAffinity:'>
<arg name='selectionAffinity' type='i' index='0' declared_type='UITextStorageDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@12@0:4@8' selector='textInRange:'>
<arg name='range' type='@' index='0' declared_type='UITextRange*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' selector='textInputView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method type='@16@0:4@8@12' selector='textRangeFromPosition:toPosition:'>
<arg name='fromPosition' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='toPosition' type='@' index='1' declared_type='UITextPosition*'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
<method type='@16@0:4@8i12' selector='textStylingAtPosition:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='direction' type='i' index='1' declared_type='UITextStorageDirection'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type='@8@0:4' selector='tokenizer'>
<retval type='@' declared_type='id'/>
</method>
<method type='v8@0:4' selector='unmarkText'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputDelegate'>
<method type='v12@0:4@8' selector='selectionDidChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='selectionWillChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textDidChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textWillChange:'>
<arg name='textInput' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTokenizer'>
<method type='B20@0:4@8i12i16' selector='isPosition:atBoundary:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8i12i16' selector='isPosition:withinTextUnit:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@20@0:4@8i12i16' selector='positionFromPosition:toBoundary:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='@' declared_type='UITextPosition*'/>
</method>
<method type='@20@0:4@8i12i16' selector='rangeEnclosingPosition:withGranularity:inDirection:'>
<arg name='position' type='@' index='0' declared_type='UITextPosition*'/>
<arg name='granularity' type='i' index='1' declared_type='UITextGranularity'/>
<arg name='direction' type='i' index='2' declared_type='UITextDirection'/>
<retval type='@' declared_type='UITextRange*'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTraits'>
<method type='i8@0:4' selector='autocapitalizationType'>
<retval type='i' declared_type='UITextAutocapitalizationType'/>
</method>
<method type='i8@0:4' selector='autocorrectionType'>
<retval type='i' declared_type='UITextAutocorrectionType'/>
</method>
<method type='B8@0:4' selector='enablesReturnKeyAutomatically'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='isSecureTextEntry'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='i8@0:4' selector='keyboardAppearance'>
<retval type='i' declared_type='UIKeyboardAppearance'/>
</method>
<method type='i8@0:4' selector='keyboardType'>
<retval type='i' declared_type='UIKeyboardType'/>
</method>
<method type='i8@0:4' selector='returnKeyType'>
<retval type='i' declared_type='UIReturnKeyType'/>
</method>
<method type='v12@0:4i8' selector='setAutocapitalizationType:'>
<arg name='autocapitalizationType' type='i' index='0' declared_type='UITextAutocapitalizationType'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setAutocorrectionType:'>
<arg name='autocorrectionType' type='i' index='0' declared_type='UITextAutocorrectionType'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setEnablesReturnKeyAutomatically:'>
<arg name='enablesReturnKeyAutomatically' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setKeyboardAppearance:'>
<arg name='keyboardAppearance' type='i' index='0' declared_type='UIKeyboardAppearance'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setKeyboardType:'>
<arg name='keyboardType' type='i' index='0' declared_type='UIKeyboardType'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setReturnKeyType:'>
<arg name='returnKeyType' type='i' index='0' declared_type='UIReturnKeyType'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setSecureTextEntry:'>
<arg name='secureTextEntry' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4i8' selector='setSpellCheckingType:'>
<arg name='spellCheckingType' type='i' index='0' declared_type='UITextSpellCheckingType'/>
<retval type='v' declared_type='void'/>
</method>
<method type='i8@0:4' selector='spellCheckingType'>
<retval type='i' declared_type='UITextSpellCheckingType'/>
</method>
</informal_protocol>
<informal_protocol name='UITextViewDelegate'>
<method type='B24@0:4@8{_NSRange=II}12@20' selector='textView:shouldChangeTextInRange:replacementText:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<arg name='range' type='{_NSRange=II}' index='1' declared_type='NSRange'/>
<arg name='text' type='@' index='2' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='textViewDidBeginEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textViewDidChange:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textViewDidChangeSelection:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='textViewDidEndEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='textViewShouldBeginEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='textViewShouldEndEditing:'>
<arg name='textView' type='@' index='0' declared_type='UITextView*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='UIVideoEditorControllerDelegate'>
<method type='v16@0:4@8@12' selector='videoEditorController:didFailWithError:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='videoEditorController:didSaveEditedVideoToPath:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<arg name='editedVideoPath' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='videoEditorControllerDidCancel:'>
<arg name='editor' type='@' index='0' declared_type='UIVideoEditorController*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='UIWebViewDelegate'>
<method type='v16@0:4@8@12' selector='webView:didFailLoadWithError:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4@8@12i16' selector='webView:shouldStartLoadWithRequest:navigationType:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<arg name='request' type='@' index='1' declared_type='NSURLRequest*'/>
<arg name='navigationType' type='i' index='2' declared_type='UIWebViewNavigationType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='webViewDidFinishLoad:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='webViewDidStartLoad:'>
<arg name='webView' type='@' index='0' declared_type='UIWebView*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
