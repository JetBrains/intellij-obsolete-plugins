label.generate.ant.script.use.jdk.definitions=Use JDK definitions from project files
label.generate.ant.script.overwrite.files=Overwrite previously generated files
label.generate.ant.script.backup.files=Backup previously generated files
label.generate.ant.script.single.file=Generate single-file ant build
label.generate.ant.script.generate.multiple.files=Generate multiple-file ant build (requires ant 1.6 or later to execute)
label.generate.ant.script.enable.ui.forms.compilation=Enable UI forms compilation (requires "javac2" ant task from IDEA distribution)
message.ant.files.generated.ok=Ant build files successfully generated:\n{0}
error.ant.files.generate.failed=Failed to generate ant build script: {0}
error.ant.files.backup.failed=Failed to backup file {0}
generate.ant.build.dialog.cyclic.modules.table.title=Cyclic Module Dependencies
generate.ant.build.dialog.cyclic.modules.table.description=Some modules have cyclic dependencies.\nIn order to generate ant build script, please select the \"main\" (representative) module for each dependency cycle.\nThe source code for all modules in the cycle will be compiled into the main module's output folders;\nAll modules in the cycle will use the JDK assigned to the main module;\nAny JAR files created will be named after the name of the main module.
generate.ant.build.dialog.cyclic.modules.table.number.column.header=Cycle
generate.ant.build.dialog.cyclic.modules.table.name.column.header=Main Module
generated.ant.build.disable.tests.property.comment=Uncomment the following property if no tests compilation is needed
generated.ant.build.compiler.options.comment=Compiler options
generated.ant.build.project.libraries.comment=Project Libraries
generated.ant.build.global.libraries.comment=Global Libraries
generated.ant.build.jdk.definitions.comment=JDK definitions
generated.ant.build.bootclasspath.comment=Paths to be included in compilation bootclasspath
generated.ant.build.cleanup.module.task.comment=cleanup module
generated.ant.build.clean.all.task.comment=cleanup all
generated.ant.build.compile.modules.main.target.comment=Compile {0,choice, 1#module|2#modules} {1}
generated.ant.build.compile.modules.production.classes.target.comment=Compile {0,choice, 1#module|2#modules} {1}; production classes
generated.ant.build.compile.modules.tests.target.comment=compile {0,choice, 1#module|2#modules} {1}; test classes
generated.ant.build.modules.section.title=Modules
generated.ant.build.initialization.section.title=Build initialization
generated.ant.build.initialization.section.comment=Perform any build initialization in this target
generated.ant.build.build.all.modules.target.name=build all modules
generated.ant.build.build.all.target.name=build all
generated.ant.build.building.concrete.module.section.title=Module {0}
generate.ant.build.title=Generate Ant Build
generate.ant.build.progress.message=Generating ant build...
generate.ant.build.custom.compiler.conflict.title=Conflicting Custom Compilers for Chunk(s)
generate.ant.build.custom.compiler.conflict.message=<html>The chunks listed below use more then one custom compiler.<br/>for them you will need to resolve conflict between<br/>compilers manually. The compilation task will also contain<br/>the fail task.<ul>{0}</ul></html>
generate.ant.build.custom.compiler.conflict.message.row=<li>{0}</li>
generated.ant.build.compile.modules.fail.custom.compilers=Conflict between custom compilers should be resolved manually.
generated.ant.build.custom.compilers.comment=Register Custom Compiler Taskdefs
label.generate.ant.script.inline.runtime.classpaths=Inline runtime classpaths
label.generate.ant.script.generate.idea.home=Use current IDEA instance for idea.home property
label.generate.ant.script.filename=Output file name:
value.undefined=undefined
action.GenerateAntBuildFile.text=_Generate Ant Build...
action.GenerateAntBuildFile.description=Generate Ant Build File from the Project
